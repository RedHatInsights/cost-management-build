{"version":3,"sources":["webpack://koku-ui/./src/pages/state/noData/index.ts","webpack://koku-ui/./src/pages/state/notAvailable/notAvailable.tsx","webpack://koku-ui/./src/pages/state/notAvailable/index.ts","webpack://koku-ui/./src/pages/views/components/resourceTypeahead/resourceSelect.tsx","webpack://koku-ui/./src/pages/views/components/resourceTypeahead/resourceTypeahead.tsx","webpack://koku-ui/./src/pages/views/components/dataToolbar/dataToolbar.styles.ts","webpack://koku-ui/./src/pages/views/components/dataToolbar/dataToolbar.tsx","webpack://koku-ui/./src/pages/views/components/export/exportModal.styles.ts","webpack://koku-ui/./src/pages/views/components/export/exportSubmit.tsx","webpack://koku-ui/./src/pages/views/components/export/exportModal.tsx","webpack://koku-ui/./src/pages/views/components/groupBy/groupBy.styles.ts","webpack://koku-ui/./src/pages/views/components/groupBy/groupByOrg.tsx","webpack://koku-ui/./src/pages/views/components/groupBy/groupByTag.tsx","webpack://koku-ui/./src/pages/views/components/groupBy/groupBy.tsx","webpack://koku-ui/./src/pages/views/details/components/actions/actions.tsx","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdown.styles.ts","webpack://koku-ui/./src/pages/views/details/components/tag/tag.styles.ts","webpack://koku-ui/./src/pages/views/details/components/tag/tagView.tsx","webpack://koku-ui/./src/pages/views/details/components/tag/tagModal.tsx","webpack://koku-ui/./src/pages/views/details/components/tag/tagLink.tsx","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdownHeader.styles.ts","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdownHeader.tsx","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdownBase.tsx","webpack://koku-ui/./src/pages/views/details/components/cluster/cluster.styles.ts","webpack://koku-ui/./src/pages/views/details/components/cluster/clusterModal.styles.ts","webpack://koku-ui/./src/pages/views/details/components/cluster/clusterView.tsx","webpack://koku-ui/./src/pages/views/details/components/cluster/clusterModal.tsx","webpack://koku-ui/./src/pages/views/details/components/cluster/cluster.tsx","webpack://koku-ui/./src/pages/views/details/components/costChart/costChart.styles.ts","webpack://koku-ui/./src/pages/views/details/components/costChart/costChart.tsx","webpack://koku-ui/./src/pages/views/details/components/summary/summaryModal.styles.ts","webpack://koku-ui/./src/pages/views/details/components/summary/summaryModalView.tsx","webpack://koku-ui/./src/pages/views/details/components/summary/summaryModal.tsx","webpack://koku-ui/./src/pages/views/details/components/summary/summaryCard.styles.ts","webpack://koku-ui/./src/pages/views/details/components/summary/summaryCard.tsx","webpack://koku-ui/./src/pages/views/details/components/usageChart/usageChart.styles.ts","webpack://koku-ui/./src/pages/views/details/components/usageChart/usageChart.tsx","webpack://koku-ui/./src/pages/views/details/components/costOverview/costOverviewBase.tsx","webpack://koku-ui/./src/components/charts/historicalCostChart/historicalCostChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalCostChart/historicalCostChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalChart.styles.ts","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataCostChart.tsx","webpack://koku-ui/./src/components/charts/historicalTrendChart/historicalTrendChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalTrendChart/historicalTrendChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataTrendChart.tsx","webpack://koku-ui/./src/components/charts/historicalUsageChart/historicalUsageChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalUsageChart/historicalUsageChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataUsageChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataBase.tsx","webpack://koku-ui/./src/pages/views/details/ocpDetails/detailsHeader.styles.ts","webpack://koku-ui/./src/pages/views/utils/groupBy.ts","webpack://koku-ui/./src/pages/views/utils/paths.ts","webpack://koku-ui/./src/pages/views/utils/query.ts","webpack://koku-ui/./src/testIds.ts","webpack://koku-ui/./src/utils/equal.ts"],"names":["withRouter","title","PageHeader","PageHeaderTitle","Main","Unavailable","ResourceSelectBase","constructor","props","super","this","defaultState","createdOptions","isSelectExpanded","state","Object","assign","getOptions","resource","resourceFetchStatus","search","options","data","length","map","item","value","isNaN","account_alias","cluster_alias","key","name","moreOptions","val","getSelectOptions","option","SelectOption","handleOnCreateOption","slice","push","setState","handleOnClear","onSearchChanged","undefined","handleOnFilter","event","handleOnSelect","onSelect","handleOnToggle","isOpen","handleOnTypeaheadInputChanged","bind","componentDidUpdate","prevProps","fetchResource","resourcePathsType","resourceType","query","render","isDisabled","selectOptions","Select","isCreatable","isInputValuePersisted","onCreateOption","onClear","onFilter","onToggle","onTypeaheadInputChanged","placeholderText","t","typeAheadAriaLabel","variant","SelectVariant","mapStateToProps","queryString","mapDispatchToProps","ResourceSelect","withTranslation","connect","ResourceTypeahead","searchTimeout","noop","handleOnSearch","clearTimeout","setTimeout","currentSearch","styles","export","marginRight","global_spacer_md","toolbarContainer","backgroundColor","global_BackgroundColor_light_100","paddingBottom","paddingTop","marginLeft","global_spacer_lg","defaultFilters","tag","DataToolbarBase","arguments","categoryInput","filters","cloneDeep","isBulkSelectOpen","isCategoryDropdownOpen","isOrgUnitSelectExpanded","isTagValueDropdownOpen","isTagKeySelectExpanded","isTagValueSelectExpanded","tagKeyValueInput","getDefaultCategory","categoryOptions","groupBy","group_by","indexOf","getActiveFilters","filter_by","keys","forEach","values","Array","isArray","substring","onDelete","type","chip","filterType","id","prevState","filter","s","_filterType","onFilterRemoved","getBulkSelect","isAllSelected","isBulkSelectDisabled","itemsPerPage","itemsTotal","selectedItems","numSelected","anySelected","isChecked","dropdownItems","DropdownItem","onClick","handleOnBulkSelectClicked","Dropdown","handleOnBulkSelect","position","DropdownPosition","toggle","DropdownToggle","splitButtonItems","DropdownToggleCheckbox","handleOnBulkSelectToggle","action","onBulkSelected","getCurrentCategoryOption","currentCategory","handleOnCategoryClick","handleOnCategorySelect","currentTagKey","handleOnCategoryToggle","getCategoryInput","categoryOption","ToolbarFilter","categoryName","chips","deleteChip","showToolbarItem","InputGroup","onCategoryInputSelect","TextInput","onChange","handleOnCategoryInputChange","placeholder","onKeyDown","evt","onCategoryInput","Button","ButtonVariant","getDefaultCategoryOptions","trim","prevFilters","includes","onFilterAdded","getOrgUnitSelect","getOrgUnitOptions","toString","compareTo","find","selections","node","className","handleOnOrgUnitToggle","handleOnOrgUnitSelect","description","selection","checked","target","prevSelections","getTagKeySelect","getTagKeyOptions","selectOption","ToolbarItem","handleOnTagKeyClear","handleOnTagKeyToggle","handleOnTagKeySelect","getTagValueSelect","tagKeyOption","getTagValueOptions","onTagValueToggle","onTagValueSelect","onTagValueInputChange","onTagValueInput","getColumnManagement","handleColumnManagementClicked","getExportButton","isExportDisabled","spacer","default","handleExportClicked","onColumnManagementClicked","onExportClicked","componentDidMount","orgReport","tagReport","currentOrgUnit","getCategoryDropdown","style","width","sortedData","sort","a","b","roots","org","level","filteredOrgs","root","unshift","hasTagKeys","hasOwnProperty","keepData","_a","e","p","prototype","call","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","uniqBy","uniq","Set","dateRange","pagination","showBulkSelect","showColumnManagement","showExport","showFilter","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","ToolbarToggleGroup","breakpoint","toggleIcon","ToolbarGroup","Boolean","alignment","DataToolbar","alert","marginBottom","form","global_spacer_sm","modal","input","global_spacer_xs","ul","reportType","ExportSubmitBase","stateProps","dispatchProps","fetchReportClicked","getExport","report","reportFetchStatus","getFileName","handleClose","reportPathsType","resolution","timeScope","thisMonth","Date","lastMonth","setMonth","getMonth","currentMonth","format","previousMonth","provider","date","reportError","onClose","handleFetchReport","exportReport","onError","testIds","isAllItems","items","newQuery","JSON","parse","stringify","limit","offset","time_scope_value","order_by","perspective","getQueryString","ExportSubmitConnect","ExportSubmit","resolutionOptions","label","timeScopeOptions","ExportModalBase","error","handleError","handleMonthChange","_","Number","currentTarget","handleResolutionChange","showAggregateType","showTimeScope","sortedItems","orderBy","selectedLabel","Modal","actions","Alert","Form","FormGroup","fieldId","index","Radio","isValid","groupItem","ExportModalConnect","ExportModal","groupBySelector","display","alignItems","groupBySelectorLabel","GroupByOrgBase","defaultItem","isGroupByOpen","getCurrentGroupBy","getIdKeyForGroupBy","queryFromRoute","location","groupByKeys","getGroupByItems","handleGroupByClear","currentItem","handleGroupBySelect","onItemClicked","handleGroupByToggle","groupByItems","GroupByOrg","GroupByTagBase","tagKey","GroupByTag","groupByOrgOptions","groupByTagOptions","orgReportType","tagReportType","GroupByBase","isGroupByOrgVisible","isGroupByTagVisible","handleGroupByClick","allOptions","component","fetchOrg","fetchTag","orgQueryString","orgReportPathsType","showOrgs","showTags","tagQueryString","tagReportPathsType","endDate","startDate","tagQuery","start_date","end_date","time_scope_units","tagReportFetchStatus","orgReportFetchStatus","GroupByConnect","GroupBy","DetailsActionsBase","isDropdownOpen","isExportModalOpen","getExportModal","handleExportModalClose","handleExportModalOpen","showPriceListOption","redirectToCostModel","history","source_uuid","KebabToggle","isPlain","DetailsActionsConnect","Actions","content","paddingLeft","paddingRight","dataListHeading","fontWeight","global_FontWeight_bold","groupByHeading","tagLink","tagsContainer","global_spacer_3xl","marginTop","TagViewBase","getDataListItems","result","DataListItem","DataListItemRow","DataListItemCells","dataListCells","DataListCell","groupByValue","dataListItems","DataList","isCompact","TagView","TagModalBase","getTagValueCount","count","shouldComponentUpdate","nextProps","account","groupByOrgValue","TagModal","TagLinkBase","handleOpen","preventDefault","href","TagLink","cost","global_spacer_xl","costLabel","costValue","textAlign","costLabelDate","header","justifyContent","global_BackgroundColor_100","infoDescription","color","global_disabled_color_100","fontSize","global_FontSize_xs","tabs","BreakdownHeaderBase","buildDetailsLink","detailsURL","groupByKey","getTotalCost","hasCost","meta","total","formatValue","units","filterByAccount","groupByOrg","Link","to","Title","headingLevel","size","TitleSizes","BreakdownHeader","getIdKeyForTab","tab","BreakdownBase","activeTabKey","getAvailableTabs","contentRef","getTab","Tab","eventKey","tabContentId","tabContentRef","TabTitleText","getTabTitle","getTabContent","availableTabs","TabContent","ref","getTabItem","costOverviewComponent","historicalDataComponent","emptyTab","currentTab","getTabs","Tabs","activeKey","handleTabClick","tabIndex","updateReport","fetchReport","noReport","noLocation","emptyStateTitle","providers","providersFetchStatus","providerType","clustersContainer","height","subTitle","ClusterViewBase","clusters","cluster","ClusterView","ClusterModalBase","ClusterModal","ClusterBase","showAll","charCount","someClusters","allClusters","computedItems","getComputedReportItems","idKey","clusterString","concat","Cluster","chartStyles","chartHeight","chartWidth","chartSkeleton","CostChartBase","getLegendLabel","ChartLabel","text","getSkeleton","Skeleton","skeleton","hasMarkup","markup","hasRaw","raw","hasUsage","usage","markupUnits","rawUnits","usageUnits","markupValue","rawValue","usageValue","markupLabel","rawLabel","usageLabel","LegendLabel","Legend","ChartLegend","gutter","itemsPerRow","labelComponent","dy","lineHeight","rowGutter","ChartPie","ariaDesc","ariaTitle","constrainToVisibleArea","x","y","labels","datum","legendComponent","legendData","legendOrientation","legendPosition","padding","bottom","left","right","top","themeColor","ChartTheme","CostChart","mainContent","SummaryModalViewBase","reportGroupBy","status","_item","formatOptions","totalValue","SummaryModalView","SummaryModalBase","SummaryModal","card","viewAllContainer","SummaryBase","isBulletChartModalOpen","getItems","getSummary","reportItem","getViewAll","findIndex","handleBulletChartModalOpen","ButtonType","handleBulletChartModalClose","Card","CardTitle","CardBody","CardFooter","SummaryCard","capacity","legendSkeleton","UsageChartBase","containerRef","observer","handleResize","clientWidth","current","getCpuChart","chartDatum","getChartDatumWithCapacity","getChartDatum","getFreeSpace","ChartBullet","comparativeErrorMeasureData","tooltip","comparativeErrorMeasureLegendData","legend","getChartHeight","legendItemsPerRow","getItemsPerRow","maxDomain","isDatumEmpty","minDomain","primarySegmentedMeasureData","primarySegmentedMeasureLegendData","qualitativeRangeData","ranges","qualitativeRangeLegendData","hasRange","range","componentWillUnmount","hasTotal","hasLimit","Math","trunc","limitUnits","hasRequest","request","requestUnits","hasCapacity","capacityUnits","unusedRequestCapacity","unusedUsageCapacity","unusedRequestCapacityPercentage","unusedUsageCapacityPercentage","Grid","hasGutter","GridItem","md","lg","percentage","UsageChart","PLACEHOLDER","CostOverviewBase","getClusterChart","widget","showWidget","groupById","showWidgetOnGroupBy","getCostChart","Popover","enableFlip","bodyContent","rel","OutlinedQuestionCircleIcon","getCpuUsageChart","getMemoryUsageChart","getSummaryCard","reportSummary","usePlaceholder","getWidgetsColumns","selectWidgets","widgets","visibleWidgets","widgetId","renderedWidget","renderWidget","rows","floor","leftColumnWidgets","rightColumnWidgets","xl","currentCapacityData","fill","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","currentInfrastructureCostData","strokeDasharray","currentCostData","previousCapacityData","previousColorScale","chart_color_blue_100","chart_color_blue_200","chart_color_blue_300","chart_color_blue_400","chart_color_blue_500","previousInfrastructureCostData","previousCostData","yAxis","axisLabel","grid","stroke","ticks","tickLabels","xAxis","chart","HistoricalCostChart","hiddenSeries","initDatum","costKey","costInfrastructureKey","costInfrastructureTooltipKey","costTooltipKey","series","childName","legendItem","symbol","cursorVoronoiContainer","getCursorVoronoiContainer","getChart","ChartArea","has","interpolation","formatDatumValue","formatDatumOptions","CursorVoronoiContainer","cursorDimension","mouseFollowTooltips","voronoiDimension","voronoiPadding","getLegend","handleLegendClick","getEndDate","currentRequestDate","getDate","previousRequestDate","max","getEvents","chartNames","isHidden","legendName","onLegendClick","adjustContainerHeight","containerHeight","xAxisLabel","yAxisLabel","domain","ge","midDate","adjustedContainerHeight","container","disable","ChartLegendTooltip","i18next","day","Chart","containerComponent","events","theme","ChartAxis","C","tickValues","dependentAxis","chartContainer","costChart","trendChart","usageChart","HistoricalDataCostChartBase","currentQueryString","previousQueryString","currentReport","currentReportFetchStatus","previousReport","previousReportFetchStatus","currentData","previousData","costUnits","baseQuery","currentQuery","previousQuery","HistoricalDataCostChart","currentMonthData","previousMonthData","HistoricalTrendChart","showUsageLegendLabel","toolTipKey","previousDate","currentDate","HistoricalDataTrendChartBase","isCostChart","HistoricalDataTrendChart","currentLimitData","currentRequestData","currentUsageData","previousLimitData","previousRequestData","previousUsageData","HistoricalUsageChart","limitKey","limitTooltipKey","requestKey","requestTooltipKey","usageKey","usageTooltipKey","currentUsageDate","previousUsageDate","HistoricalDataUsageChartBase","useFilter","HistoricalDataUsageChart","HistoricalDataBase","getTrendChart","getUsageChart","costLabelUnit","dateTitle","info","verticalAlign","infoIcon","infoTitle","getGroupById","getGroupByValue","getGroupByOrgValue","getGroupByTagKey","groupByTagKey","tagIndex","getBreakdownPath","basePath","getOrgBreakdownPath","orgUnitId","addQueryFilter","filterValue","found","removeQueryFilter","getTestProps","details","cluster_lnk","historical_data_btn","show_more_btn","tag_lnk","view_all_btn","cancel_btn","submit_btn","login","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","s3_input","clusterid_input","arn_input","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","sidebar","nav","link","backdrop","isEqual","obj1","obj2","split","join"],"mappings":"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","file":"93b554c053c3d10357e5.bundle.js","sourcesContent":["import NoData from './noData';\nexport default NoData;\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Unavailable from '@redhat-cloud-services/frontend-components/Unavailable';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nconst NotAvailable = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(Unavailable, null))));\n};\nexport default withRouter(NotAvailable);\n","import NotAvailable from './notAvailable';\nexport default NotAvailable;\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { resourceActions, resourceSelectors } from 'store/resources';\nclass ResourceSelectBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            createdOptions: [],\n            isSelectExpanded: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getOptions = () => {\n            const { resource, resourceFetchStatus, search } = this.props;\n            const { createdOptions } = this.state;\n            let options = [];\n            if (resource && resource.data && resource.data.length > 0 && resourceFetchStatus !== 1 /* inProgress */) {\n                options = resource.data.map(item => {\n                    const value = !isNaN(search) ? item.value : item.account_alias || item.cluster_alias || item.value;\n                    return {\n                        key: value,\n                        name: value,\n                    };\n                });\n            }\n            if (createdOptions && createdOptions.length) {\n                const moreOptions = createdOptions.map(val => {\n                    return {\n                        key: val,\n                        name: val,\n                    };\n                });\n                options = [...options, ...moreOptions];\n            }\n            return options;\n        };\n        this.getSelectOptions = () => {\n            const options = this.getOptions();\n            return options.map(option => {\n                return React.createElement(SelectOption, { key: option.key, value: option.key });\n            });\n        };\n        this.handleOnCreateOption = value => {\n            const { createdOptions } = this.state;\n            let options = [...createdOptions];\n            if (options.length > 4) {\n                options = options.slice(1, options.length);\n            }\n            options.push(value);\n            this.setState({\n                createdOptions: options,\n            });\n        };\n        this.handleOnClear = () => {\n            const { onSearchChanged } = this.props;\n            if (onSearchChanged) {\n                onSearchChanged(undefined);\n            }\n            this.setState({\n                isSelectExpanded: false,\n            });\n        };\n        this.handleOnFilter = event => {\n            if (event === null) {\n                return null;\n            }\n            return this.getSelectOptions();\n        };\n        this.handleOnSelect = (event, value) => {\n            const { onSelect } = this.props;\n            if (onSelect) {\n                onSelect(value);\n            }\n            this.setState({\n                isSelectExpanded: !this.state.isSelectExpanded,\n            });\n        };\n        this.handleOnToggle = isOpen => {\n            this.setState({\n                isSelectExpanded: isOpen,\n            });\n        };\n        this.handleOnTypeaheadInputChanged = value => {\n            const { onSearchChanged } = this.props;\n            onSearchChanged(value);\n        };\n        this.handleOnClear = this.handleOnClear.bind(this);\n        this.handleOnCreateOption = this.handleOnCreateOption.bind(this);\n        this.handleOnFilter = this.handleOnFilter.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnTypeaheadInputChanged = this.handleOnTypeaheadInputChanged.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchResource, resourceFetchStatus, resourcePathsType, resourceType, search } = this.props;\n        if (search && prevProps.search !== search && resourceFetchStatus !== 1 /* inProgress */) {\n            const query = {\n                search,\n            };\n            const queryString = getQuery(query);\n            fetchResource(resourcePathsType, resourceType, queryString);\n        }\n    }\n    render() {\n        const { isDisabled, t, resourceType } = this.props;\n        const { isSelectExpanded } = this.state;\n        const selectOptions = this.getSelectOptions();\n        return (React.createElement(Select, { isCreatable: true, isDisabled: isDisabled, isInputValuePersisted: false, isOpen: isSelectExpanded, onCreateOption: this.handleOnCreateOption, onClear: this.handleOnClear, onFilter: this.handleOnFilter, onSelect: this.handleOnSelect, onToggle: this.handleOnToggle, onTypeaheadInputChanged: this.handleOnTypeaheadInputChanged, placeholderText: t(`filter_by.${resourceType}.placeholder`), typeAheadAriaLabel: t(`filter_by.${resourceType}.aria_label`), variant: SelectVariant.typeahead }, selectOptions));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { resourcePathsType, resourceType, search }) => {\n    const query = {\n        search,\n    };\n    const queryString = getQuery(query);\n    const resource = resourceSelectors.selectResource(state, resourcePathsType, resourceType, queryString);\n    const resourceFetchStatus = resourceSelectors.selectResourceFetchStatus(state, resourcePathsType, resourceType, queryString);\n    return {\n        resource,\n        resourceFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchResource: resourceActions.fetchResource,\n};\nconst ResourceSelect = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(ResourceSelectBase));\nexport { ResourceSelect };\n","import React from 'react';\nimport { noop } from 'utils/noop';\nimport { ResourceSelect } from './resourceSelect';\nexport class ResourceTypeahead extends React.Component {\n    constructor(props) {\n        super(props);\n        this.searchTimeout = noop;\n        this.defaultState = {\n        // TBD ...\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleOnSearch = (value) => {\n            clearTimeout(this.searchTimeout);\n            // Delay was 750ms, but reduced -- https://issues.redhat.com/browse/COST-1742\n            this.searchTimeout = setTimeout(() => {\n                this.setState({\n                    currentSearch: value,\n                });\n            }, 625);\n        };\n        this.handleOnSelect = (value) => {\n            const { onSelect } = this.props;\n            if (onSelect) {\n                onSelect(value);\n            }\n            this.setState({\n                currentSearch: undefined,\n            });\n        };\n        this.handleOnSearch = this.handleOnSearch.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { isDisabled, resourcePathsType, resourceType } = this.props;\n        const { currentSearch } = this.state;\n        return (React.createElement(ResourceSelect, { isDisabled: isDisabled, onSearchChanged: this.handleOnSearch, onSelect: this.handleOnSelect, resourcePathsType: resourcePathsType, resourceType: resourceType, search: currentSearch }));\n    }\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    export: {\n        marginRight: global_spacer_md.value,\n    },\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './dataToolbar.scss';\nimport { Button, ButtonVariant, Dropdown, DropdownItem, DropdownPosition, DropdownToggle, DropdownToggleCheckbox, InputGroup, Select, SelectOption, SelectVariant, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarGroup, ToolbarItem, ToolbarToggleGroup, } from '@patternfly/react-core';\nimport { ExportIcon } from '@patternfly/react-icons/dist/js/icons/export-icon';\nimport { FilterIcon } from '@patternfly/react-icons/dist/js/icons/filter-icon';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport { orgUnitIdKey, orgUnitNameKey, tagKey, tagPrefix } from 'api/queries/query';\nimport { isResourceTypeValid } from 'api/resources/resourceUtils';\nimport { cloneDeep } from 'lodash';\nimport { uniq, uniqBy } from 'lodash';\nimport { ResourceTypeahead } from 'pages/views/components/resourceTypeahead/resourceTypeahead';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { isEqual } from 'utils/equal';\nimport { styles } from './dataToolbar.styles';\nconst defaultFilters = {\n    tag: {},\n};\n// If the number of tag keys are greater or equal, then show text input Vs select\n// See https://github.com/project-koku/koku/pull/2069\nconst tagKeyValueLimit = 50;\nexport class DataToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            categoryInput: '',\n            filters: cloneDeep(defaultFilters),\n            isBulkSelectOpen: false,\n            isCategoryDropdownOpen: false,\n            isOrgUnitSelectExpanded: false,\n            isTagValueDropdownOpen: false,\n            isTagKeySelectExpanded: false,\n            isTagValueSelectExpanded: false,\n            tagKeyValueInput: '',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        // Initialize\n        this.getDefaultCategory = () => {\n            const { categoryOptions, groupBy, query } = this.props;\n            if (!categoryOptions) {\n                return 'name';\n            }\n            if (query && query.group_by && query.group_by[orgUnitIdKey]) {\n                return orgUnitIdKey;\n            }\n            for (const option of categoryOptions) {\n                if (groupBy === option.key || (groupBy && groupBy.indexOf(tagPrefix) !== -1 && option.key === tagKey)) {\n                    return option.key;\n                }\n            }\n            return categoryOptions[0].key;\n        };\n        this.getActiveFilters = query => {\n            const filters = cloneDeep(defaultFilters);\n            if (query && query.filter_by) {\n                Object.keys(query.filter_by).forEach(key => {\n                    const values = Array.isArray(query.filter_by[key]) ? [...query.filter_by[key]] : [query.filter_by[key]];\n                    if (key.indexOf(tagPrefix) !== -1) {\n                        filters.tag[key.substring(tagPrefix.length)] = values;\n                    }\n                    else {\n                        filters[key] = values;\n                    }\n                });\n            }\n            return filters;\n        };\n        this.onDelete = (type, chip) => {\n            // Todo: workaround for https://github.com/patternfly/patternfly-react/issues/3552\n            // This prevents us from using a localized string, if necessary\n            const filterType = type && type.key ? type.key : type;\n            const id = chip && chip.key ? chip.key : chip;\n            if (filterType) {\n                this.setState((prevState) => {\n                    if (prevState.filters.tag[filterType]) {\n                        // Todo: use ID\n                        prevState.filters.tag[filterType] = prevState.filters.tag[filterType].filter(s => s !== id);\n                    }\n                    else if (prevState.filters[filterType]) {\n                        prevState.filters[filterType] = prevState.filters[filterType].filter(s => s !== id);\n                    }\n                    return {\n                        filters: prevState.filters,\n                    };\n                }, () => {\n                    const { filters } = this.state;\n                    const _filterType = filters.tag[filterType] ? `${tagPrefix}${filterType}` : filterType; // Todo: use ID\n                    this.props.onFilterRemoved(_filterType, id);\n                });\n            }\n            else {\n                this.setState({\n                    filters: cloneDeep(defaultFilters),\n                }, () => {\n                    this.props.onFilterRemoved(null); // Clear all\n                });\n            }\n        };\n        // Bulk select\n        this.getBulkSelect = () => {\n            const { isAllSelected, isBulkSelectDisabled, isDisabled, itemsPerPage, itemsTotal, selectedItems, t } = this.props;\n            const { isBulkSelectOpen } = this.state;\n            const numSelected = isAllSelected ? itemsTotal : selectedItems ? selectedItems.length : 0;\n            const allSelected = (isAllSelected || numSelected === itemsTotal) && itemsTotal > 0;\n            const anySelected = numSelected > 0;\n            const someChecked = anySelected ? null : false;\n            const isChecked = allSelected ? true : someChecked;\n            const dropdownItems = [\n                React.createElement(DropdownItem, { key: \"item-1\", onClick: () => this.handleOnBulkSelectClicked('none') }, t('toolbar.bulk_select.select_none')),\n                React.createElement(DropdownItem, { key: \"item-2\", onClick: () => this.handleOnBulkSelectClicked('page') }, t('toolbar.bulk_select.select_page', {\n                    value: itemsPerPage,\n                })),\n                React.createElement(DropdownItem, { key: \"item-3\", onClick: () => this.handleOnBulkSelectClicked('all') }, t('toolbar.bulk_select.select_all', { value: itemsTotal })),\n            ];\n            return (React.createElement(Dropdown, { onSelect: this.handleOnBulkSelect, position: DropdownPosition.left, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled || isBulkSelectDisabled, splitButtonItems: [\n                        React.createElement(DropdownToggleCheckbox, { id: \"bulk-select\", key: \"bulk-select\", \"aria-label\": anySelected ? t('toolbar.bulk_select.aria_deselect') : t('toolbar.bulk_select.aria_select'), isChecked: isChecked, onClick: () => {\n                                anySelected ? this.handleOnBulkSelectClicked('none') : this.handleOnBulkSelectClicked('all');\n                            } }),\n                    ], onToggle: this.handleOnBulkSelectToggle }, numSelected !== 0 && React.createElement(React.Fragment, null,\n                    numSelected,\n                    \" selected\")), isOpen: isBulkSelectOpen, dropdownItems: dropdownItems }));\n        };\n        this.handleOnBulkSelectClicked = (action) => {\n            const { onBulkSelected } = this.props;\n            if (onBulkSelected) {\n                onBulkSelected(action);\n            }\n        };\n        this.handleOnBulkSelect = () => {\n            this.setState({\n                isBulkSelectOpen: !this.state.isBulkSelectOpen,\n            });\n        };\n        this.handleOnBulkSelectToggle = isOpen => {\n            this.setState({\n                isBulkSelectOpen: isOpen,\n            });\n        };\n        this.getCurrentCategoryOption = () => {\n            const { categoryOptions } = this.props;\n            const { currentCategory } = this.state;\n            if (!categoryOptions) {\n                return undefined;\n            }\n            for (const option of categoryOptions) {\n                if (currentCategory === option.key) {\n                    return option;\n                }\n            }\n            return categoryOptions[0];\n        };\n        this.handleOnCategoryClick = value => {\n            this.setState({\n                currentCategory: value,\n            });\n        };\n        this.handleOnCategorySelect = () => {\n            this.setState({\n                categoryInput: '',\n                currentTagKey: undefined,\n                isCategoryDropdownOpen: !this.state.isCategoryDropdownOpen,\n            });\n        };\n        this.handleOnCategoryToggle = isOpen => {\n            this.setState({\n                isCategoryDropdownOpen: isOpen,\n            });\n        };\n        // Category input\n        this.getCategoryInput = categoryOption => {\n            const { isDisabled, resourcePathsType, t } = this.props;\n            const { currentCategory, filters, categoryInput } = this.state;\n            return (React.createElement(ToolbarFilter, { categoryName: categoryOption, chips: filters[categoryOption.key], deleteChip: this.onDelete, key: categoryOption.key, showToolbarItem: currentCategory === categoryOption.key },\n                React.createElement(InputGroup, null, isResourceTypeValid(resourcePathsType, categoryOption.key) ? (React.createElement(ResourceTypeahead, { isDisabled: isDisabled, onSelect: value => this.onCategoryInputSelect(value, categoryOption.key), resourcePathsType: resourcePathsType, resourceType: categoryOption.key })) : (React.createElement(React.Fragment, null,\n                    React.createElement(TextInput, { isDisabled: isDisabled, name: `${categoryOption.key}-input`, id: `${categoryOption.key}-input`, type: \"search\", \"aria-label\": t(`filter_by.${categoryOption.key}.input_aria_label`), onChange: this.handleOnCategoryInputChange, value: categoryInput, placeholder: t(`filter_by.${categoryOption.key}.placeholder`), onKeyDown: evt => this.onCategoryInput(evt, categoryOption.key) }),\n                    React.createElement(Button, { isDisabled: isDisabled, variant: ButtonVariant.control, \"aria-label\": t(`filter_by.${categoryOption.key}.button_aria_label`), onClick: evt => this.onCategoryInput(evt, categoryOption.key) },\n                        React.createElement(SearchIcon, null)))))));\n        };\n        this.getDefaultCategoryOptions = () => {\n            const { t } = this.props;\n            return [{ name: t('filter_by.values.name'), key: 'name' }];\n        };\n        this.handleOnCategoryInputChange = (value) => {\n            this.setState({ categoryInput: value });\n        };\n        this.onCategoryInput = (event, key) => {\n            const { categoryInput, currentCategory } = this.state;\n            if ((event && event.key && event.key !== 'Enter') || categoryInput.trim() === '') {\n                return;\n            }\n            this.setState((prevState) => {\n                const prevFilters = prevState.filters[key];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { [currentCategory]: prevFilters && prevFilters.includes(categoryInput)\n                            ? prevFilters\n                            : prevFilters\n                                ? [...prevFilters, categoryInput]\n                                : [categoryInput] }),\n                    categoryInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(currentCategory, categoryInput);\n            });\n        };\n        this.onCategoryInputSelect = (value, key) => {\n            const { currentCategory } = this.state;\n            this.setState((prevState) => {\n                const prevFilters = prevState.filters[key];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { [currentCategory]: prevFilters && prevFilters.includes(value)\n                            ? prevFilters\n                            : prevFilters\n                                ? [...prevFilters, value]\n                                : [value] }),\n                    categoryInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(currentCategory, value);\n            });\n        };\n        // Org unit select\n        this.getOrgUnitSelect = () => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, filters, isOrgUnitSelectExpanded } = this.state;\n            const options = this.getOrgUnitOptions().map(option => ({\n                id: option.key,\n                toString: () => option.name,\n                compareTo: value => filters[orgUnitIdKey] ? filters[orgUnitIdKey].find(val => val === value.id) : false,\n            }));\n            const chips = []; // Get selected items as PatternFly's ToolbarChip type\n            const selections = []; // Select options and selections must be same type\n            if (filters[orgUnitIdKey] && Array.isArray(filters[orgUnitIdKey])) {\n                filters[orgUnitIdKey].map(id => {\n                    const option = options.find(val => val.id === id);\n                    if (option) {\n                        selections.push(option);\n                        chips.push({\n                            key: option.id,\n                            node: option.toString(),\n                        });\n                    }\n                });\n            }\n            // Todo: selectOverride is a workaround for https://github.com/patternfly/patternfly-react/issues/4477\n            return (React.createElement(ToolbarFilter, { categoryName: {\n                    key: orgUnitIdKey,\n                    name: t('filter_by.values.org_unit_id'),\n                }, chips: chips, deleteChip: this.onDelete, key: orgUnitIdKey, showToolbarItem: currentCategory === orgUnitIdKey },\n                React.createElement(Select, { isDisabled: isDisabled, className: \"selectOverride\", variant: SelectVariant.checkbox, \"aria-label\": t('filter_by.org_unit.aria_label'), onToggle: this.handleOnOrgUnitToggle, onSelect: this.handleOnOrgUnitSelect, selections: selections, isOpen: isOrgUnitSelectExpanded, placeholderText: t('filter_by.org_unit.placeholder') }, options.map(option => (React.createElement(SelectOption, { description: option.id, key: option.id, value: option }))))));\n        };\n        this.handleOnOrgUnitSelect = (event, selection) => {\n            const checked = event.target.checked;\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters[orgUnitIdKey] ? prevState.filters[orgUnitIdKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign({}, prevState.filters.tag), [orgUnitIdKey]: checked\n                            ? [...prevSelections, selection.id]\n                            : prevSelections.filter(value => value !== selection.id) }),\n                };\n            }, () => {\n                if (checked) {\n                    this.props.onFilterAdded(orgUnitIdKey, selection.id);\n                }\n                else {\n                    this.onDelete(orgUnitIdKey, selection.id);\n                }\n            });\n        };\n        this.handleOnOrgUnitToggle = isOpen => {\n            this.setState({\n                isOrgUnitSelectExpanded: isOpen,\n            });\n        };\n        // Tag key select\n        this.getTagKeySelect = () => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, currentTagKey, isTagKeySelectExpanded } = this.state;\n            if (currentCategory !== tagKey) {\n                return null;\n            }\n            const selectOptions = this.getTagKeyOptions().map(selectOption => {\n                return React.createElement(SelectOption, { key: selectOption.key, value: selectOption.key });\n            });\n            return (React.createElement(ToolbarItem, null,\n                React.createElement(Select, { isDisabled: isDisabled, variant: SelectVariant.typeahead, typeAheadAriaLabel: t('filter_by.tag_key.aria_label'), onClear: this.handleOnTagKeyClear, onToggle: this.handleOnTagKeyToggle, onSelect: this.handleOnTagKeySelect, isOpen: isTagKeySelectExpanded, placeholderText: t('filter_by.tag_key.placeholder'), selections: currentTagKey }, selectOptions)));\n        };\n        this.handleOnTagKeyClear = () => {\n            this.setState({\n                currentTagKey: undefined,\n                isTagKeySelectExpanded: false,\n            });\n        };\n        this.handleOnTagKeySelect = (event, selection) => {\n            this.setState({\n                currentTagKey: selection,\n                isTagKeySelectExpanded: !this.state.isTagKeySelectExpanded,\n            });\n        };\n        this.handleOnTagKeyToggle = isOpen => {\n            this.setState({\n                isTagKeySelectExpanded: isOpen,\n            });\n        };\n        // Tag value select\n        this.getTagValueSelect = tagKeyOption => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, currentTagKey, filters, isTagValueSelectExpanded, tagKeyValueInput } = this.state;\n            const selectOptions = this.getTagValueOptions().map(selectOption => {\n                return React.createElement(SelectOption, { key: selectOption.key, value: selectOption.key });\n            });\n            return (React.createElement(ToolbarFilter, { categoryName: tagKeyOption, chips: filters.tag[tagKeyOption.key], deleteChip: this.onDelete, key: tagKeyOption.key, showToolbarItem: currentCategory === tagKey && currentTagKey === tagKeyOption.key }, selectOptions.length < tagKeyValueLimit ? (React.createElement(Select, { isDisabled: isDisabled, variant: SelectVariant.checkbox, \"aria-label\": t('filter_by.tag_value.aria_label'), onToggle: this.onTagValueToggle, onSelect: this.onTagValueSelect, selections: filters.tag[tagKeyOption.key] ? filters.tag[tagKeyOption.key] : [], isOpen: isTagValueSelectExpanded, placeholderText: t('filter_by.tag_value.placeholder') }, selectOptions)) : (React.createElement(InputGroup, null,\n                React.createElement(TextInput, { isDisabled: isDisabled, name: \"tagkeyvalue-input\", id: \"tagkeyvalue-input\", type: \"search\", \"aria-label\": t('filter_by.tag_value.aria_label'), onChange: this.onTagValueInputChange, value: tagKeyValueInput, placeholder: t('filter_by.tag_value.input_placeholder'), onKeyDown: evt => this.onTagValueInput(evt) }),\n                React.createElement(Button, { isDisabled: isDisabled, variant: ButtonVariant.control, \"aria-label\": t('filter_by.tag_value.button_aria_label'), onClick: evt => this.onTagValueInput(evt) },\n                    React.createElement(SearchIcon, null))))));\n        };\n        this.onTagValueInputChange = value => {\n            this.setState({ tagKeyValueInput: value });\n        };\n        this.onTagValueInput = event => {\n            const { currentTagKey, tagKeyValueInput } = this.state;\n            if ((event.key && event.key !== 'Enter') || tagKeyValueInput.trim() === '') {\n                return;\n            }\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters.tag[currentTagKey] ? prevState.filters.tag[currentTagKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign(Object.assign({}, prevState.filters.tag), { [currentTagKey]: [...prevSelections, tagKeyValueInput] }) }),\n                    tagKeyValueInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(`${tagPrefix}${currentTagKey}`, tagKeyValueInput);\n            });\n        };\n        this.onTagValueSelect = (event, selection) => {\n            const { currentTagKey } = this.state;\n            const checked = event.target.checked;\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters.tag[currentTagKey] ? prevState.filters.tag[currentTagKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign(Object.assign({}, prevState.filters.tag), { [currentTagKey]: checked\n                                ? [...prevSelections, selection]\n                                : prevSelections.filter(value => value !== selection) }) }),\n                };\n            }, () => {\n                if (checked) {\n                    this.props.onFilterAdded(`${tagPrefix}${currentTagKey}`, selection);\n                }\n                else {\n                    this.onDelete(currentTagKey, selection);\n                }\n            });\n        };\n        this.onTagValueToggle = isOpen => {\n            this.setState({\n                isTagValueSelectExpanded: isOpen,\n            });\n        };\n        // Column management\n        this.getColumnManagement = () => {\n            const { t } = this.props;\n            return (React.createElement(ToolbarItem, null,\n                React.createElement(Button, { onClick: this.handleColumnManagementClicked, variant: ButtonVariant.link }, t('details.column_management.title'))));\n        };\n        // Export button\n        this.getExportButton = () => {\n            const { isDisabled, isExportDisabled } = this.props;\n            return (React.createElement(ToolbarItem, { spacer: {\n                    default: 'spacerNone',\n                } },\n                React.createElement(Button, { isDisabled: isDisabled || isExportDisabled, onClick: this.handleExportClicked, variant: ButtonVariant.plain },\n                    React.createElement(ExportIcon, null))));\n        };\n        this.handleColumnManagementClicked = () => {\n            this.props.onColumnManagementClicked();\n        };\n        this.handleExportClicked = () => {\n            this.props.onExportClicked();\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentCategory: this.getDefaultCategory(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { categoryOptions, groupBy, orgReport, query, tagReport } = this.props;\n        if (categoryOptions !== prevProps.categoryOptions ||\n            groupBy !== prevProps.groupBy ||\n            (query && !isEqual(query, prevProps.query)) ||\n            (orgReport && !isEqual(orgReport, prevProps.orgReport)) ||\n            (tagReport && !isEqual(tagReport, prevProps.tagReport))) {\n            this.setState(() => {\n                const filters = this.getActiveFilters(query);\n                return categoryOptions !== prevProps.categoryOptions || prevProps.groupBy !== groupBy\n                    ? {\n                        categoryInput: '',\n                        currentCategory: this.getDefaultCategory(),\n                        currentOrgUnit: '',\n                        currentTagKey: '',\n                        tagKeyValueInput: '',\n                        filters,\n                    }\n                    : {\n                        filters,\n                    };\n            });\n        }\n    }\n    // Category dropdown\n    getCategoryDropdown() {\n        const { categoryOptions, isDisabled } = this.props;\n        const { isCategoryDropdownOpen } = this.state;\n        if (!categoryOptions) {\n            return null;\n        }\n        return (React.createElement(ToolbarItem, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnCategorySelect, position: DropdownPosition.left, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.handleOnCategoryToggle, style: { width: '100%' } },\n                    React.createElement(FilterIcon, null),\n                    \" \",\n                    this.getCurrentCategoryOption().name), isOpen: isCategoryDropdownOpen, dropdownItems: categoryOptions &&\n                    categoryOptions.map(option => (React.createElement(DropdownItem, { key: option.key, onClick: () => this.handleOnCategoryClick(option.key) }, option.name))), style: { width: '100%' } })));\n    }\n    getOrgUnitOptions() {\n        const { orgReport } = this.props;\n        let options = [];\n        if (!(orgReport && orgReport.data)) {\n            return options;\n        }\n        // Sort all names first\n        const sortedData = orgReport.data.sort((a, b) => {\n            if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                return -1;\n            }\n            if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                return 1;\n            }\n            return 0;\n        });\n        // Move roots first\n        const roots = sortedData.filter(org => org.level === 0);\n        const filteredOrgs = sortedData.filter(org => org.level !== 0);\n        roots.map(root => {\n            const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n            filteredOrgs.unshift(item);\n        });\n        if (filteredOrgs.length > 0) {\n            options = filteredOrgs.map(org => {\n                return {\n                    key: org[orgUnitIdKey],\n                    name: org[orgUnitNameKey],\n                };\n            });\n        }\n        return options;\n    }\n    getTagKeyOptions() {\n        const { tagReport } = this.props;\n        let data = [];\n        let options = [];\n        if (!(tagReport && tagReport.data)) {\n            return options;\n        }\n        // If the key_only param is used, we have an array of strings\n        let hasTagKeys = false;\n        for (const item of tagReport.data) {\n            if (item.hasOwnProperty('key')) {\n                hasTagKeys = true;\n                break;\n            }\n        }\n        // Workaround for https://github.com/project-koku/koku/issues/1797\n        if (hasTagKeys) {\n            const keepData = tagReport.data.map(\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            (_a) => {\n                var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                return keepProps;\n            });\n            data = uniqBy(keepData, 'key');\n        }\n        else {\n            data = uniq(tagReport.data);\n        }\n        if (data.length > 0) {\n            options = data.map(item => {\n                const key = hasTagKeys ? item.key : item;\n                return {\n                    key,\n                    name: key,\n                };\n            });\n        }\n        return options;\n    }\n    getTagValueOptions() {\n        const { tagReport } = this.props;\n        const { currentTagKey } = this.state;\n        let data = [];\n        if (tagReport && tagReport.data) {\n            data = [...new Set([...tagReport.data])]; // prune duplicates\n        }\n        let options = [];\n        if (data.length > 0) {\n            for (const tag of data) {\n                if (currentTagKey === tag.key && tag.values) {\n                    options = tag.values.map(val => {\n                        return {\n                            key: val,\n                            name: val,\n                        };\n                    });\n                    break;\n                }\n            }\n        }\n        return options;\n    }\n    render() {\n        const { categoryOptions, dateRange, pagination, showBulkSelect, showColumnManagement, showExport, showFilter, style, } = this.props;\n        const options = categoryOptions ? categoryOptions : this.getDefaultCategoryOptions();\n        // Todo: clearAllFilters workaround https://github.com/patternfly/patternfly-react/issues/4222\n        return (React.createElement(\"div\", { style: style ? style : styles.toolbarContainer },\n            React.createElement(Toolbar, { id: \"details-toolbar\", clearAllFilters: this.onDelete, collapseListedFiltersBreakpoint: \"xl\" },\n                React.createElement(ToolbarContent, null,\n                    React.createElement(ToolbarToggleGroup, { breakpoint: \"xl\", toggleIcon: React.createElement(FilterIcon, null) },\n                        showBulkSelect && React.createElement(ToolbarItem, { variant: \"bulk-select\" }, this.getBulkSelect()),\n                        showFilter && (React.createElement(ToolbarGroup, { variant: \"filter-group\" },\n                            this.getCategoryDropdown(),\n                            this.getTagKeySelect(),\n                            this.getTagKeyOptions().map(option => this.getTagValueSelect(option)),\n                            this.getOrgUnitSelect(),\n                            options &&\n                                options\n                                    .filter(option => option.key !== tagKey && option.key !== orgUnitIdKey)\n                                    .map(option => this.getCategoryInput(option)))),\n                        (Boolean(showExport) || Boolean(showColumnManagement)) && (React.createElement(ToolbarGroup, null,\n                            Boolean(showExport) && this.getExportButton(),\n                            Boolean(showColumnManagement) && this.getColumnManagement())),\n                        dateRange && React.createElement(ToolbarGroup, null, dateRange)),\n                    React.createElement(ToolbarItem, { alignment: { default: 'alignRight' }, variant: \"pagination\" }, pagination)))));\n    }\n}\nconst DataToolbar = withTranslation()(DataToolbarBase);\nexport { DataToolbar };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    alert: {\n        marginBottom: global_spacer_md.var,\n    },\n    form: {\n        marginLeft: global_spacer_sm.var,\n    },\n    modal: {\n        input: {\n            marginRight: global_spacer_xs.var,\n        },\n        ul: {\n            marginLeft: global_spacer_sm.var,\n        },\n    },\n    title: {\n        marginBottom: global_spacer_md.var,\n    },\n};\n","import { Button, ButtonVariant } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport fileDownload from 'js-file-download';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { exportActions, exportSelectors } from 'store/exports';\nimport { getTestProps, testIds } from 'testIds';\nconst reportType = \"cost\" /* cost */;\nexport class ExportSubmitBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            fetchReportClicked: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExport = () => {\n            const { report, reportFetchStatus } = this.props;\n            if (report && reportFetchStatus === 2 /* complete */) {\n                fileDownload(report.data, this.getFileName(), 'text/csv');\n                this.handleClose();\n            }\n        };\n        this.getFileName = () => {\n            const { groupBy, reportPathsType, resolution, t, timeScope } = this.props;\n            const thisMonth = new Date();\n            const lastMonth = new Date().setMonth(thisMonth.getMonth() - 1);\n            const currentMonth = format(thisMonth, 'MMMM_yyyy');\n            const previousMonth = format(lastMonth - 1, 'MMMM_yyyy');\n            const fileName = t('export.file.name', {\n                provider: reportPathsType,\n                groupBy,\n                resolution,\n                date: timeScope && timeScope === -2 ? previousMonth : currentMonth,\n            });\n            return `${fileName}.csv`;\n        };\n        this.handleClose = () => {\n            const { reportError } = this.props;\n            this.setState(Object.assign({}, this.defaultState), () => {\n                if (!reportError) {\n                    this.props.onClose(false);\n                }\n            });\n        };\n        this.handleFetchReport = () => {\n            const { exportReport, queryString, reportPathsType } = this.props;\n            exportReport(reportPathsType, reportType, queryString);\n            this.setState({\n                fetchReportClicked: true,\n            }, () => {\n                this.getExport();\n            });\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const { report, reportError } = this.props;\n        const { fetchReportClicked } = this.state;\n        if (prevProps.report !== report && fetchReportClicked) {\n            this.getExport();\n        }\n        if (reportError) {\n            this.props.onError(reportError);\n        }\n    }\n    render() {\n        const { reportFetchStatus, t } = this.props;\n        return (React.createElement(Button, Object.assign({}, getTestProps(testIds.export.submit_btn), { isDisabled: reportFetchStatus === 1 /* inProgress */, key: \"confirm\", onClick: this.handleFetchReport, variant: ButtonVariant.primary }), t('export.confirm')));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const { groupBy, isAllItems, items, query, reportPathsType, resolution, timeScope } = props;\n    const getQueryString = () => {\n        const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { filter: {\n                limit: undefined,\n                offset: undefined,\n                resolution: resolution ? resolution : undefined,\n                time_scope_value: timeScope ? timeScope : undefined,\n            }, filter_by: {}, limit: 0, order_by: undefined, perspective: undefined, dateRange: undefined });\n        // Store filter_by as an array so we can add to it below\n        if (query.filter_by) {\n            for (const key of Object.keys(query.filter_by)) {\n                if (newQuery.filter_by[key] === undefined) {\n                    newQuery.filter_by[key] = [];\n                }\n                newQuery.filter_by[key].push(query.filter_by[key]);\n            }\n        }\n        if (isAllItems) {\n            // Ensure group_by isn't overridden -- org_unit_id is not unique\n            if (groupBy === orgUnitIdKey) {\n                if (newQuery.filter_by[orgUnitIdKey] === undefined) {\n                    newQuery.filter_by[orgUnitIdKey] = [];\n                }\n                newQuery.filter_by[orgUnitIdKey].push(query.group_by[orgUnitIdKey]);\n            }\n        }\n        else {\n            if (groupBy === orgUnitIdKey) {\n                for (const item of items) {\n                    // Note that type only exists when grouping by org units\n                    const type = item.type === 'organizational_unit' ? orgUnitIdKey : item.type;\n                    if (newQuery.filter_by[type] === undefined) {\n                        newQuery.filter_by[type] = [];\n                    }\n                    newQuery.filter_by[type].push(item.id);\n                }\n            }\n            else {\n                for (const item of items) {\n                    if (newQuery.filter_by[groupBy] === undefined) {\n                        newQuery.filter_by[groupBy] = [];\n                    }\n                    newQuery.filter_by[groupBy].push(item.id);\n                }\n            }\n        }\n        return getQuery(newQuery);\n    };\n    const queryString = getQueryString();\n    const report = exportSelectors.selectExport(state, reportPathsType, reportType, queryString);\n    const reportError = exportSelectors.selectExportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = exportSelectors.selectExportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    exportReport: exportActions.exportReport,\n};\nconst ExportSubmitConnect = connect(mapStateToProps, mapDispatchToProps)(ExportSubmitBase);\nconst ExportSubmit = withTranslation()(ExportSubmitConnect);\nexport { ExportSubmit };\n","import { Alert, Button, ButtonVariant, Form, FormGroup, Modal, Radio } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport { orderBy } from 'lodash';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { exportActions } from 'store/exports';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './exportModal.styles';\nimport { ExportSubmit } from './exportSubmit';\nconst resolutionOptions = [\n    { label: 'export.resolution_daily', value: 'daily' },\n    { label: 'export.resolution_monthly', value: 'monthly' },\n];\nconst timeScopeOptions = [\n    { label: 'export.time_scope_current', value: -1 },\n    { label: 'export.time_scope_previous', value: -2 },\n];\nexport class ExportModalBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            error: undefined,\n            timeScope: -1,\n            resolution: this.props.resolution || 'monthly',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        // Reset defult state upon close -- see https://issues.redhat.com/browse/COST-1134\n        this.handleClose = () => {\n            this.setState(Object.assign({}, this.defaultState), () => {\n                this.props.onClose(false);\n            });\n        };\n        this.handleError = (error) => {\n            this.setState({ error });\n        };\n        this.handleMonthChange = (_, event) => {\n            this.setState({ timeScope: Number(event.currentTarget.value) });\n        };\n        this.handleResolutionChange = (_, event) => {\n            this.setState({ resolution: event.currentTarget.value });\n        };\n        this.handleMonthChange = this.handleMonthChange.bind(this);\n        this.handleResolutionChange = this.handleResolutionChange.bind(this);\n    }\n    render() {\n        const { groupBy, isAllItems, items, query, reportPathsType, showAggregateType = true, showTimeScope = true, t, } = this.props;\n        const { error, resolution, timeScope } = this.state;\n        let sortedItems = [...items];\n        if (this.props.isOpen) {\n            if (items && items.length === 0 && isAllItems) {\n                sortedItems = [\n                    {\n                        label: t('export.all'),\n                    },\n                ];\n            }\n            else {\n                sortedItems = orderBy(sortedItems, ['label'], ['asc']);\n            }\n        }\n        let selectedLabel = t('export.selected', { groupBy });\n        if (groupBy.indexOf(tagPrefix) !== -1) {\n            selectedLabel = t('export.selected_tags');\n        }\n        const thisMonth = new Date();\n        const lastMonth = new Date().setMonth(thisMonth.getMonth() - 1);\n        const currentMonth = format(thisMonth, 'MMMM yyyy');\n        const previousMonth = format(lastMonth - 1, 'MMMM yyyy');\n        return (React.createElement(Modal, { style: styles.modal, isOpen: this.props.isOpen, onClose: this.handleClose, title: t('export.title'), variant: \"small\", actions: [\n                React.createElement(ExportSubmit, { groupBy: groupBy, isAllItems: isAllItems, items: items, key: \"confirm\", timeScope: showTimeScope ? timeScope : undefined, onClose: this.handleClose, onError: this.handleError, query: query, reportPathsType: reportPathsType, resolution: resolution }),\n                React.createElement(Button, Object.assign({}, getTestProps(testIds.export.cancel_btn), { key: \"cancel\", onClick: this.handleClose, variant: ButtonVariant.link }), t('export.cancel')),\n            ] },\n            error && React.createElement(Alert, { variant: \"danger\", style: styles.alert, title: t('export.error') }),\n            React.createElement(\"div\", { style: styles.title },\n                React.createElement(\"span\", null, t('export.heading', { groupBy }))),\n            React.createElement(Form, { style: styles.form },\n                showAggregateType && (React.createElement(FormGroup, { label: t('export.aggregate_type'), fieldId: \"aggregate-type\" },\n                    React.createElement(React.Fragment, null, resolutionOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `resolution-${index}`, isValid: option.value !== undefined, label: t(option.label), value: option.value, checked: resolution === option.value, name: \"resolution\", onChange: this.handleResolutionChange, \"aria-label\": t(option.label) })))))),\n                showTimeScope && (React.createElement(FormGroup, { label: t('export.time_scope_title'), fieldId: \"timeScope\" },\n                    React.createElement(React.Fragment, null, timeScopeOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `timeScope-${index}`, isValid: option.value !== undefined, label: t(option.label, { date: option.value === -2 ? previousMonth : currentMonth }), value: option.value, checked: timeScope === option.value, name: \"timeScope\", onChange: this.handleMonthChange, \"aria-label\": t(option.label) })))))),\n                React.createElement(FormGroup, { label: selectedLabel, fieldId: \"selected-labels\" },\n                    React.createElement(\"ul\", null, sortedItems.map((groupItem, index) => {\n                        return React.createElement(\"li\", { key: index }, groupItem.label);\n                    }))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {};\n});\nconst mapDispatchToProps = {\n    exportReport: exportActions.exportReport,\n};\nconst ExportModalConnect = connect(mapStateToProps, mapDispatchToProps)(ExportModalBase);\nconst ExportModal = withTranslation()(ExportModalConnect);\nexport { ExportModal };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    groupBySelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    groupBySelectorLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { orgUnitIdKey, orgUnitNameKey, parseQuery } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './groupBy.styles';\nclass GroupByOrgBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy } = this.props;\n            const queryFromRoute = parseQuery(location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            for (const key of groupByKeys) {\n                const index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = queryFromRoute.group_by[orgUnitIdKey];\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.getGroupByItems = () => {\n            const { orgReport } = this.props;\n            if (!(orgReport && orgReport.data)) {\n                return [];\n            }\n            // Sort all names first\n            const sortedData = orgReport.data.sort((a, b) => {\n                if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                    return -1;\n                }\n                if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                    return 1;\n                }\n                return 0;\n            });\n            // Move roots first\n            const roots = sortedData.filter(org => org.level === 0);\n            const filteredOrgs = sortedData.filter(org => org.level !== 0);\n            roots.map(root => {\n                const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n                filteredOrgs.unshift(item);\n            });\n            return filteredOrgs.map(org => ({\n                id: org[orgUnitIdKey],\n                toString: () => org[orgUnitNameKey],\n            }));\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            this.setState({\n                currentItem: selection.id,\n                isGroupByOpen: false,\n            });\n            if (onItemClicked) {\n                onItemClicked(`${orgUnitIdKey}${selection.id}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled = false, t } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        const groupByItems = this.getGroupByItems();\n        const selection = groupByItems.find((item) => item.id === currentItem);\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": t('group_by.org_unit_aria_label'), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelect, isOpen: isGroupByOpen, placeholderText: t('group_by.org_unit_placeholder'), selections: selection, variant: SelectVariant.typeahead }, groupByItems.map(item => (React.createElement(SelectOption, { description: item.id, key: item.id, value: item }))))));\n    }\n}\nconst GroupByOrg = withTranslation()(GroupByOrgBase);\nexport { GroupByOrg };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { parseQuery, tagPrefix } from 'api/queries/query';\nimport { uniq, uniqBy } from 'lodash';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './groupBy.styles';\nclass GroupByTagBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getGroupByItems = () => {\n            const { tagReport } = this.props;\n            if (!(tagReport && tagReport.data)) {\n                return [];\n            }\n            // If the key_only param is used, we have an array of strings\n            let hasTagKeys = false;\n            for (const item of tagReport.data) {\n                if (item.hasOwnProperty('key')) {\n                    hasTagKeys = true;\n                    break;\n                }\n            }\n            // Workaround for https://github.com/project-koku/koku/issues/1797\n            let data = [];\n            if (hasTagKeys) {\n                const keepData = tagReport.data.map(\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                (_a) => {\n                    var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                    return keepProps;\n                });\n                data = uniqBy(keepData, 'key');\n            }\n            else {\n                data = uniq(tagReport.data);\n            }\n            return data.map(item => {\n                const tagKey = hasTagKeys ? item.key : item;\n                return React.createElement(SelectOption, { key: item.key, value: tagKey });\n            });\n        };\n        this.getCurrentGroupBy = () => {\n            const queryFromRoute = parseQuery(location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            let groupBy;\n            for (const key of groupByKeys) {\n                const index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = key.slice(tagPrefix.length);\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            this.setState({\n                currentItem: selection,\n                isGroupByOpen: false,\n            });\n            if (onItemClicked) {\n                onItemClicked(`${tagPrefix}${selection}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled, t } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": t('group_by.tag_key_aria_label'), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelect, isOpen: isGroupByOpen, placeholderText: t('group_by.tag_key_placeholder'), selections: currentItem, variant: SelectVariant.typeahead }, this.getGroupByItems())));\n    }\n}\nconst GroupByTag = withTranslation()(GroupByTagBase);\nexport { GroupByTag };\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey, parseQuery, tagKey, tagPrefix } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { orgActions, orgSelectors } from 'store/orgs';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { styles } from './groupBy.styles';\nimport { GroupByOrg } from './groupByOrg';\nimport { GroupByTag } from './groupByTag';\nconst groupByOrgOptions = [{ label: orgUnitIdKey, value: orgUnitIdKey }];\nconst groupByTagOptions = [{ label: tagKey, value: tagKey }];\nconst orgReportType = \"org\" /* org */;\nconst tagReportType = \"tag\" /* tag */;\nclass GroupByBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n            isGroupByOrgVisible: false,\n            isGroupByTagVisible: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleGroupByClick = value => {\n            const { onItemClicked } = this.props;\n            if (value === orgUnitIdKey || value === tagKey) {\n                this.setState({\n                    currentItem: value,\n                    isGroupByOrgVisible: value === orgUnitIdKey,\n                    isGroupByTagVisible: value === tagKey,\n                });\n            }\n            else {\n                this.setState({\n                    currentItem: value,\n                    isGroupByOrgVisible: false,\n                    isGroupByTagVisible: false,\n                });\n                if (onItemClicked) {\n                    onItemClicked(value);\n                }\n            }\n        };\n        this.getGroupByItems = () => {\n            const { options, orgReport, tagReport, t } = this.props;\n            const allOptions = [...options];\n            if (orgReport && orgReport.data && orgReport.data.length > 0) {\n                allOptions.push(...groupByOrgOptions);\n            }\n            if (tagReport && tagReport.data && tagReport.data.length > 0) {\n                allOptions.push(...groupByTagOptions);\n            }\n            return allOptions.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleGroupByClick(option.value) }, t(`group_by.values.${option.label}`))));\n        };\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy } = this.props;\n            const { defaultItem } = this.state;\n            const queryFromRoute = parseQuery(location.search);\n            if (!(queryFromRoute && queryFromRoute.group_by)) {\n                return defaultItem;\n            }\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            for (const key of groupByKeys) {\n                let index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = tagKey;\n                    this.setState({\n                        isGroupByTagVisible: true,\n                    });\n                    break;\n                }\n                index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = orgUnitIdKey;\n                    this.setState({\n                        isGroupByOrgVisible: true,\n                    });\n                    break;\n                }\n            }\n            return groupBy !== 'date' ? groupBy : defaultItem;\n        };\n        this.handleGroupBySelect = () => {\n            this.setState({\n                isGroupByOpen: !this.state.isGroupByOpen,\n            });\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({\n                isGroupByOpen,\n            });\n        };\n        this.handleGroupByClick = this.handleGroupByClick.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        const { fetchOrg, fetchTag, orgQueryString, orgReportPathsType, showOrgs, showTags, tagQueryString, tagReportPathsType, } = this.props;\n        if (showOrgs) {\n            fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n        }\n        if (showTags) {\n            fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n        }\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchOrg, fetchTag, groupBy, orgQueryString, orgReportPathsType, perspective, showOrgs, showTags, tagQueryString, tagReportPathsType, } = this.props;\n        if (prevProps.groupBy !== groupBy || prevProps.perspective !== perspective) {\n            if (showOrgs) {\n                fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n            }\n            if (showTags) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n            let options;\n            if (prevProps.perspective !== perspective) {\n                options = {\n                    isGroupByOrgVisible: false,\n                    isGroupByTagVisible: false,\n                };\n            }\n            this.setState(Object.assign({ currentItem: this.getCurrentGroupBy() }, (options ? options : {})));\n        }\n    }\n    render() {\n        const { getIdKeyForGroupBy, groupBy, isDisabled = false, onItemClicked, orgReport, t, tagReport } = this.props;\n        const { currentItem, isGroupByOpen, isGroupByOrgVisible, isGroupByTagVisible } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(\"label\", { style: styles.groupBySelectorLabel }, t('group_by.label')),\n            React.createElement(Dropdown, { onSelect: this.handleGroupBySelect, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.handleGroupByToggle }, t(`group_by.values.${currentItem}`)), isOpen: isGroupByOpen, dropdownItems: [this.getGroupByItems()] }),\n            Boolean(isGroupByOrgVisible) && (React.createElement(GroupByOrg, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: isDisabled, onItemClicked: onItemClicked, options: groupByOrgOptions, orgReport: orgReport })),\n            Boolean(isGroupByTagVisible) && (React.createElement(GroupByTag, { groupBy: groupBy, isDisabled: isDisabled, onItemClicked: onItemClicked, options: groupByTagOptions, tagReport: tagReport }))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { endDate, startDate, orgReportPathsType, tagReportPathsType }) => {\n    const tagQuery = endDate && startDate\n        ? {\n            start_date: startDate,\n            end_date: endDate,\n        }\n        : {\n            filter: {\n                resolution: 'monthly',\n                time_scope_units: 'month',\n                time_scope_value: -1,\n            },\n        };\n    // Omitting key_only to share a single, cached request -- although the header doesn't need key values, the toolbar does\n    const tagQueryString = getQuery(Object.assign({}, tagQuery));\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    const orgQueryString = getQuery({\n    // TBD...\n    });\n    const orgReport = orgSelectors.selectOrg(state, orgReportPathsType, orgReportType, orgQueryString);\n    const orgReportFetchStatus = orgSelectors.selectOrgFetchStatus(state, orgReportPathsType, orgReportType, orgQueryString);\n    return {\n        orgQueryString,\n        orgReport,\n        orgReportFetchStatus,\n        tagQueryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchOrg: orgActions.fetchOrg,\n    fetchTag: tagActions.fetchTag,\n};\nconst GroupByConnect = connect(mapStateToProps, mapDispatchToProps)(GroupByBase);\nconst GroupBy = withTranslation()(GroupByConnect);\nexport { GroupBy };\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport { ExportModal } from 'pages/views/components/export/exportModal';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, query, reportPathsType } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, query: query, reportPathsType: reportPathsType }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, t, redirectToCostModel, history, item: { source_uuid }, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, t('details.actions.export')),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], history) }, t('details.actions.price_list')));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = withRouter(withTranslation()(DetailsActionsConnect));\nexport { Actions };\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingLeft: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n};\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    dataListHeading: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n    groupByHeading: {\n        marginBottom: global_spacer_lg.value,\n    },\n    tagLink: {\n        marginLeft: global_spacer_sm.value,\n    },\n    tagsContainer: {\n        marginRight: global_spacer_3xl.value,\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { DataList, DataListCell, DataListItem, DataListItemCells, DataListItemRow } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { styles } from './tag.styles';\nclass TagViewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDataListItems = () => {\n            const { tagReport } = this.props;\n            const result = [];\n            if (tagReport) {\n                for (const item of tagReport.data) {\n                    for (const val of item.values) {\n                        const id = `${item.key}:${val}`;\n                        result.push(React.createElement(DataListItem, { \"aria-labelledby\": id, key: `${id}-item` },\n                            React.createElement(DataListItemRow, null,\n                                React.createElement(DataListItemCells, { dataListCells: [\n                                        React.createElement(DataListCell, { key: `${id}-cell1` },\n                                            React.createElement(\"span\", { id: id }, item.key)),\n                                        React.createElement(DataListCell, { key: `${id}-cell2` }, val),\n                                    ] }))));\n                    }\n                }\n            }\n            return result;\n        };\n    }\n    render() {\n        const { groupBy, groupByValue, t } = this.props;\n        const dataListItems = this.getDataListItems();\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"span\", { style: styles.dataListHeading }, t(`group_by.values.${groupBy}`))),\n            React.createElement(\"div\", { style: styles.groupByHeading },\n                React.createElement(\"span\", null, groupByValue)),\n            React.createElement(DataList, { \"aria-label\": \"Simple data list example\", isCompact: true },\n                React.createElement(DataListItem, { \"aria-labelledby\": \"heading1\" },\n                    React.createElement(DataListItemRow, null,\n                        React.createElement(DataListItemCells, { dataListCells: [\n                                React.createElement(DataListCell, { key: \"primary content\" },\n                                    React.createElement(\"span\", { id: \"heading1\", style: styles.dataListHeading }, t('tag.heading_key'))),\n                                React.createElement(DataListCell, { key: \"secondary content\" },\n                                    React.createElement(\"span\", { id: \"heading2\", style: styles.dataListHeading }, t('tag.heading_value'))),\n                            ] }))),\n                dataListItems.map(item => item))));\n    }\n}\nconst TagView = withTranslation()(connect()(TagViewBase));\nexport { TagView };\n","import { Modal } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { TagView } from './tagView';\nconst tagReportType = \"tag\" /* tag */;\nclass TagModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getTagValueCount = () => {\n            const { tagReport } = this.props;\n            let count = 0;\n            if (tagReport) {\n                for (const item of tagReport.data) {\n                    if (item.values) {\n                        count += item.values.length;\n                    }\n                }\n            }\n            return count;\n        };\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    componentDidMount() {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        fetchTag(tagReportPathsType, tagReportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchTag(tagReportPathsType, tagReportType, queryString);\n        }\n    }\n    shouldComponentUpdate(nextProps) {\n        const { groupByValue, isOpen } = this.props;\n        return nextProps.groupByValue !== groupByValue || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupBy, isOpen, query, tagReport, t } = this.props;\n        // Match page header description\n        const groupByValue = query && query.filter && query.filter.account ? query.filter.account : this.props.groupByValue;\n        return (React.createElement(Modal, { isOpen: isOpen, onClose: this.handleClose, title: t('tag.title', {\n                value: this.getTagValueCount(),\n            }), width: '50%' },\n            React.createElement(TagView, { groupBy: groupBy, groupByValue: groupByValue, tagReport: tagReport })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { tagReportPathsType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: groupByValue })),\n    };\n    const queryString = getQuery(newQuery);\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, queryString);\n    return {\n        groupBy,\n        groupByValue,\n        query,\n        queryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst TagModal = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(TagModalBase));\nexport { TagModal };\n","import { TagIcon } from '@patternfly/react-icons/dist/js/icons/tag-icon';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './tag.styles';\nimport { TagModal } from './tagModal';\nconst tagReportType = \"tag\" /* tag */;\nclass TagLinkBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = (isOpen) => {\n            this.setState({ isOpen });\n        };\n        this.handleOpen = event => {\n            this.setState({ isOpen: true });\n            event.preventDefault();\n            return false;\n        };\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n    }\n    componentDidMount() {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        fetchTag(tagReportPathsType, tagReportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchTag(tagReportPathsType, tagReportType, queryString);\n        }\n    }\n    render() {\n        const { id, tagReport, tagReportPathsType } = this.props;\n        const { isOpen } = this.state;\n        let count = 0;\n        if (tagReport) {\n            for (const item of tagReport.data) {\n                if (item.values) {\n                    count += item.values.length;\n                }\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.tagsContainer, id: id },\n            Boolean(count > 0) && (React.createElement(React.Fragment, null,\n                React.createElement(TagIcon, null),\n                React.createElement(\"a\", Object.assign({}, getTestProps(testIds.details.tag_lnk), { href: \"#/\", onClick: this.handleOpen, style: styles.tagLink }), count))),\n            React.createElement(TagModal, { isOpen: isOpen, onClose: this.handleClose, tagReportPathsType: tagReportPathsType })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { tagReportPathsType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: groupByValue })),\n    };\n    const queryString = getQuery(newQuery);\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, queryString);\n    return {\n        groupBy,\n        groupByValue,\n        query,\n        queryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst TagLink = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(TagLinkBase));\nexport { TagLink };\n","import global_BackgroundColor_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    cost: {\n        marginTop: global_spacer_xl.var,\n    },\n    costLabel: {\n        marginTop: global_spacer_xs.var,\n    },\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        textAlign: 'right',\n    },\n    costLabelDate: {\n        textAlign: 'right',\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n        backgroundColor: global_BackgroundColor_100.var,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    tabs: {\n        display: 'flex',\n    },\n    tag: {\n        marginLeft: global_spacer_lg.var,\n    },\n    title: {\n        paddingBottom: global_spacer_lg.var,\n        paddingTop: global_spacer_md.var,\n    },\n};\n","import './breakdownHeader.scss';\nimport { Title, TitleSizes } from '@patternfly/react-core';\nimport { AngleLeftIcon } from '@patternfly/react-icons/dist/js/icons/angle-left-icon';\nimport { breakdownDescKey, breakdownTitleKey, getQueryRoute, orgUnitIdKey } from 'api/queries/query';\nimport { TagLink } from 'pages/views/details/components/tag/tagLink';\nimport { getGroupByOrgValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { getForDateRangeString } from 'utils/dateRange';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './breakdownHeader.styles';\nclass BreakdownHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.buildDetailsLink = () => {\n            const { detailsURL, groupBy, query } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Retrieve org unit used by the details page\n            if (query[orgUnitIdKey]) {\n                groupByKey = orgUnitIdKey;\n                value = query[orgUnitIdKey];\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { group_by: {\n                    [groupByKey]: value,\n                } });\n            // Don't want these params when returning to the details page\n            if (newQuery.filter) {\n                newQuery.filter.account = undefined;\n                newQuery[breakdownDescKey] = undefined;\n                newQuery[orgUnitIdKey] = undefined;\n                newQuery[breakdownTitleKey] = undefined;\n            }\n            return `${detailsURL}?${getQueryRoute(newQuery)}`;\n        };\n        this.getTotalCost = () => {\n            const { report } = this.props;\n            const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n            const cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD');\n            return cost;\n        };\n    }\n    render() {\n        const { description, groupBy, query, t, tabs, tagReportPathsType, title } = this.props;\n        const filterByAccount = query && query.filter ? query.filter.account : undefined;\n        const groupByOrg = getGroupByOrgValue(query);\n        const showTags = filterByAccount || groupBy === 'account' || groupBy === 'project' || groupBy === 'subscription_guid';\n        // i18n groupBy key\n        const groupByKey = groupBy ? groupBy : filterByAccount ? 'account' : groupByOrg ? orgUnitIdKey : undefined;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", null,\n                React.createElement(\"nav\", { \"aria-label\": \"breadcrumb\", className: \"breadcrumbOverride\" },\n                    React.createElement(\"ol\", { className: \"pf-c-breadcrumb__list\" },\n                        React.createElement(\"li\", { className: \"pf-c-breadcrumb__item\" },\n                            React.createElement(\"span\", { className: \"pf-c-breadcrumb__item-divider\" },\n                                React.createElement(AngleLeftIcon, null)),\n                            React.createElement(Link, { to: this.buildDetailsLink() }, t('breakdown.back_to_details', {\n                                groupBy: groupByKey,\n                                value: tagReportPathsType,\n                            }))))),\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] },\n                    t('breakdown.title', { value: title }),\n                    description && React.createElement(\"div\", { style: styles.infoDescription }, description)),\n                React.createElement(\"div\", { style: styles.tabs },\n                    tabs,\n                    React.createElement(\"div\", { style: styles.tag }, Boolean(showTags) && React.createElement(TagLink, { id: \"tags\", tagReportPathsType: tagReportPathsType })))),\n            React.createElement(\"div\", { style: styles.cost },\n                React.createElement(\"div\", { style: styles.costLabel },\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] },\n                        React.createElement(\"span\", null, this.getTotalCost()))),\n                React.createElement(\"div\", { style: styles.costLabelDate }, getForDateRangeString(groupByKey, 'breakdown.total_cost_date', 0)))));\n    }\n}\nconst BreakdownHeader = withTranslation()(BreakdownHeaderBase);\nexport { BreakdownHeader };\n","import { Tab, TabContent, Tabs, TabTitleText } from '@patternfly/react-core';\nimport Loading from 'pages/state/loading';\nimport NoData from 'pages/state/noData';\nimport NoProviders from 'pages/state/noProviders';\nimport NotAvailable from 'pages/state/notAvailable';\nimport { hasCurrentMonthData } from 'pages/views/utils/providers';\nimport React from 'react';\nimport { styles } from './breakdown.styles';\nimport { BreakdownHeader } from './breakdownHeader';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"cost-overview\" /* costOverview */:\n            return 'cost-overview';\n        case \"historical-data\" /* historicalData */:\n            return 'historical-data';\n    }\n};\nclass BreakdownBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [\n                {\n                    contentRef: React.createRef(),\n                    tab: \"cost-overview\" /* costOverview */,\n                },\n                {\n                    contentRef: React.createRef(),\n                    tab: \"historical-data\" /* historicalData */,\n                },\n            ];\n            return availableTabs;\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { costOverviewComponent, historicalDataComponent } = this.props;\n            const { activeTabKey } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"cost-overview\" /* costOverview */) {\n                return costOverviewComponent;\n            }\n            else if (currentTab === \"historical-data\" /* historicalData */) {\n                return historicalDataComponent;\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"cost-overview\" /* costOverview */) {\n                return t('breakdown.cost_overview_title');\n            }\n            else if (tab === \"historical-data\" /* historicalData */) {\n                return t('breakdown.historical_data_title');\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                });\n            }\n        };\n        this.updateReport = () => {\n            const { location, fetchReport, queryString, reportPathsType, reportType } = this.props;\n            if (location.search) {\n                fetchReport(reportPathsType, reportType, queryString);\n            }\n        };\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps) {\n        const { location, report, reportError, queryString } = this.props;\n        const newQuery = prevProps.queryString !== queryString;\n        const noReport = !report && !reportError;\n        const noLocation = !location.search;\n        if (newQuery || noReport || noLocation) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { description, detailsURL, emptyStateTitle, groupBy, providers, providersFetchStatus, providerType, query, report, reportError, reportFetchStatus, tagReportPathsType, title, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        // Note: Providers are fetched via the InactiveSources component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: emptyStateTitle });\n        }\n        else if (providersFetchStatus === 1 /* inProgress */ && reportFetchStatus === 1 /* inProgress */) {\n            return React.createElement(Loading, { title: emptyStateTitle });\n        }\n        else if (providersFetchStatus === 2 /* complete */ && reportFetchStatus === 2 /* complete */) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0 && providersFetchStatus === 2 /* complete */;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: providerType, title: emptyStateTitle });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(BreakdownHeader, { description: description, detailsURL: detailsURL, groupBy: groupBy, query: query, report: report, tabs: this.getTabs(availableTabs), tagReportPathsType: tagReportPathsType, title: title }),\n            React.createElement(\"div\", { style: styles.content }, this.getTabContent(availableTabs))));\n    }\n}\nexport default BreakdownBase;\n","import global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    clustersContainer: {\n        marginRight: global_spacer_3xl.value,\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nexport const styles = {\n    modal: {\n        // Workaround for isLarge not working properly\n        height: '700px',\n        width: '600px',\n    },\n    subTitle: {\n        marginTop: global_spacer_2xl.value,\n        textAlign: 'right',\n    },\n};\n","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nclass ClusterViewBase extends React.Component {\n    render() {\n        const { item } = this.props;\n        if (!item.clusters) {\n            return null;\n        }\n        return item.clusters.map((cluster, index) => React.createElement(\"div\", { key: `cluster-${index}` }, cluster));\n    }\n}\nconst ClusterView = withTranslation()(ClusterViewBase);\nexport { ClusterView, ClusterViewBase };\n","import './clusterModal.scss';\nimport { Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './clusterModal.styles';\nimport { ClusterView } from './clusterView';\nclass ClusterModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        const { isOpen, item } = this.props;\n        return nextProps.item !== item || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupBy, isOpen, item, t } = this.props;\n        return (React.createElement(Modal, { className: \"modalOverride\", style: styles.modal, isOpen: isOpen, onClose: this.handleClose, title: t('details.clusters_modal_title', {\n                groupBy,\n                name: item.label,\n            }), width: '50%' },\n            React.createElement(ClusterView, { item: item })));\n    }\n}\nconst ClusterModal = withTranslation()(ClusterModalBase);\nexport { ClusterModal };\n","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { getTestProps, testIds } from 'testIds';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { styles } from './cluster.styles';\nimport { ClusterModal } from './clusterModal';\nclass ClusterBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isOpen: false,\n            showAll: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = (isOpen) => {\n            this.setState({ isOpen });\n        };\n        this.handleOpen = event => {\n            this.setState({ isOpen: true });\n            event.preventDefault();\n            return false;\n        };\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n    }\n    render() {\n        const { groupBy, report, t } = this.props;\n        const { isOpen, showAll } = this.state;\n        let charCount = 0;\n        const maxChars = 50;\n        const someClusters = [];\n        const allClusters = [];\n        const computedItems = getComputedReportItems({\n            report,\n            idKey: groupBy,\n        });\n        const item = computedItems && computedItems.length ? computedItems[0] : undefined;\n        if (!item) {\n            return null;\n        }\n        for (const cluster of item.clusters) {\n            const prefix = someClusters.length > 0 ? ', ' : '';\n            const clusterString = `${prefix}${cluster}`;\n            if (showAll) {\n                someClusters.push(clusterString);\n            }\n            else if (charCount <= maxChars) {\n                if (charCount + clusterString.length > maxChars) {\n                    someClusters.push(clusterString\n                        .slice(0, maxChars - charCount)\n                        .trim()\n                        .concat('...'));\n                }\n                else {\n                    someClusters.push(clusterString);\n                }\n            }\n            charCount += clusterString.length;\n            allClusters.push(cluster);\n        }\n        return (React.createElement(\"div\", { style: styles.clustersContainer },\n            Boolean(someClusters) && someClusters.map((cluster, index) => React.createElement(\"span\", { key: index }, cluster)),\n            Boolean(someClusters.length < allClusters.length) && (React.createElement(\"a\", Object.assign({}, getTestProps(testIds.details.cluster_lnk), { href: \"#/\", onClick: this.handleOpen }), t('details.more_clusters', {\n                value: allClusters.length - someClusters.length,\n            }))),\n            React.createElement(ClusterModal, { groupBy: groupBy, isOpen: isOpen, item: item, onClose: this.handleClose })));\n    }\n}\nconst Cluster = withTranslation()(ClusterBase);\nexport { Cluster };\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const chartStyles = {\n    chartHeight: 150,\n    chartWidth: 350,\n    subTitle: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n};\nexport const styles = {\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { ChartLabel, ChartLegend, ChartPie, ChartThemeColor } from '@patternfly/react-charts';\nimport { Skeleton } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { formatValue } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './costChart.styles';\nclass CostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Override legend layout\n        this.getLegendLabel = () => {\n            return (_a) => {\n                var { values } = _a, props = __rest(_a, [\"values\"]);\n                return (React.createElement(ChartLabel, Object.assign({}, props, { style: [{ fontWeight: chartStyles.subTitle.fontWeight }, {}], text: [values[props.index], props.text] })));\n            };\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md })));\n        };\n    }\n    render() {\n        const { report, reportFetchStatus, t } = this.props;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost;\n        const hasMarkup = hasCost && report.meta.total.cost.markup;\n        const hasRaw = hasCost && report.meta.total.cost.raw;\n        const hasUsage = hasCost && report.meta.total.cost.usage;\n        const markupUnits = hasMarkup ? report.meta.total.cost.markup.units : 'USD';\n        const rawUnits = hasRaw ? report.meta.total.cost.raw.units : 'USD';\n        const usageUnits = hasUsage ? report.meta.total.cost.usage.units : 'USD';\n        const markupValue = hasMarkup ? report.meta.total.cost.markup.value : 0;\n        const rawValue = hasRaw ? report.meta.total.cost.raw.value : 0;\n        const usageValue = hasUsage ? report.meta.total.cost.usage.value : 0;\n        const markup = formatValue(hasMarkup ? report.meta.total.cost.markup.value : 0, markupUnits);\n        const raw = formatValue(hasRaw ? report.meta.total.cost.raw.value : 0, rawUnits);\n        const usage = formatValue(hasUsage ? report.meta.total.cost.usage.value : 0, usageUnits);\n        const markupLabel = t('breakdown.cost_chart.markup_label');\n        const rawLabel = t('breakdown.cost_chart.raw_label');\n        const usageLabel = t('breakdown.cost_chart.usage_label');\n        // Override legend label layout\n        const LegendLabel = this.getLegendLabel();\n        const Legend = (React.createElement(ChartLegend, { gutter: 25, itemsPerRow: 2, labelComponent: React.createElement(LegendLabel, { dy: 10, lineHeight: 1.5, values: [raw, markup, usage] }), rowGutter: 20 }));\n        return (React.createElement(\"div\", { style: { height: chartStyles.chartHeight, width: chartStyles.chartWidth } }, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(ChartPie, { ariaDesc: t('breakdown.cost_chart.aria_desc'), ariaTitle: t('breakdown.cost_chart.aria_title'), constrainToVisibleArea: true, data: [\n                { x: rawLabel, y: rawValue, units: rawUnits },\n                { x: markupLabel, y: markupValue, units: markupUnits },\n                { x: usageLabel, y: usageValue, units: usageUnits },\n            ], height: chartStyles.chartHeight, labels: ({ datum }) => t('breakdown.cost_chart.tooltip', {\n                name: datum.x,\n                value: formatValue(datum.y, datum.units),\n            }), legendComponent: Legend, legendData: [\n                {\n                    name: rawLabel,\n                },\n                {\n                    name: markupLabel,\n                },\n                {\n                    name: usageLabel,\n                },\n            ], legendOrientation: \"vertical\", legendPosition: \"right\", padding: {\n                bottom: 20,\n                left: 0,\n                right: 225,\n                top: 20,\n            }, themeColor: ChartThemeColor.green, width: chartStyles.chartWidth }))));\n    }\n}\nconst CostChart = withTranslation()(CostChartBase);\nexport { CostChart };\n","import global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nexport const styles = {\n    mainContent: {\n        marginTop: global_spacer_xl.value,\n    },\n    subTitle: {\n        textAlign: 'right',\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { ReportSummaryItem, ReportSummaryItems } from 'components/reports/reportSummary';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue } from 'utils/formatValue';\nimport { formatCurrency } from 'utils/formatValue';\nimport { styles } from './summaryModal.styles';\nconst reportType = \"cost\" /* cost */;\nclass SummaryModalViewBase extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { report, reportGroupBy, reportFetchStatus, t } = this.props;\n        const cost = formatCurrency(report && report.meta && report.meta.total ? report.meta.total.cost.total.value : 0);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { style: styles.subTitle },\n                React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl }, t('details.cost_value', { value: cost }))),\n            React.createElement(\"div\", { style: styles.mainContent },\n                React.createElement(ReportSummaryItems, { idKey: reportGroupBy, report: report, status: reportFetchStatus }, ({ items }) => items.map(_item => (React.createElement(ReportSummaryItem, { key: _item.id, formatOptions: {}, formatValue: formatValue, label: _item.label ? _item.label.toString() : '', totalValue: report.meta.total.cost.total.value, units: report.meta.total.cost.total.units, value: _item.cost.total.value })))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportGroupBy, reportPathsType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: undefined })), (groupBy && { [groupBy]: groupByValue })),\n        group_by: Object.assign({}, (reportGroupBy && { [reportGroupBy]: '*' })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst SummaryModalView = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(SummaryModalViewBase));\nexport { SummaryModalView };\n","import './summaryModal.scss';\nimport { Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { SummaryModalView } from './summaryModalView';\nclass SummaryModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        const { groupByValue, isOpen } = this.props;\n        return nextProps.groupByValue !== groupByValue || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupByValue, isOpen, reportGroupBy, reportPathsType, t } = this.props;\n        return (React.createElement(Modal, { className: \"modalOverride\", isOpen: isOpen, onClose: this.handleClose, title: t('details.summary_modal_title', {\n                groupBy: reportGroupBy,\n                name: groupByValue,\n            }), variant: \"large\" },\n            React.createElement(SummaryModalView, { reportGroupBy: reportGroupBy, reportPathsType: reportPathsType })));\n    }\n}\nconst SummaryModal = withTranslation()(SummaryModalBase);\nexport { SummaryModal };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    card: {},\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    viewAllContainer: {\n        marginLeft: '-15px',\n    },\n};\n","import { Button, ButtonType, ButtonVariant, Card, CardBody, CardFooter, CardTitle, Skeleton, Title, TitleSizes, } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { ReportSummaryItem, ReportSummaryItems } from 'components/reports/reportSummary';\nimport { SummaryModal } from 'pages/views/details/components/summary/summaryModal';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getTestProps, testIds } from 'testIds';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatValue } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { styles } from './summaryCard.styles';\nclass SummaryBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            isBulletChartModalOpen: false,\n        };\n        this.getItems = () => {\n            const { report, reportGroupBy } = this.props;\n            const computedItems = getComputedReportItems({\n                report,\n                idKey: reportGroupBy,\n            });\n            return computedItems;\n        };\n        this.getSummary = () => {\n            const { report, reportGroupBy, reportFetchStatus } = this.props;\n            return (React.createElement(ReportSummaryItems, { idKey: reportGroupBy, report: report, status: reportFetchStatus }, ({ items }) => items.map(reportItem => (React.createElement(ReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: {}, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : undefined, totalValue: report.meta.total.cost.total.value, units: report.meta.total.cost.total.units, value: reportItem.cost.total.value })))));\n        };\n        this.getViewAll = () => {\n            const { groupBy, query, reportGroupBy, reportPathsType, t } = this.props;\n            const { isBulletChartModalOpen } = this.state;\n            const computedItems = this.getItems();\n            const otherIndex = computedItems.findIndex(i => {\n                const id = i.id;\n                if (id && id !== null) {\n                    return id === 'Other' || id === 'Others';\n                }\n            });\n            if (otherIndex !== -1) {\n                // Match page header description\n                const groupByValue = query && query.filter && query.filter.account ? query.filter.account : this.props.groupByValue;\n                return (React.createElement(\"div\", { style: styles.viewAllContainer },\n                    React.createElement(Button, Object.assign({}, getTestProps(testIds.details.view_all_btn), { onClick: this.handleBulletChartModalOpen, type: ButtonType.button, variant: ButtonVariant.link }), t('details.view_all', { groupBy: reportGroupBy })),\n                    React.createElement(SummaryModal, { groupBy: groupBy, groupByValue: groupByValue, isOpen: isBulletChartModalOpen, onClose: this.handleBulletChartModalClose, query: query, reportGroupBy: reportGroupBy, reportPathsType: reportPathsType })));\n            }\n            else {\n                return null;\n            }\n        };\n        this.handleBulletChartModalClose = (isOpen) => {\n            this.setState({ isBulletChartModalOpen: isOpen });\n        };\n        this.handleBulletChartModalOpen = event => {\n            this.setState({ isBulletChartModalOpen: true });\n            event.preventDefault();\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { reportGroupBy, reportFetchStatus, t } = this.props;\n        return (React.createElement(Card, { style: styles.card },\n            React.createElement(CardTitle, null,\n                React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, t('breakdown.summary_title', { groupBy: reportGroupBy }))),\n            React.createElement(CardBody, null, reportFetchStatus === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.skeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.skeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.skeleton, width: skeletonWidth.md }))) : (this.getSummary())),\n            React.createElement(CardFooter, null, this.getViewAll())));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportGroupBy, reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            limit: 3,\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: undefined })), (groupBy && { [groupBy]: groupByValue })),\n        group_by: Object.assign({}, (reportGroupBy && { [reportGroupBy]: '*' })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        groupBy,\n        groupByValue,\n        query,\n        queryString,\n        report,\n        reportFetchStatus,\n        reportPathsType,\n        reportType,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst SummaryCard = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(SummaryBase));\nexport { SummaryCard };\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    chartSkeleton: {\n        marginBottom: global_spacer_md.value,\n    },\n    capacity: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { ChartBullet } from '@patternfly/react-charts';\nimport { Grid, GridItem, Skeleton } from '@patternfly/react-core';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport { getQuery } from 'api/queries/query';\nimport { getResizeObserver } from 'components/charts/common/chartUtils';\nimport { getGroupById, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { noop } from 'utils/noop';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { styles } from './usageChart.styles';\nclass UsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            width: 0,\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n        this.getCpuChart = () => {\n            const { groupBy, reportFetchStatus, report } = this.props;\n            const { width } = this.state;\n            const chartDatum = groupBy === 'cluster' ? this.getChartDatumWithCapacity() : this.getChartDatum();\n            if (!report || chartDatum.usage.length === 0) {\n                return null;\n            }\n            return (React.createElement(\"div\", { className: \"chartOverride\" }, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(React.Fragment, null,\n                Boolean(groupBy === 'cluster') && this.getFreeSpace(),\n                React.createElement(ChartBullet, { comparativeErrorMeasureData: chartDatum.limit.value\n                        ? [\n                            {\n                                tooltip: chartDatum.limit.tooltip,\n                                y: chartDatum.limit.value,\n                            },\n                        ]\n                        : [], comparativeErrorMeasureLegendData: chartDatum.limit.value ? [{ name: chartDatum.limit.legend }] : [], height: this.getChartHeight(), labels: ({ datum }) => `${datum.tooltip}`, legendPosition: \"bottom-left\", legendItemsPerRow: this.getItemsPerRow(), maxDomain: this.isDatumEmpty(chartDatum) ? 100 : undefined, minDomain: 0, padding: {\n                        bottom: 75,\n                        left: 10,\n                        right: 50,\n                        top: 0,\n                    }, primarySegmentedMeasureData: chartDatum.usage.length\n                        ? chartDatum.usage.map(datum => {\n                            return {\n                                tooltip: datum.tooltip,\n                                y: datum.value,\n                            };\n                        })\n                        : [], primarySegmentedMeasureLegendData: chartDatum.usage.length\n                        ? chartDatum.usage.map(datum => {\n                            return {\n                                name: datum.legend,\n                            };\n                        })\n                        : [], qualitativeRangeData: chartDatum.ranges.length\n                        ? [\n                            {\n                                tooltip: chartDatum.ranges[0].tooltip,\n                                y: chartDatum.ranges[0].value,\n                            },\n                        ]\n                        : [], qualitativeRangeLegendData: chartDatum.ranges.length ? [{ name: chartDatum.ranges[0].legend }] : [], width: width })))));\n        };\n        this.getChartHeight = () => {\n            const { groupBy } = this.props;\n            const { width } = this.state;\n            if (groupBy === 'cluster') {\n                return width > 950 ? 115 : width > 450 ? 150 : 210;\n            }\n            else {\n                return width > 700 ? 115 : width > 450 ? 150 : 180;\n            }\n        };\n        this.getItemsPerRow = () => {\n            const { width } = this.state;\n            return width > 950 ? 4 : width > 700 ? 3 : width > 450 ? 2 : 1;\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n        this.isDatumEmpty = (datum) => {\n            let hasRange = false;\n            for (const range of datum.ranges) {\n                if (range.value) {\n                    hasRange = true;\n                    break;\n                }\n            }\n            let hasUsage = false;\n            for (const usage of datum.usage) {\n                if (usage.value) {\n                    hasUsage = true;\n                    break;\n                }\n            }\n            return !(datum.limit.value || hasRange || hasUsage);\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        if (prevProps.queryString !== this.props.queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getChartDatum() {\n        const { report, reportType, t } = this.props;\n        const datum = {\n            limit: {},\n            ranges: [],\n            usage: [],\n        };\n        // Always show bullet chart legends https://github.com/project-koku/koku-ui/issues/963\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasLimit = hasTotal && report.meta.total.limit && report.meta.total.limit !== null;\n        const limit = Math.trunc(hasLimit ? report.meta.total.limit.value : 0);\n        const limitUnits = t(`units.${unitLookupKey(hasLimit ? report.meta.total.limit.units : '')}`);\n        datum.limit = {\n            legend: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            tooltip: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            value: Math.trunc(limit),\n        };\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        datum.ranges = [\n            {\n                legend: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                value: Math.trunc(request),\n            },\n        ];\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        datum.usage = [\n            {\n                legend: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                value: Math.trunc(usage),\n            },\n        ];\n        return datum;\n    }\n    getChartDatumWithCapacity() {\n        const { report, reportType, t } = this.props;\n        const datum = {\n            limit: {},\n            ranges: [],\n            usage: [],\n        };\n        // Always show bullet chart legends https://github.com/project-koku/koku-ui/issues/963\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasLimit = hasTotal && report.meta.total.limit && report.meta.total.limit !== null;\n        const limit = Math.trunc(hasLimit ? report.meta.total.limit.value : 0);\n        const limitUnits = t(`units.${unitLookupKey(hasLimit ? report.meta.total.limit.units : '')}`);\n        datum.limit = {\n            legend: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            tooltip: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            value: Math.trunc(limit),\n        };\n        const hasCapacity = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const capacity = Math.trunc(hasCapacity ? report.meta.total.capacity.value : 0);\n        const capacityUnits = t(`units.${unitLookupKey(hasCapacity ? report.meta.total.capacity.units : '')}`);\n        datum.ranges = [\n            {\n                legend: t(`details.usage.${reportType}_capacity`, {\n                    value: capacity,\n                    units: capacityUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_capacity`, {\n                    value: capacity,\n                    units: capacityUnits,\n                }),\n                value: Math.trunc(capacity),\n            },\n        ];\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        datum.usage = [\n            {\n                legend: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                value: Math.trunc(usage),\n            },\n            {\n                legend: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                value: Math.trunc(request),\n            },\n        ];\n        return datum;\n    }\n    getFreeSpace() {\n        const { report, reportType, t } = this.props;\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasCapacity = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const capacity = Math.trunc(hasCapacity ? report.meta.total.capacity.value : 0);\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        // Show negative values https://github.com/project-koku/koku-ui/issues/1214\n        const unusedRequestCapacity = capacity - request;\n        const unusedUsageCapacity = capacity - usage;\n        let unusedRequestCapacityPercentage = request > 0 ? (request / capacity) * 100 : 0;\n        if (unusedRequestCapacityPercentage > 100) {\n            unusedRequestCapacityPercentage = 100 - unusedRequestCapacityPercentage;\n        }\n        let unusedUsageCapacityPercentage = capacity > usage ? (usage / capacity) * 100 : 0;\n        if (unusedUsageCapacityPercentage > 100) {\n            unusedUsageCapacityPercentage = 100 - unusedUsageCapacityPercentage;\n        }\n        return (React.createElement(Grid, { hasGutter: true },\n            React.createElement(GridItem, { md: 12, lg: 6 },\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_usage_unused_label`)),\n                React.createElement(\"div\", { style: styles.capacity }, formatValue(unusedUsageCapacity)),\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_usage_unused_units`, {\n                    percentage: formatValue(unusedUsageCapacityPercentage, usageUnits),\n                    units: usageUnits,\n                }))),\n            React.createElement(GridItem, { md: 12, lg: 6 },\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_requests_unused_label`)),\n                React.createElement(\"div\", { style: styles.capacity }, formatValue(unusedRequestCapacity)),\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_requests_unused_units`, {\n                    percentage: formatValue(unusedRequestCapacityPercentage, requestUnits),\n                    units: requestUnits,\n                })))));\n    }\n    render() {\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef }, this.getCpuChart()));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupBy = getGroupById(query);\n    const groupByValue = getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -1,\n            resolution: 'monthly',\n        },\n        filter_by: Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (groupBy && { [groupBy]: undefined })),\n        group_by: Object.assign({}, (groupBy && { [groupBy]: groupByValue })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        groupBy,\n        report,\n        reportFetchStatus,\n        queryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst UsageChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(UsageChartBase));\nexport { UsageChart };\n","import { Button, ButtonVariant, Card, CardBody, CardTitle, Grid, GridItem, Popover, Title, TitleSizes, } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { orgUnitIdKey, tagPrefix } from 'api/queries/query';\nimport { Cluster } from 'pages/views/details/components/cluster/cluster';\nimport { CostChart } from 'pages/views/details/components/costChart/costChart';\nimport { SummaryCard } from 'pages/views/details/components/summary/summaryCard';\nimport { UsageChart } from 'pages/views/details/components/usageChart/usageChart';\nimport { styles } from 'pages/views/details/ocpDetails/detailsHeader.styles';\nimport React from 'react';\nconst PLACEHOLDER = 'placeholder';\nclass CostOverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Returns cluster chart\n        this.getClusterChart = (widget) => {\n            const { groupBy, report, t } = this.props;\n            let showWidget = false;\n            for (const groupById of widget.cluster.showWidgetOnGroupBy) {\n                if (groupById === groupBy || (groupById === tagPrefix && groupBy.indexOf(tagPrefix) !== -1)) {\n                    showWidget = true;\n                    break;\n                }\n            }\n            if (showWidget) {\n                return (React.createElement(Card, null,\n                    React.createElement(CardTitle, null,\n                        React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, t('breakdown.cluster_title'))),\n                    React.createElement(CardBody, null,\n                        React.createElement(Cluster, { groupBy: widget.cluster.reportGroupBy, report: report }))));\n            }\n            return null;\n        };\n        // Returns cost breakdown chart\n        this.getCostChart = () => {\n            const { report, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg },\n                        t('breakdown.cost_breakdown_title'),\n                        React.createElement(Popover, { \"aria-label\": t('breakdown.cost_breakdown_aria_label'), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.raw_cost_title')),\n                                React.createElement(\"p\", null, t('breakdown.raw_cost_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.usage_cost_title')),\n                                React.createElement(\"p\", null, t('breakdown.usage_cost_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.markup_title')),\n                                React.createElement(\"p\", null, t('breakdown.markup_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"a\", { href: t('docs.cost_model_terminology'), rel: \"noreferrer\", target: \"_blank\" }, t('learn_more'))) },\n                            React.createElement(Button, { variant: ButtonVariant.plain },\n                                React.createElement(OutlinedQuestionCircleIcon, { style: styles.info }))))),\n                React.createElement(CardBody, null,\n                    React.createElement(CostChart, { report: report }))));\n        };\n        // Returns CPU usage chart\n        this.getCpuUsageChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, t(`breakdown.cpu_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(UsageChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns memory usage chart\n        this.getMemoryUsageChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, t(`breakdown.memory_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(UsageChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns summary card widget\n        this.getSummaryCard = (widget) => {\n            const { groupBy, query } = this.props;\n            let showWidget = false;\n            for (const groupById of widget.reportSummary.showWidgetOnGroupBy) {\n                if (groupById === groupBy ||\n                    (query && query.group_by && query.group_by[orgUnitIdKey]) ||\n                    (groupById === tagPrefix && groupBy && groupBy.indexOf(tagPrefix) !== -1)) {\n                    showWidget = true;\n                    break;\n                }\n            }\n            if (showWidget) {\n                return (React.createElement(SummaryCard, { reportGroupBy: widget.reportSummary.reportGroupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }));\n            }\n            else if (widget.reportSummary.usePlaceholder) {\n                return PLACEHOLDER;\n            }\n            return null;\n        };\n        // Helper to fill grid columns instead of rows, based on the order defined by the reducer\n        this.getWidgetsColumns = () => {\n            const { selectWidgets, widgets } = this.props;\n            const visibleWidgets = [];\n            widgets.map(widgetId => {\n                const widget = selectWidgets[widgetId];\n                const renderedWidget = this.renderWidget(widget);\n                if (renderedWidget !== null) {\n                    visibleWidgets.push(renderedWidget);\n                }\n            });\n            const rows = Math.floor(visibleWidgets.length / 2) + (visibleWidgets.length % 2);\n            const leftColumnWidgets = [];\n            const rightColumnWidgets = [];\n            for (let i = 0; i < rows; i++) {\n                if (visibleWidgets[i] !== PLACEHOLDER) {\n                    leftColumnWidgets.push(visibleWidgets[i]);\n                }\n                if (i + rows < visibleWidgets.length) {\n                    if (visibleWidgets[i + rows] !== PLACEHOLDER) {\n                        rightColumnWidgets.push(visibleWidgets[i + rows]);\n                    }\n                }\n            }\n            return { leftColumnWidgets, rightColumnWidgets };\n        };\n    }\n    // Returns rendered widget based on type\n    renderWidget(widget) {\n        switch (widget.type) {\n            case \"cluster\" /* cluster */:\n                return this.getClusterChart(widget);\n            case \"cost\" /* cost */:\n                return this.getCostChart();\n            case \"cpuUsage\" /* cpuUsage */:\n                return this.getCpuUsageChart(widget);\n            case \"memoryUsage\" /* memoryUsage */:\n                return this.getMemoryUsageChart(widget);\n            case \"summary\" /* reportSummary */:\n                return this.getSummaryCard(widget);\n            default:\n                return null;\n        }\n    }\n    render() {\n        // Sort widgets vertically\n        const { leftColumnWidgets, rightColumnWidgets } = this.getWidgetsColumns();\n        return (React.createElement(Grid, { hasGutter: true },\n            React.createElement(GridItem, { lg: 12, xl: 6 },\n                React.createElement(Grid, { hasGutter: true }, leftColumnWidgets.map((widget, index) => {\n                    return React.createElement(GridItem, { key: `widget-${index}` }, widget);\n                }))),\n            React.createElement(GridItem, { lg: 12, xl: 6 },\n                React.createElement(Grid, { hasGutter: true }, rightColumnWidgets.map((widget, index) => {\n                    return React.createElement(GridItem, { key: `widget-${index}` }, widget);\n                })))));\n    }\n}\nexport { CostOverviewBase };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    currentCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    currentCostData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    previousCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    previousCostData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title, TitleSizes } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString } from 'components/charts/common/chartDatumUtils';\nimport { getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalCostChart.styles';\nclass HistoricalCostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentCostData, currentInfrastructureCostData, previousCostData, previousInfrastructureCostData } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: previousInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: currentInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 120,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 700 ? chartStyles.itemsPerRow : 2;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, previousInfrastructureCostData } = this.props;\n        const currentRequestDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 || previousRequestDate > 0 ? Math.max(currentRequestDate, previousRequestDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 120,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 700\n                ? containerHeight - 25\n                : containerHeight\n            : containerHeight;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: TitleSizes.xl }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: adjustedContainerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalCostChart };\n","import global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    chartHeight: 300,\n    chartContainerHeight: 300,\n};\nexport const styles = {\n    chartContainer: {\n        marginLeft: global_spacer_lg.value,\n    },\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n    costChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    trendChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    usageChart: {\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { Skeleton } from '@patternfly/react-core';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalCostChart } from 'components/charts/historicalCostChart';\nimport { getGroupById, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataCostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, reportType, t } = this.props;\n        // Current data\n        const currentData = transformReport(currentReport, 0 /* rolling */, 'date', 'cost');\n        const currentInfrastructureCostData = transformReport(currentReport, 0 /* rolling */, 'date', 'infrastructure');\n        // Previous data\n        const previousData = transformReport(previousReport, 0 /* rolling */, 'date', 'cost');\n        const previousInfrastructureCostData = transformReport(previousReport, 0 /* rolling */, 'date', 'infrastructure');\n        const costUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n            ? currentReport.meta.total.cost.total.units\n            : 'USD';\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.costChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalCostChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight - 25, currentCostData: currentData, currentInfrastructureCostData: currentInfrastructureCostData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousCostData: previousData, previousInfrastructureCostData: previousInfrastructureCostData, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: t(`breakdown.historical_chart.${reportType}_label`, {\n                    units: t(`units.${unitLookupKey(costUnits)}`),\n                }) })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupBy = getGroupById(query);\n    const groupByValue = getGroupByValue(query);\n    const baseQuery = {\n        filter_by: Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (groupBy && { [groupBy]: undefined })),\n        group_by: Object.assign({}, (groupBy && { [groupBy]: groupByValue })),\n    };\n    const currentQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        } });\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -2,\n        } });\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataCostChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataCostChartBase));\nexport { HistoricalDataCostChart };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title, TitleSizes } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalTrendChart.styles';\nclass HistoricalTrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, showUsageLegendLabel = false } = this.props;\n            const key = showUsageLegendLabel ? 'chart.usage_legend_label' : 'chart.cost_legend_label';\n            const toolTipKey = showUsageLegendLabel ? 'chart.usage_legend_tooltip' : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, toolTipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, toolTipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 120,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: legendItemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData || prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, previousDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, containerHeight = height, padding = {\n            bottom: 120,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: TitleSizes.xl }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: containerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalTrendChart };\n","import { Skeleton } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalTrendChart } from 'components/charts/historicalTrendChart';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataTrendChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, reportType, t } = this.props;\n        const isCostChart = reportType === \"cost\" /* cost */;\n        // Current data\n        const currentData = transformReport(currentReport, isCostChart ? 0 /* rolling */ : 1 /* daily */, 'date', isCostChart ? 'cost' : 'usage');\n        const previousData = transformReport(previousReport, isCostChart ? 0 /* rolling */ : 1 /* daily */, 'date', isCostChart ? 'cost' : 'usage');\n        const costUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n            ? currentReport.meta.total.cost.total.units\n            : 'USD';\n        let usageUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.usage\n            ? currentReport.meta.total.usage.units\n            : undefined;\n        let yAxisLabel;\n        if (isCostChart) {\n            yAxisLabel = t(`breakdown.historical_chart.${reportType}_label`, {\n                units: t(`units.${unitLookupKey(costUnits)}`),\n            });\n        }\n        else if (usageUnits && Number.isNaN(Number(currentReport.meta.total.usage.units))) {\n            yAxisLabel = t(`breakdown.historical_chart.units_label`, {\n                units: t(`units.${unitLookupKey(usageUnits)}`),\n            });\n        }\n        else {\n            usageUnits = t(`breakdown.historical_chart.${reportType}_label`);\n            yAxisLabel = t(`breakdown.historical_chart.units_label`, {\n                units: t(`units.${unitLookupKey(usageUnits)}`),\n            });\n        }\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.trendChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalTrendChart, { containerHeight: chartStyles.chartContainerHeight - 50, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousData: previousData, units: isCostChart ? costUnits : usageUnits, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: yAxisLabel })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const baseQuery = {\n        filter_by: Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: undefined })),\n        group_by: Object.assign({}, (groupBy && { [groupBy]: groupByValue })),\n    };\n    const currentQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        } });\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -2,\n        } });\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataTrendChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataTrendChartBase));\nexport { HistoricalDataTrendChart };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    currentCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentLimitData: {\n        fill: 'none',\n    },\n    currentRequestData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    currentUsageData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    previousCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousLimitData: {\n        fill: 'none',\n    },\n    previousRequestData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    previousUsageData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title, TitleSizes } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getUsageRangeString } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalUsageChart.styles';\nclass HistoricalUsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentLimitData, currentRequestData, currentUsageData, previousLimitData, previousRequestData, previousUsageData, } = this.props;\n            const limitKey = 'chart.limit_legend_label';\n            const limitTooltipKey = 'chart.limit_legend_tooltip';\n            const requestKey = 'chart.requests_legend_label';\n            const requestTooltipKey = 'chart.requests_legend_tooltip';\n            const usageKey = 'chart.usage_legend_label';\n            const usageTooltipKey = 'chart.usage_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousUsage',\n                    data: previousUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousUsageData, usageTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousUsageData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentUsage',\n                    data: currentUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentUsageData, usageTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentUsageData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousRequest',\n                    data: previousRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(previousRequestData, requestTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousRequestData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentRequest',\n                    data: currentRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(currentRequestData, requestTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentRequestData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'previousLimit',\n                    data: previousLimitData,\n                    legendItem: {\n                        name: getUsageRangeString(previousLimitData, limitKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[2],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousLimitData, limitTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousLimitData), { stroke: chartStyles.previousColorScale[2] }),\n                    },\n                },\n                {\n                    childName: 'currentLimit',\n                    data: currentLimitData,\n                    legendItem: {\n                        name: getUsageRangeString(currentLimitData, limitKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[2],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentLimitData, limitTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentLimitData), { stroke: chartStyles.currentColorScale[2] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 130,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 900 ? chartStyles.itemsPerRow : 2;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentLimitData !== this.props.currentLimitData ||\n            prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousLimitData !== this.props.previousLimitData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 130,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 900\n                ? containerHeight - 50\n                : containerHeight\n            : containerHeight;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: TitleSizes.xl }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: adjustedContainerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalUsageChart };\n","import { Skeleton } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalUsageChart } from 'components/charts/historicalUsageChart';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataUsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, t } = this.props;\n        // Current data\n        const currentLimitData = transformReport(currentReport, 1 /* daily */, 'date', 'limit');\n        const currentRequestData = transformReport(currentReport, 1 /* daily */, 'date', 'request');\n        const currentUsageData = transformReport(currentReport, 1 /* daily */, 'date', 'usage');\n        // Previous data\n        const previousLimitData = transformReport(previousReport, 1 /* daily */, 'date', 'limit');\n        const previousRequestData = transformReport(previousReport, 1 /* daily */, 'date', 'request');\n        const previousUsageData = transformReport(previousReport, 1 /* daily */, 'date', 'usage');\n        const usageUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.usage\n            ? currentReport.meta.total.usage.units\n            : '';\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.usageChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalUsageChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight, currentLimitData: currentLimitData, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousLimitData: previousLimitData, previousRequestData: previousRequestData, previousUsageData: previousUsageData, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: t(`breakdown.historical_chart.units_label`, {\n                    units: t(`units.${unitLookupKey(usageUnits)}`),\n                }) })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = getGroupById(query);\n    const groupByValue = getGroupByValue(query);\n    // instance-types and storage APIs must filter org units\n    const useFilter = reportType === \"instance_type\" /* instanceType */ || reportType === \"storage\" /* storage */;\n    const baseQuery = {\n        filter_by: Object.assign(Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: undefined })), (groupByOrgValue && useFilter && { [orgUnitIdKey]: groupByOrgValue })),\n        group_by: Object.assign(Object.assign({}, (groupByOrgValue && !useFilter && { [orgUnitIdKey]: groupByOrgValue })), (groupBy && !groupByOrgValue && { [groupBy]: groupByValue })),\n    };\n    const currentQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        } });\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -2,\n        } });\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataUsageChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataUsageChartBase));\nexport { HistoricalDataUsageChart };\n","import { Card, CardBody, CardTitle, Grid, GridItem, Title, TitleSizes } from '@patternfly/react-core';\nimport React from 'react';\nimport { HistoricalDataCostChart } from './historicalDataCostChart';\nimport { HistoricalDataTrendChart } from './historicalDataTrendChart';\nimport { HistoricalDataUsageChart } from './historicalDataUsageChart';\nclass HistoricalDataBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Returns cost chart\n        this.getCostChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataCostChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns trend chart\n        this.getTrendChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataTrendChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns usage chart\n        this.getUsageChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataUsageChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n    }\n    // Returns rendered widget based on type\n    renderWidget(widget) {\n        switch (widget.type) {\n            case \"cost\" /* cost */:\n                return this.getCostChart(widget);\n            case \"trend\" /* trend */:\n                return this.getTrendChart(widget);\n            case \"usage\" /* usage */:\n                return this.getUsageChart(widget);\n            default:\n                return null;\n        }\n    }\n    render() {\n        const { selectWidgets, widgets } = this.props;\n        return (React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n            const widget = selectWidgets[widgetId];\n            return React.createElement(GridItem, { key: `widget-${widgetId}` }, this.renderWidget(widget));\n        })));\n    }\n}\nexport { HistoricalDataBase };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: global_spacer_lg.var,\n        backgroundColor: global_BackgroundColor_light_100.var,\n    },\n    info: {\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { orgUnitIdKey, tagPrefix } from 'api/queries/query';\nexport const getGroupById = (query) => {\n    const groupBys = query && query.group_by ? Object.keys(query.group_by) : [];\n    return groupBys.find(key => key !== orgUnitIdKey);\n};\nexport const getGroupByValue = (query) => {\n    const groupById = getGroupById(query);\n    return groupById ? query.group_by[groupById] : undefined;\n};\nexport const getGroupByOrgValue = (query) => {\n    let groupByOrg;\n    if (query && query.group_by) {\n        for (const groupBy of Object.keys(query.group_by)) {\n            if (groupBy === orgUnitIdKey) {\n                groupByOrg = query.group_by[orgUnitIdKey];\n                break;\n            }\n        }\n    }\n    return groupByOrg;\n};\nexport const getGroupByTagKey = (query) => {\n    let groupByTagKey;\n    if (query && query.group_by) {\n        for (const groupBy of Object.keys(query.group_by)) {\n            const tagIndex = groupBy.indexOf(tagPrefix);\n            if (tagIndex !== -1) {\n                groupByTagKey = groupBy.substring(tagIndex + tagPrefix.length);\n                break;\n            }\n        }\n    }\n    return groupByTagKey;\n};\n","import { getQueryRoute } from 'api/queries/query';\nimport { breakdownDescKey, breakdownTitleKey, orgUnitIdKey } from 'api/queries/query';\nexport const getBreakdownPath = ({ basePath, label, description, groupBy, query, }) => {\n    const newQuery = Object.assign(Object.assign(Object.assign({}, query), (description && description !== label && { [breakdownDescKey]: description })), { group_by: {\n            [groupBy]: label,\n        } });\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\nexport const getOrgBreakdownPath = ({ basePath, description, groupBy, groupByOrg, id, orgUnitId, query, title, type, }) => {\n    const newQuery = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), (description && description !== title && { [breakdownDescKey]: description })), (title && { [breakdownTitleKey]: title })), (groupByOrg && orgUnitId && { [orgUnitIdKey]: orgUnitId })), { group_by: {\n            [groupBy]: id,\n        } });\n    if (!newQuery.filter) {\n        newQuery.filter = {};\n    }\n    if (type === 'account') {\n        newQuery.filter.account = id;\n        newQuery.group_by = {\n            [orgUnitIdKey]: groupByOrg,\n        };\n    }\n    else if (type === 'organizational_unit') {\n        newQuery.group_by = {\n            [orgUnitIdKey]: id,\n        };\n    }\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\n","export const addQueryFilter = (query, filterType, filterValue) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    // Filter by * won't generate a new request if group_by * already exists\n    if (filterValue === '*' && newQuery.group_by[filterType] === '*') {\n        return;\n    }\n    if (newQuery.filter_by[filterType]) {\n        let found = false;\n        const filters = newQuery.filter_by[filterType];\n        if (!Array.isArray(filters)) {\n            found = filterValue === newQuery.filter_by[filterType];\n        }\n        else {\n            for (const filter of filters) {\n                if (filter === filterValue) {\n                    found = true;\n                    break;\n                }\n            }\n        }\n        if (!found) {\n            newQuery.filter_by[filterType] = [newQuery.filter_by[filterType], filterValue];\n        }\n    }\n    else {\n        newQuery.filter_by[filterType] = [filterValue];\n    }\n    return newQuery;\n};\nexport const removeQueryFilter = (query, filterType, filterValue) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    if (filterType === null) {\n        newQuery.filter_by = undefined; // Clear all\n    }\n    else if (filterValue === null) {\n        newQuery.filter_by[filterType] = undefined; // Clear all values\n    }\n    else if (Array.isArray(newQuery.filter_by[filterType])) {\n        const index = newQuery.filter_by[filterType].indexOf(filterValue);\n        if (index > -1) {\n            newQuery.filter_by[filterType] = [\n                ...query.filter_by[filterType].slice(0, index),\n                ...query.filter_by[filterType].slice(index + 1),\n            ];\n        }\n    }\n    else {\n        newQuery.filter_by[filterType] = undefined;\n    }\n    return newQuery;\n};\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        cluster_lnk: 'cluster-lnk',\n        historical_data_btn: 'historical-data-btn',\n        show_more_btn: 'show-more-btn',\n        tag_lnk: 'tag-lnk',\n        view_all_btn: 'view-all-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","export function isEqual(obj1, obj2) {\n    let a = JSON.stringify(obj1);\n    let b = JSON.stringify(obj2);\n    if (!a) {\n        a = '';\n    }\n    if (!b) {\n        b = '';\n    }\n    return a.split('').sort().join('') === b.split('').sort().join('');\n}\n"],"sourceRoot":""}