{"version":3,"sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tabs/Tab.js","webpack:///./src/utils/formatValue.ts","webpack:///./src/testIds.ts","webpack:///./src/components/charts/commonChart/chartUtils.ts","webpack:///./src/utils/sort.ts","webpack:///./src/utils/getComputedAwsReportItems.ts","webpack:///./src/utils/getComputedOcpReportItems.ts","webpack:///./src/components/charts/trendChart/trendChart.styles.ts","webpack:///./src/components/charts/trendChart/trendChart.tsx","webpack:///./src/components/state/loadingState/loadingState.styles.ts","webpack:///./src/components/state/loadingState/loadingState.tsx","webpack:///./src/components/state/noProvidersState/noProvidersState.styles.ts","webpack:///./src/components/state/noProvidersState/noProvidersState.tsx","webpack:///./src/components/state/errorState/errorState.styles.ts","webpack:///./src/components/state/errorState/errorState.tsx","webpack:///./src/utils/getComputedOcpOnAwsReportItems.ts","webpack:///./src/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/components/charts/usageChart/usageChart.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummary.styles.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummary.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryAlt.styles.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryAlt.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryDetails.styles.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryDetails.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryItem.styles.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryItem.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryItems.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryTrend.styles.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryTrend.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryUsage.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummary.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummary.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryAlt.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryAlt.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryDetails.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryDetails.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItem.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItem.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItems.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryTrend.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryTrend.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummary.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummary.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryAlt.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryAlt.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryDetails.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryDetails.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItem.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItem.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItems.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryTrend.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryTrend.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryUsage.tsx","webpack:///./node_modules/date-fns/get_month/index.js","webpack:///./node_modules/react-router-dom/es/Link.js","webpack:///./src/components/link/link.tsx","webpack:///./src/pages/awsDashboard/awsDashboardWidget.styles.ts","webpack:///./src/pages/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/pages/awsDashboard/awsDashboard.tsx","webpack:///./src/pages/ocpDashboard/ocpDashboardWidget.styles.ts","webpack:///./src/pages/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/pages/ocpDashboard/ocpDashboard.tsx","webpack:///./src/pages/ocpOnAwsDashboard/ocpOnAwsDashboardWidget.styles.ts","webpack:///./src/pages/ocpOnAwsDashboard/ocpOnAwsDashboardWidget.tsx","webpack:///./src/pages/ocpOnAwsDashboard/ocpOnAwsDashboard.tsx","webpack:///./src/pages/overview/overview.tsx","webpack:///./src/pages/overview/index.ts","webpack:///./node_modules/@patternfly/react-core/dist/esm/@patternfly/patternfly/components/Tabs/tabs.css.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tabs/TabContent.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tabs/Tabs.js"],"names":["prop_types__WEBPACK_IMPORTED_MODULE_1__","__webpack_require__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","n","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","propTypes","children","a","node","className","string","title","isRequired","eventKey","number","Tab","_ref","react__WEBPACK_IMPORTED_MODULE_0___default","createElement","Fragment","defaultProps","__webpack_exports__","unitLookupKey","unit","split","toLowerCase","formatValue","value","options","lookup","fValue","formatCurrency","formatStorage","unknownTypeFormatter","_unit","fractionDigits","toFixed","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","getTestProps","id","data-testid","testIds","details","historical_data_btn","tag_lnk","show_more_btn","view_all_btn","export","cancel_btn","submit_btn","login","alert","form","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","check_box_3","check_box_4","check_box_5","check_box_all","s3_input","clusterid_input","arn_input","providers","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","sidebar","nav","link","backdrop","transformAwsReport","report","type","reportItem","items","idKey","sortKey","sortDirection","computedItems","utils_getComputedAwsReportItems__WEBPACK_IMPORTED_MODULE_6__","map","createDatum","reduce","acc","d","prevValue","y","transformOcpReport","utils_getComputedOcpReportItems__WEBPACK_IMPORTED_MODULE_7__","transformOcpOnAwsReport","computedItem","x","date_fns_get_date__WEBPACK_IMPORTED_MODULE_2___default","label","Number","parseFloat","isInt","name","units","getDateRange","datums","firstOfMonth","lastOfMonth","start","end","today","Date","date_fns_start_of_month__WEBPACK_IMPORTED_MODULE_3___default","getDatumDateRange","setDate","lastDate","date_fns_end_of_month__WEBPACK_IMPORTED_MODULE_0___default","getDate","getDateRangeString","current","monthName","date_fns_format__WEBPACK_IMPORTED_MODULE_1___default","startDate","endDate","i18next__WEBPACK_IMPORTED_MODULE_4__","t","date","getDateString","month","getMaxValue","max","forEach","datum","getTooltipContent","utils_formatValue__WEBPACK_IMPORTED_MODULE_5__","getTooltipLabel","formatOptions","toString","day","getValueForItem","item","sort","array","direction","b","aVal","bVal","getComputedAwsReportItems","labelKey","_sort__WEBPACK_IMPORTED_MODULE_0__","getUnsortedComputedAwsReportItems","itemMap","Map","visitDataPoint","dataPoint","values","cluster","cluster_alias","total","usage","cost","account_alias","get","set","assign","deltaPercent","delta_percent","deltaValue","delta_value","Array","data","from","getIdKeyForGroupBy","groupBy","account","instance_type","region","service","getComputedOcpReportItems","getUnsortedComputedOcpReportItems","capacity","limit","request","project","chartStyles","colorScale","esm","legend","labels","fontFamily","fontSize","minWidth","previousMonth","fill","stroke","currentMonth","yAxis","axisLabel","padding","grid","ticks","tickLabels","xAxis","styles","StyleSheet","create","chartContainer",":not(foo) svg","overflow","display","marginTop","trendChart_TrendChart","react_default","Component","[object Object]","super","arguments","this","containerRef","createRef","state","width","initDatum","currentData","previousData","props","legendData","push","chartUtils","symbol","charts","show","onClick","handleCostLegendClick","setState","newDatum","index","handleResize","clientWidth","getChart","ChartArea","getLegend","ChartLegend","containerComponent","ChartContainer","responsive","events","eventHandlers","mutation","gutter","height","orientation","theme","ChartTheme","light","blue","formatDatumValue","formatDatumOptions","setTimeout","window","addEventListener","prevProps","removeEventListener","domain","maxCurrent","maxPrevious","maxValue","Math","ceil","previousDate","get_date_default","currentDate","result","trim","container","ChartVoronoiContainer","voronoiDimension","legendWidth","getDomain","getEndDate","midDate","floor","ref","Chart","Boolean","chart","ChartAxis","tickValues","dependentAxis","isLegendVisible","justifyContent","LoadingState","es","icon","binoculars_icon","subTitle","EmptyState","EmptyStateIcon","Title","size","EmptyStateBody","mapStateToProps","common","NoProvidersState","react_redux_es","openProvidersModal","openModal","getAddSourceButton","Button","variant","primary","dollar_sign_icon","ErrorState","error","error_circle_o_icon","response","status","ban_icon","getComputedOcpOnAwsReportItems","getUnsortedComputedOcpOnAwsReportItems","currentRequestData","strokeDasharray","currentUsageData","previousRequestData","previousUsageData","currentColorScale","previousColorScale","marginBottom","usageChart_UsageChart","previousLegendData","previous","handlePreviousLegendClick","currentLegendData","handleCurrentLegendClick","maxCurrentRequest","maxCurrentUsage","maxPreviousRequest","maxPreviousUsage","currentRequestDate","currentUsageDate","previousRequestDate","previousUsageDate","isPreviousLegendVisible","isCurrentLegendVisible","reportSummary","subtitle","color","var","OcpOnAwsReportSummary","detailsLink","Card","CardHeader","CardBody","CardFooter","ocpOnAwsReportSummaryAlt_styles_styles","flexGrow","minHeight","tops","OcpOnAwsReportSummaryAlt","tabs","Grid","GridItem","lg","xl","ocpOnAwsReportSummaryDetails_styles_styles","requestedValue","marginLeft","text","alignItems","paddingBottom","lineHeight","titleContainer","usageText","marginRight","OcpOnAwsReportSummaryDetails","reportType","requestLabel","requestValue","awsReportType","meta","ocpOnAwsReportSummaryItem_styles_styles","reportSummaryItem",":not(:last-child)","test","OcpOnAwsReportSummaryItem","totalValue","percentVal","percentLabel","Progress","sm","v","ocpOnAwsReportSummaryItems_OcpOnAwsReportSummaryItems","nextProps","otherIndex","findIndex","includes","slice","getItems","ocpOnAwsReportSummaryTrend_styles_styles","OcpOnAwsReportSummaryTrend","trendChart","OcpOnAwsReportSummaryUsage","usageChart","AwsReportSummary","awsReportSummaryAlt_styles_styles","AwsReportSummaryAlt","awsReportSummaryDetails_styles_styles","reportSummaryDetails","AwsReportSummaryDetails","awsReportSummaryItem_styles_styles","AwsReportSummaryItem","awsReportSummaryItems_AwsReportSummaryItems","awsReportSummaryTrend_styles_styles","AwsReportSummaryTrend","OcpReportSummary","ocpReportSummaryAlt_styles_styles","OcpReportSummaryAlt","ocpReportSummaryDetails_styles_styles","OcpReportSummaryDetails","ocpReportSummaryItem_styles_styles","OcpReportSummaryItem","ocpReportSummaryItems_OcpReportSummaryItems","ocpReportSummaryTrend_styles_styles","OcpReportSummaryTrend","OcpReportSummaryUsage","parse","module","exports","dirtyDate","getMonth","_extends","hasOwnProperty","_possibleConstructorReturn","self","ReferenceError","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","Link_Link","_React$Component","Link","_temp","_this","instance","Constructor","TypeError","_classCallCheck","_len","args","_key","apply","concat","handleClick","defaultPrevented","button","preventDefault","history","context","router","_this$props","replace","to","subClass","superClass","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","render","_props","innerRef","obj","browser_default","undefined","location","history_es","href","createHref","prop_types_default","func","bool","oneOfType","object","contextTypes","shape","es_Link","CastedButton","link_Link","component","getIdKeyForTab","tab","widgetId","widget","awsDashboard","selectWidget","queries","selectWidgetQueries","currentQuery","previousQuery","tabsQuery","currentReport","awsReports","selectReport","currentReportFetchStatus","selectReportFetchStatus","previousReport","tabsReport","mapDispatchToProps","fetchReports","fetchWidgetReports","updateTab","changeWidgetTab","AwsDashboardWidget","activeTabKey","buildDetailsLink","awsQuery","group_by","order_by","handleTabClick","tabIndex","availableTabs","trend","awsReportSummary","titleKey","getDetails","getDetailsLabel","labelKeyContext","getDetailsLink","currentTab","isDetailsLink","getDetailsLinkTitle","getHorizontalLayout","getSubTitle","getTabs","getTitle","get_month_default","format_default","start_of_month_default","count","getTab","getTabTitle","getTabItem","topItems","Tabs","isFilled","activeKey","onSelect","getVerticalLayout","isHorizontal","awsDashboard_mapStateToProps","selectWidgets","widgets","selectCurrentWidgets","awsDashboard_awsDashboard","ocpDashboardWidget_styles_styles","ocpDashboardWidget_getIdKeyForTab","ocpDashboardWidget_mapStateToProps","ocpDashboard","ocpReports","ocpDashboardWidget_mapDispatchToProps","OcpDashboardWidget","ocpQuery","ocpReportSummary","getRequestLabel","requestLabelKey","ocpDashboard_mapStateToProps","ocpDashboard_ocpDashboard","ocpOnAwsDashboardWidget_styles_styles","ocpOnAwsDashboardWidget_getIdKeyForTab","ocpOnAwsDashboardWidget_mapStateToProps","ocpOnAwsDashboard","ocpOnAwsReports","ocpOnAwsDashboardWidget_mapDispatchToProps","OcpOnAwsDashboardWidget","ocpOnAwsQuery","ocpOnAwsReportSummary","ocpOnAwsDashboard_mapStateToProps","ocpOnAwsDashboard_ocpOnAwsDashboard","overview_getIdKeyForTab","overview_mapStateToProps","awsProvidersQueryString","providersQuery","awsProviders","selectProviders","awsProvidersError","selectProvidersError","awsProvidersFetchStatus","selectProvidersFetchStatus","ocpProvidersQueryString","ocpProviders","ocpProvidersError","ocpProvidersFetchStatus","Overview","secondary","isLoading","noAwsProviders","noOcpProviders","noProviders","page-type","errorState","noProvidersState","loadingState","react_hot_loader__WEBPACK_IMPORTED_MODULE_0__","_overview__WEBPACK_IMPORTED_MODULE_1__","tabs_css","child","TabContent_TabContent","hidden","aria-labelledby","role","Tabs_TabContent","_typeof","Symbol","iterator","Tabs_extends","Tabs_objectWithoutProperties","Tabs_objectWithoutPropertiesLoose","_defineProperties","descriptor","defineProperty","_getPrototypeOf","o","getPrototypeOf","_assertThisInitialized","_setPrototypeOf","p","_defineProperty","Tabs_propTypes","isSecondary","leftScrollAriaLabel","rightScrollAriaLabel","Tabs_defaultProps","Tabs_Tabs","_getPrototypeOf2","showLeftScrollButton","showRightScrollButton","highlightLeftScrollButton","highlightRightScrollButton","util","tabList","selectedTab","firstChild","lastChild","search","sideOutOfView","constants","LEFT","BOTH","RIGHT","firstElementInView","lastElementOutOfView","childrenArr","scrollLeft","scrollWidth","lastElementInView","firstElementOutOfView","protoProps","staticProps","handleScrollButtons","document","_this2","_this$state","modifiers","tabsSecondary","startCurrent","endCurrent","tabsScrollButton","aria-label","angle_left_icon","tabsList","onScroll","tabsItem","tabsButton","aria-controls","scrollRight","angle_right_icon"],"mappings":"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","file":"f03a9c0c4f55f29ad5ba.bundle.js","sourcesContent":["function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar propTypes = {\n  /** content rendered inside the Tab content area. */\n  children: PropTypes.node,\n\n  /** additional classes added to the Modal */\n  className: PropTypes.string,\n\n  /** Tab title */\n  title: PropTypes.string.isRequired,\n\n  /** uniquely identifies the tab */\n  eventKey: PropTypes.number.isRequired\n};\nvar defaultProps = {\n  children: null,\n  className: ''\n};\n\nvar Tab = function Tab(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      title = _ref.title,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutProperties(_ref, [\"className\", \"children\", \"title\", \"eventKey\"]);\n\n  return React.createElement(React.Fragment, null, children);\n};\n\nTab.propTypes = propTypes;\nTab.defaultProps = defaultProps;\nexport default Tab;","export const unitLookupKey = unit => unit ? unit.split('-')[0].toLowerCase() : '';\nexport const formatValue = (value, unit, options = {}) => {\n    const lookup = unitLookupKey(unit);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'usd':\n            return formatCurrency(fValue, lookup, options);\n        case 'gb':\n            return formatStorage(fValue, lookup, options);\n        default:\n            return unknownTypeFormatter(fValue, lookup, options);\n    }\n};\nconst unknownTypeFormatter = (value, _unit, { fractionDigits } = {}) => {\n    return value.toFixed(fractionDigits);\n};\nexport const formatCurrency = (value, _unit, { fractionDigits = 2 } = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    return fValue.toLocaleString('en', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatStorage = (value, _unit, { fractionDigits = 2 } = {}) => {\n    return value.toFixed(fractionDigits);\n};\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        historical_data_btn: 'historical-data-btn',\n        tag_lnk: 'tag-lnk',\n        show_more_btn: 'show-more-btn',\n        view_all_btn: 'view-all-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        check_box_3: 'check-box-3',\n        check_box_4: 'check-box-4',\n        check_box_5: 'check-box-5',\n        check_box_all: 'check-box-all',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { unitLookupKey, } from 'utils/formatValue';\nimport { getComputedAwsReportItems, } from 'utils/getComputedAwsReportItems';\nimport { getComputedOcpReportItems, } from 'utils/getComputedOcpReportItems';\nexport function transformAwsReport(report, type = 1 /* daily */, key = 'date', reportItem = 'total') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        report,\n        idKey: key,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedAwsReportItems(items);\n    if (type === 1 /* daily */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    if (type === 2 /* monthly */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    return computedItems.reduce((acc, d) => {\n        const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n        return [...acc, createDatum(prevValue + d[reportItem], d, key)];\n    }, []);\n}\nexport function transformOcpReport(report, type = 1 /* daily */, key = 'date', reportItem = 'cost') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        report,\n        idKey: key,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedOcpReportItems(items);\n    if (type === 1 /* daily */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    if (type === 2 /* monthly */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    return computedItems.reduce((acc, d) => {\n        const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n        return [...acc, createDatum(prevValue + d[reportItem], d, key)];\n    }, []);\n}\nexport function transformOcpOnAwsReport(report, type = 1 /* daily */, key = 'date', reportItem = 'cost') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        report,\n        idKey: key,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedOcpReportItems(items);\n    if (type === 1 /* daily */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    if (type === 2 /* monthly */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    return computedItems.reduce((acc, d) => {\n        const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n        return [...acc, createDatum(prevValue + d[reportItem], d, key)];\n    }, []);\n}\nexport function createDatum(value, computedItem, idKey = 'date') {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value)\n        ? parseFloat(value.toFixed(2))\n        : isInt(value)\n            ? value\n            : 0;\n    return {\n        x: xVal,\n        y: yVal,\n        key: computedItem.id,\n        name: computedItem.id,\n        units: computedItem.units,\n    };\n}\nexport function getDatumDateRange(datums) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    const start = new Date(datums[0].key + 'T00:00:00');\n    const end = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false) {\n    const [start, end] = getDatumDateRange(datums);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, current = false) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth);\n    const monthName = format(start, 'MMM');\n    const startDate = getDate(start);\n    const endDate = getDate(end);\n    if (current) {\n        return i18next.t(`date.range_current`, {\n            date: getDateString(startDate),\n            month: startDate !== endDate ? monthName : '',\n        });\n    }\n    return i18next.t(`date.range_full`, {\n        endDate: getDateString(endDate),\n        startDate: getDateString(startDate),\n        month: startDate !== endDate ? monthName : '',\n    });\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'hrs':\n            case 'gb':\n                return i18next.t(`units.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date') {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'MMM D YYYY');\n        return `${date}: ${formatValue(datum.y, datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nfunction isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nfunction isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\nfunction getDateString(date) {\n    const day = date % 10;\n    if (day === 1) {\n        return i18next.t(`date.first`, { date });\n    }\n    else if (day === 2) {\n        return i18next.t(`date.second`, { date });\n    }\n    else if (day === 3) {\n        return i18next.t(`date.third`, { date });\n    }\n    return i18next.t(`date.tenth`, { date });\n}\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */\n            ? getValueForItem(a, options)\n            : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */\n            ? getValueForItem(b, options)\n            : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n","import { sort } from './sort';\nexport function getComputedAwsReportItems({ report, idKey, labelKey = idKey, sortKey = 'total', sortDirection = 0 /* asc */, }) {\n    return sort(getUnsortedComputedAwsReportItems({\n        report,\n        idKey,\n        labelKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedAwsReportItems({ report, idKey, labelKey = idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint.values) {\n            dataPoint.values.forEach(value => {\n                const cluster = value.cluster_alias\n                    ? value.cluster_alias\n                    : value.cluster;\n                const total = value.usage ? value.usage.value : value.cost.value;\n                const id = value[idKey];\n                let label;\n                if (value[labelKey] instanceof Object) {\n                    label = value[labelKey].value;\n                }\n                else {\n                    label = value[labelKey];\n                }\n                if (labelKey === 'account' && value.account_alias) {\n                    label = value.account_alias;\n                }\n                if (!itemMap.get(id)) {\n                    itemMap.set(id, {\n                        cluster,\n                        deltaPercent: value.delta_percent,\n                        deltaValue: value.delta_value,\n                        id,\n                        total,\n                        label,\n                        units: value.usage ? value.usage.units : value.cost.units,\n                    });\n                    return;\n                }\n                itemMap.set(id, Object.assign({}, itemMap.get(id), { total: itemMap.get(id).total + total }));\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\nexport function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.account) {\n        return 'account';\n    }\n    if (groupBy.instance_type) {\n        return 'instance_type';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.service) {\n        return 'service';\n    }\n    return 'date';\n}\n","import { sort } from './sort';\nexport function getComputedOcpReportItems({ report, idKey, labelKey = idKey, sortKey = 'cost', sortDirection = 0 /* asc */, }) {\n    return sort(getUnsortedComputedOcpReportItems({\n        report,\n        idKey,\n        labelKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedOcpReportItems({ report, idKey, labelKey = idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint.values) {\n            dataPoint.values.forEach(value => {\n                const capacity = value.capacity ? value.capacity.value : 0;\n                const cluster = value.cluster_alias\n                    ? value.cluster_alias\n                    : value.cluster;\n                const cost = value.cost ? value.cost.value : 0;\n                const id = value[idKey];\n                let label;\n                if (labelKey === 'cluster' && value.cluster_alias) {\n                    label = value.cluster_alias;\n                }\n                else if (value[labelKey] instanceof Object) {\n                    label = value[labelKey].value;\n                }\n                else {\n                    label = value[labelKey];\n                }\n                const limit = value.limit ? value.limit.value : 0;\n                const request = value.request ? value.request.value : 0;\n                const usage = value.usage ? value.usage.value : 0;\n                const units = value.usage ? value.usage.units : value.cost.units;\n                if (!itemMap.get(id)) {\n                    itemMap.set(id, {\n                        capacity,\n                        cluster,\n                        cost,\n                        deltaPercent: value.delta_percent,\n                        deltaValue: value.delta_value,\n                        id,\n                        label,\n                        limit,\n                        request,\n                        units,\n                        usage,\n                    });\n                    return;\n                }\n                itemMap.set(id, Object.assign({}, itemMap.get(id), { capacity: itemMap.get(id).capacity + capacity, cost: itemMap.get(id).cost + cost, limit: itemMap.get(id).limit + limit, request: itemMap.get(id).request + request, usage: itemMap.get(id).usage + usage }));\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\nexport function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_disabled_color_200, global_FontFamily_sans_serif, global_FontSize_md, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    colorScale: [\n        global_disabled_color_200.value,\n        '#A2DA9C',\n        '#88D080',\n        '#6EC664',\n        '#519149',\n        '#3C6C37',\n    ],\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 175,\n    },\n    previousMonth: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    currentMonth: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n    legend: {\n        display: 'inline-block',\n        fontSize: global_FontSize_md.value,\n        marginTop: global_spacer_lg.value,\n        minWidth: '175px',\n    },\n});\n","import { Chart, ChartArea, ChartAxis, ChartContainer, ChartLegend, ChartTheme, ChartVoronoiContainer, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { getDateRange, getDateRangeString, getMaxValue, getTooltipContent, getTooltipLabel, } from 'components/charts/commonChart/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport React from 'react';\nimport { chartStyles, styles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, title } = this.props;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const legendData = [];\n            if (previousData) {\n                legendData.push({\n                    name: getDateRangeString(previousData, true, true),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            if (currentData) {\n                legendData.push({\n                    name: getDateRangeString(currentData, true, false, true),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            const cost = {\n                charts: [\n                    {\n                        data: previousData,\n                        show: true,\n                        style: chartStyles.previousMonth,\n                    },\n                    {\n                        data: currentData,\n                        show: true,\n                        style: chartStyles.currentMonth,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.colorScale,\n                    data: legendData,\n                    onClick: this.handleCostLegendClick,\n                    title,\n                },\n            };\n            this.setState({\n                datum: {\n                    cost,\n                },\n            });\n        };\n        this.handleCostLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.cost.charts.length) {\n                newDatum.cost.charts[props.index].show = !newDatum.cost.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (datum, index) => {\n            if (datum.data && datum.data.length && datum.show) {\n                return (React.createElement(ChartArea, { data: datum.data, key: `trend-chart-${index}`, style: datum.style }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getLegend = (datum, width) => {\n            if (datum && datum.data && datum.data.length) {\n                return (React.createElement(ChartLegend, { colorScale: datum.colorScale, containerComponent: React.createElement(ChartContainer, { responsive: false }), data: datum.data, events: [\n                        {\n                            target: 'data',\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [\n                                        {\n                                            target: 'data',\n                                            mutation: props => {\n                                                datum.onClick(props);\n                                                return null;\n                                            },\n                                        },\n                                    ];\n                                },\n                            },\n                        },\n                    ], gutter: 5, height: 25, orientation: width > 150 ? 'horizontal' : 'vertical', style: chartStyles.legend, theme: ChartTheme.light.blue, width: width }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTooltipLabel = (datum) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            return getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentData, previousData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrent = currentData ? getMaxValue(currentData) : 0;\n        const maxPrevious = previousData ? getMaxValue(previousData) : 0;\n        const maxValue = Math.max(maxCurrent, maxPrevious);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData\n            ? getDate(getDateRange(previousData, true, true)[1])\n            : 0;\n        const currentDate = currentData\n            ? getDate(getDateRange(currentData, true, true)[1])\n            : 0;\n        return currentDate > 0 || previousDate > 0\n            ? Math.max(currentDate, previousDate)\n            : 31;\n    }\n    isLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.cost.legend && datum.cost.legend.data) {\n            datum.cost.legend.data.forEach(item => {\n                if (item.name && item.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    render() {\n        const { height } = this.props;\n        const { datum, width } = this.state;\n        const container = (React.createElement(ChartVoronoiContainer, { labels: this.getTooltipLabel, voronoiDimension: \"x\" }));\n        const legendWidth = chartStyles.legend.minWidth > width / 2\n            ? chartStyles.legend.minWidth\n            : width / 2;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef },\n            React.createElement(Chart, { containerComponent: container, domain: domain, height: height, width: width },\n                Boolean(datum && datum.cost) &&\n                    datum.cost.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis })),\n            Boolean(this.isLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) },\n                Boolean(datum.cost.legend.title) && (React.createElement(\"div\", null, datum.cost.legend.title)),\n                this.getLegend(datum.cost.legend, legendWidth)))));\n    }\n}\nexport { TrendChart };\n","import { StyleSheet } from '@patternfly/react-styles';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        marginTop: '150px',\n    },\n});\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, Title, } from '@patternfly/react-core';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './loadingState.styles';\nconst LoadingStateBase = ({ icon = BinocularsIcon, t, }) => {\n    const title = t('loading_state.sources_title');\n    const subTitle = t('loading_state.sources_desc');\n    return (React.createElement(\"div\", { className: css(styles.container) },\n        React.createElement(EmptyState, null,\n            React.createElement(EmptyStateIcon, { icon: icon }),\n            React.createElement(Title, { size: \"lg\" }, title),\n            React.createElement(EmptyStateBody, null, subTitle))));\n};\nconst LoadingState = translate()(LoadingStateBase);\nexport { LoadingState };\n","import { StyleSheet } from '@patternfly/react-styles';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        marginTop: '150px',\n    },\n});\n","import { Button, ButtonType, ButtonVariant, EmptyState, EmptyStateBody, EmptyStateIcon, Title, } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions } from 'store/onboarding';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getAddSourceButton = () => {\n            const { openProvidersModal, t } = this.props;\n            return (React.createElement(Button, Object.assign({}, getTestProps(testIds.providers.add_btn), { onClick: openProvidersModal, type: ButtonType.submit, variant: ButtonVariant.primary }), t('providers.add_source')));\n        };\n    }\n    render() {\n        const { t } = this.props;\n        return (React.createElement(\"div\", { className: css(styles.container) },\n            React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: DollarSignIcon }),\n                React.createElement(Title, { size: \"lg\" }, t('providers.empty_state_title')),\n                React.createElement(EmptyStateBody, null, t('providers.empty_state_desc')),\n                this.getAddSourceButton())));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, {}) => {\n    return {};\n});\nconst NoProvidersState = translate()(connect(mapStateToProps, {\n    openProvidersModal: onboardingActions.openModal,\n})(NoProvidersStateBase));\nexport { NoProvidersState };\n","import { StyleSheet } from '@patternfly/react-styles';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        marginTop: '150px',\n    },\n});\n","import { EmptyState as PfEmptyState, EmptyStateBody, EmptyStateIcon, Title, } from '@patternfly/react-core';\nimport { BanIcon, ErrorCircleOIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './errorState.styles';\nconst ErrorStateBase = ({ error, icon = ErrorCircleOIcon, t, }) => {\n    let title = t('error_state.unexpected_title');\n    let subTitle = t('error_state.unexpected_desc');\n    if (error && error.response && error.response.status === 401) {\n        icon = BanIcon;\n        title = t('error_state.unauthorized_title');\n        subTitle = t('error_state.unauthorized_desc');\n    }\n    return (React.createElement(\"div\", { className: css(styles.container) },\n        React.createElement(PfEmptyState, null,\n            React.createElement(EmptyStateIcon, { icon: icon }),\n            React.createElement(Title, { size: \"lg\" }, title),\n            React.createElement(EmptyStateBody, null, subTitle))));\n};\nconst ErrorState = translate()(ErrorStateBase);\nexport { ErrorState };\n","import { sort } from './sort';\nexport function getComputedOcpOnAwsReportItems({ report, idKey, labelKey = idKey, sortKey = 'cost', sortDirection = 0 /* asc */, }) {\n    return sort(getUnsortedComputedOcpOnAwsReportItems({\n        report,\n        idKey,\n        labelKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedOcpOnAwsReportItems({ report, idKey, labelKey = idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint.values) {\n            dataPoint.values.forEach(value => {\n                const capacity = value.capacity ? value.capacity.value : 0;\n                const cluster = value.cluster_alias\n                    ? value.cluster_alias\n                    : value.cluster;\n                const cost = value.cost ? value.cost.value : 0;\n                const id = value[idKey];\n                let label;\n                if (labelKey === 'cluster' && value.cluster_alias) {\n                    label = value.cluster_alias;\n                }\n                else if (value[labelKey] instanceof Object) {\n                    label = value[labelKey].value;\n                }\n                else {\n                    label = value[labelKey];\n                }\n                if (labelKey === 'account' && value.account_alias) {\n                    label = value.account_alias;\n                }\n                const limit = value.limit ? value.limit.value : 0;\n                const request = value.request ? value.request.value : 0;\n                const usage = value.usage ? value.usage.value : 0;\n                const units = value.usage ? value.usage.units : value.cost.units;\n                if (!itemMap.get(id)) {\n                    itemMap.set(id, {\n                        capacity,\n                        cluster,\n                        cost,\n                        deltaPercent: value.delta_percent,\n                        deltaValue: value.delta_value,\n                        id,\n                        label,\n                        limit,\n                        request,\n                        units,\n                        usage,\n                    });\n                    return;\n                }\n                itemMap.set(id, Object.assign({}, itemMap.get(id), { capacity: itemMap.get(id).capacity + capacity, cost: itemMap.get(id).cost + cost, limit: itemMap.get(id).limit + limit, request: itemMap.get(id).request + request, usage: itemMap.get(id).usage + usage }));\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\nexport function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_disabled_color_100, global_disabled_color_200, global_FontFamily_sans_serif, global_FontSize_md, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 175,\n    },\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: ['#A2DA9C', '#88D080', '#6EC664', '#519149', '#3C6C37'],\n    // TBD: No grey scale, yet\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_100.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n    legend: {\n        display: 'inline-block',\n        fontSize: global_FontSize_md.value,\n        marginBottom: global_spacer_lg.value,\n        marginTop: global_spacer_lg.value,\n        minWidth: '175px',\n        width: '50%',\n    },\n});\n","import { Chart, ChartArea, ChartAxis, ChartContainer, ChartLegend, ChartTheme, ChartVoronoiContainer, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { getDateRange, getDateRangeString, getMaxValue, getTooltipContent, getTooltipLabel, } from 'components/charts/commonChart/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles, styles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const previousLegendData = [];\n            if (previousUsageData) {\n                previousLegendData.push({\n                    name: i18next.t(`chart.used`),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            if (previousRequestData) {\n                previousLegendData.push({\n                    name: i18next.t(`chart.requested`),\n                    symbol: {\n                        type: 'dash',\n                    },\n                });\n            }\n            const previous = {\n                charts: [\n                    {\n                        data: previousUsageData,\n                        show: true,\n                        style: chartStyles.previousUsageData,\n                    },\n                    {\n                        data: previousRequestData,\n                        show: true,\n                        style: chartStyles.previousRequestData,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.previousColorScale,\n                    data: previousLegendData,\n                    onClick: this.handlePreviousLegendClick,\n                    title: getDateRangeString(previousUsageData, true, true),\n                },\n            };\n            const currentLegendData = [];\n            if (currentUsageData) {\n                currentLegendData.push({\n                    name: i18next.t(`chart.used`),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            if (currentRequestData) {\n                currentLegendData.push({\n                    name: i18next.t(`chart.requested`),\n                    symbol: {\n                        type: 'dash',\n                    },\n                });\n            }\n            const current = {\n                charts: [\n                    {\n                        data: currentUsageData,\n                        show: true,\n                        style: chartStyles.currentUsageData,\n                    },\n                    {\n                        data: currentRequestData,\n                        show: true,\n                        style: chartStyles.currentRequestData,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.currentColorScale,\n                    data: currentLegendData,\n                    gutter: 55,\n                    onClick: this.handleCurrentLegendClick,\n                    title: getDateRangeString(currentUsageData, true, false),\n                },\n            };\n            this.setState({\n                datum: {\n                    previous,\n                    current,\n                },\n            });\n        };\n        this.handleCurrentLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.current.charts.length) {\n                newDatum.current.charts[props.index].show = !newDatum.current.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.handlePreviousLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.previous.charts.length) {\n                newDatum.previous.charts[props.index].show = !newDatum.previous.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.getChart = (datum, index) => {\n            if (datum.data && datum.data.length && datum.show) {\n                return (React.createElement(ChartArea, { data: datum.data, key: `usage-chart-${index}`, style: datum.style }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getLegend = (datum, width) => {\n            if (datum && datum.data && datum.data.length) {\n                return (React.createElement(ChartLegend, { colorScale: datum.colorScale, containerComponent: React.createElement(ChartContainer, { responsive: false }), data: datum.data, events: [\n                        {\n                            target: 'data',\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [\n                                        {\n                                            target: 'data',\n                                            mutation: props => {\n                                                datum.onClick(props);\n                                                return null;\n                                            },\n                                        },\n                                    ];\n                                },\n                            },\n                        },\n                    ], height: 25, orientation: \"horizontal\", style: chartStyles.legend, theme: ChartTheme.light.blue }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTooltipLabel = (datum) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            return getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentRequest = currentRequestData\n            ? getMaxValue(currentRequestData)\n            : 0;\n        const maxCurrentUsage = currentUsageData\n            ? getMaxValue(currentUsageData)\n            : 0;\n        const maxPreviousRequest = previousRequestData\n            ? getMaxValue(previousRequestData)\n            : 0;\n        const maxPreviousUsage = previousUsageData\n            ? getMaxValue(previousUsageData)\n            : 0;\n        const maxValue = Math.max(maxCurrentRequest, maxCurrentUsage, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const currentRequestDate = currentRequestData\n            ? getDate(getDateRange(currentRequestData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentUsageData\n            ? getDate(getDateRange(currentUsageData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousRequestData\n            ? getDate(getDateRange(previousRequestData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousUsageData\n            ? getDate(getDateRange(previousUsageData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 ||\n            currentUsageDate > 0 ||\n            previousRequestDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    isCurrentLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.current.legend && datum.current.legend.data) {\n            datum.current.legend.data.forEach(data => {\n                if (data.name && data.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    isPreviousLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.previous.legend && datum.previous.legend.data) {\n            datum.previous.legend.data.forEach(data => {\n                if (data.name && data.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    render() {\n        const { height } = this.props;\n        const { datum, width } = this.state;\n        const container = (React.createElement(ChartVoronoiContainer, { labels: this.getTooltipLabel, voronoiDimension: \"x\" }));\n        const legendWidth = chartStyles.legend.minWidth > width / 2\n            ? chartStyles.legend.minWidth\n            : width / 2;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef },\n            React.createElement(Chart, { containerComponent: container, domain: domain, height: height, width: width },\n                Boolean(datum && datum.previous) &&\n                    datum.previous.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                Boolean(datum && datum.current) &&\n                    datum.current.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis })),\n            Boolean(this.isPreviousLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) },\n                Boolean(datum.previous.legend.title) && (React.createElement(\"div\", null, datum.previous.legend.title)),\n                this.getLegend(datum.previous.legend, legendWidth))),\n            Boolean(this.isCurrentLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) },\n                Boolean(datum.current.legend.title) && (React.createElement(\"div\", null, datum.current.legend.title)),\n                this.getLegend(datum.current.legend, legendWidth)))));\n    }\n}\nexport { UsageChart };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpOnAwsReportSummary.styles';\nconst OcpOnAwsReportSummaryBase = ({ title, subTitle, detailsLink, children, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? `${t('loading')}...` : children),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst OcpOnAwsReportSummary = translate()(OcpOnAwsReportSummaryBase);\nexport { OcpOnAwsReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '440px',\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpOnAwsReportSummaryAlt.styles';\nconst OcpOnAwsReportSummaryAltBase = ({ children, detailsLink, status, t, tabs, title, subTitle }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.cost) },\n                    React.createElement(CardHeader, null,\n                        React.createElement(Title, { size: \"lg\" }, title),\n                        Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                    React.createElement(CardBody, null, status === 1 /* inProgress */\n                        ? `${t('loading')}...`\n                        : children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst OcpOnAwsReportSummaryAlt = translate()(OcpOnAwsReportSummaryAltBase);\nexport { OcpOnAwsReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    requestedValue: {\n        marginLeft: global_spacer_sm.value,\n    },\n    text: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        marginLeft: global_spacer_sm.value,\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    titleContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        minWidth: '175px',\n        width: '50%',\n    },\n    usageText: {\n        marginRight: global_spacer_sm.value,\n    },\n    value: {\n        display: 'flex',\n        color: global_Color_100.var,\n        fontSize: global_FontSize_4xl.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './ocpOnAwsReportSummaryDetails.styles';\nconst OcpOnAwsReportSummaryDetails = ({ label, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, requestLabel, }) => {\n    let value = '----';\n    let requestValue = '----';\n    const awsReportType = reportType === \"instance_type\" /* instanceType */ ||\n        reportType === \"storage\" /* storage */;\n    if (report && report.meta && report.meta.total) {\n        if (reportType === \"cost\" /* cost */) {\n            const units = report.meta.total.cost.units\n                ? report.meta.total.cost.units\n                : 'USD';\n            value = formatValue(report.meta.total.cost.value ? report.meta.total.cost.value : 0, units, formatOptions);\n        }\n        else if (awsReportType) {\n            const units = report.meta.total.usage\n                ? report.meta.total.usage.units\n                : 'USD';\n            value = formatValue(report.meta.total.usage.value ? report.meta.total.usage.value : 0, units, formatOptions);\n        }\n        else {\n            const units = report.meta.total.usage.units\n                ? report.meta.total.usage.units\n                : 'GB';\n            value = formatValue(report.meta.total.usage.value ? report.meta.total.usage.value : 0, units, formatOptions);\n            requestValue = formatValue(report.meta.total.request.value ? report.meta.total.request.value : 0, units, formatOptions);\n        }\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: css(styles.titleContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                value,\n                React.createElement(\"div\", { className: css(styles.text) },\n                    React.createElement(\"div\", null, label)))),\n        React.createElement(\"div\", { className: css(styles.titleContainer) }, Boolean(reportType !== \"cost\" /* cost */ && !awsReportType) && (React.createElement(\"div\", { className: css(styles.value, styles.requestedValue) },\n            requestValue,\n            React.createElement(\"div\", { className: css(styles.text) }, requestLabel))))));\n};\nexport { OcpOnAwsReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './ocpOnAwsReportSummaryItem.styles';\nconst OcpOnAwsReportSummaryItem = ({ label, value, totalValue, formatValue, units, formatOptions, }) => {\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = `${formatValue(value, units, formatOptions)} (${percentVal}%)`;\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nOcpOnAwsReportSummaryItem.defaultProps = {\n    formatValue: v => v,\n};\nexport { OcpOnAwsReportSummaryItem };\n","import React from 'react';\nimport { getComputedOcpOnAwsReportItems, } from 'utils/getComputedOcpOnAwsReportItems';\nclass OcpOnAwsReportSummaryItems extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedOcpOnAwsReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { report, children } = this.props;\n        if (!report) {\n            return null;\n        }\n        const items = this.getItems();\n        return React.createElement(\"ul\", null, children({ items }));\n    }\n}\nexport { OcpOnAwsReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './ocpOnAwsReportSummaryTrend.styles';\nconst OcpOnAwsReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { OcpOnAwsReportSummaryTrend };\n","import { css } from '@patternfly/react-styles';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nimport { styles } from './ocpOnAwsReportSummaryTrend.styles';\nconst OcpOnAwsReportSummaryUsage = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { OcpOnAwsReportSummaryUsage };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './awsReportSummary.styles';\nconst AwsReportSummaryBase = ({ title, subTitle, detailsLink, children, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? `${t('loading')}...` : children),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst AwsReportSummary = translate()(AwsReportSummaryBase);\nexport { AwsReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '440px'\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './awsReportSummaryAlt.styles';\nconst AwsReportSummaryAltBase = ({ children, detailsLink, status, t, tabs, title, subTitle, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.cost) },\n                    React.createElement(CardHeader, null,\n                        React.createElement(Title, { size: \"lg\" }, title),\n                        Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                    React.createElement(CardBody, null, status === 1 /* inProgress */\n                        ? `${t('loading')}...`\n                        : children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst AwsReportSummaryAlt = translate()(AwsReportSummaryAltBase);\nexport { AwsReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './awsReportSummaryDetails.styles';\nconst AwsReportSummaryDetails = ({ label, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, }) => {\n    let value = '----';\n    if (report && report.meta && report.meta.total) {\n        if (reportType === \"cost\" /* cost */) {\n            const units = report.meta.total.cost\n                ? report.meta.total.cost.units\n                : 'USD';\n            value = formatValue(report.meta.total.cost.value ? report.meta.total.cost.value : 0, units, formatOptions);\n        }\n        else {\n            const units = report.meta.total.usage\n                ? report.meta.total.usage.units\n                : 'USD';\n            value = formatValue(report.meta.total.usage.value ? report.meta.total.usage.value : 0, units, formatOptions);\n        }\n    }\n    return (React.createElement(\"div\", { className: css(styles.reportSummaryDetails) },\n        React.createElement(\"div\", { className: css(styles.value) }, value),\n        React.createElement(\"div\", { className: css(styles.text) },\n            React.createElement(\"div\", null, label))));\n};\nexport { AwsReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './awsReportSummaryItem.styles';\nconst AwsReportSummaryItem = ({ label, value, totalValue, formatValue, units, formatOptions, }) => {\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = `${formatValue(value, units, formatOptions)} (${percentVal}%)`;\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nAwsReportSummaryItem.defaultProps = {\n    formatValue: v => v,\n};\nexport { AwsReportSummaryItem };\n","import React from 'react';\nimport { getComputedAwsReportItems, } from 'utils/getComputedAwsReportItems';\nclass AwsReportSummaryItems extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedAwsReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { report, children } = this.props;\n        if (!report) {\n            return null;\n        }\n        const items = this.getItems();\n        return React.createElement(\"ul\", null, children({ items }));\n    }\n}\nexport { AwsReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './awsReportSummaryTrend.styles';\nconst AwsReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { AwsReportSummaryTrend };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpReportSummary.styles';\nconst OcpReportSummaryBase = ({ title, subTitle, detailsLink, children, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? `${t('loading')}...` : children),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst OcpReportSummary = translate()(OcpReportSummaryBase);\nexport { OcpReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '440px'\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpReportSummaryAlt.styles';\nconst OcpReportSummaryAltBase = ({ children, detailsLink, status, t, tabs, title, subTitle, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.cost) },\n                    React.createElement(CardHeader, null,\n                        React.createElement(Title, { size: \"lg\" }, title),\n                        Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                    React.createElement(CardBody, null, status === 1 /* inProgress */\n                        ? `${t('loading')}...`\n                        : children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst OcpReportSummaryAlt = translate()(OcpReportSummaryAltBase);\nexport { OcpReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    requestedValue: {\n        marginLeft: global_spacer_sm.value,\n    },\n    text: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        marginLeft: global_spacer_sm.value,\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    titleContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        minWidth: '175px',\n        width: '50%',\n    },\n    usageText: {\n        marginRight: global_spacer_sm.value,\n    },\n    value: {\n        display: 'flex',\n        color: global_Color_100.var,\n        fontSize: global_FontSize_4xl.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryDetails.styles';\nconst OcpReportSummaryDetails = ({ label, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, requestLabel, }) => {\n    let value = '----';\n    let requestValue = '----';\n    if (report && report.meta && report.meta.total) {\n        if (reportType === \"cost\" /* cost */) {\n            const units = report.meta.total.cost.units\n                ? report.meta.total.cost.units\n                : 'USD';\n            value = formatValue(report.meta.total.cost.value ? report.meta.total.cost.value : 0, units, formatOptions);\n        }\n        else {\n            const units = report.meta.total.usage.units\n                ? report.meta.total.usage.units\n                : 'GB';\n            value = formatValue(report.meta.total.usage.value ? report.meta.total.usage.value : 0, units, formatOptions);\n            requestValue = formatValue(report.meta.total.request.value ? report.meta.total.request.value : 0, units, formatOptions);\n        }\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: css(styles.titleContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                value,\n                React.createElement(\"div\", { className: css(styles.text) },\n                    React.createElement(\"div\", null, label)))),\n        React.createElement(\"div\", { className: css(styles.titleContainer) }, Boolean(reportType !== \"cost\" /* cost */) && (React.createElement(\"div\", { className: css(styles.value, styles.requestedValue) },\n            requestValue,\n            React.createElement(\"div\", { className: css(styles.text) }, requestLabel))))));\n};\nexport { OcpReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryItem.styles';\nconst OcpReportSummaryItem = ({ label, value, totalValue, formatValue, units, formatOptions, }) => {\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = `${formatValue(value, units, formatOptions)} (${percentVal}%)`;\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nOcpReportSummaryItem.defaultProps = {\n    formatValue: v => v,\n};\nexport { OcpReportSummaryItem };\n","import React from 'react';\nimport { getComputedOcpReportItems, } from 'utils/getComputedOcpReportItems';\nclass OcpReportSummaryItems extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedOcpReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { report, children } = this.props;\n        if (!report) {\n            return null;\n        }\n        const items = this.getItems();\n        return React.createElement(\"ul\", null, children({ items }));\n    }\n}\nexport { OcpReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryTrend.styles';\nconst OcpReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { OcpReportSummaryTrend };\n","import { css } from '@patternfly/react-styles';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryTrend.styles';\nconst OcpReportSummaryUsage = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { OcpReportSummaryUsage };\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the month\n *\n * @example\n * // Which month is 29 February 2012?\n * var result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\nfunction getMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  return month\n}\n\nmodule.exports = getMonth\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"invariant\";\nimport { createLocation } from \"history\";\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nvar Link = function (_React$Component) {\n  _inherits(Link, _React$Component);\n\n  function Link() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Link);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {\n      if (_this.props.onClick) _this.props.onClick(event);\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && // ignore everything but left clicks\n      !_this.props.target && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n\n          var history = _this.context.router.history;\n          var _this$props = _this.props,\n              replace = _this$props.replace,\n              to = _this$props.to;\n\n\n          if (replace) {\n            history.replace(to);\n          } else {\n            history.push(to);\n          }\n        }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Link.prototype.render = function render() {\n    var _props = this.props,\n        replace = _props.replace,\n        to = _props.to,\n        innerRef = _props.innerRef,\n        props = _objectWithoutProperties(_props, [\"replace\", \"to\", \"innerRef\"]); // eslint-disable-line no-unused-vars\n\n    invariant(this.context.router, \"You should not use <Link> outside a <Router>\");\n\n    invariant(to !== undefined, 'You must specify the \"to\" property');\n\n    var history = this.context.router.history;\n\n    var location = typeof to === \"string\" ? createLocation(to, null, null, history.location) : to;\n\n    var href = history.createHref(location);\n    return React.createElement(\"a\", _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));\n  };\n\n  return Link;\n}(React.Component);\n\nLink.propTypes = {\n  onClick: PropTypes.func,\n  target: PropTypes.string,\n  replace: PropTypes.bool,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  innerRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n};\nLink.defaultProps = {\n  replace: false\n};\nLink.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired,\n      createHref: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired\n};\n\n\nexport default Link;","import { Button } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nconst CastedButton = Button;\nconst Link = props => (React.createElement(CastedButton, Object.assign({ component: RouterLink, variant: \"link\" }, props)));\nexport { Link };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_xl } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery, parseQuery } from 'api/awsQuery';\nimport { transformAwsReport } from 'components/charts/commonChart/chartUtils';\nimport { Link } from 'components/link';\nimport { AwsReportSummary, AwsReportSummaryAlt, AwsReportSummaryDetails, AwsReportSummaryItem, AwsReportSummaryItems, AwsReportSummaryTrend, } from 'components/reports/awsReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { awsDashboardActions, awsDashboardSelectors, } from 'store/awsDashboard';\nimport { awsReportsSelectors } from 'store/awsReports';\nimport { createMapStateToProps } from 'store/common';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './awsDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nclass AwsDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = () => {\n            const { currentQuery } = this.props;\n            const groupBy = parseQuery(currentQuery).group_by;\n            return `/aws?${getQuery({\n                group_by: groupBy,\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n        this.getChart = (height) => {\n            const { currentReport, previousReport, t, trend } = this.props;\n            const currentData = transformAwsReport(currentReport, trend.type);\n            const previousData = transformAwsReport(previousReport, trend.type);\n            return (React.createElement(AwsReportSummaryTrend, { currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, title: t(trend.titleKey) }));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, reportType } = this.props;\n            return (React.createElement(AwsReportSummaryDetails, { formatOptions: details.formatOptions, formatValue: formatValue, label: this.getDetailsLabel(), report: currentReport, reportType: reportType }));\n        };\n        this.getDetailsLabel = () => {\n            const { details, t } = this.props;\n            return t(details.labelKey, { context: details.labelKeyContext });\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink() }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(AwsReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(180)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t('aws_dashboard.widget_subtitle', {\n                endDate,\n                month,\n                startDate,\n                count: getDate(today),\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabs) },\n                    React.createElement(AwsReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            if (activeTab === currentTab) {\n                return (React.createElement(AwsReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: reportType === \"cost\" /* cost */\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: reportItem.total }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getVerticalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(AwsReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(75),\n                this.getTabs()));\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        updateTab(id, availableTabs[0]);\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: awsReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(AwsDashboardWidgetBase));\nexport { AwsDashboardWidget, AwsDashboardWidgetBase };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { awsDashboardSelectors } from 'store/awsDashboard';\nimport { createMapStateToProps } from 'store/common';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\nconst AwsDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(AwsDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { xl: 4, lg: 6, key: widgetId },\n            React.createElement(AwsDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: awsDashboardSelectors.selectWidgets(state),\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = translate()(connect(mapStateToProps, {})(AwsDashboardBase));\nexport default AwsDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_xl } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery, parseQuery } from 'api/ocpQuery';\nimport { transformOcpReport } from 'components/charts/commonChart/chartUtils';\nimport { Link } from 'components/link';\nimport { OcpReportSummary, OcpReportSummaryAlt, OcpReportSummaryDetails, OcpReportSummaryItem, OcpReportSummaryItems, OcpReportSummaryTrend, OcpReportSummaryUsage, } from 'components/reports/ocpReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors, } from 'store/ocpDashboard';\nimport { ocpReportsSelectors } from 'store/ocpReports';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './ocpDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nclass OcpDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = () => {\n            const { currentQuery } = this.props;\n            const groupBy = parseQuery(currentQuery).group_by;\n            return `/ocp?${getQuery({\n                group_by: groupBy,\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id } = this.props;\n            const tab = availableTabs[tabIndex];\n            this.props.updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n        this.getChart = (height) => {\n            const { currentReport, previousReport, reportType, t, trend } = this.props;\n            const reportItem = reportType === \"cost\" /* cost */ ? 'cost' : 'usage';\n            const currentUsageData = transformOcpReport(currentReport, trend.type, 'date', reportItem);\n            const previousUsageData = transformOcpReport(previousReport, trend.type, 'date', reportItem);\n            const currentRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpReport(currentReport, trend.type, 'date', 'request')\n                : undefined;\n            const previousRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpReport(previousReport, trend.type, 'date', 'request')\n                : undefined;\n            return (React.createElement(React.Fragment, null, Boolean(reportType === \"cost\" /* cost */) ? (React.createElement(OcpReportSummaryTrend, { currentData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousUsageData, title: t(trend.titleKey) })) : (React.createElement(OcpReportSummaryUsage, { currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData }))));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, reportType } = this.props;\n            return (React.createElement(OcpReportSummaryDetails, { formatOptions: details.formatOptions, formatValue: formatValue, label: this.getDetailsLabel(), report: currentReport, reportType: reportType, requestLabel: this.getRequestLabel() }));\n        };\n        this.getDetailsLabel = () => {\n            const { details, t } = this.props;\n            return t(details.labelKey, { context: details.labelKeyContext });\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink() }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(180)));\n        };\n        this.getRequestLabel = () => {\n            const { details, t } = this.props;\n            return t(details.requestLabelKey, { context: details.labelKeyContext });\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t('ocp_dashboard.widget_subtitle', {\n                endDate,\n                month,\n                startDate,\n                count: getDate(today),\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabs) },\n                    React.createElement(OcpReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            if (activeTab === currentTab) {\n                return (React.createElement(OcpReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: reportType === \"cost\" /* cost */\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: reportType === \"cost\" /* cost */\n                        ? reportItem.cost\n                        : reportItem.usage }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getVerticalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(75),\n                this.getTabs()));\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, widgetId } = this.props;\n        this.props.updateTab(id, availableTabs[0]);\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: ocpReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(OcpDashboardWidgetBase));\nexport { OcpDashboardWidget, OcpDashboardWidgetBase };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/ocpDashboard';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\nconst OcpDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(OcpDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { xl: 4, lg: 6, key: widgetId },\n            React.createElement(OcpDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: ocpDashboardSelectors.selectWidgets(state),\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = translate()(connect(mapStateToProps, {})(OcpDashboardBase));\nexport default OcpDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_xl } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery, parseQuery } from 'api/ocpOnAwsQuery';\nimport { transformOcpOnAwsReport } from 'components/charts/commonChart/chartUtils';\nimport { Link } from 'components/link';\nimport { OcpOnAwsReportSummary, OcpOnAwsReportSummaryAlt, OcpOnAwsReportSummaryDetails, OcpOnAwsReportSummaryItem, OcpOnAwsReportSummaryItems, OcpOnAwsReportSummaryTrend, OcpOnAwsReportSummaryUsage, } from 'components/reports/ocpOnAwsReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpOnAwsDashboardActions, ocpOnAwsDashboardSelectors, } from 'store/ocpOnAwsDashboard';\nimport { ocpOnAwsReportsSelectors } from 'store/ocpOnAwsReports';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './ocpOnAwsDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nclass OcpOnAwsDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = () => {\n            const { currentQuery } = this.props;\n            const groupBy = parseQuery(currentQuery).group_by;\n            return `/ocp?${getQuery({\n                group_by: groupBy,\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n        this.getChart = (height) => {\n            const { currentReport, previousReport, reportType, t, trend } = this.props;\n            const reportItem = reportType === \"cost\" /* cost */ ? 'cost' : 'usage';\n            const currentUsageData = transformOcpOnAwsReport(currentReport, trend.type, 'date', reportItem);\n            const previousUsageData = transformOcpOnAwsReport(previousReport, trend.type, 'date', reportItem);\n            const currentRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpOnAwsReport(currentReport, trend.type, 'date', 'request')\n                : undefined;\n            const previousRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpOnAwsReport(previousReport, trend.type, 'date', 'request')\n                : undefined;\n            return (React.createElement(React.Fragment, null, Boolean(reportType === \"cost\" /* cost */ ||\n                reportType === \"instance_type\" /* instanceType */ ||\n                reportType === \"storage\" /* storage */) ? (React.createElement(OcpOnAwsReportSummaryTrend, { currentData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousUsageData, title: t(trend.titleKey) })) : (React.createElement(OcpOnAwsReportSummaryUsage, { currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData }))));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, reportType } = this.props;\n            return (React.createElement(OcpOnAwsReportSummaryDetails, { formatOptions: details.formatOptions, formatValue: formatValue, label: this.getDetailsLabel(), report: currentReport, reportType: reportType, requestLabel: this.getRequestLabel() }));\n        };\n        this.getDetailsLabel = () => {\n            const { details, t } = this.props;\n            return t(details.labelKey, { context: details.labelKeyContext });\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink() }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpOnAwsReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: `${this.getSubTitle()}`, tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(180)));\n        };\n        this.getRequestLabel = () => {\n            const { details, t } = this.props;\n            return t(details.requestLabelKey, { context: details.labelKeyContext });\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            const test = t('ocp_on_aws_dashboard.ocp.widget_subtitle', {\n                endDate,\n                month,\n                startDate,\n                count: getDate(today),\n            });\n            return test;\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabs) },\n                    React.createElement(OcpOnAwsReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            if (activeTab === currentTab) {\n                return (React.createElement(OcpOnAwsReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: reportType === \"cost\" /* cost */\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: reportType === \"cost\" /* cost */\n                        ? reportItem.cost\n                        : reportItem.usage }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            if (availableTabs) {\n                return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getVerticalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpOnAwsReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(75),\n                this.getTabs()));\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpOnAwsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpOnAwsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: ocpOnAwsReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: ocpOnAwsReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: ocpOnAwsReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: ocpOnAwsReportsSelectors.selectReport(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpOnAwsDashboardActions.fetchWidgetReports,\n    updateTab: ocpOnAwsDashboardActions.changeWidgetTab,\n};\nconst OcpOnAwsDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(OcpOnAwsDashboardWidgetBase));\nexport { OcpOnAwsDashboardWidget, OcpOnAwsDashboardWidgetBase, };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpOnAwsDashboardSelectors } from 'store/ocpOnAwsDashboard';\nimport { OcpOnAwsDashboardWidget } from './ocpOnAwsDashboardWidget';\nconst OcpOnAwsDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(OcpOnAwsDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { xl: 4, lg: 6, key: widgetId },\n            React.createElement(OcpOnAwsDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: ocpOnAwsDashboardSelectors.selectWidgets(state),\n        widgets: ocpOnAwsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpOnAwsDashboard = translate()(connect(mapStateToProps, {})(OcpOnAwsDashboardBase));\nexport default OcpOnAwsDashboard;\n","import { Button, ButtonType, ButtonVariant, Tab, Tabs, Title, TitleSize, } from '@patternfly/react-core';\nimport { getProvidersQuery } from 'api/providersQuery';\nimport { ErrorState } from 'components/state/errorState/errorState';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport { NoProvidersState } from 'components/state/noProvidersState/noProvidersState';\nimport AwsDashboard from 'pages/awsDashboard/awsDashboard';\nimport OcpDashboard from 'pages/ocpDashboard/ocpDashboard';\nimport OcpOnAwsDashboard from 'pages/ocpOnAwsDashboard/ocpOnAwsDashboard';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions } from 'store/onboarding';\nimport { awsProvidersQuery, ocpProvidersQuery, providersSelectors, } from 'store/providers';\nimport { getTestProps, testIds } from 'testIds';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"aws\" /* aws */:\n            return 'aws';\n        case \"ocp\" /* ocp */:\n            return 'ocp';\n        case \"ocpOnAws\" /* ocpOnAws */:\n            return 'ocpOnAws';\n    }\n};\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.getAddSourceButton = () => {\n            const { openProvidersModal, t } = this.props;\n            return (React.createElement(Button, Object.assign({}, getTestProps(testIds.providers.add_btn), { onClick: openProvidersModal, type: ButtonType.submit, variant: ButtonVariant.secondary }), t('providers.add_source')));\n        };\n        this.getTab = (tab, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) }, this.getTabItem(tab, index)));\n        };\n        this.getTabItem = (tab, index) => {\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"ocpOnAws\" /* ocpOnAws */) {\n                return activeTabKey === index ? React.createElement(OcpOnAwsDashboard, null) : null;\n            }\n            else if (currentTab === \"ocp\" /* ocp */) {\n                return activeTabKey === index ? React.createElement(OcpDashboard, null) : null;\n            }\n            else if (currentTab === \"aws\" /* aws */) {\n                return activeTabKey === index ? React.createElement(AwsDashboard, null) : null;\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { awsProviders, ocpProviders } = this.props;\n            const { activeTabKey } = this.state;\n            const availableTabs = [];\n            // Todo: How do we check if we have Ocp on Aws?\n            if (awsProviders &&\n                awsProviders.meta &&\n                awsProviders.meta.count &&\n                (ocpProviders && ocpProviders.meta && ocpProviders.meta.count)) {\n                availableTabs.push(\"ocpOnAws\" /* ocpOnAws */);\n            }\n            if (ocpProviders && ocpProviders.meta && ocpProviders.meta.count) {\n                availableTabs.push(\"ocp\" /* ocp */);\n            }\n            if (awsProviders && awsProviders.meta && awsProviders.meta.count) {\n                availableTabs.push(\"aws\" /* aws */);\n            }\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"aws\" /* aws */) {\n                return t('overview.aws');\n            }\n            else if (tab === \"ocp\" /* ocp */) {\n                return t('overview.ocp');\n            }\n            else if (tab === \"ocpOnAws\" /* ocpOnAws */) {\n                return t('overview.ocp_on_aws');\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    render() {\n        const { awsProviders, awsProvidersError, awsProvidersFetchStatus, ocpProviders, ocpProvidersError, ocpProvidersFetchStatus, t, } = this.props;\n        const error = awsProvidersError || ocpProvidersError;\n        const isLoading = awsProvidersFetchStatus === 1 /* inProgress */ ||\n            ocpProvidersFetchStatus === 1 /* inProgress */;\n        const noAwsProviders = awsProviders !== undefined &&\n            awsProviders.meta !== undefined &&\n            awsProviders.meta.count === 0 &&\n            awsProvidersFetchStatus === 2 /* complete */;\n        const noOcpProviders = ocpProviders !== undefined &&\n            ocpProviders.meta !== undefined &&\n            ocpProviders.meta.count === 0 &&\n            ocpProvidersFetchStatus === 2 /* complete */;\n        const noProviders = noAwsProviders && noOcpProviders;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"section\", { className: \"pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light\" },\n                React.createElement(\"header\", { className: \"pf-u-display-flex pf-u-justify-content-space-between pf-u-align-items-center\" },\n                    React.createElement(Title, { size: TitleSize.lg }, t('overview.title')),\n                    this.getAddSourceButton())),\n            React.createElement(\"section\", { className: \"pf-l-page__main-section pf-c-page__main-section\", \"page-type\": \"cost-management-overview\" }, Boolean(error) ? (React.createElement(ErrorState, { error: error })) : Boolean(noProviders) ? (React.createElement(NoProvidersState, null)) : Boolean(isLoading) ? (React.createElement(LoadingState, null)) : (this.getTabs()))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    const awsProvidersQueryString = getProvidersQuery(awsProvidersQuery);\n    const awsProviders = providersSelectors.selectProviders(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersError = providersSelectors.selectProvidersError(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const ocpProvidersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const ocpProviders = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersError = providersSelectors.selectProvidersError(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    return {\n        awsProviders,\n        awsProvidersError,\n        awsProvidersFetchStatus,\n        awsProvidersQueryString,\n        ocpProviders,\n        ocpProvidersError,\n        ocpProvidersFetchStatus,\n        ocpProvidersQueryString,\n    };\n});\nconst Overview = translate()(connect(mapStateToProps, {\n    openProvidersModal: onboardingActions.openModal,\n})(OverviewBase));\nexport default Overview;\n","import { hot } from 'react-hot-loader';\nimport Overview from './overview';\nexport default hot(module)(Overview);\n","import { StyleSheet } from '@patternfly/react-styles';\nexport default StyleSheet.parse(`.pf-c-tabs{--pf-c-tabs__item--BackgroundColor:var(--pf-global--BackgroundColor--100);--pf-c-tabs__item--BorderColor:var(--pf-global--BorderColor--light-200);--pf-c-tabs__item--BorderWidth:var(--pf-global--BorderWidth--sm);--pf-c-tabs__item--m-current--ZIndex:var(--pf-global--ZIndex--sm);--pf-c-tabs__item--m-current--Color:var(--pf-global--active-color--100);--pf-c-tabs__item--m-current--BorderTopWidth:var(--pf-global--BorderWidth--md);--pf-c-tabs__item--hover--Color:var(--pf-global--Color--dark-200);--pf-c-tabs__button--Background:transparent;--pf-c-tabs__button--PaddingTop:var(--pf-global--spacer--sm);--pf-c-tabs__button--PaddingRight:var(--pf-global--spacer--sm);--pf-c-tabs__button--PaddingBottom:var(--pf-global--spacer--sm);--pf-c-tabs__button--PaddingLeft:var(--pf-global--spacer--sm);--pf-c-tabs__scroll-button--Width:var(--pf-global--spacer--xl);--pf-c-tabs__scroll-button--ZIndex:var(--pf-global--ZIndex--md);position:relative;display:flex;flex-direction:column;align-items:flex-start;}.pf-c-tabs .pf-c-tabs__scroll-button{display:none;visibility:hidden;}.pf-c-tabs.pf-m-start .pf-c-tabs__scroll-button:nth-of-type(1),.pf-c-tabs.pf-m-end .pf-c-tabs__scroll-button:nth-of-type(2){display:block;visibility:visible;}.pf-c-tabs.pf-m-start-current .pf-c-tabs__scroll-button:nth-of-type(1)::after,.pf-c-tabs.pf-m-end-current .pf-c-tabs__scroll-button:nth-of-type(2)::after{position:absolute;top:0;right:0;bottom:0;left:0;margin-left:var(--pf-c-tabs__item--BorderWidth);content:\"\";border-top:var(--pf-c-tabs__item--m-current--BorderTopWidth) solid var(--pf-c-tabs__item--m-current--Color);}+ .pf-c-tabs.pf-m-tabs-secondary{margin-top:calc(-1 * var(--pf-c-tabs__item--BorderWidth));border-top:var(--pf-c-tabs__item--BorderWidth) solid var(--pf-c-tabs__item--BorderColor);}+ .pf-c-tabs.pf-m-tabs-secondary .pf-c-tabs__scroll-button{margin-top:calc(-1 * var(--pf-c-tabs__item--BorderWidth));}.pf-c-tabs.pf-m-fill .pf-c-tabs__list{width:100%;}.pf-c-tabs.pf-m-fill .pf-c-tabs__item{flex:1;white-space:nowrap;}.pf-c-tabs.pf-m-fill .pf-c-tabs__item:first-of-type .pf-c-tabs__button::before{border-left:none;}.pf-c-tabs.pf-m-fill .pf-c-tabs__item:last-of-type .pf-c-tabs__button::before{border-right:none;}.pf-c-tabs.pf-m-fill .pf-c-tabs__item .pf-c-tabs__button{width:100%;}.pf-c-tabs__list{position:relative;display:flex;max-width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;}.pf-c-tabs__list .pf-c-tabs__item:last-of-type .pf-c-tabs__button::before{border-right-width:var(--pf-c-tabs__item--BorderWidth);}.pf-c-tabs__item{flex:none;}.pf-c-tabs__item:not(.pf-m-current):hover .pf-c-tabs__button::after{position:absolute;top:0;right:0;bottom:0;left:0;margin-left:var(--pf-c-tabs__item--BorderWidth);content:\"\";border-top:var(--pf-c-tabs__item--m-current--BorderTopWidth) solid var(--pf-c-tabs__item--hover--Color);}.pf-c-tabs__item.pf-m-current .pf-c-tabs__button{z-index:var(--pf-c-tabs__item--m-current--ZIndex);color:var(--pf-c-tabs__item--m-current--Color);}.pf-c-tabs__item.pf-m-current .pf-c-tabs__button::before{border-bottom-color:var(--pf-c-tabs__item--BackgroundColor);}.pf-c-tabs__item.pf-m-current .pf-c-tabs__button::after{position:absolute;top:0;right:0;bottom:0;left:0;margin-left:var(--pf-c-tabs__item--BorderWidth);content:\"\";border-top:var(--pf-c-tabs__item--m-current--BorderTopWidth) solid var(--pf-c-tabs__item--m-current--Color);}.pf-m-tabs-secondary .pf-c-tabs__item .pf-c-tabs__button::before,.pf-m-tabs-secondary .pf-c-tabs__item .pf-c-tabs__button::after,.pf-m-tabs-secondary .pf-c-tabs__item .pf-c-tabs__button:hover::after{content:none;}.pf-m-tabs-secondary .pf-c-tabs__item:not(.pf-m-current) .pf-c-tabs__button:hover{color:var(--pf-c-tabs__item--hover--Color);}.pf-c-tabs__button{position:relative;padding:var(--pf-c-tabs__button--PaddingTop) var(--pf-c-tabs__button--PaddingRight) var(--pf-c-tabs__button--PaddingBottom) var(--pf-c-tabs__button--PaddingLeft);user-select:none;background:var(--pf-c-tabs__button--Background);border:0;}.pf-c-tabs__button::before{position:absolute;top:0;right:0;bottom:0;left:0;content:\"\";border:solid var(--pf-c-tabs__item--BorderColor);border-width:var(--pf-c-tabs__item--BorderWidth) 0 var(--pf-c-tabs__item--BorderWidth) var(--pf-c-tabs__item--BorderWidth);}.pf-c-tabs__scroll-item{position:absolute;top:0;bottom:0;width:var(--pf-c-tabs__scroll-button--Width);}.pf-c-tabs__scroll-item:first-of-type{left:0;}.pf-c-tabs__scroll-item:last-of-type{right:0;}.pf-c-tabs__scroll-button{position:absolute;top:0;bottom:0;z-index:var(--pf-c-tabs__scroll-button--ZIndex);width:var(--pf-c-tabs__scroll-button--Width);line-height:1;background-color:var(--pf-c-tabs__item--BackgroundColor);border:initial;}.pf-c-tabs__scroll-button:nth-of-type(2){right:0;}.pf-c-tabs__scroll-button::before{position:absolute;top:0;right:0;bottom:0;left:0;content:\"\";border:var(--pf-c-tabs__item--BorderWidth) solid var(--pf-c-tabs__item--BorderColor);}.pf-c-tabs__scroll-button:hover::after{position:absolute;top:0;right:0;bottom:0;left:0;content:\"\";border-top:var(--pf-c-tabs__item--m-current--BorderTopWidth) solid var(--pf-c-tabs__item--hover--Color);}`);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from '@patternfly/react-styles';\nvar propTypes = {\n  /** the index of the active tab */\n  activeKey: PropTypes.number,\n\n  /** content rendered inside the tab content area. */\n  child: PropTypes.node,\n\n  /** id passed from parent to identify the content section */\n  id: PropTypes.string.isRequired\n};\nvar defaultProps = {\n  activeKey: 0,\n  child: null\n};\n\nvar TabContent = function TabContent(_ref) {\n  var id = _ref.id,\n      activeKey = _ref.activeKey,\n      child = _ref.child,\n      props = _objectWithoutProperties(_ref, [\"id\", \"activeKey\", \"child\"]);\n\n  return React.createElement(\"section\", _extends({\n    hidden: child.props.eventKey !== activeKey,\n    className: css('pf-c-tab-content', child.props.className),\n    id: \"pf-tab-section-\".concat(child.props.eventKey, \"-\").concat(id),\n    \"aria-labelledby\": \"pf-tab-\".concat(child.props.eventKey, \"-\").concat(id),\n    role: \"tabpanel\",\n    tabIndex: \"0\"\n  }, props), child.props.children);\n};\n\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;\nexport default TabContent;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport styles from \"../../@patternfly/patternfly/components/Tabs/tabs.css.js\";\nimport { css } from '@patternfly/react-styles';\nimport PropTypes from 'prop-types';\nimport { AngleLeftIcon, AngleRightIcon } from '@patternfly/react-icons';\nimport { getUniqueId, isElementInView, sideElementIsOutOfView } from '../../helpers/util';\nimport { SIDE } from '../../helpers/constants';\nimport TabContent from './TabContent';\nvar propTypes = {\n  /** content rendered inside the Tabs Component. */\n  children: PropTypes.node.isRequired,\n\n  /** additional classes added to the Tabs */\n  className: PropTypes.string,\n\n  /** the index of the active tab */\n  activeKey: PropTypes.number,\n\n  /** handel tab selection */\n  onSelect: PropTypes.func,\n\n  /** Enables the filled tab list layout */\n  isFilled: PropTypes.bool,\n\n  /** Enables Secondary Tab styling */\n  isSecondary: PropTypes.bool,\n\n  /** Aria Label for the left Scroll Button */\n  leftScrollAriaLabel: PropTypes.string,\n\n  /** Aria Label for the right Scroll Button */\n  rightScrollAriaLabel: PropTypes.string\n};\nvar defaultProps = {\n  className: '',\n  activeKey: 0,\n  onSelect: function onSelect() {\n    return undefined;\n  },\n  isFilled: false,\n  isSecondary: false,\n  leftScrollAriaLabel: 'Scroll left',\n  rightScrollAriaLabel: 'Scroll Right'\n};\n\nvar Tabs =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tabs, _React$Component);\n\n  function Tabs() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tabs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tabs)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      showLeftScrollButton: false,\n      showRightScrollButton: false,\n      highlightLeftScrollButton: false,\n      highlightRightScrollButton: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"id\", getUniqueId());\n\n    _defineProperty(_assertThisInitialized(_this), \"tabList\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScrollButtons\", function () {\n      if (_this.tabList.current) {\n        var container = _this.tabList.current; // get first element and check if it is in view\n\n        var showLeftScrollButton = !isElementInView(container, container.firstChild, false); // get lase element and check if it is in view\n\n        var showRightScrollButton = !isElementInView(container, container.lastChild, false); // determine if selected tab is out of view and apply styles\n\n        var selectedTab;\n        var childrenArr = Array.from(container.children);\n        childrenArr.forEach(function (child) {\n          var className = child.className;\n\n          if (className.search('pf-m-current') > 0) {\n            selectedTab = child;\n          }\n        });\n        var sideOutOfView = sideElementIsOutOfView(container, selectedTab);\n\n        _this.setState({\n          showLeftScrollButton: showLeftScrollButton,\n          showRightScrollButton: showRightScrollButton,\n          highlightLeftScrollButton: (sideOutOfView === SIDE.LEFT || sideOutOfView === SIDE.BOTH) && showLeftScrollButton,\n          highlightRightScrollButton: (sideOutOfView === SIDE.RIGHT || sideOutOfView === SIDE.BOTH) && showRightScrollButton\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"scrollLeft\", function () {\n      // find first Element that is fully in view on the left, then scroll to the element before it\n      if (_this.tabList.current) {\n        var container = _this.tabList.current;\n        var childrenArr = Array.from(container.children);\n        var firstElementInView;\n        var lastElementOutOfView;\n        var i;\n\n        for (i = 0; i < childrenArr.length && !firstElementInView; i++) {\n          if (isElementInView(container, childrenArr[i], false)) {\n            firstElementInView = childrenArr[i];\n            lastElementOutOfView = childrenArr[i - 1];\n          }\n        }\n\n        lastElementOutOfView && (container.scrollLeft -= lastElementOutOfView.scrollWidth);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"scrollRight\", function () {\n      // find last Element that is fully in view on the right, then scroll to the element after it\n      if (_this.tabList.current) {\n        var container = _this.tabList.current;\n        var childrenArr = Array.from(container.children);\n        var lastElementInView;\n        var firstElementOutOfView;\n        var i;\n\n        for (i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {\n          if (isElementInView(container, childrenArr[i], false)) {\n            lastElementInView = childrenArr[i];\n            firstElementOutOfView = childrenArr[i + 1];\n          }\n        }\n\n        firstElementOutOfView && (container.scrollLeft += firstElementOutOfView.scrollWidth);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Tabs, [{\n    key: \"handleTabClick\",\n    value: function handleTabClick(event, eventKey) {\n      this.props.onSelect(event, eventKey);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('resize', this.handleScrollButtons, false); // call the handle resize function to check if scroll buttons should be shown\n\n      this.handleScrollButtons();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('resize', this.handleScrollButtons, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          children = _this$props.children,\n          activeKey = _this$props.activeKey,\n          isFilled = _this$props.isFilled,\n          isSecondary = _this$props.isSecondary,\n          leftScrollAriaLabel = _this$props.leftScrollAriaLabel,\n          rightScrollAriaLabel = _this$props.rightScrollAriaLabel,\n          props = _objectWithoutProperties(_this$props, [\"className\", \"children\", \"activeKey\", \"isFilled\", \"isSecondary\", \"leftScrollAriaLabel\", \"rightScrollAriaLabel\"]);\n\n      var _this$state = this.state,\n          showLeftScrollButton = _this$state.showLeftScrollButton,\n          showRightScrollButton = _this$state.showRightScrollButton,\n          highlightLeftScrollButton = _this$state.highlightLeftScrollButton,\n          highlightRightScrollButton = _this$state.highlightRightScrollButton;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", _extends({}, props, {\n        className: css(styles.tabs, isFilled && styles.modifiers.fill, isSecondary && styles.modifiers.tabsSecondary, showLeftScrollButton && styles.modifiers.start, showRightScrollButton && styles.modifiers.end, highlightLeftScrollButton && styles.modifiers.startCurrent, highlightRightScrollButton && styles.modifiers.endCurrent, className)\n      }), !isSecondary && React.createElement(\"button\", {\n        className: css(styles.tabsScrollButton),\n        variant: \"plain\",\n        \"aria-label\": leftScrollAriaLabel,\n        onClick: this.scrollLeft\n      }, React.createElement(AngleLeftIcon, null)), React.createElement(\"ul\", {\n        className: css(styles.tabsList),\n        ref: this.tabList,\n        onScroll: this.handleScrollButtons\n      }, children.map(function (child, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          className: css(styles.tabsItem, child.props.eventKey === activeKey && styles.modifiers.current, className)\n        }, React.createElement(\"button\", {\n          className: css(styles.tabsButton),\n          onClick: function onClick(event) {\n            return _this2.handleTabClick(event, child.props.eventKey);\n          },\n          id: \"pf-tab-\".concat(child.props.eventKey, \"-\").concat(child.props.id || _this2.id),\n          \"aria-controls\": \"pf-tab-section-\".concat(child.props.eventKey, \"-\").concat(child.props.id || _this2.id)\n        }, child.props.title));\n      })), !isSecondary && React.createElement(\"button\", {\n        className: css(styles.tabsScrollButton),\n        variant: \"plain\",\n        \"aria-label\": rightScrollAriaLabel,\n        onClick: this.scrollRight\n      }, React.createElement(AngleRightIcon, null))), children.map(function (child, index) {\n        return React.createElement(TabContent, {\n          key: index,\n          activeKey: activeKey,\n          child: child,\n          index: index,\n          id: child.props.id || _this2.id\n        });\n      }));\n    }\n  }]);\n\n  return Tabs;\n}(React.Component);\n\n_defineProperty(Tabs, \"propTypes\", propTypes);\n\n_defineProperty(Tabs, \"defaultProps\", defaultProps);\n\nexport default Tabs;"],"sourceRoot":""}