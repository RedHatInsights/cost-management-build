{"version":3,"sources":["webpack:///./src/pages/onboardingModal/final/item.tsx","webpack:///./src/pages/onboardingModal/final/loader.tsx","webpack:///./src/pages/onboardingModal/final/index.tsx","webpack:///./src/utils/validators.ts","webpack:///./src/pages/onboardingModal/awsConfigure/form.tsx","webpack:///./src/pages/onboardingModal/awsConfigure/instructions.tsx","webpack:///./src/pages/onboardingModal/awsConfigure/awsConfigure.tsx","webpack:///./src/pages/onboardingModal/awsConfigure/index.ts","webpack:///./src/pages/onboardingModal/azureCreds/index.tsx","webpack:///./src/pages/onboardingModal/azureDataSource/index.tsx","webpack:///./src/pages/onboardingModal/configure/instructions.tsx","webpack:///./src/pages/onboardingModal/configure/index.ts","webpack:///./src/pages/onboardingModal/confirmDialog/index.tsx","webpack:///./src/pages/onboardingModal/enableAccountAccess/form.tsx","webpack:///./src/pages/onboardingModal/enableAccountAccess/instructions.tsx","webpack:///./src/pages/onboardingModal/enableAccountAccess/enableAccountAccess.tsx","webpack:///./src/pages/onboardingModal/enableAccountAccess/index.ts","webpack:///./src/pages/onboardingModal/iamPolicy/instructions.tsx","webpack:///./src/pages/onboardingModal/iamPolicy/index.ts","webpack:///./src/pages/onboardingModal/iamRole/instructions.tsx","webpack:///./src/pages/onboardingModal/iamRole/index.ts","webpack:///./src/pages/onboardingModal/obtainLogin/instructions.tsx","webpack:///./src/pages/onboardingModal/obtainLogin/index.ts","webpack:///./src/pages/onboardingModal/sourceKind/checkItem.tsx","webpack:///./src/pages/onboardingModal/sourceKind/checkList.styles.ts","webpack:///./src/pages/onboardingModal/sourceKind/checkList.tsx","webpack:///./src/pages/onboardingModal/sourceKind/form.tsx","webpack:///./src/pages/onboardingModal/sourceKind/instructions.tsx","webpack:///./src/pages/onboardingModal/sourceKind/sourceKind.tsx","webpack:///./src/pages/onboardingModal/sourceKind/index.tsx","webpack:///./src/pages/onboardingModal/usageCollector/form.tsx","webpack:///./src/pages/onboardingModal/usageCollector/instructions.tsx","webpack:///./src/pages/onboardingModal/usageCollector/usageCollector.tsx","webpack:///./src/pages/onboardingModal/usageCollector/index.ts","webpack:///./node_modules/react-merlin/src/index.js","webpack:///./src/pages/onboardingModal/wizard/index.ts","webpack:///./src/pages/onboardingModal/wizard/wizard.tsx","webpack:///./src/pages/onboardingModal/index.ts","webpack:///./src/testIds.ts"],"names":["item","title","value","react_default","a","createElement","style","paddingBottom","Title","size","sizes","md","lg","loader","Component","[object Object]","props","super","t","apiStatus","status","apiErrors","error","this","errorMessage","response","data","Error","undefined","errors","map","er","detail","join","message","name","type","clusterId","arn","azureAuth","azureCreds","parseError","Fragment","Alert","variant","xl","Object","keys","field","react_redux_es","common","state","onboarding","selectOnboardingName","selectOnboardingType","selectOnboardingClusterID","selectOnboardingArn","s3BucketName","selectOnboardingS3BucketName","selectAzureCreds","selectAzureAuth","selectApiErrors","selectApiStatus","es","sourceTypeValidator","sourceNameValidator","RegExp","test","ocpClusterIdValidator","awsS3BucketNameValidator","arnValidator","length","indexOf","awsConfigure_form","isValid","onChange","Form","onSubmit","e","preventDefault","FormGroup","fieldId","label","helperText","helperTextInvalid","TextInput","assign","testIds","s3_input","id","instructions","List","ListItem","awsConfigure","updateS3BucketName","s3BucketNameValid","_name","event","currentTarget","onboardingModal_awsConfigure","selectOnboardingValidation","onboardingModal_azureCreds","credsFields","clientId","tenantId","clientSecret","subscriptionId","updateCreds","valid","currValue","trim","azureDataSource","resourceGroup","storageAccount","updateDataSource","configure_instructions","Popover","position","aria-label","bodyContent","i18nKey","metering_operator","sub_text","path","Button","question_circle_icon","ClipboardCopy","textAriaLabel","configure","confirmDialog","isOpen","selectOnboardingConfirm","onCancel","hideConfirm","onConfirm","cancelOnboarding","Modal","isSmall","onClose","actions","key","onClick","enableAccountAccess_form","arn_input","enableAccountAccess_instructions","enableAccountAccess","updateArn","arnValid","onboardingModal_enableAccountAccess","iamPolicy_instructions","iampolicy","href","target","expansion","iamPolicy","iamRole_instructions","iamRole","obtainLogin_instructions","learn_more","obtainLogin","checkItem","children","isChecked","ariaLabel","Checkbox","margin","styles","StyleSheet","create","listWrapper","paddingLeft","esm","marginBottom","marginTop","listTitle","checkList","checkedItems","updateCheckItem","className","check_box_1","install_openshift","check_box_2","install_others","ansible","epel","sourceKind_form","updateName","nameValid","updateType","typeValid","name_input","FormSelect","type_selector","FormSelectOption","type_opt_non","type_opt_aws","type_opt_ocp","sourceKind_instructions","sourceKind","checked","updateCheck","Boolean","onboardingModal_sourceKind","selectOnboardingSourceKindChecked","updateSourceKindCheckList","checkAll","checkSourceKindCheckList","usageCollector_form","clusterid_input","usageCollector_instructions","usage_collector","korekuta_master","ocp_usage_sh","reporting-operator","usageCollector","updateClusterId","clusterIdValid","onboardingModal_usageCollector","updateClusterID","src_Merlin","node_modules_react_default","current","initialStep","index","setIndex","setState","propTypes","prop_types_default","func","isRequired","number","defaultProps","src","__webpack_exports__","isModalOpen","selectOnboardingModal","isInvalid","selectOnboardingIsInvalid","dirtyMap","selectOnboardingDirty","sourceKindChecked","bucket","displayConfirm","updateSources","sourceSettings","fetchSources","addSource","steps","onboardingModal_final","stepMap","isDirty","every","k","dirtyStepMap","btn_cancel","isDisabled","btn_back","btn_continue","provider_resource_name","billing_source_obj","billing_source","data_source","resource_group","storage_account","credentials","client_id","tenant_id","client_secret","subscription_id","authentication","height","width","isLarge","react_hot_loader__WEBPACK_IMPORTED_MODULE_0__","module","_wizard__WEBPACK_IMPORTED_MODULE_1__","getTestProps","data-testid","details","historical_data_btn","tag_lnk","show_more_btn","view_all_btn","export","cancel_btn","submit_btn","login","alert","form","username_input","password_input","submit","masthead","username","sidebarToggle","logout","btn_close","providers","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","view_all_link","sidebar","nav","link","backdrop"],"mappings":"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","file":"815d3bb55d65ef85fbe1.bundle.js","sourcesContent":["import { Title, TitleSize } from '@patternfly/react-core';\nimport React from 'react';\nconst Item = ({ title, value }) => (React.createElement(\"div\", { style: { paddingBottom: '12px' } },\n    React.createElement(Title, { size: TitleSize.md }, title),\n    React.createElement(Title, { size: TitleSize.lg }, value)));\nexport default Item;\n","import { Alert, Title, TitleSize } from '@patternfly/react-core';\nimport React from 'react';\nimport Item from './item';\nclass Loader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    parseError() {\n        const { t, apiStatus: status, apiErrors: error } = this.props;\n        if (status === 1 /* inProgress */) {\n            return null;\n        }\n        if (error === null) {\n            return null;\n        }\n        let errorMessage = t('onboarding.final.default_error');\n        if (error.response && error.response.data) {\n            errorMessage = error.response.data.Error;\n            if (!errorMessage && error.response.data.errors !== undefined) {\n                errorMessage = error.response.data.errors\n                    .map(er => er.detail)\n                    .join(', ');\n            }\n        }\n        else if (error.message) {\n            errorMessage = error.message;\n        }\n        return errorMessage;\n    }\n    render() {\n        const { t, name, type, clusterId, arn, azureAuth, azureCreds } = this.props;\n        const errors = this.parseError();\n        return (React.createElement(React.Fragment, null,\n            errors !== null && (React.createElement(\"div\", { style: { paddingBottom: '30px' } },\n                React.createElement(Alert, { variant: \"danger\", title: `${errors}. ${t('onboarding.final.please_revise')}` }))),\n            React.createElement(Title, { size: TitleSize.xl }, t('onboarding.final.title')),\n            React.createElement(\"p\", null, t('onboarding.final.desc')),\n            React.createElement(\"br\", null),\n            React.createElement(Item, { value: name, title: t('onboarding.final.name') }),\n            React.createElement(Item, { value: t(`onboarding.final.type.${type}`), title: t('onboarding.final.type.title') }),\n            type === 'AWS' && (React.createElement(Item, { value: arn, title: t('onboarding.final.arn') })),\n            type === 'OCP' && (React.createElement(Item, { value: clusterId, title: t('onboarding.final.cluster') })),\n            type === 'AZURE' &&\n                Object.keys(azureCreds).map(field => (React.createElement(Item, { value: azureCreds[field].value, title: t(`onboarding.final.${field}`) }))),\n            type === 'AZURE' &&\n                Object.keys(azureAuth).map(field => (React.createElement(Item, { value: azureAuth[field].value, title: t(`onboarding.final.${field}`) })))));\n    }\n}\nexport default Loader;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingSelectors } from 'store/onboarding';\nimport Loader from './loader';\nimport './loader.css';\nexport default connect(createMapStateToProps(state => ({\n    name: onboardingSelectors.selectOnboardingName(state),\n    type: onboardingSelectors.selectOnboardingType(state),\n    clusterId: onboardingSelectors.selectOnboardingClusterID(state),\n    arn: onboardingSelectors.selectOnboardingArn(state),\n    s3BucketName: onboardingSelectors.selectOnboardingS3BucketName(state),\n    azureCreds: onboardingSelectors.selectAzureCreds(state),\n    azureAuth: onboardingSelectors.selectAzureAuth(state),\n    apiErrors: onboardingSelectors.selectApiErrors(state),\n    apiStatus: onboardingSelectors.selectApiStatus(state),\n})), {})(translate()(Loader));\n","export const sourceTypeValidator = (value) => value !== '';\nexport const sourceNameValidator = (value) => new RegExp('^.').test(value);\nexport const ocpClusterIdValidator = (value) => new RegExp('^.').test(value);\nexport const awsS3BucketNameValidator = (value) => new RegExp('^[A-Za-z0-9]+[A-Za-z0-9_-]*$').test(value);\nexport const arnValidator = (value) => {\n    const arnPrefix = 'arn:aws:';\n    if (value.length < arnPrefix.length) {\n        return false;\n    }\n    if (value.length === arnPrefix.length) {\n        return value === arnPrefix;\n    }\n    return value.indexOf(arnPrefix) === 0;\n};\n","import { Form, FormGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\nimport { getTestProps, testIds } from 'testIds';\nconst S3BucketForm = ({ t, isValid, value, onChange }) => {\n    return (React.createElement(Form, { onSubmit: e => {\n            e.preventDefault();\n            return false;\n        } },\n        React.createElement(FormGroup, { isValid: isValid, fieldId: \"s3_bucket_name\", label: t('onboarding.aws_configure.s3_bucket_name_label'), helperText: t('onboarding.aws_configure.s3_bucket_name_helper_text'), helperTextInvalid: t('onboarding.aws_configure.s3_bucket_name_helper_text_invalid') },\n            React.createElement(TextInput, Object.assign({}, getTestProps(testIds.onboarding.s3_input), { isValid: isValid, id: \"s3_bucket_name\", value: value, onChange: onChange })))));\n};\nexport default S3BucketForm;\n","import { List, ListItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nconst AwsConfigureInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.aws_configure.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.aws_configure.intro')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null, t('onboarding.aws_configure.s3_bucket_account')),\n            React.createElement(ListItem, null,\n                t('onboarding.aws_configure.cost_report'),\n                React.createElement(List, null,\n                    React.createElement(ListItem, null, t('onboarding.aws_configure.report_name')),\n                    React.createElement(ListItem, null, t('onboarding.aws_configure.time_unit')),\n                    React.createElement(ListItem, null, t('onboarding.aws_configure.include')),\n                    React.createElement(ListItem, null, t('onboarding.aws_configure.support')),\n                    React.createElement(ListItem, null, t('onboarding.aws_configure.prefix')))),\n            React.createElement(ListItem, null, t('onboarding.aws_configure.enter_s3_bucket')))));\n};\nexport default AwsConfigureInstructions;\n","import React from 'react';\nimport { awsS3BucketNameValidator } from 'utils/validators';\nimport S3BucketForm from './form';\nimport AwsConfigureInstructions from './instructions';\nconst AwsConfigure = ({ t, s3BucketName, updateS3BucketName, s3BucketNameValid, }) => {\n    const onChange = (_name, event) => {\n        updateS3BucketName(event.currentTarget.value, awsS3BucketNameValidator);\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(AwsConfigureInstructions, { t: t }),\n        React.createElement(\"br\", null),\n        React.createElement(\"br\", null),\n        React.createElement(S3BucketForm, { t: t, onChange: onChange, isValid: s3BucketNameValid, value: s3BucketName })));\n};\nexport default AwsConfigure;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport AwsConfigure from './awsConfigure';\nexport default connect(createMapStateToProps(state => ({\n    s3BucketName: onboardingSelectors.selectOnboardingS3BucketName(state),\n    s3BucketNameValid: onboardingSelectors.selectOnboardingValidation(state)\n        .s3BucketNameValid,\n})), {\n    updateS3BucketName: onboardingActions.updateS3BucketName,\n})(translate()(AwsConfigure));\n","import { Form, FormGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nconst AzureCredsBase = ({ t, updateCreds, tenantId, clientId, clientSecret, subscriptionId, }) => {\n    return (React.createElement(Form, { onSubmit: e => {\n            e.preventDefault();\n            return false;\n        } },\n        React.createElement(FormGroup, { isValid: clientId.valid, fieldId: \"client-id\", label: t('onboarding.azure_creds.client_id'), helperText: t('onboarding.azure_creds.client_id_helper_text'), helperTextInvalid: t('onboarding.azure_creds.client_id_helper_text_invalid') },\n            React.createElement(TextInput, { isValid: clientId.valid, id: \"client-id\", value: clientId.value, onChange: value => updateCreds({ name: 'clientId', value }, currValue => currValue.trim().length > 0) })),\n        React.createElement(FormGroup, { isValid: clientSecret.valid, fieldId: \"client-secret\", label: t('onboarding.azure_creds.client_secret'), helperText: t('onboarding.azure_creds.client_secret_helper_text'), helperTextInvalid: t('onboarding.azure_creds.client_secret_helper_text_invalid') },\n            React.createElement(TextInput, { isValid: clientSecret.valid, id: \"client-secret\", value: clientSecret.value, onChange: value => updateCreds({ name: 'clientSecret', value }, currValue => currValue.trim().length > 0) })),\n        React.createElement(FormGroup, { isValid: tenantId.valid, fieldId: \"tenant-id\", label: t('onboarding.azure_creds.tenant_id'), helperText: t('onboarding.azure_creds.tenant_id_helper_text'), helperTextInvalid: t('onboarding.azure_creds.tenant_id_helper_text_invalid') },\n            React.createElement(TextInput, { isValid: tenantId.valid, id: \"tenant-id\", value: tenantId.value, onChange: value => updateCreds({ name: 'tenantId', value }, currValue => currValue.trim().length > 0) })),\n        React.createElement(FormGroup, { isValid: subscriptionId.valid, fieldId: \"subscription-id\", label: t('onboarding.azure_creds.subscription_id'), helperText: t('onboarding.azure_creds.subscription_id_helper_text'), helperTextInvalid: t('onboarding.azure_creds.subscription_id_helper_text_invalid') },\n            React.createElement(TextInput, { isValid: subscriptionId.valid, id: \"subscription-id\", value: subscriptionId.value, onChange: value => updateCreds({ name: 'subscriptionId', value }, currValue => currValue.trim().length > 0) }))));\n};\nexport default connect(createMapStateToProps(state => {\n    const credsFields = onboardingSelectors.selectAzureCreds(state);\n    return {\n        clientId: credsFields.clientId,\n        tenantId: credsFields.tenantId,\n        clientSecret: credsFields.clientSecret,\n        subscriptionId: credsFields.subscriptionId,\n    };\n}), {\n    updateCreds: onboardingActions.updateCreds,\n})(translate()(AzureCredsBase));\n","import { Form, FormGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nconst AzureAuthBase = ({ t, updateDataSource, resourceGroup, storageAccount, }) => {\n    return (React.createElement(Form, { onSubmit: e => {\n            e.preventDefault();\n            return false;\n        } },\n        React.createElement(FormGroup, { isValid: resourceGroup.valid, fieldId: \"resource-group\", label: t('onboarding.azure_auth.resource_group'), helperText: t('onboarding.azure_auth.resource_group_helper_text'), helperTextInvalid: t('onboarding.azure_auth.resource_group_helper_text_invalid') },\n            React.createElement(TextInput, { isValid: resourceGroup.valid, id: \"resource-group\", value: resourceGroup.value, onChange: value => updateDataSource({ name: 'resourceGroup', value }, currValue => currValue.trim().length > 0) })),\n        React.createElement(FormGroup, { isValid: storageAccount.valid, fieldId: \"storage-account\", label: t('onboarding.azure_auth.storage_account'), helperText: t('onboarding.azure_auth.storage_account_helper_text'), helperTextInvalid: t('onboarding.azure_auth.storage_account_helper_text_invalid') },\n            React.createElement(TextInput, { isValid: storageAccount.valid, id: \"storage-account\", value: storageAccount.value, onChange: value => updateDataSource({ name: 'storageAccount', value }, currValue => currValue.trim().length > 0) }))));\n};\nexport default connect(createMapStateToProps(state => {\n    const credsFields = onboardingSelectors.selectAzureAuth(state);\n    return {\n        resourceGroup: credsFields.resourceGroup,\n        storageAccount: credsFields.storageAccount,\n    };\n}), {\n    updateDataSource: onboardingActions.updateDataSource,\n})(translate()(AzureAuthBase));\n","import { Button, ClipboardCopy, List, ListItem, Popover, Title, } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { Interpolate } from 'react-i18next';\nconst ConfigureInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.configure.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.configure.instructions_text')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null,\n                t('onboarding.configure.edit_crontab'),\n                React.createElement(Popover, { position: \"right\", \"aria-label\": t('onboarding.configure.explain_more_about_cron'), bodyContent: React.createElement(\"div\", null,\n                        t('onboarding.configure.cron_user_reqs'),\n                        React.createElement(List, null,\n                            React.createElement(ListItem, null,\n                                React.createElement(Interpolate, { i18nKey: \"onboarding.configure.cron_user_req_1\", metering_operator: React.createElement(\"i\", null, \"metering-operator\") })),\n                            React.createElement(ListItem, null, t('onboarding.configure.cron_user_req_2'))),\n                        React.createElement(Interpolate, { i18nKey: \"onboarding.configure.cron_user_more\", sub_text: React.createElement(\"i\", null, \"ocpcollector\"), path: React.createElement(\"b\", null, \"/etc/sudoers\") }),\n                        React.createElement(\"br\", null),\n                        React.createElement(\"b\", null, \"ocpcollector ALL=(ALL) NOPASSWD: ALL\")) },\n                    React.createElement(Button, { variant: \"plain\" },\n                        React.createElement(QuestionCircleIcon, null))),\n                React.createElement(ClipboardCopy, { textAriaLabel: t('onboarding.configure.crontab_command') }, `crontab -u -e`)),\n            React.createElement(ListItem, null,\n                t('onboarding.configure.create_entry'),\n                React.createElement(ClipboardCopy, { textAriaLabel: t('onboarding.configure.entry_description') }, \"*/45 * * * * /path/to/ocp_usage.sh --collect\")),\n            React.createElement(ListItem, null,\n                \" \",\n                t('onboarding.configure.click_next'),\n                \" \"))));\n};\nexport default ConfigureInstructions;\n","import { translate } from 'react-i18next';\nimport ConfigureInstructions from './instructions';\nexport default translate()(ConfigureInstructions);\n","import { Button, Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nconst ConfirmDialogBase = ({ isOpen, onCancel, onConfirm, t, }) => (React.createElement(Modal, { isSmall: true, title: t('onboarding.confirm.title'), onClose: onCancel, isOpen: isOpen, actions: [\n        React.createElement(Button, { key: \"cancel\", variant: \"secondary\", onClick: onCancel }, t('onboarding.confirm.cancel')),\n        React.createElement(Button, { key: \"confirm\", variant: \"danger\", onClick: onConfirm }, t('onboarding.confirm.close')),\n    ] }, t('onboarding.confirm.message')));\nexport default connect(createMapStateToProps(state => ({\n    isOpen: onboardingSelectors.selectOnboardingConfirm(state),\n})), {\n    onCancel: onboardingActions.hideConfirm,\n    onConfirm: onboardingActions.cancelOnboarding,\n})(translate()(ConfirmDialogBase));\n","import { Form, FormGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\nimport { getTestProps, testIds } from 'testIds';\nconst ArnForm = ({ t, isValid, value, onChange }) => {\n    return (React.createElement(Form, { onSubmit: e => {\n            e.preventDefault();\n            return false;\n        } },\n        React.createElement(FormGroup, { isValid: isValid, fieldId: \"arn\", label: t('onboarding.enable_account_access.arn_label'), helperText: t('onboarding.enable_account_access.arn_helper_text'), helperTextInvalid: t('onboarding.enable_account_access.arn_helper_text_invalid') },\n            React.createElement(TextInput, Object.assign({}, getTestProps(testIds.onboarding.arn_input), { isValid: isValid, id: \"arn\", value: value, onChange: onChange })))));\n};\nexport default ArnForm;\n","import { List, ListItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nconst EnableAccountAccessInstructions = ({ t, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.enable_account_access.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.enable_account_access.intro')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null, t('onboarding.enable_account_access.select_role')),\n            React.createElement(ListItem, null, t('onboarding.enable_account_access.copy_arn')))));\n};\nexport default EnableAccountAccessInstructions;\n","import React from 'react';\nimport { arnValidator } from 'utils/validators';\nimport ArnForm from './form';\nimport EnableAccountAccessInstructions from './instructions';\nconst EnableAccountAccess = ({ t, arn, updateArn, arnValid, }) => {\n    const onChange = (_name, event) => {\n        updateArn(event.currentTarget.value, arnValidator);\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(EnableAccountAccessInstructions, { t: t }),\n        React.createElement(\"br\", null),\n        React.createElement(\"br\", null),\n        React.createElement(ArnForm, { t: t, onChange: onChange, isValid: arnValid, value: arn })));\n};\nexport default EnableAccountAccess;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport EnableAccountAccess from './enableAccountAccess';\nexport default connect(createMapStateToProps(state => ({\n    arn: onboardingSelectors.selectOnboardingArn(state),\n    arnValid: onboardingSelectors.selectOnboardingValidation(state).arnValid,\n})), {\n    updateArn: onboardingActions.updateArn,\n})(translate()(EnableAccountAccess));\n","import { ClipboardCopy, ClipboardCopyVariant, List, ListItem, Title, } from '@patternfly/react-core';\nimport React from 'react';\nimport { Interpolate } from 'react-i18next';\nconst IamPolicyInstructions = ({ t, s3BucketName }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.iam_policy.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.iam_policy.intro')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null,\n                React.createElement(Interpolate, { iampolicy: React.createElement(\"a\", { href: \"https://docs.aws.amazon.com/IAM/latest/UserGuide/console.html\", target: \"_blank\" }, t('onboarding.iam_policy.link_text')), i18nKey: \"onboarding.iam_policy.sign_in\" })),\n            React.createElement(ListItem, null,\n                t('onboarding.iam_policy.new_policy'),\n                React.createElement(\"br\", null),\n                React.createElement(ClipboardCopy, { textAriaLabel: t('onboarding.iam_policy.json_content'), variant: ClipboardCopyVariant.expansion }, `{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"VisualEditor0\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:Get*\",\n                \"s3:List*\"\n            ],\n            \"Resource\": [\n              \"arn:aws:s3:::${s3BucketName}\",\n              \"arn:aws:s3:::${s3BucketName}/*\"\n            ]\n        },\n        {\n            \"Sid\": \"VisualEditor1\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:ListAllMyBuckets\",\n                \"iam:ListAccountAliases\",\n                \"s3:HeadBucket\",\n                \"cur:DescribeReportDefinitions\",\n                \"organizations:List*\",\n                \"organizations:Describe*\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}`)),\n            React.createElement(ListItem, null, t('onboarding.iam_policy.complete_process'))),\n        React.createElement(\"br\", null),\n        React.createElement(\"br\", null),\n        React.createElement(\"div\", null,\n            React.createElement(\"b\", null, t('onboarding.iam_policy.donot_close_browser')),\n            t('onboarding.iam_policy.note'))));\n};\nexport default IamPolicyInstructions;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingSelectors } from 'store/onboarding';\nimport IamPolicyInstructions from './instructions';\nexport default connect(createMapStateToProps(state => ({\n    s3BucketName: onboardingSelectors.selectOnboardingS3BucketName(state),\n})), {})(translate()(IamPolicyInstructions));\n","import { ClipboardCopy, List, ListItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nconst IamRoleInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.iam_role.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.iam_role.intro')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null, t('onboarding.iam_role.create_new_role')),\n            React.createElement(ListItem, null,\n                t('onboarding.iam_role.paste_account_id'),\n                React.createElement(\"br\", null),\n                React.createElement(ClipboardCopy, { textAriaLabel: t('onboarding.iam_role.paste_account_id_aria') }, \"589173575009\")),\n            React.createElement(ListItem, null, t('onboarding.iam_role.attach_permissions')),\n            React.createElement(ListItem, null, t('onboarding.iam_role.complete_process')))));\n};\nexport default IamRoleInstructions;\n","import { translate } from 'react-i18next';\nimport IamRole from './instructions';\nexport default translate()(IamRole);\n","import { Button, ClipboardCopy, List, ListItem, Popover, Title, } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { Interpolate } from 'react-i18next';\nconst ObtainLoginInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.obtain_login.instructions_title')),\n        React.createElement(\"div\", null,\n            t('onboarding.obtain_login.intro'),\n            React.createElement(Popover, { \"aria-label\": t('onboarding.obtain_login.popover_aria_label'), position: \"top\", bodyContent: React.createElement(Interpolate, { i18nKey: \"onboarding.obtain_login.popover_content\", metering_operator: React.createElement(\"i\", null, \"reporting-operator\"), learn_more: React.createElement(\"a\", { href: \"\" }, t('onboarding.obtain_login.learn_more')) }) },\n                React.createElement(Button, { variant: \"plain\" },\n                    React.createElement(QuestionCircleIcon, null)))),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null, t('onboarding.obtain_login.obtain_token')),\n            React.createElement(ListItem, null,\n                t('onboarding.obtain_login.run_command'),\n                React.createElement(\"br\", null),\n                React.createElement(ClipboardCopy, { textAriaLabel: t('onboarding.obtain_login.run_command_aria_label') }, \"oc serviceaccounts get-token reporting-operator > ocp_usage_token\")),\n            React.createElement(ListItem, null, t('onboarding.obtain_login.security')))));\n};\nexport default ObtainLoginInstructions;\n","import { translate } from 'react-i18next';\nimport ObtainLogin from './instructions';\nexport default translate()(ObtainLogin);\n","import { Checkbox } from '@patternfly/react-core';\nimport React from 'react';\nconst CheckItem = ({ children, onChange, title, isChecked = false, ariaLabel = null, id = null, }) => (React.createElement(\"div\", null,\n    React.createElement(Checkbox, { isChecked: isChecked, onChange: onChange, label: title, id: id, \"aria-label\": ariaLabel }),\n    React.createElement(\"span\", { style: { margin: '10px 0 10px 20px' } }, children)));\nexport default CheckItem;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    listWrapper: {\n        paddingLeft: global_spacer_md.value,\n        marginBottom: global_spacer_md.value,\n        marginTop: `-${global_spacer_md.value}`,\n    },\n    listTitle: {\n        marginBottom: global_spacer_md.value,\n    },\n});\n","import { List, ListItem } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { Interpolate, translate } from 'react-i18next';\nimport { getTestProps, testIds } from 'testIds';\nimport CheckItem from './checkItem';\nimport { styles } from './checkList.styles';\nconst SourceKindCheckListBase = ({ t, checkedItems, updateCheckItem, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: css(styles.listTitle) }, t('onboarding.source_kind.checklist_title')),\n        React.createElement(CheckItem, Object.assign({}, getTestProps(testIds.onboarding.check_box_1), { isChecked: checkedItems.install_openshift, title: t('onboarding.source_kind.checkbox_1'), onChange: updateCheckItem, id: 'install_openshift', ariaLabel: t('onboarding.source_kind.checkbox_1_aria_label') }),\n            React.createElement(\"div\", { className: css(styles.listWrapper) },\n                React.createElement(List, null,\n                    React.createElement(ListItem, null,\n                        React.createElement(\"a\", { target: \"_blank\", href: \"https://docs.openshift.com/container-platform/3.11/getting_started/install_openshift.html\" }, t('onboarding.source_kind.checkbox_1_1'))),\n                    React.createElement(ListItem, null,\n                        React.createElement(\"a\", { target: \"_blank\", href: \"https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html/configuring_clusters/installing-operator-framework\" }, t('onboarding.source_kind.checkbox_1_2')))))),\n        React.createElement(CheckItem, Object.assign({}, getTestProps(testIds.onboarding.check_box_2), { isChecked: checkedItems.install_others, title: t('onboarding.source_kind.checkbox_2'), onChange: updateCheckItem, id: 'install_others', ariaLabel: t('onboarding.source_kind.checkbox_2_aria_label') }),\n            React.createElement(\"div\", { className: css(styles.listWrapper) },\n                React.createElement(List, null,\n                    React.createElement(ListItem, null,\n                        React.createElement(\"a\", { target: \"_blank\", href: \"https://access.redhat.com/products/red-hat-insights#getstarted\" }, t('onboarding.source_kind.checkbox_2_1'))),\n                    React.createElement(ListItem, null,\n                        React.createElement(Interpolate, { i18nKey: \"onboarding.source_kind.checkbox_2_2\", ansible: React.createElement(\"a\", { target: \"_blank\", href: \"https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html#basics-what-will-be-installed\" }, t('onboarding.source_kind.ansible')), epel: React.createElement(\"a\", { target: \"_blank\", href: \"https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html#basics-what-will-be-installed\" }, t('onboarding.source_kind.epel')) })),\n                    React.createElement(ListItem, null,\n                        React.createElement(\"a\", { target: \"_blank\", href: \"https://docs.openshift.com/container-platform/3.11/cli_reference/get_started_cli.html\" }, t('onboarding.source_kind.checkbox_2_3'))))))));\n};\nexport default translate()(SourceKindCheckListBase);\n","import { Form, FormGroup, FormSelect, FormSelectOption, TextInput, } from '@patternfly/react-core';\nimport React from 'react';\nimport { getTestProps, testIds } from 'testIds';\nconst SourceKindForm = ({ t, name, updateName, nameValid, type, updateType, typeValid, }) => {\n    return (React.createElement(Form, { onSubmit: e => {\n            e.preventDefault();\n            return false;\n        } },\n        React.createElement(FormGroup, { isValid: nameValid, helperTextInvalid: t('onboarding.name_helper_invalid_text'), helperText: t('onboarding.name_helper_text'), fieldId: \"source_name\", label: t('onboarding.name_label') },\n            React.createElement(TextInput, Object.assign({}, getTestProps(testIds.onboarding.name_input), { isValid: nameValid, id: \"source_name\", value: name, onChange: updateName }))),\n        React.createElement(FormGroup, { isValid: typeValid, fieldId: \"source_type\", label: t('onboarding.type_label') },\n            React.createElement(FormSelect, Object.assign({}, getTestProps(testIds.onboarding.type_selector), { isValid: typeValid, value: type, id: \"source_type\", onChange: updateType }),\n                React.createElement(FormSelectOption, Object.assign({}, getTestProps(testIds.onboarding.type_opt_non), { label: t('onboarding.select_type_label'), value: \"\" })),\n                React.createElement(FormSelectOption, Object.assign({}, getTestProps(testIds.onboarding.type_opt_aws), { label: t('onboarding.type_options.aws'), value: \"AWS\" })),\n                React.createElement(FormSelectOption, Object.assign({}, getTestProps(testIds.onboarding.type_opt_aws), { label: t('onboarding.type_options.azure'), value: \"AZURE\" })),\n                React.createElement(FormSelectOption, Object.assign({}, getTestProps(testIds.onboarding.type_opt_ocp), { label: t('onboarding.type_options.ocp'), value: \"OCP\" }))))));\n};\nexport default SourceKindForm;\n","import { Title } from '@patternfly/react-core';\nimport React from 'react';\nconst SourceKindInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.source_kind.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.source_kind.instructions_text')),\n        React.createElement(\"br\", null)));\n};\nexport default SourceKindInstructions;\n","import React from 'react';\nimport { sourceNameValidator, sourceTypeValidator } from 'utils/validators';\nimport SourceKindCheckList from './checkList';\nimport SourceKindForm from './form';\nimport SourceKindInstructions from './instructions';\nconst SourceKind = ({ t, name, updateName, nameValid, type, updateType, typeValid, checked, updateCheck, }) => {\n    const updateNameText = (_name, event) => {\n        updateName(event.currentTarget.value, sourceNameValidator);\n    };\n    const updateTypeOption = (value, event) => {\n        updateType(value, sourceTypeValidator);\n    };\n    const updateCheckItem = (value, event) => {\n        updateCheck({ item: event.currentTarget.id, value });\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(SourceKindInstructions, { t: t }),\n        React.createElement(SourceKindForm, { updateName: updateNameText, updateType: updateTypeOption, name: name, nameValid: nameValid, type: type, typeValid: typeValid, t: t }),\n        React.createElement(\"br\", null),\n        Boolean(type === 'OCP') && (React.createElement(SourceKindCheckList, { checkedItems: checked, updateCheckItem: updateCheckItem }))));\n};\nexport default SourceKind;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport SourceKind from './sourceKind';\nexport default connect(createMapStateToProps(state => (Object.assign({ name: onboardingSelectors.selectOnboardingName(state), type: onboardingSelectors.selectOnboardingType(state), checked: onboardingSelectors.selectOnboardingSourceKindChecked(state) }, onboardingSelectors.selectOnboardingValidation(state)))), {\n    updateName: onboardingActions.updateName,\n    updateType: onboardingActions.updateType,\n    updateCheck: onboardingActions.updateSourceKindCheckList,\n    checkAll: onboardingActions.checkSourceKindCheckList,\n})(translate()(SourceKind));\n","import { Button, Form, FormGroup, Popover, TextInput, } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { Interpolate } from 'react-i18next';\nimport { getTestProps, testIds } from 'testIds';\nconst ClusterForm = ({ t, isValid, value, onChange }) => {\n    return (React.createElement(Form, { onSubmit: e => {\n            e.preventDefault();\n            return false;\n        } },\n        React.createElement(FormGroup, { isValid: isValid, fieldId: \"cluster_id\", label: t('onboarding.usage_collector.cluster_id_label') },\n            React.createElement(Popover, { \"aria-label\": t('onboarding.usage_collector.popover_clusterid_aria_label'), position: \"bottom\", bodyContent: React.createElement(Interpolate, { i18nKey: \"onboarding.usage_collector.popover_clusterid_content\", path: React.createElement(\"b\", null, \"~/.config/ocp_usage/config.json\") }) },\n                React.createElement(Button, { variant: \"plain\" },\n                    React.createElement(QuestionCircleIcon, null))),\n            React.createElement(TextInput, Object.assign({}, getTestProps(testIds.onboarding.clusterid_input), { isValid: isValid, id: \"cluster_id\", value: value, onChange: onChange })))));\n};\nexport default ClusterForm;\n","import { Button, List, ListItem, Popover, Title, TitleSize, } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { Interpolate } from 'react-i18next';\nconst UsageCollectorInstructions = ({ t, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: TitleSize.xl }, t('onboarding.usage_collector.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.usage_collector.instructions_text')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null,\n                React.createElement(Interpolate, { i18nKey: \"onboarding.usage_collector.download_and_install\", usage_collector: React.createElement(\"a\", { href: \"https://github.com/project-koku/korekuta/archive/master.zip\", target: \"_blank\" }, t('onboarding.usage_collector.ocp_usage_collector')) })),\n            React.createElement(ListItem, null,\n                React.createElement(Interpolate, { i18nKey: \"onboarding.usage_collector.navigate\", korekuta_master: React.createElement(\"b\", null, \"korekuta-master\"), ocp_usage_sh: React.createElement(\"i\", null, \"ocp_usage.sh\") })),\n            React.createElement(ListItem, null,\n                React.createElement(Interpolate, { i18nKey: \"onboarding.usage_collector.run\", ocp_usage_sh: React.createElement(\"i\", null, \"ocp_usage.sh\") }),\n                React.createElement(\"br\", null),\n                React.createElement(Interpolate, { i18nKey: \"onboarding.usage_collector.example_text\", \"reporting-operator\": React.createElement(\"i\", null, \"reporting-operator\") }),\n                React.createElement(\"br\", null),\n                React.createElement(\"br\", null),\n                \"# ./ocp_usage.sh --setup -e OCP_API=\\\"https://api.openshift-prod.mycompany.com\\\" -e OCP_METERING_NAMESPACE=\\\"metering\\\" -e OCP_TOKEN_PATH=\\\"/path/to/ocp_usage_token\\\" -e METERING_API=\\\"https://metering.metering.api.ocp.com\\u201D\",\n                React.createElement(Popover, { \"aria-label\": t('onboarding.usage_collector.popover_cmd_aria_label'), position: \"right\", bodyContent: t('onboarding.usage_collector.popover_cmd_content') },\n                    React.createElement(Button, { variant: \"plain\" },\n                        React.createElement(QuestionCircleIcon, null)))),\n            React.createElement(ListItem, null, t('onboarding.usage_collector.configuration_complete')))));\n};\nexport default UsageCollectorInstructions;\n","import React from 'react';\nimport { ocpClusterIdValidator } from 'utils/validators';\nimport ClusterIdForm from './form';\nimport Instructions from './instructions';\nconst UsageCollector = ({ t, clusterId, updateClusterId, clusterIdValid, }) => {\n    const onChange = (_name, event) => {\n        updateClusterId(event.currentTarget.value, ocpClusterIdValidator);\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Instructions, { t: t }),\n        React.createElement(\"br\", null),\n        React.createElement(\"br\", null),\n        React.createElement(ClusterIdForm, { t: t, onChange: onChange, isValid: clusterIdValid, value: clusterId })));\n};\nexport default UsageCollector;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport UsageCollector from './usageCollector';\nexport default connect(createMapStateToProps(state => ({\n    clusterId: onboardingSelectors.selectOnboardingClusterID(state),\n    clusterIdValid: onboardingSelectors.selectOnboardingValidation(state)\n        .clusterIdValid,\n})), {\n    updateClusterId: onboardingActions.updateClusterID,\n})(translate()(UsageCollector));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Merlin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: this.props.initialStep,\n    };\n  }\n\n  render() {\n    return this.props.children({\n      index: this.state.current,\n      setIndex: current => {\n        this.setState(() => ({\n          current,\n        }));\n      },\n    });\n  }\n}\n\nMerlin.propTypes = {\n  children: PropTypes.func.isRequired,\n  initialStep: PropTypes.number,\n};\n\nMerlin.defaultProps = {\n  initialStep: 0,\n};\n\nexport default Merlin;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport { sourcesActions } from 'store/sourceSettings';\nimport { WizardBase } from './wizard';\nexport default connect(createMapStateToProps(state => ({\n    isModalOpen: onboardingSelectors.selectOnboardingModal(state),\n    isInvalid: onboardingSelectors.selectOnboardingIsInvalid(state),\n    dirtyMap: onboardingSelectors.selectOnboardingDirty(state),\n    sourceKindChecked: onboardingSelectors.selectOnboardingSourceKindChecked(state),\n    type: onboardingSelectors.selectOnboardingType(state),\n    name: onboardingSelectors.selectOnboardingName(state),\n    bucket: onboardingSelectors.selectOnboardingS3BucketName(state),\n    clusterId: onboardingSelectors.selectOnboardingClusterID(state),\n    arn: onboardingSelectors.selectOnboardingArn(state),\n    azureCreds: onboardingSelectors.selectAzureCreds(state),\n    azureAuth: onboardingSelectors.selectAzureAuth(state),\n    status: onboardingSelectors.selectApiStatus(state),\n    errors: onboardingSelectors.selectApiErrors(state),\n})), {\n    cancelOnboarding: onboardingActions.displayConfirm,\n    updateSources: sourcesActions.fetchSources,\n    addSource: onboardingActions.addSource,\n})(translate()(WizardBase));\n","import { Button, Modal } from '@patternfly/react-core';\nimport Final from 'pages/onboardingModal//final';\nimport AwsConfigure from 'pages/onboardingModal/awsConfigure';\nimport AzureCreds from 'pages/onboardingModal/azureCreds';\nimport AzureDataSource from 'pages/onboardingModal/azureDataSource';\nimport Configure from 'pages/onboardingModal/configure';\nimport ConfirmDialog from 'pages/onboardingModal/confirmDialog';\nimport EnableAccountAccess from 'pages/onboardingModal/enableAccountAccess';\nimport IamPolicy from 'pages/onboardingModal/iamPolicy';\nimport IamRole from 'pages/onboardingModal/iamRole';\nimport ObtainLogin from 'pages/onboardingModal/obtainLogin';\nimport SourceKind from 'pages/onboardingModal/sourceKind';\nimport UsageCollector from 'pages/onboardingModal/usageCollector';\nimport React from 'react';\nimport Merlin from 'react-merlin';\nimport { getTestProps, testIds } from 'testIds';\nconst stepMap = type => {\n    switch (type) {\n        case 'AZURE':\n            return [\n                React.createElement(SourceKind, { key: \"source_kind\" }),\n                React.createElement(AzureCreds, { key: \"azure_creds\" }),\n                React.createElement(AzureDataSource, { key: \"azure_auth\" }),\n                React.createElement(Final, { key: \"aws_final\" }),\n            ];\n        case 'AWS':\n            return [\n                React.createElement(SourceKind, { key: \"source_kind\" }),\n                React.createElement(AwsConfigure, { key: \"aws_configure\" }),\n                React.createElement(IamPolicy, { key: \"aws_iam_policy\" }),\n                React.createElement(IamRole, { key: \"aws_iam_role\" }),\n                React.createElement(EnableAccountAccess, { key: \"enable_account_access\" }),\n                React.createElement(Final, { key: \"aws_final\" }),\n            ];\n        case 'OCP':\n            return [\n                React.createElement(SourceKind, { key: \"source_kind\" }),\n                React.createElement(ObtainLogin, { key: \"obtain_login\" }),\n                React.createElement(UsageCollector, { key: \"usage_collector\" }),\n                React.createElement(Configure, { key: \"configure\" }),\n                React.createElement(Final, { key: \"final\" }),\n            ];\n        default:\n            return [React.createElement(SourceKind, { key: \"source_kind\" })];\n    }\n};\nconst dirtyStepMap = (dirtyMap, sourceKindChecked) => type => {\n    switch (type) {\n        case 'AZURE':\n            return [\n                dirtyMap.name && dirtyMap.type,\n                dirtyMap.clientId &&\n                    dirtyMap.tenantId &&\n                    dirtyMap.clientSecret &&\n                    dirtyMap.subscriptionId,\n                dirtyMap.resourceGroup && dirtyMap.storageAccount,\n                true,\n            ];\n        case 'AWS':\n            return [\n                dirtyMap.name && dirtyMap.type,\n                dirtyMap.s3BucketName,\n                true,\n                true,\n                dirtyMap.arn,\n                true,\n            ];\n        case 'OCP':\n            return [\n                dirtyMap.name &&\n                    dirtyMap.type &&\n                    Object.keys(sourceKindChecked).every(k => sourceKindChecked[k]),\n                true,\n                dirtyMap.clusterId,\n                true,\n                true,\n            ];\n        default:\n            return [];\n    }\n};\nexport const WizardBase = ({ t, cancelOnboarding, updateSources, isModalOpen, isInvalid, dirtyMap, sourceKindChecked, status, type, bucket, name, arn, clusterId, addSource, azureCreds, azureAuth, }) => {\n    const steps = stepMap(type);\n    const isDirty = dirtyStepMap(dirtyMap, sourceKindChecked)(type);\n    return (React.createElement(Merlin, null, ({ index, setIndex }) => {\n        if (type === '' && index !== 0) {\n            setIndex(0);\n        }\n        const actions = [\n            (type === '' || index < steps.length) && (React.createElement(Button, Object.assign({}, getTestProps(testIds.onboarding.btn_cancel), { key: \"wizard_cancel\", variant: \"secondary\", id: \"wizard_cancel_button\", isDisabled: status === 1 /* inProgress */, onClick: () => {\n                    cancelOnboarding();\n                } }), t('onboarding.wizard.cancel'))),\n            index > 0 && (React.createElement(Button, Object.assign({}, getTestProps(testIds.onboarding.btn_back), { key: \"wizard_back\", variant: \"secondary\", id: \"wizard_back_button\", isDisabled: status === 1 /* inProgress */, onClick: () => setIndex(index - 1) }), t('onboarding.wizard.back'))),\n            type === '' && (React.createElement(Button, { isDisabled: true, key: \"wizard_init_continue\", variant: \"primary\", id: \"wizard_init_button\" }, t('onboarding.wizard.next'))),\n            type !== '' && index < steps.length - 1 && (React.createElement(Button, Object.assign({}, getTestProps(testIds.onboarding.btn_continue), { isDisabled: !isDirty[index] || isInvalid, key: \"wizard_continue\", variant: \"primary\", id: \"wizard_continue_button\", onClick: () => {\n                    setIndex(index + 1);\n                } }), t('onboarding.wizard.next'))),\n            type !== '' && index === steps.length - 1 && (React.createElement(Button, Object.assign({}, getTestProps(testIds.onboarding.btn_continue), { isDisabled: status === 1 /* inProgress */, key: \"wizard_finish\", variant: \"primary\", id: \"wizard_finish_button\", onClick: () => {\n                    const provider_resource_name = type === 'OCP' ? clusterId : type === 'AWS' ? arn : null;\n                    let billing_source_obj = null;\n                    if (type === 'AWS') {\n                        billing_source_obj = { billing_source: { bucket } };\n                    }\n                    if (type === 'AZURE') {\n                        billing_source_obj = {\n                            billing_source: {\n                                data_source: {\n                                    resource_group: azureAuth.resourceGroup.value,\n                                    storage_account: azureAuth.storageAccount.value,\n                                },\n                            },\n                        };\n                    }\n                    const credentials = type === 'AZURE'\n                        ? {\n                            client_id: azureCreds.clientId.value,\n                            tenant_id: azureCreds.tenantId.value,\n                            client_secret: azureCreds.clientSecret.value,\n                            subscription_id: azureCreds.subscriptionId.value,\n                        }\n                        : null;\n                    addSource(Object.assign({ type,\n                        name, authentication: {\n                            provider_resource_name,\n                            credentials,\n                        } }, billing_source_obj));\n                } }), t('onboarding.wizard.add_source'))),\n        ];\n        return (React.createElement(React.Fragment, null,\n            React.createElement(ConfirmDialog, null),\n            React.createElement(Modal, { style: {\n                    height: '700px',\n                    width: '800px',\n                }, isLarge: true, title: t('onboarding.wizard.title'), isOpen: isModalOpen, actions: actions, onClose: () => {\n                    cancelOnboarding();\n                } }, steps[index])));\n    }));\n};\n","import { hot } from 'react-hot-loader';\nimport Wizard from './wizard';\nexport default hot(module)(Wizard);\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        historical_data_btn: 'historical-data-btn',\n        tag_lnk: 'tag-lnk',\n        show_more_btn: 'show-more-btn',\n        view_all_btn: 'view-all-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n        view_all_link: 'view-all-lnk',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n"],"sourceRoot":""}