{"version":3,"file":"8eb55e347d3cb2dbc78e.bundle.js","mappings":"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","sources":["webpack://koku-ui/./node_modules/@patternfly/react-icons/dist/esm/icons/calculator-icon.js","webpack://koku-ui/./node_modules/@patternfly/react-icons/dist/esm/icons/download-icon.js","webpack://koku-ui/./node_modules/@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon.js","webpack://koku-ui/./node_modules/@patternfly/react-icons/dist/esm/icons/export-icon.js","webpack://koku-ui/./node_modules/@patternfly/react-icons/dist/esm/icons/filter-icon.js","webpack://koku-ui/./node_modules/@patternfly/react-icons/dist/esm/icons/outlined-clock-icon.js","webpack://koku-ui/./node_modules/@patternfly/react-icons/dist/esm/icons/search-icon.js","webpack://koku-ui/./node_modules/@patternfly/react-icons/dist/esm/icons/sync-icon.js","webpack://koku-ui/./node_modules/@patternfly/react-icons/dist/esm/icons/times-icon.js","webpack://koku-ui/./node_modules/@patternfly/react-tokens/dist/js/chart_color_cyan_300.js","webpack://koku-ui/./node_modules/@patternfly/react-tokens/dist/js/chart_color_gold_300.js","webpack://koku-ui/./node_modules/@patternfly/react-tokens/dist/js/chart_color_purple_300.js","webpack://koku-ui/./node_modules/@patternfly/react-tokens/dist/js/global_Color_100.js","webpack://koku-ui/./node_modules/@patternfly/react-tokens/dist/js/global_Color_200.js","webpack://koku-ui/./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_sm.js","webpack://koku-ui/./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_xs.js","webpack://koku-ui/./node_modules/@patternfly/react-tokens/dist/js/global_danger_color_200.js","webpack://koku-ui/./node_modules/@patternfly/react-tokens/dist/js/global_disabled_color_100.js","webpack://koku-ui/./node_modules/@patternfly/react-tokens/dist/js/global_spacer_3xl.js","webpack://koku-ui/./node_modules/js-file-download/file-download.js","webpack://koku-ui/./src/pages/views/components/perspective/perspective.styles.ts","webpack://koku-ui/./src/pages/views/components/perspective/perspectiveSelect.tsx","webpack://koku-ui/./src/pages/views/components/perspective/perspective.tsx","webpack://koku-ui/./src/utils/computedReport/getComputedExplorerReportItems.ts","webpack://koku-ui/./src/pages/views/explorer/explorer.styles.ts","webpack://koku-ui/./node_modules/victory-stack/es/helper-methods.js","webpack://koku-ui/./node_modules/victory-stack/es/victory-stack.js","webpack://koku-ui/./node_modules/@patternfly/react-charts/dist/esm/components/ChartStack/ChartStack.js","webpack://koku-ui/./src/pages/views/components/charts/costExplorerChart/costExplorerChart.styles.ts","webpack://koku-ui/./src/pages/views/components/charts/costExplorerChart/costExplorerChart.tsx","webpack://koku-ui/./src/pages/views/explorer/explorerChart.styles.ts","webpack://koku-ui/./src/pages/views/explorer/explorerChart.tsx","webpack://koku-ui/./src/pages/views/explorer/dateRange.tsx","webpack://koku-ui/./src/pages/views/explorer/explorerFilter.styles.ts","webpack://koku-ui/./src/pages/views/explorer/explorerFilter.tsx","webpack://koku-ui/./src/pages/views/explorer/explorerHeader.styles.ts","webpack://koku-ui/./src/pages/views/explorer/explorerHeader.tsx","webpack://koku-ui/./src/pages/views/explorer/explorerTable.styles.ts","webpack://koku-ui/./src/pages/views/explorer/explorerTable.tsx","webpack://koku-ui/./src/pages/views/explorer/explorerToolbar.tsx","webpack://koku-ui/./src/pages/views/explorer/explorer.tsx","webpack://koku-ui/./src/pages/views/explorer/index.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const CalculatorIconConfig = {\n  name: 'CalculatorIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M400 0H48C22.4 0 0 22.4 0 48v416c0 25.6 22.4 48 48 48h352c25.6 0 48-22.4 48-48V48c0-25.6-22.4-48-48-48zM128 435.2c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-128c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm128 128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm128 128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8V268.8c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v166.4zm0-256c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8V76.8C64 70.4 70.4 64 76.8 64h294.4c6.4 0 12.8 6.4 12.8 12.8v102.4z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const CalculatorIcon = createIcon(CalculatorIconConfig);\n\nexport default CalculatorIcon;","import { createIcon } from '../createIcon';\n\nexport const DownloadIconConfig = {\n  name: 'DownloadIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M216 0h80c13.3 0 24 10.7 24 24v168h87.7c17.8 0 26.7 21.5 14.1 34.1L269.7 378.3c-7.5 7.5-19.8 7.5-27.3 0L90.1 226.1c-12.6-12.6-3.7-34.1 14.1-34.1H192V24c0-13.3 10.7-24 24-24zm296 376v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h146.7l49 49c20.1 20.1 52.5 20.1 72.6 0l49-49H488c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const DownloadIcon = createIcon(DownloadIconConfig);\n\nexport default DownloadIcon;","import { createIcon } from '../createIcon';\n\nexport const ExclamationCircleIconConfig = {\n  name: 'ExclamationCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExclamationCircleIcon = createIcon(ExclamationCircleIconConfig);\n\nexport default ExclamationCircleIcon;","import { createIcon } from '../createIcon';\n\nexport const ExportIconConfig = {\n  name: 'ExportIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExportIcon = createIcon(ExportIconConfig);\n\nexport default ExportIcon;","import { createIcon } from '../createIcon';\n\nexport const FilterIconConfig = {\n  name: 'FilterIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const FilterIcon = createIcon(FilterIconConfig);\n\nexport default FilterIcon;","import { createIcon } from '../createIcon';\n\nexport const OutlinedClockIconConfig = {\n  name: 'OutlinedClockIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OutlinedClockIcon = createIcon(OutlinedClockIconConfig);\n\nexport default OutlinedClockIcon;","import { createIcon } from '../createIcon';\n\nexport const SearchIconConfig = {\n  name: 'SearchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const SearchIcon = createIcon(SearchIconConfig);\n\nexport default SearchIcon;","import { createIcon } from '../createIcon';\n\nexport const SyncIconConfig = {\n  name: 'SyncIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M440.65 12.57l4 82.77A247.16 247.16 0 0 0 255.83 8C134.73 8 33.91 94.92 12.29 209.82A12 12 0 0 0 24.09 224h49.05a12 12 0 0 0 11.67-9.26 175.91 175.91 0 0 1 317-56.94l-101.46-4.86a12 12 0 0 0-12.57 12v47.41a12 12 0 0 0 12 12H500a12 12 0 0 0 12-12V12a12 12 0 0 0-12-12h-47.37a12 12 0 0 0-11.98 12.57zM255.83 432a175.61 175.61 0 0 1-146-77.8l101.8 4.87a12 12 0 0 0 12.57-12v-47.4a12 12 0 0 0-12-12H12a12 12 0 0 0-12 12V500a12 12 0 0 0 12 12h47.35a12 12 0 0 0 12-12.6l-4.15-82.57A247.17 247.17 0 0 0 255.83 504c121.11 0 221.93-86.92 243.55-201.82a12 12 0 0 0-11.8-14.18h-49.05a12 12 0 0 0-11.67 9.26A175.86 175.86 0 0 1 255.83 432z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const SyncIcon = createIcon(SyncIconConfig);\n\nexport default SyncIcon;","import { createIcon } from '../createIcon';\n\nexport const TimesIconConfig = {\n  name: 'TimesIcon',\n  height: 512,\n  width: 352,\n  svgPath: 'M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const TimesIcon = createIcon(TimesIconConfig);\n\nexport default TimesIcon;","\"use strict\";\nexports.__esModule = true;\nexports.chart_color_cyan_300 = {\n  \"name\": \"--pf-chart-color-cyan-300\",\n  \"value\": \"#009596\",\n  \"var\": \"var(--pf-chart-color-cyan-300, #009596)\"\n};\nexports[\"default\"] = exports.chart_color_cyan_300;","\"use strict\";\nexports.__esModule = true;\nexports.chart_color_gold_300 = {\n  \"name\": \"--pf-chart-color-gold-300\",\n  \"value\": \"#f4c145\",\n  \"var\": \"var(--pf-chart-color-gold-300, #f4c145)\"\n};\nexports[\"default\"] = exports.chart_color_gold_300;","\"use strict\";\nexports.__esModule = true;\nexports.chart_color_purple_300 = {\n  \"name\": \"--pf-chart-color-purple-300\",\n  \"value\": \"#5752d1\",\n  \"var\": \"var(--pf-chart-color-purple-300, #5752d1)\"\n};\nexports[\"default\"] = exports.chart_color_purple_300;","\"use strict\";\nexports.__esModule = true;\nexports.global_Color_100 = {\n  \"name\": \"--pf-global--Color--100\",\n  \"value\": \"#151515\",\n  \"var\": \"var(--pf-global--Color--100)\"\n};\nexports[\"default\"] = exports.global_Color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_Color_200 = {\n  \"name\": \"--pf-global--Color--200\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--Color--200)\"\n};\nexports[\"default\"] = exports.global_Color_200;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_sm = {\n  \"name\": \"--pf-global--FontSize--sm\",\n  \"value\": \"0.875rem\",\n  \"var\": \"var(--pf-global--FontSize--sm)\"\n};\nexports[\"default\"] = exports.global_FontSize_sm;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_xs = {\n  \"name\": \"--pf-global--FontSize--xs\",\n  \"value\": \"0.75rem\",\n  \"var\": \"var(--pf-global--FontSize--xs)\"\n};\nexports[\"default\"] = exports.global_FontSize_xs;","\"use strict\";\nexports.__esModule = true;\nexports.global_danger_color_200 = {\n  \"name\": \"--pf-global--danger-color--200\",\n  \"value\": \"#a30000\",\n  \"var\": \"var(--pf-global--danger-color--200)\"\n};\nexports[\"default\"] = exports.global_danger_color_200;","\"use strict\";\nexports.__esModule = true;\nexports.global_disabled_color_100 = {\n  \"name\": \"--pf-global--disabled-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--disabled-color--100)\"\n};\nexports[\"default\"] = exports.global_disabled_color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_3xl = {\n  \"name\": \"--pf-global--spacer--3xl\",\n  \"value\": \"4rem\",\n  \"var\": \"var(--pf-global--spacer--3xl)\"\n};\nexports[\"default\"] = exports.global_spacer_3xl;","module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // Fixes \"webkit blob resource error 1\"\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200)\n    }\n}\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    perspectiveSelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    perspectiveLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n        whiteSpace: 'nowrap',\n    },\n    perspectiveOptionLabel: {\n        marginBottom: 6,\n        marginLeft: 8,\n        marginTop: 6,\n    },\n};\n","import { Select, SelectOption, SelectVariant, Title } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { styles } from './perspective.styles';\nclass PerspectiveSelectBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelectOptions = () => {\n            const { intl, options } = this.props;\n            const selections = [];\n            options.map(option => {\n                selections.push({\n                    toString: () => intl.formatMessage(option.label, { value: option.value }),\n                    value: option.value,\n                });\n            });\n            return selections;\n        };\n        this.getSelect = () => {\n            const { currentItem, intl, isDisabled, options } = this.props;\n            const { isSelectOpen } = this.state;\n            if (options.length === 1) {\n                return (React.createElement(\"div\", { style: styles.perspectiveOptionLabel }, intl.formatMessage(options[0].label, { value: options[0].value })));\n            }\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === currentItem);\n            return (React.createElement(Select, { id: \"perspectiveSelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.handleSelect = (event, selection) => {\n            const { onSelected } = this.props;\n            if (onSelected) {\n                onSelected(selection.value);\n            }\n            this.setState({\n                isSelectOpen: false,\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(\"div\", { style: styles.perspectiveSelector },\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\", style: styles.perspectiveLabel }, intl.formatMessage(messages.perspective)),\n            this.getSelect()));\n    }\n}\nconst PerspectiveSelect = injectIntl(PerspectiveSelectBase);\nexport { PerspectiveSelect };\n","import messages from 'locales/messages';\nimport { PerspectiveSelect } from 'pages/views/components/perspective/perspectiveSelect';\nimport React from 'react';\nimport { withRouter } from 'react-router';\n// Infrastructure AWS options\nconst infrastructureAwsOptions = [{ label: messages.perspectiveValues, value: 'aws' }];\n// Infrastructure AWS filtered by OpenShift options\nconst infrastructureAwsOcpOptions = [{ label: messages.perspectiveValues, value: 'aws_ocp' }];\n// Infrastructure Azure options\nconst infrastructureAzureOptions = [{ label: messages.perspectiveValues, value: 'azure' }];\n// Infrastructure Oci options\nconst infrastructureOciOptions = [{ label: messages.perspectiveValues, value: 'oci' }];\n// Infrastructure Azure filtered by OpenShift options\nconst infrastructureAzureOcpOptions = [{ label: messages.perspectiveValues, value: 'azure_ocp' }];\n// Infrastructure GCP options\nconst infrastructureGcpOptions = [{ label: messages.perspectiveValues, value: 'gcp' }];\n// Infrastructure GCP filtered by OCP options\nconst infrastructureGcpOcpOptions = [{ label: messages.perspectiveValues, value: 'gcp_ocp' }];\n// Infrastructure IBM options\nconst infrastructureIbmOptions = [{ label: messages.perspectiveValues, value: 'ibm' }];\n// Infrastructure IBM filtered by OCP options\nconst infrastructureIbmOcpOptions = [{ label: messages.perspectiveValues, value: 'ibm_ocp' }];\n// Infrastructure Ocp cloud options\nconst infrastructureOcpCloudOptions = [{ label: messages.perspectiveValues, value: 'ocp_cloud' }];\n// Ocp options\nconst ocpOptions = [{ label: messages.perspectiveValues, value: 'ocp' }];\nconst getInfrastructureOptions = ({ hasAws, hasAwsOcp, hasAzure, hasAzureOcp, hasGcp, hasGcpOcp, hasIbm, hasIbmOcp, hasOci, isIbmFeatureEnabled, isOciFeatureEnabled, }) => {\n    const options = [];\n    if (hasAws) {\n        options.push(...infrastructureAwsOptions);\n    }\n    if (hasAwsOcp) {\n        options.push(...infrastructureAwsOcpOptions);\n    }\n    if (hasGcp) {\n        options.push(...infrastructureGcpOptions);\n    }\n    if (hasGcpOcp) {\n        options.push(...infrastructureGcpOcpOptions);\n    }\n    if (hasIbm) {\n        options.push(...infrastructureIbmOptions);\n    }\n    if (hasIbmOcp && isIbmFeatureEnabled) {\n        options.push(...infrastructureIbmOcpOptions);\n    }\n    if (hasAzure) {\n        options.push(...infrastructureAzureOptions);\n    }\n    if (hasAzureOcp) {\n        options.push(...infrastructureAzureOcpOptions);\n    }\n    if (hasOci && isOciFeatureEnabled) {\n        options.push(...infrastructureOciOptions);\n    }\n    return options;\n};\nconst OverviewPerspectiveBase = ({ currentItem, hasAws, hasAwsOcp, hasAzure, hasAzureOcp, hasGcp, hasGcpOcp, hasIbm, hasIbmOcp, hasOci, hasOcp, hasOcpCloud, isDisabled, isIbmFeatureEnabled, isInfrastructureTab, isOciFeatureEnabled, onSelected, }) => {\n    // Dynamically show options if providers are available\n    const options = [];\n    if (isInfrastructureTab !== undefined) {\n        if (isInfrastructureTab) {\n            if (hasOcpCloud) {\n                options.push(...infrastructureOcpCloudOptions);\n            }\n            options.push(...getInfrastructureOptions({\n                hasAws,\n                hasAwsOcp,\n                hasAzure,\n                hasAzureOcp,\n                hasGcp,\n                hasGcpOcp,\n                hasIbm,\n                hasIbmOcp,\n                hasOci,\n                isIbmFeatureEnabled,\n                isOciFeatureEnabled,\n            }));\n        }\n        else if (hasOcp) {\n            options.push(...ocpOptions);\n        }\n    }\n    else {\n        if (hasOcp) {\n            options.push(...ocpOptions);\n        }\n        if (hasOcpCloud) {\n            options.push(...infrastructureOcpCloudOptions);\n        }\n        options.push(...getInfrastructureOptions({\n            hasAws,\n            hasAwsOcp,\n            hasAzure,\n            hasAzureOcp,\n            hasGcp,\n            hasGcpOcp,\n            hasIbm,\n            hasIbmOcp,\n            hasOci,\n            isIbmFeatureEnabled,\n            isOciFeatureEnabled,\n        }));\n    }\n    return (React.createElement(PerspectiveSelect, { currentItem: currentItem || options[0].value, isDisabled: isDisabled, onSelected: onSelected, options: options }));\n};\nconst Perspective = withRouter(OverviewPerspectiveBase);\nexport { Perspective };\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.account) {\n        return 'account';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.gcp_project) {\n        return 'gcp_project';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    if (groupBy.org_unit_id) {\n        return 'org_unit_id';\n    }\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.resource_location) {\n        return 'resource_location';\n    }\n    if (groupBy.service) {\n        return 'service';\n    }\n    if (groupBy.service_name) {\n        return 'service_name';\n    }\n    if (groupBy.subscription_guid) {\n        return 'subscription_guid';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    chartContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    chartContent: {\n        paddingTop: global_spacer_lg.value,\n    },\n    explorer: {\n        minHeight: '100%',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    tableContent: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n};\n","import _orderBy from \"lodash/orderBy\";\nimport _keys from \"lodash/keys\";\nimport _assign from \"lodash/assign\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Helpers, Scale, Wrapper } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nvar fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: 50\n}; // Assumes data in `datasets` is sorted by `Data.getData`.\n\nfunction fillData(props, datasets) {\n  var fillInMissingData = props.fillInMissingData;\n  var xMap = datasets.reduce(function (prev, dataset) {\n    dataset.forEach(function (datum) {\n      prev[datum._x instanceof Date ? datum._x.getTime() : datum._x] = true;\n    });\n    return prev;\n  }, {});\n\n  var xKeys = _keys(xMap).map(function (k) {\n    return +k;\n  });\n\n  var xArr = _orderBy(xKeys);\n\n  return datasets.map(function (dataset) {\n    var indexOffset = 0;\n    var isDate = dataset[0] && dataset[0]._x instanceof Date;\n    var filledInData = xArr.map(function (x, index) {\n      x = +x;\n      var datum = dataset[index - indexOffset];\n\n      if (datum) {\n        var x1 = isDate ? datum._x.getTime() : datum._x;\n\n        if (x1 === x) {\n          return datum;\n        } else {\n          indexOffset++;\n          var y = fillInMissingData ? 0 : null;\n          x = isDate ? new Date(x) : x;\n          return {\n            x: x,\n            y: y,\n            _x: x,\n            _y: y\n          };\n        }\n      } else {\n        var _y = fillInMissingData ? 0 : null;\n\n        x = isDate ? new Date(x) : x;\n        return {\n          x: x,\n          y: _y,\n          _x: x,\n          _y: _y\n        };\n      }\n    });\n    return filledInData;\n  });\n}\n\nfunction getY0(datum, index, datasets) {\n  if (datum.y0) {\n    return datum.y0;\n  }\n\n  var y = datum._y;\n  var group = datum._group;\n  var firstDatasetBaseline = datasets[0].map(function (d) {\n    return d.y0;\n  });\n  var previousDatasets = datasets.slice(0, index);\n  var previousPoints = previousDatasets.reduce(function (prev, dataset) {\n    return prev.concat(dataset.filter(function (previousDatum) {\n      return datum._x instanceof Date ? previousDatum._x.getTime() === datum._x.getTime() : previousDatum._x === datum._x;\n    }).map(function (previousDatum) {\n      return previousDatum._y || 0;\n    }));\n  }, []);\n  var y0 = previousPoints.length && previousPoints.reduce(function (memo, value) {\n    var sameSign = y < 0 && value < 0 || y >= 0 && value >= 0;\n    return sameSign ? +value + memo : memo;\n  }, firstDatasetBaseline[group] || 0);\n  return previousPoints.some(function (point) {\n    return point instanceof Date;\n  }) ? new Date(y0) : y0;\n}\n/* eslint-disable no-nested-ternary */\n\n\nfunction addLayoutData(props, datasets, index) {\n  var xOffset = props.xOffset || 0;\n  return datasets[index].map(function (datum) {\n    var yOffset = getY0(datum, index, datasets) || 0;\n    return _assign({}, datum, {\n      _y0: !(datum._y instanceof Date) ? yOffset : yOffset ? new Date(yOffset) : datum._y,\n      _y1: datum._y === null ? null : datum._y instanceof Date ? new Date(+datum._y + +yOffset) : datum._y + yOffset,\n      _x1: datum._x === null ? null : datum._x instanceof Date ? new Date(+datum._x + +xOffset) : datum._x + xOffset\n    });\n  });\n}\n/* eslint-enable no-nested-ternary */\n\n\nfunction stackData(props, childComponents) {\n  var dataFromChildren = Wrapper.getDataFromChildren(props, childComponents);\n  var filterNullChildData = dataFromChildren.map(function (dataset) {\n    return dataset.filter(function (datum) {\n      return datum._x !== null && datum._y !== null;\n    });\n  });\n  var datasets = fillData(props, filterNullChildData);\n  return datasets.map(function (d, i) {\n    return addLayoutData(props, datasets, i);\n  });\n}\n\nexport function getCalculatedProps(props, childComponents) {\n  childComponents = childComponents || React.Children.toArray(props.children);\n  var role = \"stack\";\n  props = Helpers.modifyProps(props, fallbackProps, role);\n  var style = Wrapper.getStyle(props.theme, props.style, role);\n  var categories = props.categories || Wrapper.getCategories(props, childComponents);\n  var datasets = props.datasets || stackData(props, childComponents);\n  var children = childComponents.map(function (c, i) {\n    return React.cloneElement(c, {\n      data: datasets[i]\n    });\n  });\n  var domain = {\n    x: Wrapper.getDomain(_assign({}, props, {\n      categories: categories\n    }), \"x\", children),\n    y: Wrapper.getDomain(_assign({}, props, {\n      categories: categories\n    }), \"y\", children)\n  };\n  var range = props.range || {\n    x: Helpers.getRange(props, \"x\"),\n    y: Helpers.getRange(props, \"y\")\n  };\n  var baseScale = {\n    x: Scale.getScaleFromProps(props, \"x\") || Wrapper.getScale(props, \"x\"),\n    y: Scale.getScaleFromProps(props, \"y\") || Wrapper.getScale(props, \"y\")\n  };\n  var scale = {\n    x: baseScale.x.domain(domain.x).range(props.horizontal ? range.y : range.x),\n    y: baseScale.y.domain(domain.y).range(props.horizontal ? range.x : range.y)\n  };\n  var _props = props,\n      colorScale = _props.colorScale,\n      horizontal = _props.horizontal;\n  return {\n    datasets: datasets,\n    categories: categories,\n    range: range,\n    domain: domain,\n    horizontal: horizontal,\n    scale: scale,\n    style: style,\n    colorScale: colorScale,\n    role: role\n  };\n} // We need to remove sharedEvents in order to memoize the calculated data\n// With shared events, the props change on every event, and every value is re-calculated\n\nvar withoutSharedEvents = function (props) {\n  var children = props.children;\n  var modifiedChildren = React.Children.toArray(children).map(function (child) {\n    return _objectSpread({}, child, {\n      props: Helpers.omit(child.props, [\"sharedEvents\"])\n    });\n  });\n  props.children = modifiedChildren;\n  return props;\n};\n\nexport function useMemoizedProps(initialProps) {\n  var modifiedProps = withoutSharedEvents(initialProps);\n\n  var _React$useState = React.useState(modifiedProps),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      props = _React$useState2[0],\n      setProps = _React$useState2[1]; // React.memo uses shallow equality to compare objects. This way props\n  // will only be re-calculated when they change.\n\n\n  React.useEffect(function () {\n    if (!isEqual(modifiedProps, props)) {\n      setProps(modifiedProps);\n    }\n  }, [props, setProps, modifiedProps]);\n  return React.useMemo(function () {\n    return getCalculatedProps(props, props.children);\n  }, [props]);\n}\n\nfunction getLabels(props, datasets, index) {\n  if (!props.labels) {\n    return undefined;\n  }\n\n  return datasets.length === index + 1 ? props.labels : undefined;\n}\n\nexport function getChildProps(props, calculatedProps) {\n  var categories = calculatedProps.categories,\n      domain = calculatedProps.domain,\n      range = calculatedProps.range,\n      scale = calculatedProps.scale,\n      horizontal = calculatedProps.horizontal;\n  return {\n    height: props.height,\n    width: props.width,\n    padding: Helpers.getPadding(props),\n    standalone: false,\n    theme: props.theme,\n    categories: categories,\n    domain: domain,\n    range: range,\n    scale: scale,\n    horizontal: horizontal\n  };\n}\n\nfunction getColorScale(props, child) {\n  var role = child.type && child.type.role;\n  var colorScaleOptions = child.props.colorScale || props.colorScale;\n\n  if (role !== \"group\" && role !== \"stack\") {\n    return undefined;\n  }\n\n  return props.theme ? colorScaleOptions || props.theme.props.colorScale : colorScaleOptions;\n}\n\nexport function getChildren(props, childComponents, calculatedProps) {\n  props = Helpers.modifyProps(props, fallbackProps, \"stack\");\n  childComponents = childComponents || React.Children.toArray(props.children);\n  calculatedProps = calculatedProps || getCalculatedProps(props, childComponents);\n  var _calculatedProps = calculatedProps,\n      datasets = _calculatedProps.datasets;\n  var childProps = getChildProps(props, calculatedProps);\n  var parentName = props.name || \"stack\";\n  return childComponents.map(function (child, index) {\n    var role = child.type && child.type.role;\n    var data = datasets[index];\n    var style = Wrapper.getChildStyle(child, index, calculatedProps);\n    var labels = props.labels ? getLabels(props, datasets, index) : child.props.labels;\n    var name = child.props.name || \"\".concat(parentName, \"-\").concat(role, \"-\").concat(index);\n    return React.cloneElement(child, _assign({\n      key: \"\".concat(name, \"-key-\").concat(index),\n      labels: labels,\n      name: name,\n      domainPadding: child.props.domainPadding || props.domainPadding,\n      theme: props.theme,\n      labelComponent: props.labelComponent || child.props.labelComponent,\n      style: style,\n      colorScale: getColorScale(props, child),\n      data: data,\n      polar: props.polar\n    }, childProps));\n  });\n}","import _isEmpty from \"lodash/isEmpty\";\nimport _defaults from \"lodash/defaults\";\nimport _assign from \"lodash/assign\";\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Helpers, VictoryContainer, VictoryTheme, CommonProps, Wrapper, PropTypes as CustomPropTypes, Hooks } from \"victory-core\";\nimport { VictorySharedEvents } from \"victory-shared-events\";\nimport { getChildren, useMemoizedProps } from \"./helper-methods\";\nimport isEqual from \"react-fast-compare\";\nvar fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: 50\n};\n\nvar VictoryStack = function (initialProps) {\n  // eslint-disable-next-line no-use-before-define\n  var role = VictoryStackMemo.role;\n\n  var _Hooks$useAnimationSt = Hooks.useAnimationState(),\n      setAnimationState = _Hooks$useAnimationSt.setAnimationState,\n      getAnimationProps = _Hooks$useAnimationSt.getAnimationProps,\n      getProps = _Hooks$useAnimationSt.getProps;\n\n  var props = getProps(initialProps);\n  var modifiedProps = Helpers.modifyProps(props, fallbackProps, role);\n  var eventKey = modifiedProps.eventKey,\n      containerComponent = modifiedProps.containerComponent,\n      standalone = modifiedProps.standalone,\n      groupComponent = modifiedProps.groupComponent,\n      externalEventMutations = modifiedProps.externalEventMutations,\n      width = modifiedProps.width,\n      height = modifiedProps.height,\n      theme = modifiedProps.theme,\n      polar = modifiedProps.polar,\n      horizontal = modifiedProps.horizontal,\n      name = modifiedProps.name;\n  var childComponents = React.Children.toArray(modifiedProps.children);\n  var calculatedProps = useMemoizedProps(modifiedProps);\n  var domain = calculatedProps.domain,\n      scale = calculatedProps.scale,\n      style = calculatedProps.style,\n      origin = calculatedProps.origin;\n  var newChildren = React.useMemo(function () {\n    var children = getChildren(props, childComponents, calculatedProps);\n    var orderedChildren = children.map(function (child, index) {\n      var childProps = _assign({\n        animate: getAnimationProps(props, child, index, \"victory-stack\")\n      }, child.props);\n\n      return React.cloneElement(child, childProps);\n    });\n    /*\n      reverse render order for children of `VictoryStack` so that higher children in the stack\n      are rendered behind lower children. This looks nicer for stacked bars with cornerRadius, and\n      areas with strokes\n    */\n\n    return orderedChildren.reverse();\n  }, [props, childComponents, calculatedProps, getAnimationProps]);\n  var containerProps = React.useMemo(function () {\n    if (standalone) {\n      return {\n        domain: domain,\n        scale: scale,\n        width: width,\n        height: height,\n        standalone: standalone,\n        theme: theme,\n        style: style.parent,\n        horizontal: horizontal,\n        polar: polar,\n        origin: origin,\n        name: name\n      };\n    }\n\n    return {};\n  }, [standalone, domain, scale, width, height, theme, style, horizontal, polar, origin, name]);\n  var container = React.useMemo(function () {\n    if (standalone) {\n      var defaultContainerProps = _defaults({}, containerComponent.props, containerProps);\n\n      return React.cloneElement(containerComponent, defaultContainerProps);\n    }\n\n    return groupComponent;\n  }, [groupComponent, standalone, containerComponent, containerProps]);\n  var events = React.useMemo(function () {\n    return Wrapper.getAllEvents(props);\n  }, [props]);\n  var previousProps = Hooks.usePreviousProps(initialProps);\n  React.useEffect(function () {\n    // This is called before dismount to keep state in sync\n    return function () {\n      if (initialProps.animate) {\n        setAnimationState(previousProps, initialProps);\n      }\n    };\n  }, [setAnimationState, previousProps, initialProps]);\n\n  if (!_isEmpty(events)) {\n    return React.createElement(VictorySharedEvents, {\n      container: container,\n      eventKey: eventKey,\n      events: events,\n      externalEventMutations: externalEventMutations\n    }, newChildren);\n  }\n\n  return React.cloneElement(container, container.props, newChildren);\n};\n\nVictoryStack.propTypes = _objectSpread({}, CommonProps.baseProps, {\n  bins: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([CustomPropTypes.nonNegative, PropTypes.instanceOf(Date)])), CustomPropTypes.nonNegative]),\n  categories: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.shape({\n    x: PropTypes.arrayOf(PropTypes.string),\n    y: PropTypes.arrayOf(PropTypes.string)\n  })]),\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  colorScale: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.oneOf([\"grayscale\", \"qualitative\", \"heatmap\", \"warm\", \"cool\", \"red\", \"green\", \"blue\"])]),\n  fillInMissingData: PropTypes.bool,\n  horizontal: PropTypes.bool,\n  labelComponent: PropTypes.element,\n  labels: PropTypes.oneOfType([PropTypes.func, PropTypes.array]),\n  style: PropTypes.shape({\n    parent: PropTypes.object,\n    data: PropTypes.object,\n    labels: PropTypes.object\n  }),\n  xOffset: PropTypes.number\n});\nVictoryStack.defaultProps = {\n  containerComponent: React.createElement(VictoryContainer, null),\n  groupComponent: React.createElement(\"g\", null),\n  standalone: true,\n  theme: VictoryTheme.grayscale,\n  fillInMissingData: true\n};\nvar VictoryStackMemo = React.memo(VictoryStack, isEqual);\nVictoryStackMemo.displayName = \"VictoryStack\";\nVictoryStackMemo.role = \"stack\";\nVictoryStackMemo.expectedComponents = [\"groupComponent\", \"containerComponent\", \"labelComponent\"];\nVictoryStackMemo.getChildren = getChildren;\nexport default VictoryStackMemo;","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryStack } from 'victory-stack';\nimport { ChartContainer } from '../ChartContainer';\nimport { getClassName, getDefaultPatternProps, getTheme, renderChildrenWithPatterns } from '../ChartUtils';\nexport const ChartStack = (_a) => {\n    var { ariaDesc, ariaTitle, children, colorScale, containerComponent = React.createElement(ChartContainer, null), hasPatterns, patternScale, themeColor, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    themeVariant, \n    // destructure last\n    theme = getTheme(themeColor) } = _a, rest = __rest(_a, [\"ariaDesc\", \"ariaTitle\", \"children\", \"colorScale\", \"containerComponent\", \"hasPatterns\", \"patternScale\", \"themeColor\", \"themeVariant\", \"theme\"]);\n    // Clone so users can override container props\n    const container = React.cloneElement(containerComponent, Object.assign(Object.assign({ desc: ariaDesc, title: ariaTitle, theme }, containerComponent.props), { className: getClassName({ className: containerComponent.props.className }) // Override VictoryContainer class name\n     }));\n    const { defaultPatternScale } = getDefaultPatternProps({\n        colorScale,\n        hasPatterns,\n        patternScale,\n        themeColorScale: theme.stack.colorScale\n    });\n    // Note: containerComponent is required for theme\n    return (React.createElement(VictoryStack, Object.assign({ colorScale: colorScale, containerComponent: container, theme: theme }, rest), renderChildrenWithPatterns({\n        children,\n        patternScale: defaultPatternScale\n    })));\n};\nChartStack.displayName = 'ChartStack';\n// Note: VictoryStack.getChildren & VictoryStack.role must be hoisted\nhoistNonReactStatics(ChartStack, VictoryStack);\n//# sourceMappingURL=ChartStack.js.map","import { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_cyan_300 } from '@patternfly/react-tokens/dist/js/chart_color_cyan_300';\nimport { chart_color_gold_300 } from '@patternfly/react-tokens/dist/js/chart_color_gold_300';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nimport { chart_color_purple_300 } from '@patternfly/react-tokens/dist/js/chart_color_purple_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    colorScale: [\n        chart_color_blue_300.value,\n        chart_color_gold_300.value,\n        chart_color_green_300.value,\n        chart_color_purple_300.value,\n        chart_color_orange_300.value,\n        chart_color_cyan_300.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n    yAxisAlt: {\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'pages/views/components/charts/common/charts-common.scss';\nimport { Chart, ChartAxis, ChartBar, ChartLegend, ChartLegendTooltip, ChartStack, ChartThemeColor, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport messages from 'locales/messages';\nimport { default as ChartTheme } from 'pages/views/components/charts/chartTheme';\nimport { getMaxValue } from 'pages/views/components/charts/common/chartDatumUtils';\nimport { getChartNames, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'pages/views/components/charts/common/chartUtils';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { formatCurrencyAbbreviation } from 'utils/format';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './costExplorerChart.styles';\nclass CostExplorerChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            tickValues: [],\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData } = this.props;\n            const series = [];\n            if (top1stData && top1stData.length) {\n                const name = this.getTruncatedString(top1stData[0].name);\n                series.push({\n                    childName: 'top1stData',\n                    data: this.initDatumChildName(top1stData, 'top1stData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[0],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[0],\n                        },\n                    },\n                });\n            }\n            if (top2ndData && top2ndData.length) {\n                const name = this.getTruncatedString(top2ndData[0].name);\n                series.push({\n                    childName: 'top2ndData',\n                    data: this.initDatumChildName(top2ndData, 'top2ndData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[1],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[1],\n                        },\n                    },\n                });\n            }\n            if (top3rdData && top3rdData.length) {\n                const name = this.getTruncatedString(top3rdData[0].name);\n                series.push({\n                    childName: 'top3rdData',\n                    data: this.initDatumChildName(top3rdData, 'top3rdData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[2],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[2],\n                        },\n                    },\n                });\n            }\n            if (top4thData && top4thData.length) {\n                const name = this.getTruncatedString(top4thData[0].name);\n                series.push({\n                    childName: 'top4thData',\n                    data: this.initDatumChildName(top4thData, 'top4thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[3],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[3],\n                        },\n                    },\n                });\n            }\n            if (top5thData && top5thData.length) {\n                const name = this.getTruncatedString(top5thData[0].name);\n                series.push({\n                    childName: 'top5thData',\n                    data: this.initDatumChildName(top5thData, 'top5thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[4],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[4],\n                        },\n                    },\n                });\n            }\n            if (top6thData && top6thData.length) {\n                const name = this.getTruncatedString(top6thData[0].name);\n                series.push({\n                    childName: 'top6thData',\n                    data: this.initDatumChildName(top6thData, 'top6thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[5],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[5],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            const units = this.getUnits(series);\n            this.setState({ cursorVoronoiContainer, series, tickValues: this.getTickValues(), units });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (width > 675 && width < 1250) {\n                    adjustedContainerHeight += 25;\n                }\n                else if (width > 400 && width < 650) {\n                    adjustedContainerHeight += 50;\n                }\n                else if (width <= 400) {\n                    adjustedContainerHeight += 150;\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        // If bar width exceeds max and domainPadding is true, extra width is returned to help center bars horizontally\n        this.getBarWidth = (domainPadding = false) => {\n            const { hiddenSeries, series, width } = this.state;\n            const maxWidth = 200;\n            let maxValue = -1;\n            if (series) {\n                series.forEach((s, index) => {\n                    if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                        if (s.data.length > maxValue) {\n                            maxValue = s.data.length;\n                        }\n                    }\n                });\n            }\n            // Divide available width into equal sections\n            const sections = maxValue * 2 + 1;\n            const sectionWidth = maxValue > 0 ? width / sections : 0;\n            if (domainPadding) {\n                // Add any extra bar width for domain padding\n                const extraWidth = sectionWidth > maxWidth ? (sectionWidth - maxWidth) * maxValue : 0;\n                return (sectionWidth + extraWidth / 2) * 2;\n            }\n            return sectionWidth > maxWidth ? maxWidth : sectionWidth;\n        };\n        this.getChart = (series, index, barWidth) => {\n            const { hiddenSeries } = this.state;\n            const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n            return (React.createElement(ChartBar, { barWidth: barWidth, data: data, key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        // Returns domain only if max y values are zero\n        this.getDomain = (series, hiddenSeries) => {\n            let maxValue = -1;\n            let domain;\n            if (series) {\n                series.forEach((s, index) => {\n                    if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                        const max = getMaxValue(s.data);\n                        maxValue = Math.max(maxValue, max);\n                    }\n                });\n            }\n            if (maxValue <= 0) {\n                domain = { y: [0, 100] };\n            }\n            return domain;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const { hiddenSeries, series } = this.state;\n            const result = getInteractiveLegendEvents({\n                chartNames: getChartNames(series),\n                isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n                isHidden: index => isSeriesHidden(hiddenSeries, index),\n                legendName: 'legend',\n                onLegendClick: props => this.handleLegendClick(props.index),\n            });\n            return result;\n        };\n        this.getLegend = () => {\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: \"legend\", responsive: false }));\n        };\n        // This ensures we show every 3rd tick value, including the first and last value\n        //\n        // Note: We're not using Victory's tickCount because it won't always include the last tick value.\n        this.getTickValues = () => {\n            const { top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData } = this.props;\n            // Find the datum with the greatest number of values\n            const allDatums = [top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData];\n            let datum;\n            allDatums.map(val => {\n                if (!datum || datum.length < val.length) {\n                    datum = val;\n                }\n            });\n            const values = [];\n            datum.map(val => {\n                values.push(val.x);\n            });\n            // Prune tick values\n            const tickValues = [];\n            const modVal = values.length < 6 ? 2 : 3;\n            for (let i = 0; i < values.length; i++) {\n                if (i % modVal === 0 && i + 2 < values.length) {\n                    tickValues.push(values[i]);\n                }\n                else if (values.length < 3 && i + 1 < values.length) {\n                    tickValues.push(values[i]);\n                }\n            }\n            tickValues.push(values[values.length - 1]);\n            return tickValues;\n        };\n        this.getTruncatedString = (str) => {\n            const maxChars = 20;\n            return str.length > maxChars ? str.substr(0, maxChars - 1) + '...' : str;\n        };\n        this.getTickValue = (t) => {\n            const { units } = this.state;\n            return formatCurrencyAbbreviation(t, units);\n        };\n        this.getUnits = (series) => {\n            if (series) {\n                for (const s of series) {\n                    for (const datum of s.data) {\n                        if (datum.units) {\n                            return datum.units;\n                        }\n                    }\n                }\n            }\n            return 'USD';\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.top1stData !== this.props.top1stData ||\n            prevProps.top2ndData !== this.props.top2ndData ||\n            prevProps.top3rdData !== this.props.top3rdData ||\n            prevProps.top4thData !== this.props.top4thData ||\n            prevProps.top5thData !== this.props.top5thData ||\n            prevProps.top6thData !== this.props.top6thData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    render() {\n        const { height, intl, padding = {\n            bottom: 50,\n            left: 40,\n            right: 8,\n            top: 8,\n        }, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, tickValues, width } = this.state;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        const barWidth = this.getBarWidth();\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n            React.createElement(\"div\", { style: { height, width } },\n                React.createElement(Chart, { containerComponent: container, domain: this.getDomain(series, hiddenSeries), domainPadding: { x: this.getBarWidth(true) }, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, themeColor: ChartThemeColor.multiOrdered, width: width },\n                    series && series.length > 0 && (React.createElement(ChartStack, null, series.map((s, index) => this.getChart(s, index, barWidth)))),\n                    React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: tickValues, fixLabelOverlap: true }),\n                    React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis, tickFormat: this.getTickValue })))));\n    }\n}\nconst CostExplorerChart = injectIntl(CostExplorerChartBase);\nexport { CostExplorerChart };\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    chartHeight: 300,\n    chartContainerHeight: 300,\n};\nexport const styles = {\n    chartContainer: {\n        marginLeft: global_spacer_2xl.value,\n    },\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n    costChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    titleContainer: {\n        marginLeft: global_spacer_lg.value,\n    },\n    trendChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    usageChart: {\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { Skeleton, Title } from '@patternfly/react-core';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { format, getDate, getMonth } from 'date-fns';\nimport messages from 'locales/messages';\nimport { isFloat, isInt, } from 'pages/views/components/charts/common/chartDatumUtils';\nimport { CostExplorerChart } from 'pages/views/components/charts/costExplorerChart';\nimport { getGroupByOrgValue, getGroupByTagKey } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCostType } from 'utils/costType';\nimport { formatUnits } from 'utils/format';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './explorerChart.styles';\nimport { baseQuery, getDateRange, getDateRangeDefault, getGroupByDefault, getReportPathsType, getReportType, } from './explorerUtils';\nclass ExplorerChartBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.createReportDatum = (value, computedItem, reportItem = 'cost', reportItemValue = 'total') => {\n            const { intl } = this.props;\n            const computedItemDate = new Date(computedItem.date + 'T00:00:00');\n            const xVal = intl.formatMessage(messages.explorerChartDate, {\n                date: getDate(computedItemDate),\n                month: getMonth(computedItemDate),\n            });\n            const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n            return Object.assign(Object.assign({ x: xVal, y: value === null ? null : yVal }, (value === null && { _y: 0 })), { date: computedItem.date, key: computedItem.id, name: computedItem.label ? computedItem.label : computedItem.id, units: computedItem[reportItem]\n                    ? computedItem[reportItem][reportItemValue]\n                        ? computedItem[reportItem][reportItemValue].units // cost, infrastructure, supplementary\n                        : computedItem[reportItem].units // capacity, limit, request, usage\n                    : undefined });\n        };\n        this.fetchReport = () => {\n            const { fetchReport, perspective, queryString } = this.props;\n            if (perspective) {\n                const reportPathsType = getReportPathsType(perspective);\n                const reportType = getReportType(perspective);\n                fetchReport(reportPathsType, reportType, queryString);\n            }\n        };\n        this.getChartDatums = (computedItems) => {\n            const { computedReportItemType = \"cost\" /* cost */, computedReportItemValueType = \"total\" /* total */, } = this.props;\n            const reportItem = computedReportItemType;\n            const reportItemValue = computedReportItemValueType;\n            const chartDatums = [];\n            computedItems.map(computedItem => {\n                const datums = [];\n                if (computedItem instanceof Map) {\n                    const items = Array.from(computedItem.values());\n                    items.map(i => {\n                        const val = i[reportItem][reportItemValue] ? i[reportItem][reportItemValue].value : i[reportItem].value;\n                        datums.push(this.createReportDatum(val, i, reportItem, reportItemValue));\n                    });\n                }\n                chartDatums.push(datums);\n            });\n            return this.padChartDatums(chartDatums);\n        };\n        this.getComputedItems = () => {\n            const { report } = this.props;\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: this.getGroupBy(),\n                daily: true,\n            });\n        };\n        this.getGroupBy = () => {\n            const { query } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByOrg = getGroupByOrgValue(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            return groupByTagKey ? groupByTagKey : groupByOrg ? 'org_entities' : groupById;\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n        // This pads chart datums with null datum objects, representing missing data at the beginning and end of the\n        // data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n        // message in the tooltip, which helps distinguish between zero values and when there is no data available.\n        this.padChartDatums = (items) => {\n            const { end_date, start_date } = this.props;\n            const result = [];\n            items.map(datums => {\n                const key = datums[0].key;\n                const label = datums[0].name;\n                const newItems = [];\n                for (let padDate = new Date(start_date + 'T00:00:00'); padDate <= new Date(end_date + 'T00:00:00'); padDate.setDate(padDate.getDate() + 1)) {\n                    const id = format(padDate, 'yyyy-MM-dd');\n                    const chartDatum = datums.find(val => val.date === id);\n                    if (chartDatum) {\n                        newItems.push(chartDatum);\n                    }\n                    else {\n                        const date = format(padDate, 'yyyy-MM-dd');\n                        newItems.push(this.createReportDatum(null, { date, id: key, label }, 'cost', null));\n                    }\n                }\n                result.push(newItems);\n            });\n            return result;\n        };\n    }\n    componentDidMount() {\n        this.fetchReport();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, reportError, queryString } = this.props;\n        const newQuery = prevProps.queryString !== queryString;\n        const noReport = !report && !reportError;\n        if (newQuery || noReport) {\n            this.fetchReport();\n        }\n    }\n    render() {\n        const { perspective, reportFetchStatus, intl } = this.props;\n        const datums = this.getChartDatums(this.getComputedItems());\n        // Todo: get title from perspective menu\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { style: styles.titleContainer },\n                React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, intl.formatMessage(messages.explorerChartTitle, { value: perspective }))),\n            React.createElement(\"div\", { style: styles.chartContainer },\n                React.createElement(\"div\", { style: styles.costChart }, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(CostExplorerChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight, formatOptions: {}, formatter: formatUnits, height: chartStyles.chartHeight, top1stData: datums.length > 0 ? datums[0] : [], top2ndData: datums.length > 1 ? datums[1] : [], top3rdData: datums.length > 2 ? datums[2] : [], top4thData: datums.length > 3 ? datums[3] : [], top5thData: datums.length > 4 ? datums[4] : [], top6thData: datums.length > 5 ? datums[5] : [] }))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { perspective }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const dateRange = getDateRangeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRange(dateRange);\n    // Ensure group_by key is not undefined\n    let groupBy = queryFromRoute.group_by;\n    if (!groupBy && perspective) {\n        groupBy = { [getGroupByDefault(perspective)]: '*' };\n    }\n    const query = Object.assign({ filter: Object.assign(Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter), { limit: 5, offset: undefined }), filter_by: queryFromRoute.filter_by || baseQuery.filter_by, group_by: groupBy, perspective,\n        dateRange,\n        start_date,\n        end_date }, (perspective === \"aws\" /* aws */ && { cost_type: getCostType() }));\n    const queryString = getQuery(Object.assign(Object.assign({}, query), { perspective: undefined, dateRange: undefined }));\n    const reportPathsType = getReportPathsType(perspective);\n    const reportType = getReportType(perspective);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        end_date,\n        perspective,\n        query,\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n        start_date,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst ExplorerChartConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerChartBase);\nconst ExplorerChart = injectIntl(withRouter(ExplorerChartConnect));\nexport { ExplorerChart };\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nclass DateRangeBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { currentItem, isDisabled } = this.props;\n            const { isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === currentItem);\n            return (React.createElement(Select, { id: \"dateRangeSelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { intl, options } = this.props;\n            const selectOptions = [];\n            options.map(option => {\n                selectOptions.push({\n                    toString: () => intl.formatMessage(option.label, { value: option.value }),\n                    value: option.value,\n                });\n            });\n            return selectOptions;\n        };\n        this.handleSelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            if (onItemClicked) {\n                onItemClicked(selection.value);\n            }\n            this.setState({\n                isSelectOpen: false,\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        return this.getSelect();\n    }\n}\nconst DateRange = injectIntl(DateRangeBase);\nexport { DateRange };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        marginLeft: `-${global_spacer_md.value}`,\n        paddingTop: global_spacer_sm.value,\n    },\n};\n","import { getQuery, orgUnitIdKey, parseQuery, tagKey } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport { DataToolbar } from 'pages/views/components/dataToolbar/dataToolbar';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { orgActions, orgSelectors } from 'store/orgs';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nimport { DateRange } from './dateRange';\nimport { styles } from './explorerFilter.styles';\nimport { getDateRange } from './explorerUtils';\nimport { dateRangeOptions, getDateRangeDefault, getGroupByOptions, getOrgReportPathsType, getRouteForQuery, getTagReportPathsType, } from './explorerUtils';\nconst orgReportType = \"org\" /* org */;\nconst tagReportType = \"tag\" /* tag */;\nexport class ExplorerFilterBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { orgReport, perspective, intl, tagReport } = this.props;\n            const options = [];\n            const groupByOptions = getGroupByOptions(perspective);\n            groupByOptions.map(option => {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: option.label }),\n                    key: option.value,\n                });\n            });\n            if (orgReport && orgReport.data && orgReport.data.length > 0) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: 'org_unit_id' }),\n                    key: orgUnitIdKey,\n                });\n            }\n            if (tagReport && tagReport.data && tagReport.data.length > 0) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: 'tag' }), key: tagKey });\n            }\n            return options;\n        };\n        this.getDefaultDateRange = () => {\n            const { dateRange } = this.props;\n            return dateRange ? dateRange : dateRangeOptions[0];\n        };\n        this.getDateRangeComponent = () => {\n            const { isDisabled } = this.props;\n            const { currentDateRange } = this.state;\n            return (React.createElement(DateRange, { currentItem: currentDateRange, isDisabled: isDisabled, onItemClicked: this.handleDateRangeClick, options: dateRangeOptions }));\n        };\n        this.handleDateRangeClick = (value) => {\n            const { history, query } = this.props;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { dateRange: value });\n            this.setState({ currentDateRange: value }, () => {\n                history.replace(getRouteForQuery(history, newQuery, true));\n            });\n        };\n    }\n    componentDidMount() {\n        const { fetchOrg, fetchTag, orgQueryString, orgReportPathsType, tagQueryString, tagReportPathsType } = this.props;\n        if (orgReportPathsType) {\n            fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n        }\n        if (tagReportPathsType) {\n            fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n        }\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n            currentDateRange: this.getDefaultDateRange(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchOrg, fetchTag, orgQueryString, orgReport, orgReportPathsType, perspective, query, tagQueryString, tagReport, tagReportPathsType, } = this.props;\n        if (query && !isEqual(query, prevProps.query)) {\n            if (orgReportPathsType) {\n                fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n            }\n            if (tagReportPathsType) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        }\n        if (!isEqual(orgReport, prevProps.orgReport) || !isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            });\n        }\n        // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n        if (prevProps.perspective !== perspective) {\n            this.handleDateRangeClick(dateRangeOptions[0].value);\n        }\n    }\n    render() {\n        const { groupBy, isDisabled, onFilterAdded, onFilterRemoved, orgReport, query, resourcePathsType, tagReport, tagReportPathsType, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, dateRange: this.getDateRangeComponent(), groupBy: groupBy, isDisabled: isDisabled, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, orgReport: orgReport, query: query, resourcePathsType: resourcePathsType, style: styles.toolbarContainer, showFilter: true, tagReport: tagReport, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { perspective }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const dateRange = getDateRangeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRange(dateRange);\n    // Omitting key_only to share a single request -- the toolbar needs key values\n    const orgQueryString = getQuery({\n        end_date,\n        start_date,\n        limit: 1000,\n    });\n    let orgReport;\n    let orgReportFetchStatus;\n    const orgReportPathsType = getOrgReportPathsType(perspective);\n    if (orgReportPathsType) {\n        orgReport = orgSelectors.selectOrg(state, orgReportPathsType, orgReportType, orgQueryString);\n        orgReportFetchStatus = orgSelectors.selectOrgFetchStatus(state, orgReportPathsType, orgReportType, orgQueryString);\n    }\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        end_date,\n        start_date,\n        key_only: true,\n        limit: 1000,\n    });\n    let tagReport;\n    let tagReportFetchStatus;\n    const tagReportPathsType = getTagReportPathsType(perspective);\n    if (tagReportPathsType) {\n        tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n        tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    }\n    return {\n        dateRange,\n        orgQueryString,\n        orgReport,\n        orgReportFetchStatus,\n        orgReportPathsType,\n        perspective,\n        tagQueryString,\n        tagReport,\n        tagReportFetchStatus,\n        tagReportPathsType,\n    };\n});\nconst mapDispatchToProps = {\n    fetchOrg: orgActions.fetchOrg,\n    fetchTag: tagActions.fetchTag,\n};\nconst ExplorerFilterConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerFilterBase);\nconst ExplorerFilter = injectIntl(withRouter(ExplorerFilterConnect));\nexport { ExplorerFilter };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    cost: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    costLabel: {},\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n    },\n    costType: {\n        display: 'flex',\n        marginLeft: global_spacer_md.var,\n    },\n    groupBy: {\n        paddingLeft: global_spacer_lg.var,\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingBottom: global_spacer_sm.var,\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    perspectiveContainer: {\n        display: 'flex',\n        marginTop: global_spacer_md.var,\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport { ExportsLink } from 'components/exports';\nimport messages from 'locales/messages';\nimport { Currency } from 'pages/components/currency';\nimport { CostType } from 'pages/views/components/costType';\nimport { GroupBy } from 'pages/views/components/groupBy/groupBy';\nimport { Perspective } from 'pages/views/components/perspective/perspective';\nimport { filterProviders, hasCloudProvider } from 'pages/views/utils/providers';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { userAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { hasAwsAccess, hasAzureAccess, hasGcpAccess, hasIbmAccess, isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, } from 'utils/userAccess';\nimport { ExplorerFilter } from './explorerFilter';\nimport { styles } from './explorerHeader.styles';\nimport { baseQuery, getDateRange, getDateRangeDefault, getGroupByDefault, getGroupByOptions, getOrgReportPathsType, getResourcePathsType, getRouteForQuery, getTagReportPathsType, } from './explorerUtils';\nclass ExplorerHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n        // TBD...\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getPerspective = (isDisabled) => {\n            const { isIbmFeatureEnabled, isOciFeatureEnabled } = this.props;\n            const { currentPerspective } = this.state;\n            const hasAws = this.isAwsAvailable();\n            const hasAzure = this.isAzureAvailable();\n            const hasOci = this.isOciAvailable();\n            const hasGcp = this.isGcpAvailable();\n            const hasIbm = this.isIbmAvailable();\n            const hasOcp = this.isOcpAvailable();\n            // Note: No need to test OCP on cloud here, since that requires at least one provider\n            if (!(hasAws || hasAzure || hasOci || hasGcp || hasIbm || hasOcp)) {\n                return null;\n            }\n            return (React.createElement(Perspective, { currentItem: currentPerspective, hasAws: hasAws, hasAwsOcp: this.isAwsOcpAvailable(), hasAzure: hasAzure, hasAzureOcp: this.isAzureOcpAvailable(), hasGcp: hasGcp, hasGcpOcp: this.isGcpOcpAvailable(), hasIbm: hasIbm, hasIbmOcp: this.isIbmOcpAvailable(), hasOci: hasOci, hasOcp: hasOcp, hasOcpCloud: this.isOcpCloudAvailable(), isDisabled: isDisabled, isIbmFeatureEnabled: isIbmFeatureEnabled, isOciFeatureEnabled: isOciFeatureEnabled, onSelected: this.handlePerspectiveSelected }));\n        };\n        this.handlePerspectiveSelected = (value) => {\n            const { history, onPerspectiveClicked, query } = this.props;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { filter_by: undefined, group_by: { [getGroupByDefault(value)]: '*' }, order_by: undefined, perspective: value });\n            this.setState({ currentPerspective: value }, () => {\n                if (onPerspectiveClicked) {\n                    onPerspectiveClicked(value);\n                }\n                history.replace(getRouteForQuery(history, newQuery, true));\n            });\n        };\n        this.handleCostTypeSelected = (value) => {\n            const { history, query } = this.props;\n            // Need param to restore cost type upon page refresh\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { cost_type: value });\n            history.replace(getRouteForQuery(history, newQuery, false)); // Don't reset pagination\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders, userAccess } = this.props;\n            return isAwsAvailable(userAccess, awsProviders);\n        };\n        this.isAwsOcpAvailable = () => {\n            const { awsProviders, ocpProviders, userAccess } = this.props;\n            return hasAwsAccess(userAccess) && hasCloudProvider(awsProviders, ocpProviders);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders, userAccess } = this.props;\n            return isAzureAvailable(userAccess, azureProviders);\n        };\n        this.isAzureOcpAvailable = () => {\n            const { azureProviders, ocpProviders, userAccess } = this.props;\n            return hasAzureAccess(userAccess) && hasCloudProvider(azureProviders, ocpProviders);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders, userAccess } = this.props;\n            return isGcpAvailable(userAccess, gcpProviders);\n        };\n        this.isGcpOcpAvailable = () => {\n            const { gcpProviders, ocpProviders, userAccess } = this.props;\n            return hasGcpAccess(userAccess) && hasCloudProvider(gcpProviders, ocpProviders);\n        };\n        this.isIbmAvailable = () => {\n            const { ibmProviders, userAccess } = this.props;\n            return isIbmAvailable(userAccess, ibmProviders);\n        };\n        this.isIbmOcpAvailable = () => {\n            const { ibmProviders, ocpProviders, userAccess } = this.props;\n            return hasIbmAccess(userAccess) && hasCloudProvider(ibmProviders, ocpProviders);\n        };\n        this.isOciAvailable = () => {\n            const { ociProviders, userAccess } = this.props;\n            return isOciAvailable(userAccess, ociProviders);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders, userAccess } = this.props;\n            return isOcpAvailable(userAccess, ocpProviders);\n        };\n        this.isOcpCloudAvailable = () => {\n            const hasAwsOcp = this.isAwsOcpAvailable();\n            const hasAzureOcp = this.isAzureOcpAvailable();\n            const hasGcpOcp = this.isGcpOcpAvailable();\n            const hasIbmOcp = this.isIbmOcpAvailable();\n            return hasAwsOcp || hasAzureOcp || hasGcpOcp || hasIbmOcp;\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentPerspective: this.props.perspective,\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { perspective } = this.props;\n        if (prevProps.perspective !== perspective) {\n            this.setState({\n                currentPerspective: this.props.perspective,\n            });\n        }\n    }\n    render() {\n        const { costType, groupBy, intl, isCurrencyFeatureEnabled, isExportsFeatureEnabled, onFilterAdded, onFilterRemoved, onGroupBySelected, perspective, providersFetchStatus, query, } = this.props;\n        // Note: No need to test OCP on cloud here, since that requires at least one provider\n        const noAwsProviders = !this.isAwsAvailable() && providersFetchStatus === 2 /* complete */;\n        const noAzureProviders = !this.isAzureAvailable() && providersFetchStatus === 2 /* complete */;\n        const noGcpProviders = !this.isGcpAvailable() && providersFetchStatus === 2 /* complete */;\n        const noIbmProviders = !this.isIbmAvailable() && providersFetchStatus === 2 /* complete */;\n        const noOcpProviders = !this.isOcpAvailable() && providersFetchStatus === 2 /* complete */;\n        const noProviders = noAwsProviders && noAzureProviders && noGcpProviders && noIbmProviders && noOcpProviders;\n        const groupByOptions = getGroupByOptions(perspective);\n        const orgReportPathsType = getOrgReportPathsType(perspective);\n        const resourcePathsType = getResourcePathsType(perspective);\n        const tagReportPathsType = getTagReportPathsType(perspective);\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.explorerTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    isCurrencyFeatureEnabled && React.createElement(Currency, null),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.perspectiveContainer },\n                this.getPerspective(noProviders),\n                React.createElement(\"div\", { style: styles.groupBy },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: noProviders, onSelected: onGroupBySelected, options: groupByOptions, orgReportPathsType: orgReportPathsType, perspective: perspective, showOrgs: orgReportPathsType, showTags: tagReportPathsType, tagReportPathsType: tagReportPathsType })),\n                perspective === \"aws\" /* aws */ && (React.createElement(\"div\", { style: styles.costType },\n                    React.createElement(CostType, { onSelect: this.handleCostTypeSelected, costType: costType })))),\n            React.createElement(ExplorerFilter, { groupBy: groupBy, isDisabled: noProviders, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, perspective: perspective, query: query, resourcePathsType: resourcePathsType })));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { costType, perspective }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const dateRange = getDateRangeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRange(dateRange);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, \"all\" /* all */, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, \"all\" /* all */, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"all\" /* all */, providersQueryString);\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, \"all\" /* all */, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, \"all\" /* all */, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, \"all\" /* all */, userAccessQueryString);\n    // Ensure group_by key is not undefined\n    let groupBy = queryFromRoute.group_by;\n    if (!groupBy && perspective) {\n        groupBy = { [getGroupByDefault(perspective)]: '*' };\n    }\n    const query = Object.assign({ filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter), filter_by: queryFromRoute.filter_by || baseQuery.filter_by, group_by: groupBy, order_by: queryFromRoute.order_by, perspective,\n        dateRange,\n        start_date,\n        end_date }, (perspective === \"aws\" /* aws */ && { cost_type: costType }));\n    const queryString = getQuery(Object.assign(Object.assign({}, query), { perspective: undefined, dateRange: undefined }));\n    return {\n        awsProviders: filterProviders(providers, \"aws\" /* aws */),\n        azureProviders: filterProviders(providers, \"azure\" /* azure */),\n        gcpProviders: filterProviders(providers, \"gcp\" /* gcp */),\n        ibmProviders: filterProviders(providers, \"ibm\" /* ibm */),\n        isCurrencyFeatureEnabled: featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state),\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        isIbmFeatureEnabled: featureFlagsSelectors.selectIsIbmFeatureEnabled(state),\n        isOciFeatureEnabled: featureFlagsSelectors.selectIsOciFeatureEnabled(state),\n        ociProviders: filterProviders(providers, \"oci\" /* oci */),\n        ocpProviders: filterProviders(providers, \"ocp\" /* ocp */),\n        providers,\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n        query,\n        queryString,\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst ExplorerHeader = injectIntl(withRouter(connect(mapStateToProps, {})(ExplorerHeaderBase)));\nexport { ExplorerHeader };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    tableContainer: {\n        position: 'relative',\n        overflowX: 'auto',\n    },\n};\n","import './explorerTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { nowrap, sortable, SortByDirection, Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { getQuery } from 'api/queries/awsQuery';\nimport { parseQuery } from 'api/queries/query';\nimport { format, getDate, getMonth } from 'date-fns';\nimport messages from 'locales/messages';\nimport { EmptyFilterState } from 'pages/components/state/emptyFilterState/emptyFilterState';\nimport { getGroupByOrgValue, getGroupByTagKey } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './explorerTable.styles';\nimport { getDateRange, getDateRangeDefault } from './explorerUtils';\nclass ExplorerTableBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { computedReportItemType = \"cost\" /* cost */, computedReportItemValueType = \"total\" /* total */, end_date, isAllSelected, perspective, query, report, selectedItems, start_date, intl, } = this.props;\n            if (!query || !report) {\n                return;\n            }\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByOrg = getGroupByOrgValue(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey ? groupByTagKey : groupByOrg ? 'org_entities' : groupById,\n                daily: true,\n            });\n            // Add first column heading (i.e., name)\n            const columns = groupByTagKey || groupByOrg\n                ? [\n                    {\n                        cellTransforms: [nowrap],\n                        title: groupByOrg\n                            ? intl.formatMessage(messages.names, { count: 2 })\n                            : intl.formatMessage(messages.tagNames),\n                    },\n                ]\n                : [\n                    Object.assign({ cellTransforms: [nowrap], date: undefined, orderBy: groupById === 'account' && perspective === \"aws\" /* aws */ ? 'account_alias' : groupById, title: intl.formatMessage(messages.groupByValueNames, { groupBy: groupById }) }, (computedItems.length && { transforms: [sortable] })),\n                ];\n            // Fill in missing columns\n            for (let currentDate = new Date(start_date + 'T00:00:00'); currentDate <= new Date(end_date + 'T00:00:00'); currentDate.setDate(currentDate.getDate() + 1)) {\n                const mapId = format(currentDate, 'yyyy-MM-dd');\n                let isSortable = computedItems.length > 0;\n                computedItems.map(rowItem => {\n                    const item = rowItem.get(mapId);\n                    if (!item) {\n                        isSortable = false;\n                        rowItem.set(mapId, {\n                            date: mapId,\n                        });\n                    }\n                });\n                // Add column headings\n                const mapIdDate = new Date(mapId + 'T00:00:00');\n                const date = getDate(mapIdDate);\n                const month = getMonth(mapIdDate);\n                columns.push(Object.assign({ cellTransforms: [nowrap], title: intl.formatMessage(messages.explorerChartDate, { date, month }) }, (isSortable && {\n                    date: mapId,\n                    orderBy: 'cost',\n                    transforms: [sortable],\n                })));\n            }\n            const reportItem = computedReportItemType;\n            const reportItemValue = computedReportItemValueType;\n            // Sort by date and fill in missing cells\n            computedItems.map(rowItem => {\n                const cells = [];\n                let desc; // First column description (i.e., show ID if different than label)\n                let name; // For first column resource name\n                let selectItem; // Save for row selection\n                const items = Array.from(rowItem.values()).sort((a, b) => {\n                    if (new Date(a.date) > new Date(b.date)) {\n                        return 1;\n                    }\n                    else if (new Date(a.date) < new Date(b.date)) {\n                        return -1;\n                    }\n                    else {\n                        return 0;\n                    }\n                });\n                items.map(item => {\n                    if (!name) {\n                        name = item && item.label && item.label !== null ? item.label : null;\n                    }\n                    if (!desc) {\n                        desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                    }\n                    if (item.id && !selectItem) {\n                        selectItem = item;\n                    }\n                    // Add row cells\n                    cells.push({\n                        title: item[reportItem] && item[reportItem][reportItemValue]\n                            ? formatCurrency(item[reportItem][reportItemValue].value, item[reportItem][reportItemValue].units)\n                            : intl.formatMessage(messages.chartNoData),\n                    });\n                });\n                // Add first row cell (i.e., name)\n                cells.unshift({\n                    title: (React.createElement(\"div\", null,\n                        name,\n                        desc)),\n                });\n                rows.push({\n                    cells,\n                    disableSelection: selectItem.label === `no-${groupById}` || selectItem.label === `no-${groupByTagKey}`,\n                    item: selectItem,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === selectItem.id) !== undefined),\n                });\n            });\n            const loadingRows = [\n                {\n                    heightAuto: true,\n                    cells: [\n                        {\n                            props: { colSpan: 5 },\n                            title: (React.createElement(Bullseye, null,\n                                React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                    React.createElement(Spinner, { size: \"xl\" })))),\n                        },\n                    ],\n                },\n            ];\n            this.setState({\n                columns,\n                loadingRows,\n                rows,\n                sortBy: {},\n            });\n        };\n        this.getEmptyState = () => {\n            const { query, intl } = this.props;\n            for (const val of Object.values(query.filter_by)) {\n                if (val !== '*') {\n                    return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = () => {\n            const { query } = this.props;\n            const { columns } = this.state;\n            let index = -1;\n            let direction = SortByDirection.asc;\n            if (query && query.order_by) {\n                for (const key of Object.keys(query.order_by)) {\n                    let c = 0;\n                    for (const column of columns) {\n                        if (column.orderBy === key && !column.date) {\n                            direction = query.order_by[key] === 'asc' ? SortByDirection.asc : SortByDirection.desc;\n                            index = c + 1;\n                            break;\n                        }\n                        else if (column.date === query.order_by[key]) {\n                            direction = query.order_by.cost === 'asc' ? SortByDirection.asc : SortByDirection.desc;\n                            index = c + 1;\n                            break;\n                        }\n                        c++;\n                    }\n                }\n            }\n            return index > -1 ? { index, direction } : {};\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected } = this.props;\n            let rows;\n            let items = [];\n            if (rowId === -1) {\n                rows = this.state.rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                rows = [...this.state.rows];\n                rows[rowId].selected = isSelected;\n                items = [rows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { onSort } = this.props;\n            const { columns } = this.state;\n            if (onSort) {\n                const column = columns[index - 1];\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(column.orderBy, column.date, isSortAscending);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { query, report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (getQuery(prevProps.query) !== getQuery(query) ||\n            previousReport !== currentReport ||\n            prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { intl, isLoading } = this.props;\n        const { columns, loadingRows, rows } = this.state;\n        return (React.createElement(\"div\", { style: styles.tableContainer },\n            React.createElement(Table, { \"aria-label\": intl.formatMessage(messages.explorerTableAriaLabel), canSelectAll: false, cells: columns, className: \"explorerTableOverride\", rows: isLoading ? loadingRows : rows, sortBy: this.getSortBy(), onSelect: isLoading ? undefined : this.handleOnSelect, onSort: this.handleOnSort },\n                React.createElement(TableHeader, null),\n                React.createElement(TableBody, null)),\n            Boolean(rows.length === 0) && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { perspective }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const dateRange = getDateRangeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRange(dateRange);\n    return {\n        dateRange,\n        end_date,\n        perspective,\n        start_date,\n    };\n});\nconst mapDispatchToProps = {};\nconst ExplorerTableConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerTableBase);\nconst ExplorerTable = injectIntl(ExplorerTableConnect);\nexport { ExplorerTable };\n","import { DataToolbar } from 'pages/views/components/dataToolbar/dataToolbar';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { getTagReportPathsType } from './explorerUtils';\nexport class ExplorerToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { isAllSelected, isBulkSelectDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, pagination, perspective, selectedItems, } = this.props;\n        const tagReportPathsType = getTagReportPathsType(perspective);\n        return (React.createElement(DataToolbar, { isAllSelected: isAllSelected, isBulkSelectDisabled: isBulkSelectDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, pagination: pagination, selectedItems: selectedItems, showBulkSelect: true, showExport: true, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst ExplorerToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerToolbarBase);\nconst ExplorerToolbar = injectIntl(ExplorerToolbarConnect);\nexport { ExplorerToolbar };\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { orgUnitIdKey, tagPrefix } from 'api/queries/query';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport messages from 'locales/messages';\nimport Loading from 'pages/state/loading';\nimport NoData from 'pages/state/noData';\nimport NoProviders from 'pages/state/noProviders';\nimport NotAvailable from 'pages/state/notAvailable';\nimport { ExportModal } from 'pages/views/components/export/exportModal';\nimport { getGroupByOrgValue, getGroupByTagKey } from 'pages/views/utils/groupBy';\nimport { filterProviders, hasData } from 'pages/views/utils/providers';\nimport { addQueryFilter, removeQueryFilter } from 'pages/views/utils/query';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { userAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCostType } from 'utils/costType';\nimport { isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, } from 'utils/userAccess';\nimport { styles } from './explorer.styles';\nimport { ExplorerChart } from './explorerChart';\nimport { ExplorerHeader } from './explorerHeader';\nimport { ExplorerTable } from './explorerTable';\nimport { ExplorerToolbar } from './explorerToolbar';\nimport { baseQuery, getComputedReportItemType, getComputedReportItemValueType, getDateRange, getDateRangeDefault, getGroupByDefault, getPerspectiveDefault, getReportPathsType, getReportType, getRouteForQuery, } from './explorerUtils';\nclass Explorer extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByOrg = getGroupByOrgValue(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey ? groupByTagKey : groupByOrg ? 'org_entities' : groupById,\n                daily: false, // Don't use daily here, so we can use a flattened data structure with row selection\n            });\n            return computedItems;\n        };\n        this.getExportModal = (computedItems) => {\n            const { perspective, query, report } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `no-${groupById}` || item.label === `no-${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, query: query, reportPathsType: getReportPathsType(perspective), resolution: \"daily\", showTimeScope: false }));\n        };\n        this.getPagination = (isBottom = false) => {\n            const { report } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = offset / limit + 1;\n            return (React.createElement(Pagination, { isCompact: !isBottom, itemCount: count, onPerPageSelect: this.handlePerPageSelect, onSetPage: this.handleSetPage, page: page, perPage: limit, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: \"`pagination${isBottom ? '-bottom' : ''}`\" }));\n        };\n        this.getTable = () => {\n            const { perspective, query, report, reportFetchStatus } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(ExplorerTable, { computedReportItemType: getComputedReportItemType(perspective), computedReportItemValueType: getComputedReportItemValueType(perspective), groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isLoading: reportFetchStatus === 1 /* inProgress */, onSelected: this.handleSelected, onSort: this.handleSort, perspective: perspective, query: query, report: report, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { perspective, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(ExplorerToolbar, { isAllSelected: isAllSelected, isExportDisabled: computedItems.length === 0 || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, pagination: this.getPagination(), perspective: perspective, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleFilterAdded = (filterType, filterValue) => {\n            const { history, query } = this.props;\n            const filteredQuery = addQueryFilter(query, filterType, filterValue);\n            history.replace(getRouteForQuery(history, filteredQuery, true));\n        };\n        this.handleFilterRemoved = (filterType, filterValue) => {\n            const { history, query } = this.props;\n            const filteredQuery = removeQueryFilter(query, filterType, filterValue);\n            history.replace(getRouteForQuery(history, filteredQuery, true));\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { history, query } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Check for for org units\n            const index = groupBy.indexOf(orgUnitIdKey);\n            if (index !== -1) {\n                groupByKey = orgUnitIdKey.substring(0, orgUnitIdKey.length);\n                value = groupBy.slice(orgUnitIdKey.length);\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: value,\n                }, order_by: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                history.replace(getRouteForQuery(history, newQuery, true));\n            });\n        };\n        this.handlePerPageSelect = (_event, perPage) => {\n            const { history, query } = this.props;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            newQuery.filter = Object.assign(Object.assign({}, query.filter), { limit: perPage });\n            const filteredQuery = getRouteForQuery(history, newQuery, true);\n            history.replace(filteredQuery);\n        };\n        this.handlePerspectiveClick = () => {\n            this.setState({ isAllSelected: false, selectedItems: [] });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.handleSetPage = (event, pageNumber) => {\n            const { history, query, report } = this.props;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = pageNumber * limit - limit;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            newQuery.filter = Object.assign(Object.assign({}, query.filter), { offset });\n            const filteredQuery = getRouteForQuery(history, newQuery);\n            history.replace(filteredQuery);\n        };\n        this.handleSort = (sortType, date, isSortAscending) => {\n            const { history, query } = this.props;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            newQuery.order_by = {};\n            newQuery.order_by[sortType] = isSortAscending ? 'asc' : 'desc';\n            if (date) {\n                newQuery.order_by.date = date;\n            }\n            const filteredQuery = getRouteForQuery(history, newQuery);\n            history.replace(filteredQuery);\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders, userAccess } = this.props;\n            return isAwsAvailable(userAccess, awsProviders);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders, userAccess } = this.props;\n            return isAzureAvailable(userAccess, azureProviders);\n        };\n        this.isOciAvailable = () => {\n            const { ociProviders, userAccess } = this.props;\n            return isOciAvailable(userAccess, ociProviders);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders, userAccess } = this.props;\n            return isGcpAvailable(userAccess, gcpProviders);\n        };\n        this.isIbmAvailable = () => {\n            const { ibmProviders, userAccess } = this.props;\n            return isIbmAvailable(userAccess, ibmProviders);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders, userAccess } = this.props;\n            return isOcpAvailable(userAccess, ocpProviders);\n        };\n        this.updateReport = () => {\n            const { dateRange, fetchReport, history, location, perspective, query, queryString } = this.props;\n            if (!location.search) {\n                history.replace(getRouteForQuery(history, {\n                    filter_by: query ? query.filter_by : undefined,\n                    group_by: query ? query.group_by : undefined,\n                    order_by: query ? query.order_by : undefined,\n                    dateRange, // Preserve date range\n                }));\n            }\n            else if (perspective) {\n                fetchReport(getReportPathsType(perspective), getReportType(perspective), queryString);\n            }\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleFilterAdded = this.handleFilterAdded.bind(this);\n        this.handleFilterRemoved = this.handleFilterRemoved.bind(this);\n        this.handlePerPageSelect = this.handlePerPageSelect.bind(this);\n        this.handlePerspectiveClick = this.handlePerspectiveClick.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n        this.handleSetPage = this.handleSetPage.bind(this);\n        this.handleSort = this.handleSort.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { location, perspective, report, reportError, queryString } = this.props;\n        const { selectedItems } = this.state;\n        const newPerspective = prevProps.perspective !== perspective;\n        const newQuery = prevProps.queryString !== queryString;\n        const noReport = !report && !reportError;\n        const noLocation = !location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newPerspective || newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { awsProviders, azureProviders, ociProviders, costType, gcpProviders, ibmProviders, intl, ocpProviders, providersFetchStatus, perspective, userAccessFetchStatus, query, report, reportError, reportFetchStatus, } = this.props;\n        // Note: No need to test OCP on cloud here, since that requires at least one provider\n        const noAwsProviders = !this.isAwsAvailable() && providersFetchStatus === 2 /* complete */;\n        const noAzureProviders = !this.isAzureAvailable() && providersFetchStatus === 2 /* complete */;\n        const noGcpProviders = !this.isGcpAvailable() && providersFetchStatus === 2 /* complete */;\n        const noIbmProviders = !this.isIbmAvailable() && providersFetchStatus === 2 /* complete */;\n        const noOcpProviders = !this.isOcpAvailable() && providersFetchStatus === 2 /* complete */;\n        const noOciProviders = !this.isOciAvailable() && providersFetchStatus === 2 /* complete */;\n        const noProviders = noAwsProviders && noAzureProviders && noGcpProviders && noIbmProviders && noOcpProviders && noOciProviders;\n        const isLoading = providersFetchStatus === 1 /* inProgress */ || userAccessFetchStatus === 1 /* inProgress */;\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const groupByTagKey = getGroupByTagKey(query);\n        const computedItems = this.getComputedItems();\n        const itemsTotal = report && report.meta ? report.meta.count : 0;\n        const title = intl.formatMessage(messages.explorerTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (isLoading) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (noProviders) {\n            return React.createElement(NoProviders, { title: title });\n        }\n        else if (!(hasData(awsProviders) ||\n            hasData(azureProviders) ||\n            hasData(ociProviders) ||\n            hasData(gcpProviders) ||\n            hasData(ibmProviders) ||\n            hasData(ocpProviders))) {\n            return React.createElement(NoData, { title: title });\n        }\n        return (React.createElement(\"div\", { style: styles.explorer },\n            React.createElement(ExplorerHeader, { costType: costType, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, onFilterAdded: this.handleFilterAdded, onFilterRemoved: this.handleFilterRemoved, onGroupBySelected: this.handleGroupBySelected, onPerspectiveClicked: this.handlePerspectiveClick, perspective: perspective }),\n            itemsTotal > 0 && (React.createElement(\"div\", { style: styles.chartContent },\n                React.createElement(\"div\", { style: styles.chartContainer },\n                    React.createElement(ExplorerChart, { computedReportItemType: getComputedReportItemType(perspective), computedReportItemValueType: getComputedReportItemValueType(perspective), perspective: perspective })))),\n            React.createElement(\"div\", { style: styles.tableContent },\n                this.getToolbar(computedItems),\n                this.getExportModal(computedItems),\n                reportFetchStatus === 1 /* inProgress */ ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, \"all\" /* all */, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, \"all\" /* all */, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"all\" /* all */, providersQueryString);\n    const awsProviders = filterProviders(providers, \"aws\" /* aws */);\n    const azureProviders = filterProviders(providers, \"azure\" /* azure */);\n    const ociProviders = filterProviders(providers, \"oci\" /* oci */);\n    const gcpProviders = filterProviders(providers, \"gcp\" /* gcp */);\n    const ibmProviders = filterProviders(providers, \"ibm\" /* ibm */);\n    const ocpProviders = filterProviders(providers, \"ocp\" /* ocp */);\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, \"all\" /* all */, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, \"all\" /* all */, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, \"all\" /* all */, userAccessQueryString);\n    // Cost Report\n    const queryFromRoute = parseQuery(location.search);\n    const dateRange = getDateRangeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRange(dateRange);\n    const perspective = getPerspectiveDefault({\n        awsProviders,\n        azureProviders,\n        ociProviders,\n        gcpProviders,\n        ibmProviders,\n        ocpProviders,\n        queryFromRoute,\n        userAccess,\n    });\n    // Ensure group_by key is not undefined\n    let groupBy = queryFromRoute.group_by;\n    if (!groupBy && perspective) {\n        groupBy = { [getGroupByDefault(perspective)]: '*' };\n    }\n    const costType = getCostType();\n    const query = Object.assign({ filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter), filter_by: queryFromRoute.filter_by || baseQuery.filter_by, group_by: groupBy, order_by: queryFromRoute.order_by, perspective,\n        dateRange,\n        start_date,\n        end_date }, (perspective === \"aws\" /* aws */ && { cost_type: costType }));\n    const queryString = getQuery(Object.assign(Object.assign({}, query), { perspective: undefined, dateRange: undefined }));\n    const reportPathsType = getReportPathsType(perspective);\n    const reportType = getReportType(perspective);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        awsProviders,\n        azureProviders,\n        costType,\n        dateRange,\n        gcpProviders,\n        ibmProviders,\n        ociProviders,\n        ocpProviders,\n        perspective,\n        providers,\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n        query,\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(Explorer));\n","import Explorer from './explorer';\nexport default Explorer;\n"],"names":["CalculatorIconConfig","name","height","width","svgPath","yOffset","xOffset","CalculatorIcon","DownloadIconConfig","DownloadIcon","ExclamationCircleIconConfig","ExclamationCircleIcon","ExportIconConfig","ExportIcon","FilterIconConfig","FilterIcon","OutlinedClockIconConfig","OutlinedClockIcon","SearchIconConfig","SearchIcon","SyncIconConfig","SyncIcon","TimesIconConfig","TimesIcon","exports","module","data","filename","mime","bom","blob","Blob","type","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","styles","perspectiveSelector","alignItems","perspectiveLabel","marginBottom","marginRight","whiteSpace","perspectiveOptionLabel","marginLeft","marginTop","PerspectiveSelectBase","constructor","super","arguments","this","defaultState","isSelectOpen","state","Object","assign","getSelectOptions","intl","options","props","selections","map","option","push","toString","formatMessage","label","value","getSelect","currentItem","isDisabled","length","selectOptions","selection","find","Select","id","isOpen","onSelect","handleSelect","onToggle","handleToggle","variant","SelectVariant","SelectOption","key","event","onSelected","setState","render","Title","headingLevel","size","messages","PerspectiveSelect","injectIntl","infrastructureAwsOptions","infrastructureAwsOcpOptions","infrastructureAzureOptions","infrastructureOciOptions","infrastructureAzureOcpOptions","infrastructureGcpOptions","infrastructureGcpOcpOptions","infrastructureIbmOptions","infrastructureIbmOcpOptions","infrastructureOcpCloudOptions","ocpOptions","getInfrastructureOptions","hasAws","hasAwsOcp","hasAzure","hasAzureOcp","hasGcp","hasGcpOcp","hasIbm","hasIbmOcp","hasOci","isIbmFeatureEnabled","isOciFeatureEnabled","Perspective","hasOcp","hasOcpCloud","isInfrastructureTab","undefined","getIdKeyForGroupBy","groupBy","account","cluster","gcp_project","node","org_unit_id","project","region","resource_location","service","service_name","subscription_guid","chartContainer","backgroundColor","global_BackgroundColor_light_100","global_spacer_lg","paddingRight","paddingBottom","paddingTop","chartContent","explorer","minHeight","paginationContainer","pagination","global_spacer_md","tableContainer","tableContent","_defineProperty","obj","defineProperty","enumerable","configurable","writable","fallbackProps","padding","stackData","childComponents","filterNullChildData","dataset","filter","datum","_x","_y","datasets","fillInMissingData","xMap","reduce","prev","forEach","Date","getTime","xKeys","k","xArr","indexOffset","isDate","x","index","y","fillData","d","i","y0","group","_group","firstDatasetBaseline","previousPoints","slice","concat","previousDatum","memo","some","point","getY0","_y0","_y1","_x1","addLayoutData","getCalculatedProps","children","role","theme","categories","c","domain","range","baseScale","scale","horizontal","_props","colorScale","getColorScale","child","colorScaleOptions","getChildren","calculatedProps","childProps","standalone","getChildProps","parentName","labels","getLabels","domainPadding","labelComponent","polar","VictoryStack","initialProps","VictoryStackMemo","_Hooks$useAnimationSt","setAnimationState","getAnimationProps","getProps","modifiedProps","eventKey","containerComponent","groupComponent","externalEventMutations","arr","modifiedChildren","target","source","ownKeys","keys","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","_objectSpread","withoutSharedEvents","_React$useState2","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","err","_iterableToArrayLimit","TypeError","_nonIterableRest","setProps","useMemoizedProps","origin","newChildren","animate","reverse","containerProps","parent","container","defaultContainerProps","events","previousProps","propTypes","bins","defaultProps","displayName","expectedComponents","ChartStack","_a","ariaDesc","ariaTitle","ChartContainer","hasPatterns","patternScale","themeColor","themeVariant","rest","desc","title","className","g","defaultPatternScale","themeColorScale","stack","chartStyles","chart_color_blue_300","chart_color_gold_300","chart_color_green_300","chart_color_purple_300","chart_color_orange_300","chart_color_cyan_300","yAxis","axisLabel","grid","stroke","ticks","yAxisAlt","tickLabels","fontSize","xAxis","CostExplorerChartBase","containerRef","observer","noop","hiddenSeries","Set","tickValues","initDatum","top1stData","top2ndData","top3rdData","top4thData","top5thData","top6thData","series","getTruncatedString","childName","initDatumChildName","legendItem","symbol","fill","tooltip","cursorVoronoiContainer","getCursorVoronoiContainer","units","getUnits","getTickValues","getAdjustedContainerHeight","adjustContainerHeight","containerHeight","adjustedContainerHeight","getBarWidth","maxWidth","maxValue","s","sectionWidth","getChart","barWidth","has","ChartBar","formatter","formatOptions","CursorVoronoiContainer","cursorDimension","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getDomain","max","Math","getEvents","chartNames","isDataHidden","isHidden","legendName","onLegendClick","handleLegendClick","getLegend","ChartLegend","gutter","responsive","val","values","modVal","str","substr","maxChars","getTickValue","t","handleResize","clientWidth","current","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","disable","ChartLegendTooltip","legendData","day","ref","Chart","legendAllowWrap","legendComponent","legendPosition","ChartTheme","ChartAxis","C","fixLabelOverlap","dependentAxis","tickFormat","CostExplorerChart","global_spacer_2xl","chartSkeleton","global_spacer_3xl","costChart","global_spacer_sm","legendSkeleton","titleContainer","trendChart","usageChart","ExplorerChartBase","stateProps","dispatchProps","createReportDatum","computedItem","reportItem","reportItemValue","computedItemDate","date","xVal","getDate","month","getMonth","yVal","parseFloat","toFixed","fetchReport","perspective","queryString","getChartDatums","computedItems","computedReportItemType","computedReportItemValueType","chartDatums","datums","Map","from","padChartDatums","getComputedItems","report","idKey","getGroupBy","daily","query","groupById","group_by","groupByOrg","getSkeleton","Skeleton","skeleton","items","end_date","start_date","result","newItems","padDate","setDate","format","chartDatum","reportError","reportFetchStatus","mapStateToProps","queryFromRoute","location","search","dateRange","limit","offset","filter_by","cost_type","reportPathsType","reportType","mapDispatchToProps","ExplorerChartConnect","connect","ExplorerChart","DateRangeBase","onItemClicked","DateRange","toolbarContainer","orgReportType","tagReportType","ExplorerFilterBase","getCategoryOptions","orgReport","tagReport","getDefaultDateRange","getDateRangeComponent","currentDateRange","handleDateRangeClick","history","newQuery","JSON","parse","stringify","replace","fetchOrg","fetchTag","orgQueryString","orgReportPathsType","tagQueryString","tagReportPathsType","categoryOptions","onFilterAdded","onFilterRemoved","resourcePathsType","showFilter","orgReportFetchStatus","key_only","tagReportFetchStatus","ExplorerFilterConnect","ExplorerFilter","cost","costLabel","costValue","costLabelUnit","global_FontSize_sm","color","global_Color_100","costLabelDate","global_Color_200","costType","paddingLeft","header","headerContent","justifyContent","headerContentRight","perspectiveContainer","ExplorerHeaderBase","getPerspective","currentPerspective","isAwsAvailable","isAzureAvailable","isOciAvailable","isGcpAvailable","isIbmAvailable","isOcpAvailable","isAwsOcpAvailable","isAzureOcpAvailable","isGcpOcpAvailable","isIbmOcpAvailable","isOcpCloudAvailable","handlePerspectiveSelected","onPerspectiveClicked","order_by","handleCostTypeSelected","awsProviders","userAccess","ocpProviders","azureProviders","gcpProviders","ibmProviders","ociProviders","isCurrencyFeatureEnabled","isExportsFeatureEnabled","onGroupBySelected","providersFetchStatus","noAwsProviders","noAzureProviders","noGcpProviders","noIbmProviders","noOcpProviders","noProviders","groupByOptions","TitleSizes","showOrgs","showTags","providersQueryString","providers","providersError","userAccessQueryString","userAccessError","userAccessFetchStatus","featureFlags","ExplorerHeader","emptyState","infoArrow","position","infoArrowDesc","global_spacer_xs","infoDescription","global_disabled_color_100","global_FontSize_xs","overflowX","ExplorerTableBase","columns","rows","isAllSelected","selectedItems","groupByTagKey","cellTransforms","nowrap","count","orderBy","transforms","sortable","currentDate","mapId","isSortable","rowItem","get","set","mapIdDate","cells","selectItem","sort","a","b","item","unshift","disableSelection","selected","loadingRows","heightAuto","colSpan","Bullseye","textAlign","Spinner","sortBy","getEmptyState","showMargin","EmptyState","EmptyStateIcon","icon","EmptyStateBody","getSortBy","direction","SortByDirection","column","handleOnSelect","isSelected","rowId","row","handleOnSort","onSort","isSortAscending","bind","currentReport","previousReport","isLoading","Table","canSelectAll","TableHeader","TableBody","Boolean","ExplorerTableConnect","ExplorerTable","ExplorerToolbarBase","isBulkSelectDisabled","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","showBulkSelect","showExport","ExplorerToolbarConnect","ExplorerToolbar","Explorer","isExportModalOpen","getExportModal","meta","isAllItems","onClose","handleExportModalClose","resolution","showTimeScope","getPagination","isBottom","page","Pagination","isCompact","itemCount","onPerPageSelect","handlePerPageSelect","onSetPage","handleSetPage","perPage","PaginationVariant","widgetId","getTable","handleSelected","handleSort","getToolbar","handleBulkSelected","handleExportModalOpen","action","handleFilterAdded","filterType","filterValue","filteredQuery","handleFilterRemoved","handleGroupBySelected","groupByKey","indexOf","_event","handlePerspectiveClick","pageNumber","sortType","updateReport","prevState","newPerspective","noReport","noLocation","noOciProviders"],"sourceRoot":""}