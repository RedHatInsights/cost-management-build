{"version":3,"sources":["webpack:///./src/components/charts/trendChart/trendChart.styles.ts","webpack:///./src/components/charts/trendChart/trendChart.tsx","webpack:///./src/components/charts/trendChart/index.ts","webpack:///./src/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/components/charts/usageChart/usageChart.tsx","webpack:///./src/components/charts/usageChart/index.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummary.styles.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummary.tsx","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryAlt.styles.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryAlt.tsx","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryDetails.styles.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryDetails.tsx","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryItem.styles.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryItem.tsx","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryItems.styles.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryItems.tsx","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryTrend.styles.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryTrend.tsx","webpack:///./src/components/reports/azureReportSummary/index.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummary.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummary.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryAlt.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryAlt.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryDetails.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryDetails.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItem.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItem.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItems.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItems.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryTrend.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryTrend.tsx","webpack:///./src/components/reports/awsReportSummary/index.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummary.styles.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummary.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryAlt.styles.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryAlt.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryDetails.styles.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryDetails.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryItem.styles.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryItem.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryItems.styles.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryItems.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryTrend.styles.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryTrend.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryUsage.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/index.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummary.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummary.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryAlt.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryAlt.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryDetails.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryDetails.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItem.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItem.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItems.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItems.tsx","webpack:///./src/components/charts/costChart/costChart.styles.ts","webpack:///./src/components/charts/costChart/costChart.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryTrend.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryTrend.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryUsage.tsx","webpack:///./src/components/reports/ocpReportSummary/index.ts","webpack:///./node_modules/react-router-dom/es/Link.js","webpack:///./src/pages/dashboard/awsDashboard/awsDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboard.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/azureDashboard/azureDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboard.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboard.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboard.tsx","webpack:///./src/pages/overview/overview.styles.ts","webpack:///./src/pages/overview/overview.tsx","webpack:///./src/pages/overview/index.ts"],"names":["chartStyles","legend","labels","fontFamily","esm","value","fontSize","minWidth","legendColorScale","previousMonth","data","fill","stroke","currentMonth","yAxis","axisLabel","padding","grid","ticks","tickLabels","xAxis","styles","StyleSheet","create","chartContainer",":not(foo) svg","overflow","trendChart_TrendChart","react_default","a","Component","[object Object]","super","arguments","this","containerRef","createRef","state","hiddenSeries","Set","width","initDatum","currentData","previousData","showUsageLegendLabel","props","key","setState","series","childName","legendItem","name","Object","chartUtils","symbol","type","style","handleResize","current","clientWidth","getChart","index","createElement","ChartArea","has","y","interpolation","getLegend","ChartLegend","colorScale","getLegendData","gutter","height","orientation","getTooltipLabel","datum","formatDatumValue","formatDatumOptions","units","handleLegendClick","delete","add","isDataAvailable","unavailable","forEach","s","isSeriesHidden","length","push","getChartNames","result","map","serie","getEvents","chart_interactive_legend","chartNames","isHidden","legendName","onLegendClick","assign","setTimeout","window","addEventListener","prevProps","removeEventListener","domain","x","maxCurrent","maxPrevious","maxValue","Math","max","ceil","previousDate","get_date_default","currentDate","adjustContainerHeight","containerHeight","title","container","ChartVoronoiContainer","allowTooltip","constrainToVisibleArea","undefined","voronoiDimension","getDomain","endDate","getEndDate","midDate","floor","adjustedContainerHeight","className","ref","Chart","containerComponent","events","legendComponent","legendData","legendPosition","theme","chartTheme","ChartAxis","tickValues","dependentAxis","__webpack_require__","d","__webpack_exports__","currentRequestData","strokeDasharray","currentUsageData","itemsPerRow","previousRequestData","previousUsageData","currentColorScale","previousColorScale","marginTop","usageChart_UsageChart","legendItemsPerRow","es","t","maxCurrentRequest","maxCurrentUsage","maxPreviousRequest","maxPreviousUsage","currentRequestDate","currentUsageDate","previousRequestDate","previousUsageDate","chartSkeleton","marginBottom","legendSkeleton","reportSummary","subtitle","display","color","var","AzureReportSummary","children","detailsLink","subTitle","status","Card","CardHeader","Title","size","Boolean","CardBody","Fragment","Skeleton","xs","md","sm","CardFooter","azureReportSummaryAlt_styles_styles","cost","flexGrow","minHeight","marginRight","tops","AzureReportSummaryAlt","tabs","Grid","GridItem","lg","xl","azureReportSummaryDetails_styles_styles","reportSummaryDetails","alignItems","text","paddingBottom","lineHeight","valueContainer","wordWrap","AzureReportSummaryDetails","costLabel","formatValue","formatOptions","report","reportType","showUnits","showUsageFirst","usageFormatOptions","usageLabel","emptyValueState","usage","meta","total","count","getCostLayout","getUsageLayout","usageUnits","_units","utils_formatValue","unitsLabel","azureReportSummaryItem_styles_styles","reportSummaryItem",":not(:last-child)","test","AzureReportSummaryItemBase","label","totalValue","lookup","percentVal","Number","toFixed","percentLabel","percent","Progress","defaultProps","v","AzureReportSummaryItem","azureReportSummaryItems_styles_styles","skeleton","AzureReportSummaryItems","nextProps","idKey","labelKey","computedItems","getComputedAzureReportItems","otherIndex","findIndex","i","id","toString","includes","slice","items","getItems","azureReportSummaryTrend_styles_styles","chart","AzureReportSummaryTrend","trendChart","AwsReportSummary","awsReportSummaryAlt_styles_styles","AwsReportSummaryAlt","awsReportSummaryDetails_styles_styles","AwsReportSummaryDetails","awsReportSummaryItem_styles_styles","AwsReportSummaryItemBase","AwsReportSummaryItem","awsReportSummaryItems_styles_styles","AwsReportSummaryItems","getComputedAwsReportItems","awsReportSummaryTrend_styles_styles","AwsReportSummaryTrend","OcpCloudReportSummary","ocpCloudReportSummaryAlt_styles_styles","OcpCloudReportSummaryAlt","ocpCloudReportSummaryDetails_styles_styles","OcpCloudReportSummaryDetails","requestFormatOptions","requestLabel","infrastructureCost","markupCost","request","cloudReportType","infrastructure_cost","markup_cost","Tooltip","content","enableFlip","getRequestLayout","ocpCloudReportSummaryItem_styles_styles","OcpCloudReportSummaryItemBase","OcpCloudReportSummaryItem","ocpCloudReportSummaryItems_styles_styles","OcpCloudReportSummaryItems","getComputedOcpCloudReportItems","ocpCloudReportSummaryTrend_styles_styles","OcpCloudReportSummaryTrend","OcpCloudReportSummaryUsage","usageChart","OcpReportSummary","ocpReportSummaryAlt_styles_styles","OcpReportSummaryAlt","ocpReportSummaryDetails_styles_styles","OcpReportSummaryDetails","derivedCost","derived_cost","ocpReportSummaryItem_styles_styles","OcpReportSummaryItemBase","OcpReportSummaryItem","ocpReportSummaryItems_styles_styles","OcpReportSummaryItems","getComputedOcpReportItems","currentCostData","currentInfrastructureCostData","previousCostData","previousInfrastructureCostData","costChart_styles_styles","costChart_CostChart","costKey","responsive","dist_es","maxCurrentInfrastructure","maxPreviousInfrastructure","currentInfrastructureDate","previousInfrastructureDate","ocpReportSummaryTrend_styles_styles","OcpReportSummaryTrend","OcpReportSummaryUsage","_extends","target","source","prototype","hasOwnProperty","call","_possibleConstructorReturn","self","ReferenceError","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","Link_Link","_React$Component","Link","_temp","_this","instance","Constructor","TypeError","_classCallCheck","_len","args","Array","_key","apply","concat","handleClick","onClick","defaultPrevented","button","preventDefault","history","context","router","_this$props","replace","to","subClass","superClass","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","render","_props","innerRef","obj","keys","indexOf","_objectWithoutProperties","browser_default","location","esm_history","href","createHref","propTypes","prop_types_default","func","string","bool","oneOfType","object","isRequired","contextTypes","shape","es_Link","chartAltHeight","chartHeight","containerAltHeight","containerTrendHeight","dist_esm","tabItems","getIdKeyForTab","tab","mapStateToProps","common","widgetId","widget","awsDashboard","selectWidget","queries","selectWidgetQueries","currentQuery","previousQuery","previous","tabsQuery","currentReport","awsReports","selectReport","currentReportFetchStatus","selectReportFetchStatus","previousReport","tabsReport","tabsReportFetchStatus","mapDispatchToProps","fetchReports","fetchWidgetReports","updateTab","changeWidgetTab","AwsDashboardWidget","react_redux_es","activeTabKey","buildDetailsLink","currentTab","awsQuery","group_by","order_by","details","trend","getUnits","awsReportSummary","titleKey","getDetails","isUsageFirst","getDetailsLabel","usageKey","getDetailsLink","isDetailsLink","handleInsightsNavClick","getDetailsLinkTitle","groupBy","getHorizontalLayout","getSubTitle","getTabs","getTitle","today","Date","month","get_month_default","format_default","startDate","start_of_month_default","getTab","Tab","eventKey","getTabTitle","reportItem","getTabItem","availableTabs","topItems","activeTab","isCostReport","Tabs","isFilled","activeKey","onSelect","handleTabClick","getVerticalLayout","insights","chrome","appNavClick","secondaryNav","tabIndex","isHorizontal","awsDashboard_mapStateToProps","selectWidgets","widgets","selectCurrentWidgets","awsDashboard_awsDashboard","xl2","azureDashboardWidget_styles_chartStyles","azureDashboardWidget_styles_styles","azureDashboardWidget_getIdKeyForTab","azureDashboardWidget_mapStateToProps","azureDashboard","azureReports","azureDashboardWidget_mapDispatchToProps","AzureDashboardWidget","azureQuery","azureReportSummary","azureDashboard_mapStateToProps","azureDashboard_azureDashboard","ocpCloudDashboardWidget_styles_chartStyles","containerUsageHeight","ocpCloudDashboardWidget_styles_styles","ocpCloudDashboardWidget_getIdKeyForTab","ocpCloudDashboardWidget_mapStateToProps","ocpCloudDashboard","ocpCloudReports","ocpCloudDashboardWidget_mapDispatchToProps","OcpCloudDashboardWidget","ocpCloudQuery","ocpCloudReportSummary","requestKey","ocpCloudDashboard_mapStateToProps","ocpCloudDashboard_ocpCloudDashboard","ocpDashboardWidget_styles_chartStyles","ocpDashboardWidget_styles_styles","ocpDashboardWidget_getIdKeyForTab","ocpDashboardWidget_mapStateToProps","ocpDashboard","ocpReports","ocpDashboardWidget_mapDispatchToProps","OcpDashboardWidget","ocpQuery","currentInfrastructureData","previousInfrastructureData","ocpReportSummary","ocpDashboard_mapStateToProps","ocpDashboard_ocpDashboard","overview_styles_styles","info","marginLeft","verticalAlign","infoIcon","infoTitle","fontWeight","headerOverride","index_esm","overview_getIdKeyForTab","overview_mapStateToProps","awsProvidersQueryString","providersQuery","providers","awsProviders","selectProviders","awsProvidersError","selectProvidersError","awsProvidersFetchStatus","selectProvidersFetchStatus","azureProvidersQueryString","azureProviders","azureProvidersError","azureProvidersFetchStatus","ocpProvidersQueryString","ocpProviders","ocpProvidersError","ocpProvidersFetchStatus","overview","openProvidersModal","onboarding","openModal","showPopover","getAvailableTabs","contentRef","tabContentId","tabContentRef","getTabContent","val","TabContent","handlePopoverClick","show","error","isLoading","noAwsProviders","noAzureProviders","noOcpProviders","noProviders","showTabs","sizes","Popover","aria-label","bodyContent","info_circle_icon","page-type","errorState","noProvidersState","loadingState"],"mappings":"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","file":"3f76a59465d5b1550e83.bundle.js","sourcesContent":["import { StyleSheet } from '@patternfly/react-styles';\nimport { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200, global_FontFamily_sans_serif, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 175,\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        global_disabled_color_200.value,\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    previousMonth: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    currentMonth: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartVoronoiContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent, getTooltipLabel, } from 'components/charts/commonChart/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport React from 'react';\nimport { chartStyles, styles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : 'chart.cost_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                series: [\n                    {\n                        childName: 'previousCost',\n                        data: previousData,\n                        legendItem: {\n                            name: getCostRangeString(previousData, key, true, true, 1),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.previousMonth,\n                    },\n                    {\n                        childName: 'currentCost',\n                        data: currentData,\n                        legendItem: {\n                            name: getCostRangeString(currentData, key, true, false),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.currentMonth,\n                    },\n                ],\n            });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        this.getLegend = () => {\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { colorScale: chartStyles.legendColorScale, data: this.getLegendData(), gutter: 10, height: 25, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical', style: chartStyles.legend }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions, units } = this.props;\n            return getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date', units);\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            // Todo: Leave one legend item visible at all times?\n            // const { hiddenSeries, series } = this.state;\n            // const leaveVisible = hiddenSeries.size === series.length - 1;\n            // if (leaveVisible && !this.isSeriesHidden(props.index)) {\n            //   return;\n            // }\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length === (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign({}, s.legendItem, getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentData, previousData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrent = currentData ? getMaxValue(currentData) : 0;\n        const maxPrevious = previousData ? getMaxValue(previousData) : 0;\n        const maxValue = Math.max(maxCurrent, maxPrevious);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData\n            ? getDate(getDateRange(previousData, true, true)[1])\n            : 0;\n        const currentDate = currentData\n            ? getDate(getDateRange(currentData, true, true)[1])\n            : 0;\n        return currentDate > 0 || previousDate > 0\n            ? Math.max(currentDate, previousDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding, title, } = this.props;\n        const { series, width } = this.state;\n        const isDataAvailable = this.isDataAvailable();\n        const container = (React.createElement(ChartVoronoiContainer, { allowTooltip: !isDataAvailable, constrainToVisibleArea: true, labels: !isDataAvailable ? this.getTooltipLabel : undefined, voronoiDimension: \"x\" }));\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 75\n            : containerHeight;\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef, style: { height: adjustedContainerHeight } },\n            React.createElement(\"div\", null, title),\n            React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                series &&\n                    series.map((s, index) => {\n                        return this.getChart(s, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))));\n    }\n}\nexport { TrendChart };\n","export { TrendChart } from './trendChart';\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200, global_FontFamily_sans_serif, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    itemsPerRow: 2,\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 380,\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        global_disabled_color_200.value,\n        chart_color_green_100.value,\n        global_disabled_color_200.value,\n        chart_color_green_200.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_200.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartVoronoiContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange, getMaxValue, getTooltipContent, getTooltipLabel, getUsageRangeString, } from 'components/charts/commonChart/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles, styles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n            const usageKey = 'chart.usage_legend_label';\n            const requestKey = 'chart.requests_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                series: [\n                    {\n                        childName: 'previousUsage',\n                        data: previousUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.previousUsageData,\n                    },\n                    {\n                        childName: 'currentUsage',\n                        data: currentUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.currentUsageData,\n                    },\n                    {\n                        childName: 'previousRequest',\n                        data: previousRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                            symbol: {\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.previousRequestData,\n                    },\n                    {\n                        childName: 'currentRequest',\n                        data: currentRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                            symbol: {\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.currentRequestData,\n                    },\n                ],\n            });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > 300\n                    ? chartStyles.itemsPerRow\n                    : 1;\n            return (React.createElement(ChartLegend, { colorScale: chartStyles.legendColorScale, data: this.getLegendData(), height: 25, gutter: 10, itemsPerRow: itemsPerRow, name: \"legend\", style: chartStyles.legend }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const value = getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n            if (datum.childName === 'currentRequest' ||\n                datum.childName === 'previousRequest') {\n                return i18next.t('chart.requests_tooltip', { value });\n            }\n            else if (datum.childName === 'currentUsage' ||\n                datum.childName === 'previousUsage') {\n                return i18next.t('chart.usage_tooltip', { value });\n            }\n            return value;\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length === (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign({}, s.legendItem, getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentRequest = currentRequestData\n            ? getMaxValue(currentRequestData)\n            : 0;\n        const maxCurrentUsage = currentUsageData\n            ? getMaxValue(currentUsageData)\n            : 0;\n        const maxPreviousRequest = previousRequestData\n            ? getMaxValue(previousRequestData)\n            : 0;\n        const maxPreviousUsage = previousUsageData\n            ? getMaxValue(previousUsageData)\n            : 0;\n        const maxValue = Math.max(maxCurrentRequest, maxCurrentUsage, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const currentRequestDate = currentRequestData\n            ? getDate(getDateRange(currentRequestData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentUsageData\n            ? getDate(getDateRange(currentUsageData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousRequestData\n            ? getDate(getDateRange(previousRequestData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousUsageData\n            ? getDate(getDateRange(previousUsageData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 ||\n            currentUsageDate > 0 ||\n            previousRequestDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding, title, } = this.props;\n        const { series, width } = this.state;\n        const isDataAvailable = this.isDataAvailable();\n        const container = (React.createElement(ChartVoronoiContainer, { allowTooltip: !isDataAvailable, constrainToVisibleArea: true, labels: !isDataAvailable ? this.getTooltipLabel : undefined, voronoiDimension: \"x\" }));\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 75\n            : containerHeight;\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef, style: { height: adjustedContainerHeight } },\n            React.createElement(\"div\", null, title),\n            React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                series &&\n                    series.map((s, index) => {\n                        return this.getChart(s, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))));\n    }\n}\nexport { UsageChart };\n","export { UsageChart } from './usageChart';\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './azureReportSummary.styles';\nconst AzureReportSummaryBase = ({ children, detailsLink, title, subTitle, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: SkeletonSize.xs }),\n        React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n        React.createElement(Skeleton, { size: SkeletonSize.sm }),\n        React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst AzureReportSummary = translate()(AzureReportSummaryBase);\nexport { AzureReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '175px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '470px',\n        marginRight: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './azureReportSummaryAlt.styles';\nconst AzureReportSummaryAltBase = ({ children, detailsLink, status, subTitle, t, tabs, title, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.cost) },\n                React.createElement(CardHeader, null,\n                    React.createElement(Title, { size: \"lg\" }, title),\n                    Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: SkeletonSize.xs }),\n                    React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n                    React.createElement(Skeleton, { size: SkeletonSize.sm }),\n                    React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst AzureReportSummaryAlt = translate()(AzureReportSummaryAltBase);\nexport { AzureReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    valueContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        width: '50%',\n        wordWrap: 'break-word',\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './azureReportSummaryDetails.styles';\nconst AzureReportSummaryDetailsBase = ({ costLabel, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, showUnits = false, showUsageFirst = false, t, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    if (report && report.meta && report.meta.total) {\n        cost = formatValue(report.meta.total.cost ? report.meta.total.cost.value : 0, report.meta.total.cost ? report.meta.total.cost.units : 'USD', formatOptions);\n        if (report.meta.total.usage && report.meta.total.usage.value) {\n            usage = formatValue(report.meta.total.usage ? report.meta.total.usage.value : 0, report.meta.total.usage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            // Work around for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatValue(report.meta.total.usage ? report.meta.total.usage : 0, report.meta.total.count ? report.meta.total.count.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = () => (React.createElement(\"div\", { className: css(styles.valueContainer) },\n        React.createElement(\"div\", { className: css(styles.value) }, cost),\n        React.createElement(\"div\", { className: css(styles.text) },\n            React.createElement(\"div\", null, costLabel))));\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = report && report.meta && report.meta.total && report.meta.total.usage\n            ? report.meta.total.usage.units\n            : '';\n        // added as a work-around for azure #1079\n        const _units = unitLookupKey(units ? units : usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: css(styles.valueContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                usage,\n                Boolean(showUnits &&\n                    (units ||\n                        (report &&\n                            report.meta &&\n                            report.meta.total.usage &&\n                            report.meta.total.usage.value >= 0))) && React.createElement(\"span\", { className: css(styles.text) }, unitsLabel)),\n            React.createElement(\"div\", { className: css(styles.text) },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (reportType === \"cost\" /* cost */) {\n        return React.createElement(React.Fragment, null, getCostLayout());\n    }\n    else {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(),\n            getUsageLayout()));\n    }\n};\nconst AzureReportSummaryDetails = translate()(AzureReportSummaryDetailsBase);\nexport { AzureReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './azureReportSummaryItem.styles';\nconst AzureReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nAzureReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst AzureReportSummaryItem = translate()(AzureReportSummaryItemBase);\nexport { AzureReportSummaryItem };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedAzureReportItems, } from 'utils/computedReport/getComputedAzureReportItems';\nimport { styles } from './azureReportSummaryItems.styles';\nclass AzureReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedAzureReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: SkeletonSize.md }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst AzureReportSummaryItems = translate()(AzureReportSummaryItemsBase);\nexport { AzureReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './azureReportSummaryTrend.styles';\nconst AzureReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { AzureReportSummaryTrend };\n","export { AzureReportSummary } from './azureReportSummary';\nexport { AzureReportSummaryAlt } from './azureReportSummaryAlt';\nexport { AzureReportSummaryDetails } from './azureReportSummaryDetails';\nexport { AzureReportSummaryItem } from './azureReportSummaryItem';\nexport { AzureReportSummaryItems } from './azureReportSummaryItems';\nexport { AzureReportSummaryTrend } from './azureReportSummaryTrend';\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './awsReportSummary.styles';\nconst AwsReportSummaryBase = ({ children, detailsLink, title, subTitle, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: SkeletonSize.xs }),\n        React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n        React.createElement(Skeleton, { size: SkeletonSize.sm }),\n        React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst AwsReportSummary = translate()(AwsReportSummaryBase);\nexport { AwsReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '175px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '470px',\n        marginRight: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './awsReportSummaryAlt.styles';\nconst AwsReportSummaryAltBase = ({ children, detailsLink, status, subTitle, t, tabs, title, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.cost) },\n                React.createElement(CardHeader, null,\n                    React.createElement(Title, { size: \"lg\" }, title),\n                    Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: SkeletonSize.xs }),\n                    React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n                    React.createElement(Skeleton, { size: SkeletonSize.sm }),\n                    React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst AwsReportSummaryAlt = translate()(AwsReportSummaryAltBase);\nexport { AwsReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    valueContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        width: '50%',\n        wordWrap: 'break-word',\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './awsReportSummaryDetails.styles';\nconst AwsReportSummaryDetailsBase = ({ costLabel, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, showUnits = false, showUsageFirst = false, t, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    if (report && report.meta && report.meta.total) {\n        cost = formatValue(report.meta.total.cost ? report.meta.total.cost.value : 0, report.meta.total.cost ? report.meta.total.cost.units : 'USD', formatOptions);\n        usage = formatValue(report.meta.total.usage ? report.meta.total.usage.value : 0, report.meta.total.usage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n    }\n    const getCostLayout = () => (React.createElement(\"div\", { className: css(styles.valueContainer) },\n        React.createElement(\"div\", { className: css(styles.value) }, cost),\n        React.createElement(\"div\", { className: css(styles.text) },\n            React.createElement(\"div\", null, costLabel))));\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = report && report.meta && report.meta.total && report.meta.total.usage\n            ? report.meta.total.usage.units\n            : '';\n        const units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${units}`);\n        return (React.createElement(\"div\", { className: css(styles.valueContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                usage,\n                Boolean(showUnits &&\n                    report &&\n                    report.meta &&\n                    report.meta.total.usage &&\n                    report.meta.total.usage.value >= 0) && React.createElement(\"span\", { className: css(styles.text) }, unitsLabel)),\n            React.createElement(\"div\", { className: css(styles.text) },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (reportType === \"cost\" /* cost */) {\n        return React.createElement(React.Fragment, null, getCostLayout());\n    }\n    else {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(),\n            getUsageLayout()));\n    }\n};\nconst AwsReportSummaryDetails = translate()(AwsReportSummaryDetailsBase);\nexport { AwsReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './awsReportSummaryItem.styles';\nconst AwsReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nAwsReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst AwsReportSummaryItem = translate()(AwsReportSummaryItemBase);\nexport { AwsReportSummaryItem };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedAwsReportItems, } from 'utils/computedReport/getComputedAwsReportItems';\nimport { styles } from './awsReportSummaryItems.styles';\nclass AwsReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedAwsReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: SkeletonSize.md }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst AwsReportSummaryItems = translate()(AwsReportSummaryItemsBase);\nexport { AwsReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './awsReportSummaryTrend.styles';\nconst AwsReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { AwsReportSummaryTrend };\n","export { AwsReportSummary } from './awsReportSummary';\nexport { AwsReportSummaryAlt } from './awsReportSummaryAlt';\nexport { AwsReportSummaryDetails } from './awsReportSummaryDetails';\nexport { AwsReportSummaryItem } from './awsReportSummaryItem';\nexport { AwsReportSummaryItems } from './awsReportSummaryItems';\nexport { AwsReportSummaryTrend } from './awsReportSummaryTrend';\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpCloudReportSummary.styles';\nconst OcpCloudReportSummaryBase = ({ children, detailsLink, title, subTitle, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: SkeletonSize.xs }),\n        React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n        React.createElement(Skeleton, { size: SkeletonSize.sm }),\n        React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst OcpCloudReportSummary = translate()(OcpCloudReportSummaryBase);\nexport { OcpCloudReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '175px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '470px',\n        marginRight: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpCloudReportSummaryAlt.styles';\nconst OcpCloudReportSummaryAltBase = ({ children, detailsLink, status, subTitle, t, tabs, title }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.cost) },\n                React.createElement(CardHeader, null,\n                    React.createElement(Title, { size: \"lg\" }, title),\n                    Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: SkeletonSize.xs }),\n                    React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n                    React.createElement(Skeleton, { size: SkeletonSize.sm }),\n                    React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst OcpCloudReportSummaryAlt = translate()(OcpCloudReportSummaryAltBase);\nexport { OcpCloudReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    valueContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        width: '50%',\n        wordWrap: 'break-word',\n    },\n});\n","import { Tooltip } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './ocpCloudReportSummaryDetails.styles';\nconst OcpCloudReportSummaryDetailsBase = ({ costLabel, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, requestFormatOptions, requestLabel, showUnits = false, showUsageFirst = false, t, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let markupCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const cloudReportType = reportType === \"database\" /* database */ ||\n        reportType === \"instance_type\" /* instanceType */ ||\n        reportType === \"network\" /* network */ ||\n        reportType === \"storage\" /* storage */;\n    if (report && report.meta && report.meta.total) {\n        cost = formatValue(report.meta.total.cost ? report.meta.total.cost.value : 0, report.meta.total.cost ? report.meta.total.cost.units : 'USD', formatOptions);\n        infrastructureCost = formatValue(report.meta.total.infrastructure_cost\n            ? report.meta.total.infrastructure_cost.value\n            : 0, report.meta.total.infrastructure_cost\n            ? report.meta.total.infrastructure_cost.units\n            : 'USD', formatOptions);\n        markupCost = formatValue(report.meta.total.markup_cost ? report.meta.total.markup_cost.value : 0, report.meta.total.markup_cost\n            ? report.meta.total.markup_cost.units\n            : 'USD', formatOptions);\n        if (cloudReportType) {\n            usage = formatValue(report.meta.total.usage ? report.meta.total.usage.value : 0, report.meta.total.usage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            usage = formatValue(report.meta.total.usage ? report.meta.total.usage.value : 0, report.meta.total.usage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n            request = formatValue(report.meta.total.request ? report.meta.total.request.value : 0, report.meta.total.request ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = () => (React.createElement(\"div\", { className: css(styles.valueContainer) },\n        React.createElement(Tooltip, { content: t('ocp_cloud_dashboard.total_cost_tooltip', {\n                infrastructureCost,\n                markupCost,\n            }), enableFlip: true },\n            React.createElement(\"div\", { className: css(styles.value) }, cost)),\n        React.createElement(\"div\", { className: css(styles.text) },\n            React.createElement(\"div\", null, costLabel))));\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = report && report.meta && report.meta.total && report.meta.total.request\n            ? report.meta.total.request.units\n            : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: css(styles.valueContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                request,\n                Boolean(showUnits &&\n                    report &&\n                    report.meta &&\n                    report.meta.total.request &&\n                    report.meta.total.request.value >= 0) && React.createElement(\"span\", { className: css(styles.text) }, unitsLabel)),\n            React.createElement(\"div\", { className: css(styles.text) },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = report && report.meta && report.meta.total && report.meta.total.usage\n            ? report.meta.total.usage.units\n            : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: css(styles.valueContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                usage,\n                Boolean(showUnits &&\n                    report &&\n                    report.meta &&\n                    report.meta.total.usage &&\n                    report.meta.total.usage.value >= 0) && React.createElement(\"span\", { className: css(styles.text) }, unitsLabel)),\n            React.createElement(\"div\", { className: css(styles.text) },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (reportType === \"cost\" /* cost */) {\n        return React.createElement(React.Fragment, null, getCostLayout());\n    }\n    else if (cloudReportType) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(),\n            getUsageLayout()));\n    }\n    else {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n};\nconst OcpCloudReportSummaryDetails = translate()(OcpCloudReportSummaryDetailsBase);\nexport { OcpCloudReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './ocpCloudReportSummaryItem.styles';\nconst OcpCloudReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nOcpCloudReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst OcpCloudReportSummaryItem = translate()(OcpCloudReportSummaryItemBase);\nexport { OcpCloudReportSummaryItem };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedOcpCloudReportItems, } from 'utils/computedReport/getComputedOcpCloudReportItems';\nimport { styles } from './ocpCloudReportSummaryItems.styles';\nclass OcpCloudReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedOcpCloudReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: SkeletonSize.md }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst OcpCloudReportSummaryItems = translate()(OcpCloudReportSummaryItemsBase);\nexport { OcpCloudReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './ocpCloudReportSummaryTrend.styles';\nconst OcpCloudReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { OcpCloudReportSummaryTrend };\n","import { css } from '@patternfly/react-styles';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nimport { styles } from './ocpCloudReportSummaryTrend.styles';\nconst OcpCloudReportSummaryUsage = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { OcpCloudReportSummaryUsage };\n","export { OcpCloudReportSummary } from './ocpCloudReportSummary';\nexport { OcpCloudReportSummaryAlt } from './ocpCloudReportSummaryAlt';\nexport { OcpCloudReportSummaryDetails } from './ocpCloudReportSummaryDetails';\nexport { OcpCloudReportSummaryItem } from './ocpCloudReportSummaryItem';\nexport { OcpCloudReportSummaryItems } from './ocpCloudReportSummaryItems';\nexport { OcpCloudReportSummaryTrend } from './ocpCloudReportSummaryTrend';\nexport { OcpCloudReportSummaryUsage } from './ocpCloudReportSummaryUsage';\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpReportSummary.styles';\nconst OcpReportSummaryBase = ({ children, detailsLink, title, subTitle, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: SkeletonSize.xs }),\n        React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n        React.createElement(Skeleton, { size: SkeletonSize.sm }),\n        React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst OcpReportSummary = translate()(OcpReportSummaryBase);\nexport { OcpReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '175px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '440px',\n        marginRight: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpReportSummaryAlt.styles';\nconst OcpReportSummaryAltBase = ({ children, detailsLink, status, subTitle, t, tabs, title, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.cost) },\n                React.createElement(CardHeader, null,\n                    React.createElement(Title, { size: \"lg\" }, title),\n                    Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: SkeletonSize.xs }),\n                    React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.chartSkeleton) }),\n                    React.createElement(Skeleton, { size: SkeletonSize.sm }),\n                    React.createElement(Skeleton, { size: SkeletonSize.xs, className: css(styles.legendSkeleton) }))) : (children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst OcpReportSummaryAlt = translate()(OcpReportSummaryAltBase);\nexport { OcpReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    valueContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        width: '50%',\n        wordWrap: 'break-word',\n    },\n});\n","import { Tooltip } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey, } from 'utils/formatValue';\nimport { styles } from './ocpReportSummaryDetails.styles';\nconst OcpReportSummaryDetailsBase = ({ costLabel, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, requestFormatOptions, requestLabel, showUnits = false, showUsageFirst = false, t, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let derivedCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    if (report && report.meta && report.meta.total) {\n        cost = formatValue(report.meta.total.cost ? report.meta.total.cost.value : 0, report.meta.total.cost ? report.meta.total.cost.units : 'USD', formatOptions);\n        derivedCost = formatValue(report.meta.total.derived_cost ? report.meta.total.derived_cost.value : 0, report.meta.total.derived_cost\n            ? report.meta.total.derived_cost.units\n            : 'USD', formatOptions);\n        infrastructureCost = formatValue(report.meta.total.infrastructure_cost\n            ? report.meta.total.infrastructure_cost.value\n            : 0, report.meta.total.infrastructure_cost\n            ? report.meta.total.infrastructure_cost.units\n            : 'USD', formatOptions);\n        if (reportType !== \"cost\" /* cost */) {\n            usage = formatValue(report.meta.total.usage ? report.meta.total.usage.value : 0, report.meta.total.usage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n            request = formatValue(report.meta.total.request ? report.meta.total.request.value : 0, report.meta.total.request ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = () => (React.createElement(\"div\", { className: css(styles.valueContainer) },\n        React.createElement(Tooltip, { content: t('ocp_dashboard.total_cost_tooltip', {\n                derivedCost,\n                infrastructureCost,\n            }), enableFlip: true },\n            React.createElement(\"div\", { className: css(styles.value) }, cost)),\n        React.createElement(\"div\", { className: css(styles.text) },\n            React.createElement(\"div\", null, costLabel))));\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = report && report.meta && report.meta.total && report.meta.total.request\n            ? report.meta.total.request.units\n            : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: css(styles.valueContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                request,\n                Boolean(showUnits &&\n                    report &&\n                    report.meta &&\n                    report.meta.total.request &&\n                    report.meta.total.request.value >= 0) && React.createElement(\"span\", { className: css(styles.text) }, unitsLabel)),\n            React.createElement(\"div\", { className: css(styles.text) },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = report && report.meta && report.meta.total && report.meta.total.usage\n            ? report.meta.total.usage.units\n            : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: css(styles.valueContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                usage,\n                Boolean(showUnits &&\n                    report &&\n                    report.meta &&\n                    report.meta.total.usage &&\n                    report.meta.total.usage.value >= 0) && React.createElement(\"span\", { className: css(styles.text) }, unitsLabel)),\n            React.createElement(\"div\", { className: css(styles.text) },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (reportType === \"cost\" /* cost */) {\n        return React.createElement(React.Fragment, null, getCostLayout());\n    }\n    else {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n};\nconst OcpReportSummaryDetails = translate()(OcpReportSummaryDetailsBase);\nexport { OcpReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './ocpReportSummaryItem.styles';\nconst OcpReportSummaryItemBase = ({ formatOptions, formatValue, label, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nOcpReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst OcpReportSummaryItem = translate()(OcpReportSummaryItemBase);\nexport { OcpReportSummaryItem };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedOcpReportItems, } from 'utils/computedReport/getComputedOcpReportItems';\nimport { styles } from './ocpReportSummaryItems.styles';\nclass OcpReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedOcpReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: SkeletonSize.md }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst OcpReportSummaryItems = translate()(OcpReportSummaryItemsBase);\nexport { OcpReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200, global_FontFamily_sans_serif, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    currentCostData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    currentInfrastructureCostData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    itemsPerRow: 2,\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 200,\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        global_disabled_color_200.value,\n        chart_color_green_100.value,\n        global_disabled_color_200.value,\n        chart_color_green_200.value,\n    ],\n    previousCostData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    previousInfrastructureCostData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_200.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartVoronoiContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent, getTooltipLabel, } from 'components/charts/commonChart/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles, styles } from './costChart.styles';\nclass CostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                series: [\n                    {\n                        childName: 'previousCost',\n                        data: previousCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.previousCostData,\n                    },\n                    {\n                        childName: 'currentCost',\n                        data: currentCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentCostData, costKey, true, false),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.currentCostData,\n                    },\n                    {\n                        childName: 'previousInfrastructureCost',\n                        data: previousInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                            symbol: {\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.previousInfrastructureCostData,\n                    },\n                    {\n                        childName: 'currentInfrastructureCost',\n                        data: currentInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                            symbol: {\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.currentInfrastructureCostData,\n                    },\n                ],\n            });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > 400\n                    ? chartStyles.itemsPerRow\n                    : 1;\n            return (React.createElement(ChartLegend, { colorScale: chartStyles.legendColorScale, data: this.getLegendData(), height: 25, gutter: 10, itemsPerRow: itemsPerRow, name: \"legend\", responsive: false, style: chartStyles.legend }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const value = getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n            if (datum.childName === 'currentCost' ||\n                datum.childName === 'previousCost') {\n                return i18next.t('chart.cost_tooltip', { value });\n            }\n            else if (datum.childName === 'currentInfrastructureCost' ||\n                datum.childName === 'previousInfrastructureCost') {\n                return i18next.t('chart.cost_infrastructure_tooltip', { value });\n            }\n            return value;\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length === (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign({}, s.legendItem, getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !==\n            this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.previousInfrastructureCostData !==\n                this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentInfrastructure = currentInfrastructureCostData\n            ? getMaxValue(currentInfrastructureCostData)\n            : 0;\n        const maxCurrentUsage = currentCostData ? getMaxValue(currentCostData) : 0;\n        const maxPreviousInfrastructure = previousInfrastructureCostData\n            ? getMaxValue(previousInfrastructureCostData)\n            : 0;\n        const maxPreviousUsage = previousCostData\n            ? getMaxValue(previousCostData)\n            : 0;\n        const maxValue = Math.max(maxCurrentInfrastructure, maxCurrentUsage, maxPreviousInfrastructure, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentCostData\n            ? getDate(getDateRange(currentCostData, true, true)[1])\n            : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData\n            ? getDate(getDateRange(previousCostData, true, true)[1])\n            : 0;\n        return currentInfrastructureDate > 0 ||\n            currentUsageDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentUsageDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding, title, } = this.props;\n        const { series, width } = this.state;\n        const isDataAvailable = this.isDataAvailable();\n        const container = (React.createElement(ChartVoronoiContainer, { allowTooltip: !isDataAvailable, constrainToVisibleArea: true, labels: !isDataAvailable ? this.getTooltipLabel : undefined, voronoiDimension: \"x\" }));\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 75\n            : containerHeight;\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef, style: { height: adjustedContainerHeight } },\n            React.createElement(\"div\", null, title),\n            React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                series &&\n                    series.map((s, index) => {\n                        return this.getChart(s, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))));\n    }\n}\nexport { CostChart };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { CostChart } from 'components/charts/costChart';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryTrend.styles';\nconst OcpReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(CostChart, Object.assign({}, props))));\nexport { OcpReportSummaryTrend };\n","import { css } from '@patternfly/react-styles';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryTrend.styles';\nconst OcpReportSummaryUsage = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { OcpReportSummaryUsage };\n","export { OcpReportSummary } from './ocpReportSummary';\nexport { OcpReportSummaryAlt } from './ocpReportSummaryAlt';\nexport { OcpReportSummaryDetails } from './ocpReportSummaryDetails';\nexport { OcpReportSummaryItem } from './ocpReportSummaryItem';\nexport { OcpReportSummaryItems } from './ocpReportSummaryItems';\nexport { OcpReportSummaryTrend } from './ocpReportSummaryTrend';\nexport { OcpReportSummaryUsage } from './ocpReportSummaryUsage';\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"invariant\";\nimport { createLocation } from \"history\";\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nvar Link = function (_React$Component) {\n  _inherits(Link, _React$Component);\n\n  function Link() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Link);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {\n      if (_this.props.onClick) _this.props.onClick(event);\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && // ignore everything but left clicks\n      !_this.props.target && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n\n          var history = _this.context.router.history;\n          var _this$props = _this.props,\n              replace = _this$props.replace,\n              to = _this$props.to;\n\n\n          if (replace) {\n            history.replace(to);\n          } else {\n            history.push(to);\n          }\n        }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Link.prototype.render = function render() {\n    var _props = this.props,\n        replace = _props.replace,\n        to = _props.to,\n        innerRef = _props.innerRef,\n        props = _objectWithoutProperties(_props, [\"replace\", \"to\", \"innerRef\"]); // eslint-disable-line no-unused-vars\n\n    invariant(this.context.router, \"You should not use <Link> outside a <Router>\");\n\n    invariant(to !== undefined, 'You must specify the \"to\" property');\n\n    var history = this.context.router.history;\n\n    var location = typeof to === \"string\" ? createLocation(to, null, null, history.location) : to;\n\n    var href = history.createHref(location);\n    return React.createElement(\"a\", _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));\n  };\n\n  return Link;\n}(React.Component);\n\nLink.propTypes = {\n  onClick: PropTypes.func,\n  target: PropTypes.string,\n  replace: PropTypes.bool,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  innerRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n};\nLink.defaultProps = {\n  replace: false\n};\nLink.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired,\n      createHref: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired\n};\n\n\nexport default Link;","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_2xl, global_spacer_xl } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartAltHeight: 180,\n    chartHeight: 80,\n    containerAltHeight: 200,\n    containerTrendHeight: 150,\n};\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery } from 'api/awsQuery';\nimport { transformAwsReport } from 'components/charts/commonChart/chartUtils';\nimport { AwsReportSummary, AwsReportSummaryAlt, AwsReportSummaryDetails, AwsReportSummaryItem, AwsReportSummaryItems, AwsReportSummaryTrend, } from 'components/reports/awsReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { awsDashboardActions, awsDashboardSelectors, } from 'store/awsDashboard';\nimport { awsReportsSelectors } from 'store/awsReports';\nimport { createMapStateToProps } from 'store/common';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './awsDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nclass AwsDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const currentTab = getIdKeyForTab(tab);\n            return `/aws?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, details, previousReport, t, trend } = this.props;\n            const currentData = transformAwsReport(currentReport, trend.type);\n            const previousData = transformAwsReport(previousReport, trend.type);\n            const units = this.getUnits();\n            return (React.createElement(AwsReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, showUsageLegendLabel: details.showUsageLegendLabel, title: t(trend.titleKey, {\n                    units: t(`units.${units}`),\n                }) }));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, isUsageFirst, reportType } = this.props;\n            const units = this.getUnits();\n            return (React.createElement(AwsReportSummaryDetails, { costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, showUnits: details.showUnits, showUsageFirst: isUsageFirst, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(AwsReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerAltHeight, chartStyles.chartAltHeight, true)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('aws_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabItems) },\n                    React.createElement(AwsReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const isCostReport = reportType === \"cost\" /* cost */ ||\n                reportType === \"database\" /* database */ ||\n                reportType === \"network\" /* network */;\n            if (activeTab === currentTab) {\n                return (React.createElement(AwsReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: isCostReport\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: reportItem.cost }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, reportType } = this.props;\n            let units = '';\n            if (currentReport && currentReport.meta && currentReport.meta.total) {\n                if (reportType === \"cost\" /* cost */ ||\n                    reportType === \"database\" /* database */ ||\n                    reportType === \"network\" /* network */) {\n                    units = currentReport.meta.total.cost\n                        ? unitLookupKey(currentReport.meta.total.cost.units)\n                        : '';\n                }\n                else {\n                    units = currentReport.meta.total.usage\n                        ? unitLookupKey(currentReport.meta.total.usage.units)\n                        : '';\n                }\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus } = this.props;\n            return (React.createElement(AwsReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight),\n                Boolean(availableTabs) && (React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs()))));\n        };\n        this.handleInsightsNavClick = () => {\n            insights.chrome.appNavClick({ id: 'aws', secondaryNav: true });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        updateTab(id, availableTabs[0]);\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: awsReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.tabs), tabsReportFetchStatus: awsReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(AwsDashboardWidgetBase));\nexport { AwsDashboardWidget, AwsDashboardWidgetBase };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { awsDashboardSelectors } from 'store/awsDashboard';\nimport { createMapStateToProps } from 'store/common';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\nconst AwsDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(AwsDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(AwsDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: awsDashboardSelectors.selectWidgets(state),\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = translate()(connect(mapStateToProps, {})(AwsDashboardBase));\nexport default AwsDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_2xl, global_spacer_xl } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartAltHeight: 180,\n    chartHeight: 80,\n    containerAltHeight: 200,\n    containerTrendHeight: 150,\n};\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery } from 'api/azureQuery';\nimport { transformAzureReport } from 'components/charts/commonChart/chartUtils';\nimport { AzureReportSummary, AzureReportSummaryAlt, AzureReportSummaryDetails, AzureReportSummaryItem, AzureReportSummaryItems, AzureReportSummaryTrend, } from 'components/reports/azureReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { azureDashboardActions, azureDashboardSelectors, } from 'store/azureDashboard';\nimport { azureReportsSelectors } from 'store/azureReports';\nimport { createMapStateToProps } from 'store/common';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './azureDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nclass AzureDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const currentTab = getIdKeyForTab(tab);\n            return `/azure?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, details, previousReport, t, trend } = this.props;\n            const currentData = transformAzureReport(currentReport, trend.type);\n            const previousData = transformAzureReport(previousReport, trend.type);\n            const units = this.getUnits();\n            return (React.createElement(AzureReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, showUsageLegendLabel: details.showUsageLegendLabel, title: t(trend.titleKey, {\n                    units: t(`units.${units}`),\n                }), units: units }));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, isUsageFirst, reportType } = this.props;\n            const units = this.getUnits();\n            return (React.createElement(AzureReportSummaryDetails, { costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, showUnits: details.showUnits, showUsageFirst: isUsageFirst, usageFormatOptions: details.usageFormatOptions, units: units, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(AzureReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerAltHeight, chartStyles.chartAltHeight, true)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('azure_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabItems) },\n                    React.createElement(AzureReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, details, reportType, tabsReport, topItems, } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const isCostReport = reportType === \"cost\" /* cost */ ||\n                reportType === \"database\" /* database */ ||\n                reportType === \"network\" /* network */;\n            if (activeTab === currentTab) {\n                return (React.createElement(AzureReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: isCostReport\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value\n                            ? tabsReport.meta.total.usage.value\n                            : tabsReport.meta.total.usage, units: details.units ? details.units : reportItem.units, value: reportItem.cost }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, details, reportType } = this.props;\n            if (details.units) {\n                return details.units;\n            }\n            let units = '';\n            if (currentReport && currentReport.meta && currentReport.meta.total) {\n                if (reportType === \"cost\" /* cost */ ||\n                    reportType === \"database\" /* database */ ||\n                    reportType === \"network\" /* network */) {\n                    units = currentReport.meta.total.cost\n                        ? unitLookupKey(currentReport.meta.total.cost.units)\n                        : '';\n                }\n                else {\n                    units = currentReport.meta.total.usage\n                        ? unitLookupKey(currentReport.meta.total.usage.units)\n                        : '';\n                }\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus } = this.props;\n            return (React.createElement(AzureReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight),\n                Boolean(availableTabs) && (React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs()))));\n        };\n        this.handleInsightsNavClick = () => {\n            insights.chrome.appNavClick({ id: 'azure', secondaryNav: true });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        updateTab(id, availableTabs[0]);\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: azureReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: azureReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: azureReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: azureReportsSelectors.selectReport(state, widget.reportType, queries.tabs), tabsReportFetchStatus: azureReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: azureDashboardActions.fetchWidgetReports,\n    updateTab: azureDashboardActions.changeWidgetTab,\n};\nconst AzureDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(AzureDashboardWidgetBase));\nexport { AzureDashboardWidget, AzureDashboardWidgetBase, };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { azureDashboardSelectors } from 'store/azureDashboard';\nimport { createMapStateToProps } from 'store/common';\nimport { AzureDashboardWidget } from './azureDashboardWidget';\nconst AzureDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(AzureDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(AzureDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: azureDashboardSelectors.selectWidgets(state),\n        widgets: azureDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureDashboard = translate()(connect(mapStateToProps, {})(AzureDashboardBase));\nexport default AzureDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_2xl, global_spacer_xl } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartAltHeight: 180,\n    chartHeight: 80,\n    containerAltHeight: 200,\n    containerTrendHeight: 150,\n    containerUsageHeight: 180,\n};\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery } from 'api/ocpCloudQuery';\nimport { transformOcpCloudReport } from 'components/charts/commonChart/chartUtils';\nimport { OcpCloudReportSummary, OcpCloudReportSummaryAlt, OcpCloudReportSummaryDetails, OcpCloudReportSummaryItem, OcpCloudReportSummaryItems, OcpCloudReportSummaryTrend, OcpCloudReportSummaryUsage, } from 'components/reports/ocpCloudReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardActions, ocpCloudDashboardSelectors, } from 'store/ocpCloudDashboard';\nimport { ocpCloudReportsSelectors } from 'store/ocpCloudReports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './ocpCloudDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nclass OcpCloudDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const currentTab = getIdKeyForTab(tab);\n            return `/ocp-cloud?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, details, previousReport, reportType, t, trend, } = this.props;\n            const costReportType = reportType === \"cost\" /* cost */ ||\n                reportType === \"database\" /* database */ ||\n                reportType === \"network\" /* network */;\n            const reportItem = costReportType ? 'cost' : 'usage';\n            const currentUsageData = transformOcpCloudReport(currentReport, trend.type, 'date', reportItem);\n            const previousUsageData = transformOcpCloudReport(previousReport, trend.type, 'date', reportItem);\n            const currentRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpCloudReport(currentReport, trend.type, 'date', 'request')\n                : undefined;\n            const previousRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpCloudReport(previousReport, trend.type, 'date', 'request')\n                : undefined;\n            const units = this.getUnits();\n            return (React.createElement(React.Fragment, null, Boolean(reportType === \"cost\" /* cost */ ||\n                reportType === \"database\" /* database */ ||\n                reportType === \"instance_type\" /* instanceType */ ||\n                reportType === \"network\" /* network */ ||\n                reportType === \"storage\" /* storage */) ? (React.createElement(OcpCloudReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousUsageData, showUsageLegendLabel: details.showUsageLegendLabel, title: t(trend.titleKey, {\n                    units: t(`units.${units}`),\n                }) })) : (React.createElement(OcpCloudReportSummaryUsage, { containerHeight: chartStyles.containerUsageHeight, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: t(trend.titleKey, {\n                    units: t(`units.${units}`),\n                }) }))));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, isUsageFirst, reportType } = this.props;\n            const units = this.getUnits();\n            return (React.createElement(OcpCloudReportSummaryDetails, { costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, requestFormatOptions: details.requestFormatOptions, requestLabel: this.getDetailsLabel(details.requestKey, units), showUnits: details.showUnits, showUsageFirst: isUsageFirst, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpCloudReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerAltHeight, chartStyles.chartAltHeight, true)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('ocp_cloud_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabItems) },\n                    React.createElement(OcpCloudReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const isCostReport = reportType === \"cost\" /* cost */ ||\n                reportType === \"database\" /* database */ ||\n                reportType === \"network\" /* network */;\n            if (activeTab === currentTab) {\n                return (React.createElement(OcpCloudReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: isCostReport\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: isCostReport ? reportItem.cost : reportItem.usage }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            if (availableTabs) {\n                return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, reportType } = this.props;\n            let units = '';\n            if (currentReport && currentReport.meta && currentReport.meta.total) {\n                if (reportType === \"cost\" /* cost */ ||\n                    reportType === \"database\" /* database */ ||\n                    reportType === \"network\" /* network */) {\n                    units = currentReport.meta.total.cost\n                        ? unitLookupKey(currentReport.meta.total.cost.units)\n                        : '';\n                }\n                else {\n                    units = currentReport.meta.total.usage\n                        ? unitLookupKey(currentReport.meta.total.usage.units)\n                        : '';\n                }\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpCloudReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight),\n                Boolean(availableTabs) && (React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs()))));\n        };\n        this.handleInsightsNavClick = () => {\n            insights.chrome.appNavClick({ id: 'ocp-cloud', secondaryNav: true });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: ocpCloudReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: ocpCloudReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: ocpCloudReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: ocpCloudReportsSelectors.selectReport(state, widget.reportType, queries.tabs), tabsReportFetchStatus: ocpCloudReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpCloudDashboardActions.fetchWidgetReports,\n    updateTab: ocpCloudDashboardActions.changeWidgetTab,\n};\nconst OcpCloudDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(OcpCloudDashboardWidgetBase));\nexport { OcpCloudDashboardWidget, OcpCloudDashboardWidgetBase, };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardSelectors } from 'store/ocpCloudDashboard';\nimport { OcpCloudDashboardWidget } from './ocpCloudDashboardWidget';\nconst OcpCloudDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(OcpCloudDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(OcpCloudDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: ocpCloudDashboardSelectors.selectWidgets(state),\n        widgets: ocpCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpCloudDashboard = translate()(connect(mapStateToProps, {})(OcpCloudDashboardBase));\nexport default OcpCloudDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_2xl, global_spacer_xl } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartAltHeight: 180,\n    chartHeight: 80,\n    containerAltHeight: 275,\n    containerTrendHeight: 150,\n    containerUsageHeight: 180,\n};\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery } from 'api/ocpQuery';\nimport { transformOcpReport } from 'components/charts/commonChart/chartUtils';\nimport { OcpReportSummary, OcpReportSummaryAlt, OcpReportSummaryDetails, OcpReportSummaryItem, OcpReportSummaryItems, OcpReportSummaryTrend, OcpReportSummaryUsage, } from 'components/reports/ocpReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors, } from 'store/ocpDashboard';\nimport { ocpReportsSelectors } from 'store/ocpReports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './ocpDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nclass OcpDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const currentTab = getIdKeyForTab(tab);\n            return `/ocp?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, reportType, t, trend } = this.props;\n            const reportItem = reportType === \"cost\" /* cost */ ? 'cost' : 'usage';\n            const currentUsageData = transformOcpReport(currentReport, trend.type, 'date', reportItem);\n            const previousUsageData = transformOcpReport(previousReport, trend.type, 'date', reportItem);\n            const currentRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpReport(currentReport, trend.type, 'date', 'request')\n                : undefined;\n            const previousRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpReport(previousReport, trend.type, 'date', 'request')\n                : undefined;\n            const currentInfrastructureData = reportType === \"cost\" /* cost */\n                ? transformOcpReport(currentReport, trend.type, 'date', 'infrastructureCost')\n                : undefined;\n            const previousInfrastructureData = reportType === \"cost\" /* cost */\n                ? transformOcpReport(previousReport, trend.type, 'date', 'infrastructureCost')\n                : undefined;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            return (React.createElement(React.Fragment, null, Boolean(reportType === \"cost\" /* cost */) ? (React.createElement(OcpReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentCostData: currentUsageData, currentInfrastructureCostData: currentInfrastructureData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousCostData: previousUsageData, previousInfrastructureCostData: previousInfrastructureData, title: title })) : (React.createElement(OcpReportSummaryUsage, { containerHeight: chartStyles.containerUsageHeight, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: title }))));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, isUsageFirst, reportType } = this.props;\n            const units = this.getUnits();\n            return (React.createElement(OcpReportSummaryDetails, { costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, requestFormatOptions: details.requestFormatOptions, requestLabel: this.getDetailsLabel(details.requestKey, units), showUnits: details.showUnits, showUsageFirst: isUsageFirst, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerAltHeight, chartStyles.chartAltHeight, true)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('ocp_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabItems) },\n                    React.createElement(OcpReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            if (activeTab === currentTab) {\n                return (React.createElement(OcpReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: reportType === \"cost\" /* cost */\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: reportType === \"cost\" /* cost */\n                        ? reportItem.cost\n                        : reportItem.usage }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, reportType } = this.props;\n            let units = '';\n            if (currentReport && currentReport.meta && currentReport.meta.total) {\n                if (reportType === \"cost\" /* cost */) {\n                    units = currentReport.meta.total.cost\n                        ? unitLookupKey(currentReport.meta.total.cost.units)\n                        : '';\n                }\n                else {\n                    units = currentReport.meta.total.usage\n                        ? unitLookupKey(currentReport.meta.total.usage.units)\n                        : '';\n                }\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight),\n                Boolean(availableTabs) && (React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs()))));\n        };\n        this.handleInsightsNavClick = () => {\n            insights.chrome.appNavClick({ id: 'ocp', secondaryNav: true });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id } = this.props;\n            const tab = availableTabs[tabIndex];\n            this.props.updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, widgetId } = this.props;\n        this.props.updateTab(id, availableTabs[0]);\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: ocpReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.tabs), tabsReportFetchStatus: ocpReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(OcpDashboardWidgetBase));\nexport { OcpDashboardWidget, OcpDashboardWidgetBase };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/ocpDashboard';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\nconst OcpDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(OcpDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(OcpDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: ocpDashboardSelectors.selectWidgets(state),\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = translate()(connect(mapStateToProps, {})(OcpDashboardBase));\nexport default OcpDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_FontSize_md, global_spacer_lg, global_spacer_sm, } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const styles = StyleSheet.create({\n    info: {\n        marginLeft: global_spacer_sm.value,\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    tabs: {\n        marginTop: global_spacer_lg.value,\n    },\n});\nexport const headerOverride = css `\n  &.pf-c-page__main-section {\n    --pf-c-page__main-section--PaddingBottom: 0;\n  }\n`;\n","import { Popover, Tab, TabContent, Tabs, Title, TitleSize, } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport { getProvidersQuery } from 'api/providersQuery';\nimport { ErrorState } from 'components/state/errorState/errorState';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport { NoProvidersState } from 'components/state/noProvidersState/noProvidersState';\nimport AwsDashboard from 'pages/dashboard/awsDashboard/awsDashboard';\nimport AzureDashboard from 'pages/dashboard/azureDashboard/azureDashboard';\nimport OcpCloudDashboard from 'pages/dashboard/ocpCloudDashboard/ocpCloudDashboard';\nimport OcpDashboard from 'pages/dashboard/ocpDashboard/ocpDashboard';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions } from 'store/onboarding';\nimport { awsProvidersQuery, azureProvidersQuery, ocpProvidersQuery, providersSelectors, } from 'store/providers';\nimport { headerOverride, styles } from './overview.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"aws\" /* aws */:\n            return 'aws';\n        case \"azure\" /* azure */:\n            return 'azure';\n        case \"ocp\" /* ocp */:\n            return 'ocp';\n        case \"ocpCloud\" /* ocpCloud */:\n            return 'ocpCloud';\n    }\n};\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n            showPopover: false,\n        };\n        this.getAvailableTabs = () => {\n            const { awsProviders, azureProviders, ocpProviders } = this.props;\n            const availableTabs = [];\n            if (awsProviders &&\n                awsProviders.meta &&\n                awsProviders.meta.count &&\n                ocpProviders && ocpProviders.meta && ocpProviders.meta.count) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"ocpCloud\" /* ocpCloud */,\n                });\n            }\n            if (ocpProviders && ocpProviders.meta && ocpProviders.meta.count) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"ocp\" /* ocp */,\n                });\n            }\n            if (awsProviders && awsProviders.meta && awsProviders.meta.count) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"aws\" /* aws */,\n                });\n            }\n            if (azureProviders && azureProviders.meta && azureProviders.meta.count) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"azure\" /* azure */,\n                });\n            }\n            return availableTabs;\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: this.getTabTitle(tab) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"ocpCloud\" /* ocpCloud */) {\n                return activeTabKey === index ? React.createElement(OcpCloudDashboard, null) : null;\n            }\n            else if (currentTab === \"ocp\" /* ocp */) {\n                return activeTabKey === index ? React.createElement(OcpDashboard, null) : null;\n            }\n            else if (currentTab === \"aws\" /* aws */) {\n                return activeTabKey === index ? React.createElement(AwsDashboard, null) : null;\n            }\n            else if (currentTab === \"azure\" /* azure */) {\n                return activeTabKey === index ? React.createElement(AzureDashboard, null) : null;\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"aws\" /* aws */) {\n                return t('overview.aws');\n            }\n            else if (tab === \"azure\" /* azure */) {\n                return t('overview.azure');\n            }\n            else if (tab === \"ocp\" /* ocp */) {\n                return t('overview.ocp');\n            }\n            else if (tab === \"ocpCloud\" /* ocpCloud */) {\n                return t('overview.ocp_cloud');\n            }\n        };\n        this.handlePopoverClick = () => {\n            this.setState({\n                show: !this.state.showPopover,\n            });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    render() {\n        const { awsProviders, awsProvidersError, awsProvidersFetchStatus, azureProviders, azureProvidersError, azureProvidersFetchStatus, ocpProviders, ocpProvidersError, ocpProvidersFetchStatus, t, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        const error = awsProvidersError || azureProvidersError || ocpProvidersError;\n        const isLoading = awsProvidersFetchStatus === 1 /* inProgress */ ||\n            azureProvidersFetchStatus === 1 /* inProgress */ ||\n            ocpProvidersFetchStatus === 1 /* inProgress */;\n        const noAwsProviders = awsProviders !== undefined &&\n            awsProviders.meta !== undefined &&\n            awsProviders.meta.count === 0 &&\n            awsProvidersFetchStatus === 2 /* complete */;\n        const noAzureProviders = azureProviders !== undefined &&\n            azureProviders.meta !== undefined &&\n            azureProviders.meta.count === 0 &&\n            azureProvidersFetchStatus === 2 /* complete */;\n        const noOcpProviders = ocpProviders !== undefined &&\n            ocpProviders.meta !== undefined &&\n            ocpProviders.meta.count === 0 &&\n            ocpProvidersFetchStatus === 2 /* complete */;\n        const noProviders = noAwsProviders && noAzureProviders && noOcpProviders;\n        const showTabs = !(error || noProviders || isLoading);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"section\", { className: `pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light ${showTabs ? headerOverride : ''}` },\n                React.createElement(\"header\", { className: \"pf-u-display-flex pf-u-justify-content-space-between pf-u-align-items-center\" },\n                    React.createElement(Title, { size: TitleSize['2xl'] },\n                        t('overview.title'),\n                        Boolean(showTabs) && (React.createElement(\"span\", { className: css(styles.infoIcon) },\n                            React.createElement(Popover, { \"aria-label\": \"t('ocp_details.derived_aria_label')\", enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                    React.createElement(\"p\", { className: css(styles.infoTitle) }, t('overview.ocp_cloud')),\n                                    React.createElement(\"p\", null, t('overview.ocp_cloud_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { className: css(styles.infoTitle) }, t('overview.ocp')),\n                                    React.createElement(\"p\", null, t('overview.ocp_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { className: css(styles.infoTitle) }, t('overview.aws')),\n                                    React.createElement(\"p\", null, t('overview.aws_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { className: css(styles.infoTitle) }, t('overview.azure')),\n                                    React.createElement(\"p\", null, t('overview.azure_desc'))) },\n                                React.createElement(InfoCircleIcon, { className: css(styles.info), onClick: this.handlePopoverClick })))))),\n                Boolean(showTabs) && (React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs(availableTabs)))),\n            React.createElement(\"section\", { className: \"pf-l-page__main-section pf-c-page__main-section\", \"page-type\": \"cost-management-overview\" }, Boolean(error) ? (React.createElement(ErrorState, { error: error })) : Boolean(noProviders) ? (React.createElement(NoProvidersState, null)) : Boolean(isLoading) ? (React.createElement(LoadingState, null)) : (this.getTabContent(availableTabs)))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    const awsProvidersQueryString = getProvidersQuery(awsProvidersQuery);\n    const awsProviders = providersSelectors.selectProviders(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersError = providersSelectors.selectProvidersError(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const azureProvidersQueryString = getProvidersQuery(azureProvidersQuery);\n    const azureProviders = providersSelectors.selectProviders(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const azureProvidersError = providersSelectors.selectProvidersError(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const azureProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const ocpProvidersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const ocpProviders = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersError = providersSelectors.selectProvidersError(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    return {\n        awsProviders,\n        awsProvidersError,\n        awsProvidersFetchStatus,\n        awsProvidersQueryString,\n        azureProviders,\n        azureProvidersError,\n        azureProvidersFetchStatus,\n        azureProvidersQueryString,\n        ocpProviders,\n        ocpProvidersError,\n        ocpProvidersFetchStatus,\n        ocpProvidersQueryString,\n    };\n});\nconst Overview = translate()(connect(mapStateToProps, {\n    openProvidersModal: onboardingActions.openModal,\n})(OverviewBase));\nexport default Overview;\n","import Overview from './overview';\nexport default Overview;\n"],"sourceRoot":""}