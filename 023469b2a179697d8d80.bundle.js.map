{"version":3,"sources":["webpack://koku-ui/./src/pages/state/noData/index.ts","webpack://koku-ui/./src/pages/state/notAvailable/notAvailable.tsx","webpack://koku-ui/./src/pages/state/notAvailable/index.ts","webpack://koku-ui/./src/pages/views/components/resourceTypeahead/resourceSelect.tsx","webpack://koku-ui/./src/pages/views/components/resourceTypeahead/resourceTypeahead.tsx","webpack://koku-ui/./src/pages/views/components/dataToolbar/dataToolbar.styles.ts","webpack://koku-ui/./src/pages/views/components/dataToolbar/dataToolbar.tsx","webpack://koku-ui/./src/pages/views/components/export/exportModal.styles.ts","webpack://koku-ui/./src/pages/views/components/export/exportSubmit.tsx","webpack://koku-ui/./src/pages/views/components/export/exportModal.tsx","webpack://koku-ui/./src/pages/views/components/groupBy/groupBy.styles.ts","webpack://koku-ui/./src/pages/views/components/groupBy/groupByOrg.tsx","webpack://koku-ui/./src/pages/views/components/groupBy/groupByTag.tsx","webpack://koku-ui/./src/pages/views/components/groupBy/groupBy.tsx","webpack://koku-ui/./src/pages/views/details/components/actions/actions.tsx","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdown.styles.ts","webpack://koku-ui/./src/pages/views/details/components/tag/tag.styles.ts","webpack://koku-ui/./src/pages/views/details/components/tag/tagView.tsx","webpack://koku-ui/./src/pages/views/details/components/tag/tagModal.tsx","webpack://koku-ui/./src/pages/views/details/components/tag/tagLink.tsx","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdownHeader.styles.ts","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdownHeader.tsx","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdownBase.tsx","webpack://koku-ui/./src/pages/views/details/components/cluster/cluster.styles.ts","webpack://koku-ui/./src/pages/views/details/components/cluster/clusterModal.styles.ts","webpack://koku-ui/./src/pages/views/details/components/cluster/clusterView.tsx","webpack://koku-ui/./src/pages/views/details/components/cluster/clusterModal.tsx","webpack://koku-ui/./src/pages/views/details/components/cluster/cluster.tsx","webpack://koku-ui/./src/pages/views/details/components/costChart/costChart.styles.ts","webpack://koku-ui/./src/pages/views/details/components/costChart/costChart.tsx","webpack://koku-ui/./src/pages/views/details/components/summary/summaryModal.styles.ts","webpack://koku-ui/./src/pages/views/details/components/summary/summaryModalView.tsx","webpack://koku-ui/./src/pages/views/details/components/summary/summaryModal.tsx","webpack://koku-ui/./src/pages/views/details/components/summary/summaryCard.styles.ts","webpack://koku-ui/./src/pages/views/details/components/summary/summaryCard.tsx","webpack://koku-ui/./src/pages/views/details/components/usageChart/usageChart.styles.ts","webpack://koku-ui/./src/pages/views/details/components/usageChart/usageChart.tsx","webpack://koku-ui/./src/pages/views/details/components/costOverview/costOverviewBase.tsx","webpack://koku-ui/./src/components/charts/historicalCostChart/historicalCostChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalCostChart/historicalCostChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalChart.styles.ts","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataCostChart.tsx","webpack://koku-ui/./src/components/charts/historicalTrendChart/historicalTrendChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalTrendChart/historicalTrendChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataTrendChart.tsx","webpack://koku-ui/./src/components/charts/historicalUsageChart/historicalUsageChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalUsageChart/historicalUsageChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataUsageChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataBase.tsx","webpack://koku-ui/./src/pages/views/details/ocpDetails/detailsHeader.styles.ts","webpack://koku-ui/./src/pages/views/utils/groupBy.ts","webpack://koku-ui/./src/pages/views/utils/paths.ts","webpack://koku-ui/./src/pages/views/utils/query.ts","webpack://koku-ui/./src/testIds.ts","webpack://koku-ui/./src/utils/dateRange.ts","webpack://koku-ui/./src/utils/equal.ts"],"names":["withRouter","title","PageHeader","PageHeaderTitle","Main","Unavailable","ResourceSelectBase","props","super","this","defaultState","isSelectExpanded","state","Object","assign","getOptions","resource","resourceFetchStatus","options","data","length","map","item","value","account_alias","key","name","getSelectOptions","option","SelectOption","handldeOnClear","onSearchChanged","undefined","setState","handldeOnSelect","event","onSelect","handldeOnToggle","isOpen","handleOnTypeaheadInputChanged","bind","prevProps","fetchResource","resourcePathsType","resourceType","search","query","isDisabled","selectOptions","Select","onClear","onFilter","onToggle","onTypeaheadInputChanged","placeholderText","t","typeAheadAriaLabel","variant","SelectVariant","mapStateToProps","queryString","mapDispatchToProps","ResourceSelect","withTranslation","connect","ResourceTypeahead","searchTimeout","noop","handldeOnSearch","clearTimeout","setTimeout","currentSearch","styles","export","marginRight","global_spacer_md","toolbarContainer","backgroundColor","global_BackgroundColor_light_100","paddingBottom","paddingTop","marginLeft","global_spacer_lg","defaultFilters","tag","DataToolbarBase","arguments","categoryInput","filters","cloneDeep","isBulkSelectOpen","isCategoryDropdownOpen","isOrgUnitSelectExpanded","isTagValueDropdownOpen","isTagKeySelectExpanded","isTagValueSelectExpanded","tagKeyValueInput","getDefaultCategory","categoryOptions","groupBy","group_by","indexOf","getActiveFilters","filter_by","keys","forEach","values","Array","isArray","substring","onDelete","type","chip","filterType","id","prevState","filter","s","_filterType","onFilterRemoved","getBulkSelect","isAllSelected","isBulkSelectDisabled","itemsPerPage","itemsTotal","selectedItems","numSelected","anySelected","isChecked","dropdownItems","DropdownItem","onClick","onBulkSelectClicked","Dropdown","onBulkSelect","position","DropdownPosition","toggle","DropdownToggle","splitButtonItems","DropdownToggleCheckbox","onBulkSelectToggle","action","onBulkSelected","getCurrentCategoryOption","currentCategory","onCategoryClick","onCategorySelect","currentTagKey","onCategoryToggle","getCategoryInput","categoryOption","ToolbarFilter","categoryName","chips","deleteChip","showToolbarItem","InputGroup","onCategoryInputSelect","TextInput","onChange","onCategoryInputChange","placeholder","onKeyDown","evt","onCategoryInput","Button","ButtonVariant","getDefaultCategoryOptions","trim","prevFilters","includes","onFilterAdded","getOrgUnitSelect","getOrgUnitOptions","toString","compareTo","find","val","selections","push","node","className","onOrgUnitToggle","onOrgUnitSelect","description","selection","checked","target","prevSelections","getTagKeySelect","getTagKeyOptions","selectOption","ToolbarItem","onTagKeyClear","onTagKeyToggle","onTagKeySelect","getTagValueSelect","tagKeyOption","getTagValueOptions","onTagValueToggle","onTagValueSelect","onTagValueInputChange","onTagValueInput","getColumnManagement","handleColumnManagementClicked","getExportButton","isExportDisabled","spacer","default","handleExportClicked","onColumnManagementClicked","onExportClicked","orgReport","tagReport","currentOrgUnit","style","width","sortedData","sort","a","b","roots","org","level","filteredOrgs","root","unshift","hasTagKeys","hasOwnProperty","keepData","_a","e","p","prototype","call","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","uniqBy","uniq","Set","dateRange","pagination","showBulkSelect","showColumnManagement","showExport","showFilter","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","ToolbarToggleGroup","breakpoint","toggleIcon","ToolbarGroup","getCategoryDropdown","Boolean","alignment","DataToolbar","form","global_spacer_sm","modal","input","global_spacer_xs","ul","marginBottom","reportType","ExportSubmitBase","stateProps","dispatchProps","fetchReportClicked","getExport","report","reportFetchStatus","getFileName","handleClose","reportPathsType","resolution","timeScope","thisMonth","Date","lastMonth","setMonth","getMonth","currentMonth","format","previousMonth","provider","date","onClose","handleFetchReport","exportReport","testIds","isAllItems","items","newQuery","JSON","parse","stringify","limit","offset","time_scope_value","order_by","perspective","getQueryString","reportError","ExportSubmitConnect","ExportSubmit","resolutionOptions","label","timeScopeOptions","ExportModalBase","handleMonthChange","_","Number","currentTarget","handleResolutionChange","showAggregateType","showTimeScope","sortedItems","orderBy","selectedLabel","Modal","actions","Form","FormGroup","fieldId","index","Radio","isValid","groupItem","ExportModalConnect","ExportModal","groupBySelector","display","alignItems","groupBySelectorLabel","GroupByOrgBase","defaultItem","isGroupByOpen","getCurrentGroupBy","getIdKeyForGroupBy","queryFromRoute","location","groupByKeys","getGroupByItems","handleGroupByClear","currentItem","handleGroupBySelect","onItemClicked","handleGroupByToggle","groupByItems","GroupByOrg","GroupByTagBase","tagKey","slice","GroupByTag","groupByOrgOptions","groupByTagOptions","orgReportType","tagReportType","GroupByBase","isGroupByOrgVisible","isGroupByTagVisible","handleGroupByClick","allOptions","component","fetchOrg","fetchTag","orgQueryString","orgReportPathsType","showOrgs","showTags","tagQueryString","tagReportPathsType","endDate","startDate","tagQuery","start_date","end_date","time_scope_units","tagReportFetchStatus","orgReportFetchStatus","GroupByConnect","GroupBy","DetailsActionsBase","isDropdownOpen","isExportModalOpen","getExportModal","handleExportModalClose","handleExportModalOpen","handleOnSelect","handleOnToggle","showPriceListOption","redirectToCostModel","history","source_uuid","KebabToggle","isPlain","DetailsActionsConnect","Actions","content","paddingLeft","paddingRight","dataListHeading","fontWeight","global_FontWeight_bold","groupByHeading","tagLink","tagsContainer","global_spacer_3xl","marginTop","TagViewBase","getDataListItems","result","DataListItem","DataListItemRow","DataListItemCells","dataListCells","DataListCell","groupByValue","dataListItems","DataList","isCompact","TagView","TagModalBase","getTagValueCount","count","nextProps","account","groupByOrgValue","TagModal","TagLinkBase","handleOpen","preventDefault","href","TagLink","cost","global_spacer_xl","costLabel","costValue","textAlign","costLabelDate","fontSize","global_FontSize_sm","color","global_Color_200","header","justifyContent","global_BackgroundColor_100","infoDescription","global_disabled_color_100","global_FontSize_xs","tabs","BreakdownHeaderBase","buildDetailsLink","detailsURL","groupByKey","getTotalCost","hasCost","meta","total","formatValue","units","filterByAccount","groupByOrg","Link","to","Title","headingLevel","size","BreakdownHeader","getIdKeyForTab","tab","BreakdownBase","activeTabKey","getAvailableTabs","contentRef","getTab","Tab","eventKey","tabContentId","tabContentRef","TabTitleText","getTabTitle","getTabContent","availableTabs","TabContent","ref","getTabItem","costOverviewComponent","historicalDataComponent","emptyTab","currentTab","getTabs","Tabs","activeKey","handleTabClick","tabIndex","updateReport","fetchReport","noReport","noLocation","emptyStateTitle","providers","providersFetchStatus","providerType","clustersContainer","height","subTitle","ClusterViewBase","clusters","cluster","ClusterView","ClusterModalBase","ClusterModal","ClusterBase","showAll","charCount","someClusters","allClusters","computedItems","getComputedReportItems","idKey","clusterString","concat","Cluster","chartStyles","chartHeight","chartWidth","chartSkeleton","CostChartBase","getLegendLabel","ChartLabel","text","getSkeleton","Skeleton","skeleton","hasMarkup","markup","hasRaw","raw","hasUsage","usage","markupUnits","rawUnits","usageUnits","markupValue","rawValue","usageValue","markupLabel","rawLabel","usageLabel","LegendLabel","Legend","ChartLegend","gutter","itemsPerRow","labelComponent","dy","lineHeight","rowGutter","ChartPie","ariaDesc","ariaTitle","constrainToVisibleArea","x","y","labels","datum","legendComponent","legendData","legendOrientation","legendPosition","padding","bottom","left","right","top","themeColor","ChartTheme","CostChart","mainContent","SummaryModalViewBase","reportGroupBy","status","_item","formatOptions","totalValue","SummaryModalView","SummaryModalBase","SummaryModal","card","viewAllContainer","SummaryBase","isBulletChartModalOpen","getItems","getSummary","reportItem","getViewAll","findIndex","handleBulletChartModalOpen","ButtonType","handleBulletChartModalClose","Card","CardTitle","CardBody","CardFooter","SummaryCard","capacity","legendSkeleton","UsageChartBase","containerRef","observer","handleResize","clientWidth","current","getCpuChart","chartDatum","getChartDatumWithCapacity","getChartDatum","getFreeSpace","ChartBullet","comparativeErrorMeasureData","tooltip","comparativeErrorMeasureLegendData","legend","getChartHeight","legendItemsPerRow","getItemsPerRow","maxDomain","isDatumEmpty","minDomain","primarySegmentedMeasureData","primarySegmentedMeasureLegendData","qualitativeRangeData","ranges","qualitativeRangeLegendData","hasRange","range","hasTotal","hasLimit","Math","trunc","limitUnits","hasRequest","request","requestUnits","hasCapacity","capacityUnits","unusedRequestCapacity","unusedUsageCapacity","unusedRequestCapacityPercentage","unusedUsageCapacityPercentage","Grid","hasGutter","GridItem","md","lg","percentage","UsageChart","PLACEHOLDER","CostOverviewBase","getClusterChart","widget","showWidget","groupById","showWidgetOnGroupBy","getCostChart","Popover","enableFlip","bodyContent","rel","OutlinedQuestionCircleIcon","getCpuUsageChart","getMemoryUsageChart","getSummaryCard","reportSummary","usePlaceholder","getWidgetsColumns","selectWidgets","widgets","visibleWidgets","widgetId","renderedWidget","renderWidget","rows","floor","leftColumnWidgets","rightColumnWidgets","xl","currentCapacityData","fill","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","currentInfrastructureCostData","strokeDasharray","currentCostData","previousCapacityData","previousColorScale","chart_color_blue_100","chart_color_blue_200","chart_color_blue_300","chart_color_blue_400","chart_color_blue_500","previousInfrastructureCostData","previousCostData","yAxis","axisLabel","grid","stroke","ticks","tickLabels","xAxis","chart","HistoricalCostChart","hiddenSeries","initDatum","costKey","costInfrastructureKey","costInfrastructureTooltipKey","costTooltipKey","series","childName","legendItem","symbol","cursorVoronoiContainer","getCursorVoronoiContainer","getChart","ChartArea","has","interpolation","formatDatumValue","formatDatumOptions","CursorVoronoiContainer","cursorDimension","mouseFollowTooltips","voronoiDimension","voronoiPadding","getLegend","handleLegendClick","currentRequestDate","getDate","previousRequestDate","max","chartNames","isHidden","legendName","onLegendClick","adjustContainerHeight","containerHeight","xAxisLabel","yAxisLabel","domain","ge","getEndDate","midDate","adjustedContainerHeight","container","disable","ChartLegendTooltip","i18next","day","Chart","containerComponent","events","getEvents","theme","ChartAxis","C","tickValues","dependentAxis","chartContainer","costChart","trendChart","usageChart","HistoricalDataCostChartBase","currentQueryString","previousQueryString","currentReport","currentReportFetchStatus","previousReport","previousReportFetchStatus","currentData","previousData","costUnits","baseQuery","currentQuery","previousQuery","HistoricalDataCostChart","currentMonthData","previousMonthData","HistoricalTrendChart","showUsageLegendLabel","toolTipKey","previousDate","currentDate","HistoricalDataTrendChartBase","isCostChart","isNaN","HistoricalDataTrendChart","currentLimitData","currentRequestData","currentUsageData","previousLimitData","previousRequestData","previousUsageData","HistoricalUsageChart","limitKey","limitTooltipKey","requestKey","requestTooltipKey","usageKey","usageTooltipKey","currentUsageDate","previousUsageDate","HistoricalDataUsageChartBase","useFilter","HistoricalDataUsageChart","HistoricalDataBase","getTrendChart","getUsageChart","costLabelUnit","info","verticalAlign","infoIcon","infoTitle","getGroupById","getGroupByValue","getGroupByOrgValue","getGroupByTagKey","groupByTagKey","tagIndex","getBreakdownPath","basePath","getOrgBreakdownPath","orgUnitId","addQueryFilter","filterValue","found","removeQueryFilter","getTestProps","details","cluster_lnk","historical_data_btn","show_more_btn","tag_lnk","view_all_btn","cancel_btn","submit_btn","login","alert","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","s3_input","clusterid_input","arn_input","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","sidebar","nav","link","backdrop","getNoDataForDateRangeString","today","setHours","setMinutes","setSeconds","month","getForDateRangeString","getSinceDateRangeString","getCurrentMonthDate","setDate","getMonthDate","getLastDaysDate","getLast30DaysDate","getLast60DaysDate","isEqual","obj1","obj2","split","join"],"mappings":"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","file":"023469b2a179697d8d80.bundle.js","sourcesContent":["import NoData from './noData';\nexport default NoData;\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Unavailable from '@redhat-cloud-services/frontend-components/Unavailable';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nconst NotAvailable = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(Unavailable, null))));\n};\nexport default withRouter(NotAvailable);\n","import NotAvailable from './notAvailable';\nexport default NotAvailable;\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { resourceActions, resourceSelectors } from 'store/resources';\nclass ResourceSelectBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isSelectExpanded: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getOptions = () => {\n            const { resource, resourceFetchStatus } = this.props;\n            let options = [];\n            if (resource && resource.data && resource.data.length > 0 && resourceFetchStatus !== 1 /* inProgress */) {\n                options = resource.data.map(item => {\n                    const value = item.account_alias || item.value;\n                    return {\n                        key: value,\n                        name: value,\n                    };\n                });\n            }\n            return options;\n        };\n        this.getSelectOptions = () => {\n            const options = this.getOptions();\n            return options.map(option => {\n                return React.createElement(SelectOption, { key: option.key, value: option.key });\n            });\n        };\n        this.handldeOnClear = () => {\n            const { onSearchChanged } = this.props;\n            if (onSearchChanged) {\n                onSearchChanged(undefined);\n            }\n            this.setState({\n                isSelectExpanded: false,\n            });\n        };\n        this.handldeOnSelect = (event, value) => {\n            const { onSelect } = this.props;\n            if (onSelect) {\n                onSelect(value);\n            }\n            this.setState({\n                isSelectExpanded: !this.state.isSelectExpanded,\n            });\n        };\n        this.handldeOnToggle = isOpen => {\n            this.setState({\n                isSelectExpanded: isOpen,\n            });\n        };\n        this.handleOnTypeaheadInputChanged = value => {\n            const { onSearchChanged } = this.props;\n            onSearchChanged(value);\n        };\n        this.handldeOnClear = this.handldeOnClear.bind(this);\n        this.handldeOnSelect = this.handldeOnSelect.bind(this);\n        this.handldeOnToggle = this.handldeOnToggle.bind(this);\n        this.handleOnTypeaheadInputChanged = this.handleOnTypeaheadInputChanged.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchResource, resourceFetchStatus, resourcePathsType, resourceType, search } = this.props;\n        if (search && prevProps.search !== search && resourceFetchStatus !== 1 /* inProgress */) {\n            const query = {\n                search,\n            };\n            const queryString = getQuery(query);\n            fetchResource(resourcePathsType, resourceType, queryString);\n        }\n    }\n    render() {\n        const { isDisabled, t, resourceType } = this.props;\n        const { isSelectExpanded } = this.state;\n        const selectOptions = this.getSelectOptions();\n        return (React.createElement(Select, { isDisabled: isDisabled, isOpen: isSelectExpanded, onClear: this.handldeOnClear, onFilter: () => selectOptions, onSelect: this.handldeOnSelect, onToggle: this.handldeOnToggle, onTypeaheadInputChanged: this.handleOnTypeaheadInputChanged, placeholderText: t(`filter_by.${resourceType}.placeholder`), typeAheadAriaLabel: t(`filter_by.${resourceType}.aria_label`), variant: SelectVariant.typeahead }, selectOptions));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { resourcePathsType, resourceType, search }) => {\n    const query = {\n        search,\n    };\n    const queryString = getQuery(query);\n    const resource = resourceSelectors.selectResource(state, resourcePathsType, resourceType, queryString);\n    const resourceFetchStatus = resourceSelectors.selectResourceFetchStatus(state, resourcePathsType, resourceType, queryString);\n    return {\n        resource,\n        resourceFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchResource: resourceActions.fetchResource,\n};\nconst ResourceSelect = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(ResourceSelectBase));\nexport { ResourceSelect };\n","import React from 'react';\nimport { noop } from 'utils/noop';\nimport { ResourceSelect } from './resourceSelect';\nexport class ResourceTypeahead extends React.Component {\n    constructor(props) {\n        super(props);\n        this.searchTimeout = noop;\n        this.defaultState = {\n        // TBD ...\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handldeOnSearch = (value) => {\n            clearTimeout(this.searchTimeout);\n            this.searchTimeout = setTimeout(() => {\n                this.setState({\n                    currentSearch: value,\n                });\n            }, 750);\n        };\n        this.handldeOnSelect = (value) => {\n            const { onSelect } = this.props;\n            if (onSelect) {\n                onSelect(value);\n            }\n            this.setState({\n                currentSearch: undefined,\n            });\n        };\n        this.handldeOnSearch = this.handldeOnSearch.bind(this);\n        this.handldeOnSelect = this.handldeOnSelect.bind(this);\n    }\n    render() {\n        const { isDisabled, resourcePathsType, resourceType } = this.props;\n        const { currentSearch } = this.state;\n        return (React.createElement(ResourceSelect, { isDisabled: isDisabled, onSearchChanged: this.handldeOnSearch, onSelect: this.handldeOnSelect, resourcePathsType: resourcePathsType, resourceType: resourceType, search: currentSearch }));\n    }\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    export: {\n        marginRight: global_spacer_md.value,\n    },\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './dataToolbar.scss';\nimport { Button, ButtonVariant, Dropdown, DropdownItem, DropdownPosition, DropdownToggle, DropdownToggleCheckbox, InputGroup, Select, SelectOption, SelectVariant, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarGroup, ToolbarItem, ToolbarToggleGroup, } from '@patternfly/react-core';\nimport { ExportIcon } from '@patternfly/react-icons/dist/js/icons/export-icon';\nimport { FilterIcon } from '@patternfly/react-icons/dist/js/icons/filter-icon';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport { orgUnitIdKey, orgUnitNameKey, tagKey, tagPrefix } from 'api/queries/query';\nimport { isResourceTypeValid } from 'api/resources/resourceUtils';\nimport { cloneDeep } from 'lodash';\nimport { uniq, uniqBy } from 'lodash';\nimport { ResourceTypeahead } from 'pages/views/components/resourceTypeahead/resourceTypeahead';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { isEqual } from 'utils/equal';\nimport { styles } from './dataToolbar.styles';\nconst defaultFilters = {\n    tag: {},\n};\n// If the number of tag keys are greater or equal, then show text input Vs select\n// See https://github.com/project-koku/koku/pull/2069\nconst tagKeyValueLimit = 50;\nexport class DataToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            categoryInput: '',\n            filters: cloneDeep(defaultFilters),\n            isBulkSelectOpen: false,\n            isCategoryDropdownOpen: false,\n            isOrgUnitSelectExpanded: false,\n            isTagValueDropdownOpen: false,\n            isTagKeySelectExpanded: false,\n            isTagValueSelectExpanded: false,\n            tagKeyValueInput: '',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        // Initialize\n        this.getDefaultCategory = () => {\n            const { categoryOptions, groupBy, query } = this.props;\n            if (!categoryOptions) {\n                return 'name';\n            }\n            if (query && query.group_by && query.group_by[orgUnitIdKey]) {\n                return orgUnitIdKey;\n            }\n            for (const option of categoryOptions) {\n                if (groupBy === option.key || (groupBy && groupBy.indexOf(tagPrefix) !== -1 && option.key === tagKey)) {\n                    return option.key;\n                }\n            }\n            return categoryOptions[0].key;\n        };\n        this.getActiveFilters = query => {\n            const filters = cloneDeep(defaultFilters);\n            if (query && query.filter_by) {\n                Object.keys(query.filter_by).forEach(key => {\n                    const values = Array.isArray(query.filter_by[key]) ? [...query.filter_by[key]] : [query.filter_by[key]];\n                    if (key.indexOf(tagPrefix) !== -1) {\n                        filters.tag[key.substring(tagPrefix.length)] = values;\n                    }\n                    else {\n                        filters[key] = values;\n                    }\n                });\n            }\n            return filters;\n        };\n        this.onDelete = (type, chip) => {\n            // Todo: workaround for https://github.com/patternfly/patternfly-react/issues/3552\n            // This prevents us from using a localized string, if necessary\n            const filterType = type && type.key ? type.key : type;\n            const id = chip && chip.key ? chip.key : chip;\n            if (filterType) {\n                this.setState((prevState) => {\n                    if (prevState.filters.tag[filterType]) {\n                        // Todo: use ID\n                        prevState.filters.tag[filterType] = prevState.filters.tag[filterType].filter(s => s !== id);\n                    }\n                    else if (prevState.filters[filterType]) {\n                        prevState.filters[filterType] = prevState.filters[filterType].filter(s => s !== id);\n                    }\n                    return {\n                        filters: prevState.filters,\n                    };\n                }, () => {\n                    const { filters } = this.state;\n                    const _filterType = filters.tag[filterType] ? `${tagPrefix}${filterType}` : filterType; // Todo: use ID\n                    this.props.onFilterRemoved(_filterType, id);\n                });\n            }\n            else {\n                this.setState({\n                    filters: cloneDeep(defaultFilters),\n                }, () => {\n                    this.props.onFilterRemoved(null); // Clear all\n                });\n            }\n        };\n        // Bulk select\n        this.getBulkSelect = () => {\n            const { isAllSelected, isBulkSelectDisabled, isDisabled, itemsPerPage, itemsTotal, selectedItems, t } = this.props;\n            const { isBulkSelectOpen } = this.state;\n            const numSelected = isAllSelected ? itemsTotal : selectedItems ? selectedItems.length : 0;\n            const allSelected = (isAllSelected || numSelected === itemsTotal) && itemsTotal > 0;\n            const anySelected = numSelected > 0;\n            const someChecked = anySelected ? null : false;\n            const isChecked = allSelected ? true : someChecked;\n            const dropdownItems = [\n                React.createElement(DropdownItem, { key: \"item-1\", onClick: () => this.onBulkSelectClicked('none') }, t('toolbar.bulk_select.select_none')),\n                React.createElement(DropdownItem, { key: \"item-2\", onClick: () => this.onBulkSelectClicked('page') }, t('toolbar.bulk_select.select_page', {\n                    value: itemsPerPage,\n                })),\n                React.createElement(DropdownItem, { key: \"item-3\", onClick: () => this.onBulkSelectClicked('all') }, t('toolbar.bulk_select.select_all', { value: itemsTotal })),\n            ];\n            return (React.createElement(Dropdown, { onSelect: this.onBulkSelect, position: DropdownPosition.left, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled || isBulkSelectDisabled, splitButtonItems: [\n                        React.createElement(DropdownToggleCheckbox, { id: \"bulk-select\", key: \"bulk-select\", \"aria-label\": anySelected ? t('toolbar.bulk_select.aria_deselect') : t('toolbar.bulk_select.aria_select'), isChecked: isChecked, onClick: () => {\n                                anySelected ? this.onBulkSelectClicked('none') : this.onBulkSelectClicked('all');\n                            } }),\n                    ], onToggle: this.onBulkSelectToggle }, numSelected !== 0 && React.createElement(React.Fragment, null,\n                    numSelected,\n                    \" selected\")), isOpen: isBulkSelectOpen, dropdownItems: dropdownItems }));\n        };\n        this.onBulkSelectClicked = (action) => {\n            const { onBulkSelected } = this.props;\n            if (onBulkSelected) {\n                onBulkSelected(action);\n            }\n        };\n        this.onBulkSelect = () => {\n            this.setState({\n                isBulkSelectOpen: !this.state.isBulkSelectOpen,\n            });\n        };\n        this.onBulkSelectToggle = isOpen => {\n            this.setState({\n                isBulkSelectOpen: isOpen,\n            });\n        };\n        this.getCurrentCategoryOption = () => {\n            const { categoryOptions } = this.props;\n            const { currentCategory } = this.state;\n            if (!categoryOptions) {\n                return undefined;\n            }\n            for (const option of categoryOptions) {\n                if (currentCategory === option.key) {\n                    return option;\n                }\n            }\n            return categoryOptions[0];\n        };\n        this.onCategoryClick = value => {\n            this.setState({\n                currentCategory: value,\n            });\n        };\n        this.onCategorySelect = () => {\n            this.setState({\n                categoryInput: '',\n                currentTagKey: undefined,\n                isCategoryDropdownOpen: !this.state.isCategoryDropdownOpen,\n            });\n        };\n        this.onCategoryToggle = isOpen => {\n            this.setState({\n                isCategoryDropdownOpen: isOpen,\n            });\n        };\n        // Category input\n        this.getCategoryInput = categoryOption => {\n            const { isDisabled, resourcePathsType, t } = this.props;\n            const { currentCategory, filters, categoryInput } = this.state;\n            return (React.createElement(ToolbarFilter, { categoryName: categoryOption, chips: filters[categoryOption.key], deleteChip: this.onDelete, key: categoryOption.key, showToolbarItem: currentCategory === categoryOption.key },\n                React.createElement(InputGroup, null, isResourceTypeValid(resourcePathsType, categoryOption.key) ? (React.createElement(ResourceTypeahead, { isDisabled: isDisabled, onSelect: value => this.onCategoryInputSelect(value, categoryOption.key), resourcePathsType: resourcePathsType, resourceType: categoryOption.key })) : (React.createElement(React.Fragment, null,\n                    React.createElement(TextInput, { isDisabled: isDisabled, name: `${categoryOption.key}-input`, id: `${categoryOption.key}-input`, type: \"search\", \"aria-label\": t(`filter_by.${categoryOption.key}.input_aria_label`), onChange: this.onCategoryInputChange, value: categoryInput, placeholder: t(`filter_by.${categoryOption.key}.placeholder`), onKeyDown: evt => this.onCategoryInput(evt, categoryOption.key) }),\n                    React.createElement(Button, { isDisabled: isDisabled, variant: ButtonVariant.control, \"aria-label\": t(`filter_by.${categoryOption.key}.button_aria_label`), onClick: evt => this.onCategoryInput(evt, categoryOption.key) },\n                        React.createElement(SearchIcon, null)))))));\n        };\n        this.getDefaultCategoryOptions = () => {\n            const { t } = this.props;\n            return [{ name: t('filter_by.values.name'), key: 'name' }];\n        };\n        this.onCategoryInputChange = value => {\n            this.setState({ categoryInput: value });\n        };\n        this.onCategoryInput = (event, key) => {\n            const { categoryInput, currentCategory } = this.state;\n            if ((event && event.key && event.key !== 'Enter') || categoryInput.trim() === '') {\n                return;\n            }\n            this.setState((prevState) => {\n                const prevFilters = prevState.filters[key];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { [currentCategory]: prevFilters && prevFilters.includes(categoryInput)\n                            ? prevFilters\n                            : prevFilters\n                                ? [...prevFilters, categoryInput]\n                                : [categoryInput] }),\n                    categoryInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(currentCategory, categoryInput);\n            });\n        };\n        this.onCategoryInputSelect = (value, key) => {\n            const { currentCategory } = this.state;\n            this.setState((prevState) => {\n                const prevFilters = prevState.filters[key];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { [currentCategory]: prevFilters && prevFilters.includes(value)\n                            ? prevFilters\n                            : prevFilters\n                                ? [...prevFilters, value]\n                                : [value] }),\n                    categoryInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(currentCategory, value);\n            });\n        };\n        // Org unit select\n        this.getOrgUnitSelect = () => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, filters, isOrgUnitSelectExpanded } = this.state;\n            const options = this.getOrgUnitOptions().map(option => ({\n                id: option.key,\n                toString: () => option.name,\n                compareTo: value => filters[orgUnitIdKey] ? filters[orgUnitIdKey].find(val => val === value.id) : false,\n            }));\n            const chips = []; // Get selected items as PatternFly's ToolbarChip type\n            const selections = []; // Select options and selections must be same type\n            if (filters[orgUnitIdKey] && Array.isArray(filters[orgUnitIdKey])) {\n                filters[orgUnitIdKey].map(id => {\n                    const option = options.find(val => val.id === id);\n                    if (option) {\n                        selections.push(option);\n                        chips.push({\n                            key: option.id,\n                            node: option.toString(),\n                        });\n                    }\n                });\n            }\n            // Todo: selectOverride is a workaround for https://github.com/patternfly/patternfly-react/issues/4477\n            return (React.createElement(ToolbarFilter, { categoryName: {\n                    key: orgUnitIdKey,\n                    name: t('filter_by.values.org_unit_id'),\n                }, chips: chips, deleteChip: this.onDelete, key: orgUnitIdKey, showToolbarItem: currentCategory === orgUnitIdKey },\n                React.createElement(Select, { isDisabled: isDisabled, className: \"selectOverride\", variant: SelectVariant.checkbox, \"aria-label\": t('filter_by.org_unit.aria_label'), onToggle: this.onOrgUnitToggle, onSelect: this.onOrgUnitSelect, selections: selections, isOpen: isOrgUnitSelectExpanded, placeholderText: t('filter_by.org_unit.placeholder') }, options.map(option => (React.createElement(SelectOption, { description: option.id, key: option.id, value: option }))))));\n        };\n        this.onOrgUnitSelect = (event, selection) => {\n            const checked = event.target.checked;\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters[orgUnitIdKey] ? prevState.filters[orgUnitIdKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign({}, prevState.filters.tag), [orgUnitIdKey]: checked\n                            ? [...prevSelections, selection.id]\n                            : prevSelections.filter(value => value !== selection.id) }),\n                };\n            }, () => {\n                if (checked) {\n                    this.props.onFilterAdded(orgUnitIdKey, selection.id);\n                }\n                else {\n                    this.onDelete(orgUnitIdKey, selection.id);\n                }\n            });\n        };\n        this.onOrgUnitToggle = isOpen => {\n            this.setState({\n                isOrgUnitSelectExpanded: isOpen,\n            });\n        };\n        // Tag key select\n        this.getTagKeySelect = () => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, currentTagKey, isTagKeySelectExpanded } = this.state;\n            if (currentCategory !== tagKey) {\n                return null;\n            }\n            const selectOptions = this.getTagKeyOptions().map(selectOption => {\n                return React.createElement(SelectOption, { key: selectOption.key, value: selectOption.key });\n            });\n            return (React.createElement(ToolbarItem, null,\n                React.createElement(Select, { isDisabled: isDisabled, variant: SelectVariant.typeahead, typeAheadAriaLabel: t('filter_by.tag_key.aria_label'), onClear: this.onTagKeyClear, onToggle: this.onTagKeyToggle, onSelect: this.onTagKeySelect, isOpen: isTagKeySelectExpanded, placeholderText: t('filter_by.tag_key.placeholder'), selections: currentTagKey }, selectOptions)));\n        };\n        this.onTagKeyClear = () => {\n            this.setState({\n                currentTagKey: undefined,\n                isTagKeySelectExpanded: false,\n            });\n        };\n        this.onTagKeySelect = (event, selection) => {\n            this.setState({\n                currentTagKey: selection,\n                isTagKeySelectExpanded: !this.state.isTagKeySelectExpanded,\n            });\n        };\n        this.onTagKeyToggle = isOpen => {\n            this.setState({\n                isTagKeySelectExpanded: isOpen,\n            });\n        };\n        // Tag value select\n        this.getTagValueSelect = tagKeyOption => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, currentTagKey, filters, isTagValueSelectExpanded, tagKeyValueInput } = this.state;\n            const selectOptions = this.getTagValueOptions().map(selectOption => {\n                return React.createElement(SelectOption, { key: selectOption.key, value: selectOption.key });\n            });\n            return (React.createElement(ToolbarFilter, { categoryName: tagKeyOption, chips: filters.tag[tagKeyOption.key], deleteChip: this.onDelete, key: tagKeyOption.key, showToolbarItem: currentCategory === tagKey && currentTagKey === tagKeyOption.key }, selectOptions.length < tagKeyValueLimit ? (React.createElement(Select, { isDisabled: isDisabled, variant: SelectVariant.checkbox, \"aria-label\": t('filter_by.tag_value.aria_label'), onToggle: this.onTagValueToggle, onSelect: this.onTagValueSelect, selections: filters.tag[tagKeyOption.key] ? filters.tag[tagKeyOption.key] : [], isOpen: isTagValueSelectExpanded, placeholderText: t('filter_by.tag_value.placeholder') }, selectOptions)) : (React.createElement(InputGroup, null,\n                React.createElement(TextInput, { isDisabled: isDisabled, name: \"tagkeyvalue-input\", id: \"tagkeyvalue-input\", type: \"search\", \"aria-label\": t('filter_by.tag_value.aria_label'), onChange: this.onTagValueInputChange, value: tagKeyValueInput, placeholder: t('filter_by.tag_value.input_placeholder'), onKeyDown: evt => this.onTagValueInput(evt) }),\n                React.createElement(Button, { isDisabled: isDisabled, variant: ButtonVariant.control, \"aria-label\": t('filter_by.tag_value.button_aria_label'), onClick: evt => this.onTagValueInput(evt) },\n                    React.createElement(SearchIcon, null))))));\n        };\n        this.onTagValueInputChange = value => {\n            this.setState({ tagKeyValueInput: value });\n        };\n        this.onTagValueInput = event => {\n            const { currentTagKey, tagKeyValueInput } = this.state;\n            if ((event.key && event.key !== 'Enter') || tagKeyValueInput.trim() === '') {\n                return;\n            }\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters.tag[currentTagKey] ? prevState.filters.tag[currentTagKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign(Object.assign({}, prevState.filters.tag), { [currentTagKey]: [...prevSelections, tagKeyValueInput] }) }),\n                    tagKeyValueInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(`${tagPrefix}${currentTagKey}`, tagKeyValueInput);\n            });\n        };\n        this.onTagValueSelect = (event, selection) => {\n            const { currentTagKey } = this.state;\n            const checked = event.target.checked;\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters.tag[currentTagKey] ? prevState.filters.tag[currentTagKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign(Object.assign({}, prevState.filters.tag), { [currentTagKey]: checked\n                                ? [...prevSelections, selection]\n                                : prevSelections.filter(value => value !== selection) }) }),\n                };\n            }, () => {\n                if (checked) {\n                    this.props.onFilterAdded(`${tagPrefix}${currentTagKey}`, selection);\n                }\n                else {\n                    this.onDelete(currentTagKey, selection);\n                }\n            });\n        };\n        this.onTagValueToggle = isOpen => {\n            this.setState({\n                isTagValueSelectExpanded: isOpen,\n            });\n        };\n        // Column management\n        this.getColumnManagement = () => {\n            const { t } = this.props;\n            return (React.createElement(ToolbarItem, null,\n                React.createElement(Button, { onClick: this.handleColumnManagementClicked, variant: ButtonVariant.link }, t('details.column_management.title'))));\n        };\n        // Export button\n        this.getExportButton = () => {\n            const { isDisabled, isExportDisabled } = this.props;\n            return (React.createElement(ToolbarItem, { spacer: {\n                    default: 'spacerNone',\n                } },\n                React.createElement(Button, { isDisabled: isDisabled || isExportDisabled, onClick: this.handleExportClicked, variant: ButtonVariant.plain },\n                    React.createElement(ExportIcon, null))));\n        };\n        this.handleColumnManagementClicked = () => {\n            this.props.onColumnManagementClicked();\n        };\n        this.handleExportClicked = () => {\n            this.props.onExportClicked();\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentCategory: this.getDefaultCategory(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { categoryOptions, groupBy, orgReport, query, tagReport } = this.props;\n        if (categoryOptions !== prevProps.categoryOptions ||\n            groupBy !== prevProps.groupBy ||\n            (query && !isEqual(query, prevProps.query)) ||\n            (orgReport && !isEqual(orgReport, prevProps.orgReport)) ||\n            (tagReport && !isEqual(tagReport, prevProps.tagReport))) {\n            this.setState(() => {\n                const filters = this.getActiveFilters(query);\n                return categoryOptions !== prevProps.categoryOptions || prevProps.groupBy !== groupBy\n                    ? {\n                        categoryInput: '',\n                        currentCategory: this.getDefaultCategory(),\n                        currentOrgUnit: '',\n                        currentTagKey: '',\n                        tagKeyValueInput: '',\n                        filters,\n                    }\n                    : {\n                        filters,\n                    };\n            });\n        }\n    }\n    // Category dropdown\n    getCategoryDropdown() {\n        const { categoryOptions, isDisabled } = this.props;\n        const { isCategoryDropdownOpen } = this.state;\n        if (!categoryOptions) {\n            return null;\n        }\n        return (React.createElement(ToolbarItem, null,\n            React.createElement(Dropdown, { onSelect: this.onCategorySelect, position: DropdownPosition.left, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.onCategoryToggle, style: { width: '100%' } },\n                    React.createElement(FilterIcon, null),\n                    \" \",\n                    this.getCurrentCategoryOption().name), isOpen: isCategoryDropdownOpen, dropdownItems: categoryOptions &&\n                    categoryOptions.map(option => (React.createElement(DropdownItem, { key: option.key, onClick: () => this.onCategoryClick(option.key) }, option.name))), style: { width: '100%' } })));\n    }\n    getOrgUnitOptions() {\n        const { orgReport } = this.props;\n        let options = [];\n        if (!(orgReport && orgReport.data)) {\n            return options;\n        }\n        // Sort all names first\n        const sortedData = orgReport.data.sort((a, b) => {\n            if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                return -1;\n            }\n            if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                return 1;\n            }\n            return 0;\n        });\n        // Move roots first\n        const roots = sortedData.filter(org => org.level === 0);\n        const filteredOrgs = sortedData.filter(org => org.level !== 0);\n        roots.map(root => {\n            const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n            filteredOrgs.unshift(item);\n        });\n        if (filteredOrgs.length > 0) {\n            options = filteredOrgs.map(org => {\n                return {\n                    key: org[orgUnitIdKey],\n                    name: org[orgUnitNameKey],\n                };\n            });\n        }\n        return options;\n    }\n    getTagKeyOptions() {\n        const { tagReport } = this.props;\n        let data = [];\n        let options = [];\n        if (!(tagReport && tagReport.data)) {\n            return options;\n        }\n        // If the key_only param is used, we have an array of strings\n        let hasTagKeys = false;\n        for (const item of tagReport.data) {\n            if (item.hasOwnProperty('key')) {\n                hasTagKeys = true;\n                break;\n            }\n        }\n        // Workaround for https://github.com/project-koku/koku/issues/1797\n        if (hasTagKeys) {\n            const keepData = tagReport.data.map(\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            (_a) => {\n                var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                return keepProps;\n            });\n            data = uniqBy(keepData, 'key');\n        }\n        else {\n            data = uniq(tagReport.data);\n        }\n        if (data.length > 0) {\n            options = data.map(item => {\n                const key = hasTagKeys ? item.key : item;\n                return {\n                    key,\n                    name: key,\n                };\n            });\n        }\n        return options;\n    }\n    getTagValueOptions() {\n        const { tagReport } = this.props;\n        const { currentTagKey } = this.state;\n        let data = [];\n        if (tagReport && tagReport.data) {\n            data = [...new Set([...tagReport.data])]; // prune duplicates\n        }\n        let options = [];\n        if (data.length > 0) {\n            for (const tag of data) {\n                if (currentTagKey === tag.key && tag.values) {\n                    options = tag.values.map(val => {\n                        return {\n                            key: val,\n                            name: val,\n                        };\n                    });\n                    break;\n                }\n            }\n        }\n        return options;\n    }\n    render() {\n        const { categoryOptions, dateRange, pagination, showBulkSelect, showColumnManagement, showExport, showFilter, style, } = this.props;\n        const options = categoryOptions ? categoryOptions : this.getDefaultCategoryOptions();\n        // Todo: clearAllFilters workaround https://github.com/patternfly/patternfly-react/issues/4222\n        return (React.createElement(\"div\", { style: style ? style : styles.toolbarContainer },\n            React.createElement(Toolbar, { id: \"details-toolbar\", clearAllFilters: this.onDelete, collapseListedFiltersBreakpoint: \"xl\" },\n                React.createElement(ToolbarContent, null,\n                    React.createElement(ToolbarToggleGroup, { breakpoint: \"xl\", toggleIcon: React.createElement(FilterIcon, null) },\n                        showBulkSelect && React.createElement(ToolbarItem, { variant: \"bulk-select\" }, this.getBulkSelect()),\n                        showFilter && (React.createElement(ToolbarGroup, { variant: \"filter-group\" },\n                            this.getCategoryDropdown(),\n                            this.getTagKeySelect(),\n                            this.getTagKeyOptions().map(option => this.getTagValueSelect(option)),\n                            this.getOrgUnitSelect(),\n                            options &&\n                                options\n                                    .filter(option => option.key !== tagKey && option.key !== orgUnitIdKey)\n                                    .map(option => this.getCategoryInput(option)))),\n                        (Boolean(showExport) || Boolean(showColumnManagement)) && (React.createElement(ToolbarGroup, null,\n                            Boolean(showExport) && this.getExportButton(),\n                            Boolean(showColumnManagement) && this.getColumnManagement())),\n                        dateRange && React.createElement(ToolbarGroup, null, dateRange)),\n                    React.createElement(ToolbarItem, { alignment: { default: 'alignRight' }, variant: \"pagination\" }, pagination)))));\n    }\n}\nconst DataToolbar = withTranslation()(DataToolbarBase);\nexport { DataToolbar };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    form: {\n        marginLeft: global_spacer_sm.var,\n    },\n    modal: {\n        input: {\n            marginRight: global_spacer_xs.var,\n        },\n        ul: {\n            marginLeft: global_spacer_sm.var,\n        },\n    },\n    title: {\n        marginBottom: global_spacer_md.var,\n    },\n};\n","import { Button, ButtonVariant } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport fileDownload from 'js-file-download';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { exportActions, exportSelectors } from 'store/exports';\nimport { getTestProps, testIds } from 'testIds';\nconst reportType = \"cost\" /* cost */;\nexport class ExportSubmitBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            fetchReportClicked: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExport = () => {\n            const { report, reportFetchStatus } = this.props;\n            if (report && reportFetchStatus === 2 /* complete */) {\n                fileDownload(report.data, this.getFileName(), 'text/csv');\n                this.handleClose();\n            }\n        };\n        this.getFileName = () => {\n            const { groupBy, reportPathsType, resolution, t, timeScope } = this.props;\n            const thisMonth = new Date();\n            const lastMonth = new Date().setMonth(thisMonth.getMonth() - 1);\n            const currentMonth = format(thisMonth, 'MMMM_yyyy');\n            const previousMonth = format(lastMonth - 1, 'MMMM_yyyy');\n            const fileName = t('export.file.name', {\n                provider: reportPathsType,\n                groupBy,\n                resolution,\n                date: timeScope && timeScope === -2 ? previousMonth : currentMonth,\n            });\n            return `${fileName}.csv`;\n        };\n        this.handleClose = () => {\n            this.setState(Object.assign({}, this.defaultState), () => {\n                this.props.onClose(false);\n            });\n        };\n        this.handleFetchReport = () => {\n            const { exportReport, queryString, reportPathsType } = this.props;\n            exportReport(reportPathsType, reportType, queryString);\n            this.setState({\n                fetchReportClicked: true,\n            }, () => {\n                this.getExport();\n            });\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const { report } = this.props;\n        const { fetchReportClicked } = this.state;\n        if (prevProps.report !== report && fetchReportClicked) {\n            this.getExport();\n        }\n    }\n    render() {\n        const { reportFetchStatus, t } = this.props;\n        return (React.createElement(Button, Object.assign({}, getTestProps(testIds.export.submit_btn), { isDisabled: reportFetchStatus === 1 /* inProgress */, key: \"confirm\", onClick: this.handleFetchReport, variant: ButtonVariant.primary }), t('export.confirm')));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const { groupBy, isAllItems, items, query, reportPathsType, resolution, timeScope } = props;\n    const getQueryString = () => {\n        const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { filter: {\n                limit: undefined,\n                offset: undefined,\n                resolution: resolution ? resolution : undefined,\n                time_scope_value: timeScope ? timeScope : undefined,\n            }, filter_by: {}, order_by: undefined, perspective: undefined, dateRange: undefined });\n        // Store filter_by as an array so we can add to it below\n        if (query.filter_by) {\n            for (const key of Object.keys(query.filter_by)) {\n                if (newQuery.filter_by[key] === undefined) {\n                    newQuery.filter_by[key] = [];\n                }\n                newQuery.filter_by[key].push(query.filter_by[key]);\n            }\n        }\n        if (isAllItems) {\n            // Ensure group_by isn't overridden -- org_unit_id is not unique\n            if (groupBy === orgUnitIdKey) {\n                if (newQuery.filter_by[orgUnitIdKey] === undefined) {\n                    newQuery.filter_by[orgUnitIdKey] = [];\n                }\n                newQuery.filter_by[orgUnitIdKey].push(query.group_by[orgUnitIdKey]);\n            }\n        }\n        else {\n            if (groupBy === orgUnitIdKey) {\n                for (const item of items) {\n                    // Note that type only exists when grouping by org units\n                    const type = item.type === 'organizational_unit' ? orgUnitIdKey : item.type;\n                    if (newQuery.filter_by[type] === undefined) {\n                        newQuery.filter_by[type] = [];\n                    }\n                    newQuery.filter_by[type].push(item.id);\n                }\n            }\n            else {\n                for (const item of items) {\n                    if (newQuery.filter_by[groupBy] === undefined) {\n                        newQuery.filter_by[groupBy] = [];\n                    }\n                    newQuery.filter_by[groupBy].push(item.id);\n                }\n            }\n        }\n        return getQuery(newQuery);\n    };\n    const queryString = getQueryString();\n    const report = exportSelectors.selectExport(state, reportPathsType, reportType, queryString);\n    const reportError = exportSelectors.selectExportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = exportSelectors.selectExportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    exportReport: exportActions.exportReport,\n};\nconst ExportSubmitConnect = connect(mapStateToProps, mapDispatchToProps)(ExportSubmitBase);\nconst ExportSubmit = withTranslation()(ExportSubmitConnect);\nexport { ExportSubmit };\n","import { Button, ButtonVariant, Form, FormGroup, Modal, Radio } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport { orderBy } from 'lodash';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { exportActions } from 'store/exports';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './exportModal.styles';\nimport { ExportSubmit } from './exportSubmit';\nconst resolutionOptions = [\n    { label: 'export.resolution_daily', value: 'daily' },\n    { label: 'export.resolution_monthly', value: 'monthly' },\n];\nconst timeScopeOptions = [\n    { label: 'export.time_scope_current', value: -1 },\n    { label: 'export.time_scope_previous', value: -2 },\n];\nexport class ExportModalBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            timeScope: -1,\n            resolution: this.props.resolution || 'monthly',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        // Reset defult state upon close -- see https://issues.redhat.com/browse/COST-1134\n        this.handleClose = () => {\n            this.setState(Object.assign({}, this.defaultState), () => {\n                this.props.onClose(false);\n            });\n        };\n        this.handleMonthChange = (_, event) => {\n            this.setState({ timeScope: Number(event.currentTarget.value) });\n        };\n        this.handleResolutionChange = (_, event) => {\n            this.setState({ resolution: event.currentTarget.value });\n        };\n        this.handleMonthChange = this.handleMonthChange.bind(this);\n        this.handleResolutionChange = this.handleResolutionChange.bind(this);\n    }\n    render() {\n        const { groupBy, isAllItems, items, query, reportPathsType, showAggregateType = true, showTimeScope = true, t, } = this.props;\n        const { resolution, timeScope } = this.state;\n        let sortedItems = [...items];\n        if (this.props.isOpen) {\n            if (items && items.length === 0 && isAllItems) {\n                sortedItems = [\n                    {\n                        label: t('export.all'),\n                    },\n                ];\n            }\n            else {\n                sortedItems = orderBy(sortedItems, ['label'], ['asc']);\n            }\n        }\n        let selectedLabel = t('export.selected', { groupBy });\n        if (groupBy.indexOf(tagPrefix) !== -1) {\n            selectedLabel = t('export.selected_tags');\n        }\n        const thisMonth = new Date();\n        const lastMonth = new Date().setMonth(thisMonth.getMonth() - 1);\n        const currentMonth = format(thisMonth, 'MMMM yyyy');\n        const previousMonth = format(lastMonth - 1, 'MMMM yyyy');\n        return (React.createElement(Modal, { style: styles.modal, isOpen: this.props.isOpen, onClose: this.handleClose, title: t('export.title'), variant: \"small\", actions: [\n                React.createElement(ExportSubmit, { groupBy: groupBy, isAllItems: isAllItems, items: items, key: \"confirm\", timeScope: showTimeScope ? timeScope : undefined, onClose: this.handleClose, query: query, reportPathsType: reportPathsType, resolution: resolution }),\n                React.createElement(Button, Object.assign({}, getTestProps(testIds.export.cancel_btn), { key: \"cancel\", onClick: this.handleClose, variant: ButtonVariant.link }), t('export.cancel')),\n            ] },\n            React.createElement(\"div\", { style: styles.title },\n                React.createElement(\"span\", null, t('export.heading', { groupBy }))),\n            React.createElement(Form, { style: styles.form },\n                showAggregateType && (React.createElement(FormGroup, { label: t('export.aggregate_type'), fieldId: \"aggregate-type\" },\n                    React.createElement(React.Fragment, null, resolutionOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `resolution-${index}`, isValid: option.value !== undefined, label: t(option.label), value: option.value, checked: resolution === option.value, name: \"resolution\", onChange: this.handleResolutionChange, \"aria-label\": t(option.label) })))))),\n                showTimeScope && (React.createElement(FormGroup, { label: t('export.time_scope_title'), fieldId: \"timeScope\" },\n                    React.createElement(React.Fragment, null, timeScopeOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `timeScope-${index}`, isValid: option.value !== undefined, label: t(option.label, { date: option.value === -2 ? previousMonth : currentMonth }), value: option.value, checked: timeScope === option.value, name: \"timeScope\", onChange: this.handleMonthChange, \"aria-label\": t(option.label) })))))),\n                React.createElement(FormGroup, { label: selectedLabel, fieldId: \"selected-labels\" },\n                    React.createElement(\"ul\", null, sortedItems.map((groupItem, index) => {\n                        return React.createElement(\"li\", { key: index }, groupItem.label);\n                    }))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {};\n});\nconst mapDispatchToProps = {\n    exportReport: exportActions.exportReport,\n};\nconst ExportModalConnect = connect(mapStateToProps, mapDispatchToProps)(ExportModalBase);\nconst ExportModal = withTranslation()(ExportModalConnect);\nexport { ExportModal };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    groupBySelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    groupBySelectorLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { orgUnitIdKey, orgUnitNameKey, parseQuery } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './groupBy.styles';\nclass GroupByOrgBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy } = this.props;\n            const queryFromRoute = parseQuery(location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            for (const key of groupByKeys) {\n                const index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = queryFromRoute.group_by[orgUnitIdKey];\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.getGroupByItems = () => {\n            const { orgReport } = this.props;\n            if (!(orgReport && orgReport.data)) {\n                return [];\n            }\n            // Sort all names first\n            const sortedData = orgReport.data.sort((a, b) => {\n                if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                    return -1;\n                }\n                if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                    return 1;\n                }\n                return 0;\n            });\n            // Move roots first\n            const roots = sortedData.filter(org => org.level === 0);\n            const filteredOrgs = sortedData.filter(org => org.level !== 0);\n            roots.map(root => {\n                const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n                filteredOrgs.unshift(item);\n            });\n            return filteredOrgs.map(org => ({\n                id: org[orgUnitIdKey],\n                toString: () => org[orgUnitNameKey],\n            }));\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            this.setState({\n                currentItem: selection.id,\n                isGroupByOpen: false,\n            });\n            if (onItemClicked) {\n                onItemClicked(`${orgUnitIdKey}${selection.id}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled = false, t } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        const groupByItems = this.getGroupByItems();\n        const selection = groupByItems.find((item) => item.id === currentItem);\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": t('group_by.org_unit_aria_label'), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelect, isOpen: isGroupByOpen, placeholderText: t('group_by.org_unit_placeholder'), selections: selection, variant: SelectVariant.typeahead }, groupByItems.map(item => (React.createElement(SelectOption, { description: item.id, key: item.id, value: item }))))));\n    }\n}\nconst GroupByOrg = withTranslation()(GroupByOrgBase);\nexport { GroupByOrg };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { parseQuery, tagPrefix } from 'api/queries/query';\nimport { uniq, uniqBy } from 'lodash';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './groupBy.styles';\nclass GroupByTagBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getGroupByItems = () => {\n            const { tagReport } = this.props;\n            if (!(tagReport && tagReport.data)) {\n                return [];\n            }\n            // If the key_only param is used, we have an array of strings\n            let hasTagKeys = false;\n            for (const item of tagReport.data) {\n                if (item.hasOwnProperty('key')) {\n                    hasTagKeys = true;\n                    break;\n                }\n            }\n            // Workaround for https://github.com/project-koku/koku/issues/1797\n            let data = [];\n            if (hasTagKeys) {\n                const keepData = tagReport.data.map(\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                (_a) => {\n                    var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                    return keepProps;\n                });\n                data = uniqBy(keepData, 'key');\n            }\n            else {\n                data = uniq(tagReport.data);\n            }\n            return data.map(item => {\n                const tagKey = hasTagKeys ? item.key : item;\n                return React.createElement(SelectOption, { key: item.key, value: tagKey });\n            });\n        };\n        this.getCurrentGroupBy = () => {\n            const queryFromRoute = parseQuery(location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            let groupBy;\n            for (const key of groupByKeys) {\n                const index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = key.slice(tagPrefix.length);\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            this.setState({\n                currentItem: selection,\n                isGroupByOpen: false,\n            });\n            if (onItemClicked) {\n                onItemClicked(`${tagPrefix}${selection}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled, t } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": t('group_by.tag_key_aria_label'), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelect, isOpen: isGroupByOpen, placeholderText: t('group_by.tag_key_placeholder'), selections: currentItem, variant: SelectVariant.typeahead }, this.getGroupByItems())));\n    }\n}\nconst GroupByTag = withTranslation()(GroupByTagBase);\nexport { GroupByTag };\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey, parseQuery, tagKey, tagPrefix } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { orgActions, orgSelectors } from 'store/orgs';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { styles } from './groupBy.styles';\nimport { GroupByOrg } from './groupByOrg';\nimport { GroupByTag } from './groupByTag';\nconst groupByOrgOptions = [{ label: orgUnitIdKey, value: orgUnitIdKey }];\nconst groupByTagOptions = [{ label: tagKey, value: tagKey }];\nconst orgReportType = \"org\" /* org */;\nconst tagReportType = \"tag\" /* tag */;\nclass GroupByBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n            isGroupByOrgVisible: false,\n            isGroupByTagVisible: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleGroupByClick = value => {\n            const { onItemClicked } = this.props;\n            if (value === orgUnitIdKey || value === tagKey) {\n                this.setState({\n                    currentItem: value,\n                    isGroupByOrgVisible: value === orgUnitIdKey,\n                    isGroupByTagVisible: value === tagKey,\n                });\n            }\n            else {\n                this.setState({\n                    currentItem: value,\n                    isGroupByOrgVisible: false,\n                    isGroupByTagVisible: false,\n                });\n                if (onItemClicked) {\n                    onItemClicked(value);\n                }\n            }\n        };\n        this.getGroupByItems = () => {\n            const { options, orgReport, tagReport, t } = this.props;\n            const allOptions = [...options];\n            if (orgReport && orgReport.data && orgReport.data.length > 0) {\n                allOptions.push(...groupByOrgOptions);\n            }\n            if (tagReport && tagReport.data && tagReport.data.length > 0) {\n                allOptions.push(...groupByTagOptions);\n            }\n            return allOptions.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleGroupByClick(option.value) }, t(`group_by.values.${option.label}`))));\n        };\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy } = this.props;\n            const { defaultItem } = this.state;\n            const queryFromRoute = parseQuery(location.search);\n            if (!(queryFromRoute && queryFromRoute.group_by)) {\n                return defaultItem;\n            }\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            for (const key of groupByKeys) {\n                let index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = tagKey;\n                    this.setState({\n                        isGroupByTagVisible: true,\n                    });\n                    break;\n                }\n                index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = orgUnitIdKey;\n                    this.setState({\n                        isGroupByOrgVisible: true,\n                    });\n                    break;\n                }\n            }\n            return groupBy !== 'date' ? groupBy : defaultItem;\n        };\n        this.handleGroupBySelect = () => {\n            this.setState({\n                isGroupByOpen: !this.state.isGroupByOpen,\n            });\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({\n                isGroupByOpen,\n            });\n        };\n        this.handleGroupByClick = this.handleGroupByClick.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        const { fetchOrg, fetchTag, orgQueryString, orgReportPathsType, showOrgs, showTags, tagQueryString, tagReportPathsType, } = this.props;\n        if (showOrgs) {\n            fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n        }\n        if (showTags) {\n            fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n        }\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchOrg, fetchTag, groupBy, orgQueryString, orgReportPathsType, perspective, showOrgs, showTags, tagQueryString, tagReportPathsType, } = this.props;\n        if (prevProps.groupBy !== groupBy || prevProps.perspective !== perspective) {\n            if (showOrgs) {\n                fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n            }\n            if (showTags) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n            let options;\n            if (prevProps.perspective !== perspective) {\n                options = {\n                    isGroupByOrgVisible: false,\n                    isGroupByTagVisible: false,\n                };\n            }\n            this.setState(Object.assign({ currentItem: this.getCurrentGroupBy() }, (options ? options : {})));\n        }\n    }\n    render() {\n        const { getIdKeyForGroupBy, groupBy, isDisabled = false, onItemClicked, orgReport, t, tagReport } = this.props;\n        const { currentItem, isGroupByOpen, isGroupByOrgVisible, isGroupByTagVisible } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(\"label\", { style: styles.groupBySelectorLabel }, t('group_by.label')),\n            React.createElement(Dropdown, { onSelect: this.handleGroupBySelect, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.handleGroupByToggle }, t(`group_by.values.${currentItem}`)), isOpen: isGroupByOpen, dropdownItems: [this.getGroupByItems()] }),\n            Boolean(isGroupByOrgVisible) && (React.createElement(GroupByOrg, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: isDisabled, onItemClicked: onItemClicked, options: groupByOrgOptions, orgReport: orgReport })),\n            Boolean(isGroupByTagVisible) && (React.createElement(GroupByTag, { groupBy: groupBy, isDisabled: isDisabled, onItemClicked: onItemClicked, options: groupByTagOptions, tagReport: tagReport }))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { endDate, startDate, orgReportPathsType, tagReportPathsType }) => {\n    const tagQuery = endDate && startDate\n        ? {\n            start_date: startDate,\n            end_date: endDate,\n        }\n        : {\n            filter: {\n                resolution: 'monthly',\n                time_scope_units: 'month',\n                time_scope_value: -1,\n            },\n        };\n    // Omitting key_only to share a single, cached request -- although the header doesn't need key values, the toolbar does\n    const tagQueryString = getQuery(Object.assign({}, tagQuery));\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    const orgQueryString = getQuery({\n    // TBD...\n    });\n    const orgReport = orgSelectors.selectOrg(state, orgReportPathsType, orgReportType, orgQueryString);\n    const orgReportFetchStatus = orgSelectors.selectOrgFetchStatus(state, orgReportPathsType, orgReportType, orgQueryString);\n    return {\n        orgQueryString,\n        orgReport,\n        orgReportFetchStatus,\n        tagQueryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchOrg: orgActions.fetchOrg,\n    fetchTag: tagActions.fetchTag,\n};\nconst GroupByConnect = connect(mapStateToProps, mapDispatchToProps)(GroupByBase);\nconst GroupBy = withTranslation()(GroupByConnect);\nexport { GroupBy };\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport { ExportModal } from 'pages/views/components/export/exportModal';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, query, reportPathsType } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, query: query, reportPathsType: reportPathsType }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, t, redirectToCostModel, history, item: { source_uuid }, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, t('details.actions.export')),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], history) }, t('details.actions.price_list')));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = withRouter(withTranslation()(DetailsActionsConnect));\nexport { Actions };\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingLeft: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n};\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    dataListHeading: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n    groupByHeading: {\n        marginBottom: global_spacer_lg.value,\n    },\n    tagLink: {\n        marginLeft: global_spacer_sm.value,\n    },\n    tagsContainer: {\n        marginRight: global_spacer_3xl.value,\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { DataList, DataListCell, DataListItem, DataListItemCells, DataListItemRow } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { styles } from './tag.styles';\nclass TagViewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDataListItems = () => {\n            const { tagReport } = this.props;\n            const result = [];\n            if (tagReport) {\n                for (const item of tagReport.data) {\n                    for (const val of item.values) {\n                        const id = `${item.key}:${val}`;\n                        result.push(React.createElement(DataListItem, { \"aria-labelledby\": id, key: `${id}-item` },\n                            React.createElement(DataListItemRow, null,\n                                React.createElement(DataListItemCells, { dataListCells: [\n                                        React.createElement(DataListCell, { key: `${id}-cell1` },\n                                            React.createElement(\"span\", { id: id }, item.key)),\n                                        React.createElement(DataListCell, { key: `${id}-cell2` }, val),\n                                    ] }))));\n                    }\n                }\n            }\n            return result;\n        };\n    }\n    render() {\n        const { groupBy, groupByValue, t } = this.props;\n        const dataListItems = this.getDataListItems();\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"span\", { style: styles.dataListHeading }, t(`group_by.values.${groupBy}`))),\n            React.createElement(\"div\", { style: styles.groupByHeading },\n                React.createElement(\"span\", null, groupByValue)),\n            React.createElement(DataList, { \"aria-label\": \"Simple data list example\", isCompact: true },\n                React.createElement(DataListItem, { \"aria-labelledby\": \"heading1\" },\n                    React.createElement(DataListItemRow, null,\n                        React.createElement(DataListItemCells, { dataListCells: [\n                                React.createElement(DataListCell, { key: \"primary content\" },\n                                    React.createElement(\"span\", { id: \"heading1\", style: styles.dataListHeading }, t('tag.heading_key'))),\n                                React.createElement(DataListCell, { key: \"secondary content\" },\n                                    React.createElement(\"span\", { id: \"heading2\", style: styles.dataListHeading }, t('tag.heading_value'))),\n                            ] }))),\n                dataListItems.map(item => item))));\n    }\n}\nconst TagView = withTranslation()(connect()(TagViewBase));\nexport { TagView };\n","import { Modal } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { TagView } from './tagView';\nconst tagReportType = \"tag\" /* tag */;\nclass TagModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getTagValueCount = () => {\n            const { tagReport } = this.props;\n            let count = 0;\n            if (tagReport) {\n                for (const item of tagReport.data) {\n                    if (item.values) {\n                        count += item.values.length;\n                    }\n                }\n            }\n            return count;\n        };\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    componentDidMount() {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        fetchTag(tagReportPathsType, tagReportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchTag(tagReportPathsType, tagReportType, queryString);\n        }\n    }\n    shouldComponentUpdate(nextProps) {\n        const { groupByValue, isOpen } = this.props;\n        return nextProps.groupByValue !== groupByValue || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupBy, isOpen, query, tagReport, t } = this.props;\n        // Match page header description\n        const groupByValue = query && query.filter && query.filter.account ? query.filter.account : this.props.groupByValue;\n        return (React.createElement(Modal, { isOpen: isOpen, onClose: this.handleClose, title: t('tag.title', {\n                value: this.getTagValueCount(),\n            }), width: '50%' },\n            React.createElement(TagView, { groupBy: groupBy, groupByValue: groupByValue, tagReport: tagReport })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { tagReportPathsType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: groupByValue })),\n    };\n    const queryString = getQuery(newQuery);\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, queryString);\n    return {\n        groupBy,\n        groupByValue,\n        query,\n        queryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst TagModal = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(TagModalBase));\nexport { TagModal };\n","import { TagIcon } from '@patternfly/react-icons/dist/js/icons/tag-icon';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './tag.styles';\nimport { TagModal } from './tagModal';\nconst tagReportType = \"tag\" /* tag */;\nclass TagLinkBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = (isOpen) => {\n            this.setState({ isOpen });\n        };\n        this.handleOpen = event => {\n            this.setState({ isOpen: true });\n            event.preventDefault();\n            return false;\n        };\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n    }\n    componentDidMount() {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        fetchTag(tagReportPathsType, tagReportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchTag(tagReportPathsType, tagReportType, queryString);\n        }\n    }\n    render() {\n        const { id, tagReport, tagReportPathsType } = this.props;\n        const { isOpen } = this.state;\n        let count = 0;\n        if (tagReport) {\n            for (const item of tagReport.data) {\n                if (item.values) {\n                    count += item.values.length;\n                }\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.tagsContainer, id: id },\n            Boolean(count > 0) && (React.createElement(React.Fragment, null,\n                React.createElement(TagIcon, null),\n                React.createElement(\"a\", Object.assign({}, getTestProps(testIds.details.tag_lnk), { href: \"#/\", onClick: this.handleOpen, style: styles.tagLink }), count))),\n            React.createElement(TagModal, { isOpen: isOpen, onClose: this.handleClose, tagReportPathsType: tagReportPathsType })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { tagReportPathsType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: groupByValue })),\n    };\n    const queryString = getQuery(newQuery);\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, queryString);\n    return {\n        groupBy,\n        groupByValue,\n        query,\n        queryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst TagLink = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(TagLinkBase));\nexport { TagLink };\n","import global_BackgroundColor_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    cost: {\n        marginTop: global_spacer_xl.var,\n    },\n    costLabel: {\n        marginTop: global_spacer_xs.var,\n    },\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        textAlign: 'right',\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n        textAlign: 'right',\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n        backgroundColor: global_BackgroundColor_100.var,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    tabs: {\n        display: 'flex',\n    },\n    tag: {\n        marginLeft: global_spacer_lg.var,\n    },\n    title: {\n        paddingBottom: global_spacer_lg.var,\n        paddingTop: global_spacer_md.var,\n    },\n};\n","import './breakdownHeader.scss';\nimport { Title } from '@patternfly/react-core';\nimport { AngleLeftIcon } from '@patternfly/react-icons/dist/js/icons/angle-left-icon';\nimport { breakdownDescKey, breakdownTitleKey, getQueryRoute, orgUnitIdKey } from 'api/queries/query';\nimport { TagLink } from 'pages/views/details/components/tag/tagLink';\nimport { getGroupByOrgValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { getForDateRangeString } from 'utils/dateRange';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './breakdownHeader.styles';\nclass BreakdownHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.buildDetailsLink = () => {\n            const { detailsURL, groupBy, query } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Retrieve org unit used by the details page\n            if (query[orgUnitIdKey]) {\n                groupByKey = orgUnitIdKey;\n                value = query[orgUnitIdKey];\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { group_by: {\n                    [groupByKey]: value,\n                } });\n            // Don't want these params when returning to the details page\n            if (newQuery.filter) {\n                newQuery.filter.account = undefined;\n                newQuery[breakdownDescKey] = undefined;\n                newQuery[orgUnitIdKey] = undefined;\n                newQuery[breakdownTitleKey] = undefined;\n            }\n            return `${detailsURL}?${getQueryRoute(newQuery)}`;\n        };\n        this.getTotalCost = () => {\n            const { report } = this.props;\n            const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n            const cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD');\n            return cost;\n        };\n    }\n    render() {\n        const { description, groupBy, query, t, tabs, tagReportPathsType, title } = this.props;\n        const filterByAccount = query && query.filter ? query.filter.account : undefined;\n        const groupByOrg = getGroupByOrgValue(query);\n        const showTags = filterByAccount || groupBy === 'account' || groupBy === 'project' || groupBy === 'subscription_guid';\n        // i18n groupBy key\n        const groupByKey = groupBy ? groupBy : filterByAccount ? 'account' : groupByOrg ? orgUnitIdKey : undefined;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", null,\n                React.createElement(\"nav\", { \"aria-label\": \"breadcrumb\", className: \"breadcrumbOverride\" },\n                    React.createElement(\"ol\", { className: \"pf-c-breadcrumb__list\" },\n                        React.createElement(\"li\", { className: \"pf-c-breadcrumb__item\" },\n                            React.createElement(\"span\", { className: \"pf-c-breadcrumb__item-divider\" },\n                                React.createElement(AngleLeftIcon, null)),\n                            React.createElement(Link, { to: this.buildDetailsLink() }, t('breakdown.back_to_details', {\n                                groupBy: groupByKey,\n                                value: tagReportPathsType,\n                            }))))),\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"2xl\" },\n                    t('breakdown.title', { value: title }),\n                    description && React.createElement(\"div\", { style: styles.infoDescription }, description)),\n                React.createElement(\"div\", { style: styles.tabs },\n                    tabs,\n                    React.createElement(\"div\", { style: styles.tag }, Boolean(showTags) && React.createElement(TagLink, { id: \"tags\", tagReportPathsType: tagReportPathsType })))),\n            React.createElement(\"div\", { style: styles.cost },\n                React.createElement(\"div\", { style: styles.costLabel },\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: \"4xl\" },\n                        React.createElement(\"span\", null, this.getTotalCost()))),\n                React.createElement(\"div\", { style: styles.costLabelDate }, getForDateRangeString(groupByKey, 'breakdown.total_cost_date', 0)))));\n    }\n}\nconst BreakdownHeader = withTranslation()(BreakdownHeaderBase);\nexport { BreakdownHeader };\n","import { Tab, TabContent, Tabs, TabTitleText } from '@patternfly/react-core';\nimport Loading from 'pages/state/loading';\nimport NoData from 'pages/state/noData';\nimport NoProviders from 'pages/state/noProviders';\nimport NotAvailable from 'pages/state/notAvailable';\nimport { hasCurrentMonthData } from 'pages/views/utils/providers';\nimport React from 'react';\nimport { styles } from './breakdown.styles';\nimport { BreakdownHeader } from './breakdownHeader';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"cost-overview\" /* costOverview */:\n            return 'cost-overview';\n        case \"historical-data\" /* historicalData */:\n            return 'historical-data';\n    }\n};\nclass BreakdownBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [\n                {\n                    contentRef: React.createRef(),\n                    tab: \"cost-overview\" /* costOverview */,\n                },\n                {\n                    contentRef: React.createRef(),\n                    tab: \"historical-data\" /* historicalData */,\n                },\n            ];\n            return availableTabs;\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { costOverviewComponent, historicalDataComponent } = this.props;\n            const { activeTabKey } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"cost-overview\" /* costOverview */) {\n                return costOverviewComponent;\n            }\n            else if (currentTab === \"historical-data\" /* historicalData */) {\n                return historicalDataComponent;\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"cost-overview\" /* costOverview */) {\n                return t('breakdown.cost_overview_title');\n            }\n            else if (tab === \"historical-data\" /* historicalData */) {\n                return t('breakdown.historical_data_title');\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                });\n            }\n        };\n        this.updateReport = () => {\n            const { location, fetchReport, queryString, reportPathsType, reportType } = this.props;\n            if (location.search) {\n                fetchReport(reportPathsType, reportType, queryString);\n            }\n        };\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps) {\n        const { location, report, reportError, queryString } = this.props;\n        const newQuery = prevProps.queryString !== queryString;\n        const noReport = !report && !reportError;\n        const noLocation = !location.search;\n        if (newQuery || noReport || noLocation) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { description, detailsURL, emptyStateTitle, groupBy, providers, providersFetchStatus, providerType, query, report, reportError, reportFetchStatus, tagReportPathsType, title, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        // Note: Providers are fetched via the InactiveSources component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: emptyStateTitle });\n        }\n        else if (providersFetchStatus === 1 /* inProgress */ && reportFetchStatus === 1 /* inProgress */) {\n            return React.createElement(Loading, { title: emptyStateTitle });\n        }\n        else if (providersFetchStatus === 2 /* complete */ && reportFetchStatus === 2 /* complete */) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0 && providersFetchStatus === 2 /* complete */;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: providerType, title: emptyStateTitle });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(BreakdownHeader, { description: description, detailsURL: detailsURL, groupBy: groupBy, query: query, report: report, tabs: this.getTabs(availableTabs), tagReportPathsType: tagReportPathsType, title: title }),\n            React.createElement(\"div\", { style: styles.content }, this.getTabContent(availableTabs))));\n    }\n}\nexport default BreakdownBase;\n","import global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    clustersContainer: {\n        marginRight: global_spacer_3xl.value,\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nexport const styles = {\n    modal: {\n        // Workaround for isLarge not working properly\n        height: '700px',\n        width: '600px',\n    },\n    subTitle: {\n        marginTop: global_spacer_2xl.value,\n        textAlign: 'right',\n    },\n};\n","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nclass ClusterViewBase extends React.Component {\n    render() {\n        const { item } = this.props;\n        if (!item.clusters) {\n            return null;\n        }\n        return item.clusters.map((cluster, index) => React.createElement(\"div\", { key: `cluster-${index}` }, cluster));\n    }\n}\nconst ClusterView = withTranslation()(ClusterViewBase);\nexport { ClusterView, ClusterViewBase };\n","import './clusterModal.scss';\nimport { Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './clusterModal.styles';\nimport { ClusterView } from './clusterView';\nclass ClusterModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        const { isOpen, item } = this.props;\n        return nextProps.item !== item || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupBy, isOpen, item, t } = this.props;\n        return (React.createElement(Modal, { className: \"modalOverride\", style: styles.modal, isOpen: isOpen, onClose: this.handleClose, title: t('details.clusters_modal_title', {\n                groupBy,\n                name: item.label,\n            }), width: '50%' },\n            React.createElement(ClusterView, { item: item })));\n    }\n}\nconst ClusterModal = withTranslation()(ClusterModalBase);\nexport { ClusterModal };\n","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { getTestProps, testIds } from 'testIds';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { styles } from './cluster.styles';\nimport { ClusterModal } from './clusterModal';\nclass ClusterBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isOpen: false,\n            showAll: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = (isOpen) => {\n            this.setState({ isOpen });\n        };\n        this.handleOpen = event => {\n            this.setState({ isOpen: true });\n            event.preventDefault();\n            return false;\n        };\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n    }\n    render() {\n        const { groupBy, report, t } = this.props;\n        const { isOpen, showAll } = this.state;\n        let charCount = 0;\n        const maxChars = 50;\n        const someClusters = [];\n        const allClusters = [];\n        const computedItems = getComputedReportItems({\n            report,\n            idKey: groupBy,\n        });\n        const item = computedItems && computedItems.length ? computedItems[0] : undefined;\n        if (!item) {\n            return null;\n        }\n        for (const cluster of item.clusters) {\n            const prefix = someClusters.length > 0 ? ', ' : '';\n            const clusterString = `${prefix}${cluster}`;\n            if (showAll) {\n                someClusters.push(clusterString);\n            }\n            else if (charCount <= maxChars) {\n                if (charCount + clusterString.length > maxChars) {\n                    someClusters.push(clusterString\n                        .slice(0, maxChars - charCount)\n                        .trim()\n                        .concat('...'));\n                }\n                else {\n                    someClusters.push(clusterString);\n                }\n            }\n            charCount += clusterString.length;\n            allClusters.push(cluster);\n        }\n        return (React.createElement(\"div\", { style: styles.clustersContainer },\n            Boolean(someClusters) && someClusters.map((cluster, index) => React.createElement(\"span\", { key: index }, cluster)),\n            Boolean(someClusters.length < allClusters.length) && (React.createElement(\"a\", Object.assign({}, getTestProps(testIds.details.cluster_lnk), { href: \"#/\", onClick: this.handleOpen }), t('details.more_clusters', {\n                value: allClusters.length - someClusters.length,\n            }))),\n            React.createElement(ClusterModal, { groupBy: groupBy, isOpen: isOpen, item: item, onClose: this.handleClose })));\n    }\n}\nconst Cluster = withTranslation()(ClusterBase);\nexport { Cluster };\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const chartStyles = {\n    chartHeight: 150,\n    chartWidth: 350,\n    subTitle: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n};\nexport const styles = {\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { ChartLabel, ChartLegend, ChartPie, ChartThemeColor } from '@patternfly/react-charts';\nimport { Skeleton } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { formatValue } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './costChart.styles';\nclass CostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Override legend layout\n        this.getLegendLabel = () => {\n            return (_a) => {\n                var { values } = _a, props = __rest(_a, [\"values\"]);\n                return (React.createElement(ChartLabel, Object.assign({}, props, { style: [{ fontWeight: chartStyles.subTitle.fontWeight }, {}], text: [values[props.index], props.text] })));\n            };\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md })));\n        };\n    }\n    render() {\n        const { report, reportFetchStatus, t } = this.props;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost;\n        const hasMarkup = hasCost && report.meta.total.cost.markup;\n        const hasRaw = hasCost && report.meta.total.cost.raw;\n        const hasUsage = hasCost && report.meta.total.cost.usage;\n        const markupUnits = hasMarkup ? report.meta.total.cost.markup.units : 'USD';\n        const rawUnits = hasRaw ? report.meta.total.cost.raw.units : 'USD';\n        const usageUnits = hasUsage ? report.meta.total.cost.usage.units : 'USD';\n        const markupValue = hasMarkup ? report.meta.total.cost.markup.value : 0;\n        const rawValue = hasRaw ? report.meta.total.cost.raw.value : 0;\n        const usageValue = hasUsage ? report.meta.total.cost.usage.value : 0;\n        const markup = formatValue(hasMarkup ? report.meta.total.cost.markup.value : 0, markupUnits);\n        const raw = formatValue(hasRaw ? report.meta.total.cost.raw.value : 0, rawUnits);\n        const usage = formatValue(hasUsage ? report.meta.total.cost.usage.value : 0, usageUnits);\n        const markupLabel = t('breakdown.cost_chart.markup_label');\n        const rawLabel = t('breakdown.cost_chart.raw_label');\n        const usageLabel = t('breakdown.cost_chart.usage_label');\n        // Override legend label layout\n        const LegendLabel = this.getLegendLabel();\n        const Legend = (React.createElement(ChartLegend, { gutter: 25, itemsPerRow: 2, labelComponent: React.createElement(LegendLabel, { dy: 10, lineHeight: 1.5, values: [raw, markup, usage] }), rowGutter: 20 }));\n        return (React.createElement(\"div\", { style: { height: chartStyles.chartHeight, width: chartStyles.chartWidth } }, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(ChartPie, { ariaDesc: t('breakdown.cost_chart.aria_desc'), ariaTitle: t('breakdown.cost_chart.aria_title'), constrainToVisibleArea: true, data: [\n                { x: rawLabel, y: rawValue, units: rawUnits },\n                { x: markupLabel, y: markupValue, units: markupUnits },\n                { x: usageLabel, y: usageValue, units: usageUnits },\n            ], height: chartStyles.chartHeight, labels: ({ datum }) => t('breakdown.cost_chart.tooltip', {\n                name: datum.x,\n                value: formatValue(datum.y, datum.units),\n            }), legendComponent: Legend, legendData: [\n                {\n                    name: rawLabel,\n                },\n                {\n                    name: markupLabel,\n                },\n                {\n                    name: usageLabel,\n                },\n            ], legendOrientation: \"vertical\", legendPosition: \"right\", padding: {\n                bottom: 20,\n                left: 0,\n                right: 225,\n                top: 20,\n            }, themeColor: ChartThemeColor.green, width: chartStyles.chartWidth }))));\n    }\n}\nconst CostChart = withTranslation()(CostChartBase);\nexport { CostChart };\n","import global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nexport const styles = {\n    mainContent: {\n        marginTop: global_spacer_xl.value,\n    },\n    subTitle: {\n        textAlign: 'right',\n    },\n};\n","import { Title } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { ReportSummaryItem, ReportSummaryItems } from 'components/reports/reportSummary';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue } from 'utils/formatValue';\nimport { formatCurrency } from 'utils/formatValue';\nimport { styles } from './summaryModal.styles';\nconst reportType = \"cost\" /* cost */;\nclass SummaryModalViewBase extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { report, reportGroupBy, reportFetchStatus, t } = this.props;\n        const cost = formatCurrency(report && report.meta && report.meta.total ? report.meta.total.cost.total.value : 0);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { style: styles.subTitle },\n                React.createElement(Title, { headingLevel: \"h2\", size: \"xl\" }, t('details.cost_value', { value: cost }))),\n            React.createElement(\"div\", { style: styles.mainContent },\n                React.createElement(ReportSummaryItems, { idKey: reportGroupBy, report: report, status: reportFetchStatus }, ({ items }) => items.map(_item => (React.createElement(ReportSummaryItem, { key: _item.id, formatOptions: {}, formatValue: formatValue, label: _item.label ? _item.label.toString() : '', totalValue: report.meta.total.cost.total.value, units: report.meta.total.cost.total.units, value: _item.cost.total.value })))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportGroupBy, reportPathsType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: undefined })), (groupBy && { [groupBy]: groupByValue })),\n        group_by: Object.assign({}, (reportGroupBy && { [reportGroupBy]: '*' })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst SummaryModalView = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(SummaryModalViewBase));\nexport { SummaryModalView };\n","import './summaryModal.scss';\nimport { Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { SummaryModalView } from './summaryModalView';\nclass SummaryModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        const { groupByValue, isOpen } = this.props;\n        return nextProps.groupByValue !== groupByValue || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupByValue, isOpen, reportGroupBy, reportPathsType, t } = this.props;\n        return (React.createElement(Modal, { className: \"modalOverride\", isOpen: isOpen, onClose: this.handleClose, title: t('details.summary_modal_title', {\n                groupBy: reportGroupBy,\n                name: groupByValue,\n            }), variant: \"large\" },\n            React.createElement(SummaryModalView, { reportGroupBy: reportGroupBy, reportPathsType: reportPathsType })));\n    }\n}\nconst SummaryModal = withTranslation()(SummaryModalBase);\nexport { SummaryModal };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    card: {},\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    viewAllContainer: {\n        marginLeft: '-15px',\n    },\n};\n","import { Button, ButtonType, ButtonVariant, Card, CardBody, CardFooter, CardTitle, Skeleton, Title, } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { ReportSummaryItem, ReportSummaryItems } from 'components/reports/reportSummary';\nimport { SummaryModal } from 'pages/views/details/components/summary/summaryModal';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getTestProps, testIds } from 'testIds';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatValue } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { styles } from './summaryCard.styles';\nclass SummaryBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            isBulletChartModalOpen: false,\n        };\n        this.getItems = () => {\n            const { report, reportGroupBy } = this.props;\n            const computedItems = getComputedReportItems({\n                report,\n                idKey: reportGroupBy,\n            });\n            return computedItems;\n        };\n        this.getSummary = () => {\n            const { report, reportGroupBy, reportFetchStatus } = this.props;\n            return (React.createElement(ReportSummaryItems, { idKey: reportGroupBy, report: report, status: reportFetchStatus }, ({ items }) => items.map(reportItem => (React.createElement(ReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: {}, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : undefined, totalValue: report.meta.total.cost.total.value, units: report.meta.total.cost.total.units, value: reportItem.cost.total.value })))));\n        };\n        this.getViewAll = () => {\n            const { groupBy, query, reportGroupBy, reportPathsType, t } = this.props;\n            const { isBulletChartModalOpen } = this.state;\n            const computedItems = this.getItems();\n            const otherIndex = computedItems.findIndex(i => {\n                const id = i.id;\n                if (id && id !== null) {\n                    return id === 'Other' || id === 'Others';\n                }\n            });\n            if (otherIndex !== -1) {\n                // Match page header description\n                const groupByValue = query && query.filter && query.filter.account ? query.filter.account : this.props.groupByValue;\n                return (React.createElement(\"div\", { style: styles.viewAllContainer },\n                    React.createElement(Button, Object.assign({}, getTestProps(testIds.details.view_all_btn), { onClick: this.handleBulletChartModalOpen, type: ButtonType.button, variant: ButtonVariant.link }), t('details.view_all', { groupBy: reportGroupBy })),\n                    React.createElement(SummaryModal, { groupBy: groupBy, groupByValue: groupByValue, isOpen: isBulletChartModalOpen, onClose: this.handleBulletChartModalClose, query: query, reportGroupBy: reportGroupBy, reportPathsType: reportPathsType })));\n            }\n            else {\n                return null;\n            }\n        };\n        this.handleBulletChartModalClose = (isOpen) => {\n            this.setState({ isBulletChartModalOpen: isOpen });\n        };\n        this.handleBulletChartModalOpen = event => {\n            this.setState({ isBulletChartModalOpen: true });\n            event.preventDefault();\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { reportGroupBy, reportFetchStatus, t } = this.props;\n        return (React.createElement(Card, { style: styles.card },\n            React.createElement(CardTitle, null,\n                React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('breakdown.summary_title', { groupBy: reportGroupBy }))),\n            React.createElement(CardBody, null, reportFetchStatus === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.skeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.skeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.skeleton, width: skeletonWidth.md }))) : (this.getSummary())),\n            React.createElement(CardFooter, null, this.getViewAll())));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportGroupBy, reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            limit: 3,\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: undefined })), (groupBy && { [groupBy]: groupByValue })),\n        group_by: Object.assign({}, (reportGroupBy && { [reportGroupBy]: '*' })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        groupBy,\n        groupByValue,\n        query,\n        queryString,\n        report,\n        reportFetchStatus,\n        reportPathsType,\n        reportType,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst SummaryCard = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(SummaryBase));\nexport { SummaryCard };\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    chartSkeleton: {\n        marginBottom: global_spacer_md.value,\n    },\n    capacity: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { ChartBullet } from '@patternfly/react-charts';\nimport { Grid, GridItem, Skeleton } from '@patternfly/react-core';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport { getQuery } from 'api/queries/query';\nimport { getResizeObserver } from 'components/charts/common/chartUtils';\nimport { getGroupById, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { noop } from 'utils/noop';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { styles } from './usageChart.styles';\nclass UsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            width: 0,\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n        this.getCpuChart = () => {\n            const { groupBy, reportFetchStatus, report } = this.props;\n            const { width } = this.state;\n            const chartDatum = groupBy === 'cluster' ? this.getChartDatumWithCapacity() : this.getChartDatum();\n            if (!report || chartDatum.usage.length === 0) {\n                return null;\n            }\n            return (React.createElement(\"div\", { className: \"chartOverride\" }, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(React.Fragment, null,\n                Boolean(groupBy === 'cluster') && this.getFreeSpace(),\n                React.createElement(ChartBullet, { comparativeErrorMeasureData: chartDatum.limit.value\n                        ? [\n                            {\n                                tooltip: chartDatum.limit.tooltip,\n                                y: chartDatum.limit.value,\n                            },\n                        ]\n                        : [], comparativeErrorMeasureLegendData: chartDatum.limit.value ? [{ name: chartDatum.limit.legend }] : [], height: this.getChartHeight(), labels: ({ datum }) => `${datum.tooltip}`, legendPosition: \"bottom-left\", legendItemsPerRow: this.getItemsPerRow(), maxDomain: this.isDatumEmpty(chartDatum) ? 100 : undefined, minDomain: 0, padding: {\n                        bottom: 75,\n                        left: 10,\n                        right: 50,\n                        top: 0,\n                    }, primarySegmentedMeasureData: chartDatum.usage.length\n                        ? chartDatum.usage.map(datum => {\n                            return {\n                                tooltip: datum.tooltip,\n                                y: datum.value,\n                            };\n                        })\n                        : [], primarySegmentedMeasureLegendData: chartDatum.usage.length\n                        ? chartDatum.usage.map(datum => {\n                            return {\n                                name: datum.legend,\n                            };\n                        })\n                        : [], qualitativeRangeData: chartDatum.ranges.length\n                        ? [\n                            {\n                                tooltip: chartDatum.ranges[0].tooltip,\n                                y: chartDatum.ranges[0].value,\n                            },\n                        ]\n                        : [], qualitativeRangeLegendData: chartDatum.ranges.length ? [{ name: chartDatum.ranges[0].legend }] : [], width: width })))));\n        };\n        this.getChartHeight = () => {\n            const { groupBy } = this.props;\n            const { width } = this.state;\n            if (groupBy === 'cluster') {\n                return width > 950 ? 115 : width > 450 ? 150 : 210;\n            }\n            else {\n                return width > 700 ? 115 : width > 450 ? 150 : 180;\n            }\n        };\n        this.getItemsPerRow = () => {\n            const { width } = this.state;\n            return width > 950 ? 4 : width > 700 ? 3 : width > 450 ? 2 : 1;\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n        this.isDatumEmpty = (datum) => {\n            let hasRange = false;\n            for (const range of datum.ranges) {\n                if (range.value) {\n                    hasRange = true;\n                    break;\n                }\n            }\n            let hasUsage = false;\n            for (const usage of datum.usage) {\n                if (usage.value) {\n                    hasUsage = true;\n                    break;\n                }\n            }\n            return !(datum.limit.value || hasRange || hasUsage);\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        if (prevProps.queryString !== this.props.queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getChartDatum() {\n        const { report, reportType, t } = this.props;\n        const datum = {\n            limit: {},\n            ranges: [],\n            usage: [],\n        };\n        // Always show bullet chart legends https://github.com/project-koku/koku-ui/issues/963\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasLimit = hasTotal && report.meta.total.limit && report.meta.total.limit !== null;\n        const limit = Math.trunc(hasLimit ? report.meta.total.limit.value : 0);\n        const limitUnits = t(`units.${unitLookupKey(hasLimit ? report.meta.total.limit.units : '')}`);\n        datum.limit = {\n            legend: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            tooltip: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            value: Math.trunc(limit),\n        };\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        datum.ranges = [\n            {\n                legend: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                value: Math.trunc(request),\n            },\n        ];\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        datum.usage = [\n            {\n                legend: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                value: Math.trunc(usage),\n            },\n        ];\n        return datum;\n    }\n    getChartDatumWithCapacity() {\n        const { report, reportType, t } = this.props;\n        const datum = {\n            limit: {},\n            ranges: [],\n            usage: [],\n        };\n        // Always show bullet chart legends https://github.com/project-koku/koku-ui/issues/963\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasLimit = hasTotal && report.meta.total.limit && report.meta.total.limit !== null;\n        const limit = Math.trunc(hasLimit ? report.meta.total.limit.value : 0);\n        const limitUnits = t(`units.${unitLookupKey(hasLimit ? report.meta.total.limit.units : '')}`);\n        datum.limit = {\n            legend: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            tooltip: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            value: Math.trunc(limit),\n        };\n        const hasCapacity = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const capacity = Math.trunc(hasCapacity ? report.meta.total.capacity.value : 0);\n        const capacityUnits = t(`units.${unitLookupKey(hasCapacity ? report.meta.total.capacity.units : '')}`);\n        datum.ranges = [\n            {\n                legend: t(`details.usage.${reportType}_capacity`, {\n                    value: capacity,\n                    units: capacityUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_capacity`, {\n                    value: capacity,\n                    units: capacityUnits,\n                }),\n                value: Math.trunc(capacity),\n            },\n        ];\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        datum.usage = [\n            {\n                legend: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                value: Math.trunc(usage),\n            },\n            {\n                legend: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                value: Math.trunc(request),\n            },\n        ];\n        return datum;\n    }\n    getFreeSpace() {\n        const { report, reportType, t } = this.props;\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasCapacity = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const capacity = Math.trunc(hasCapacity ? report.meta.total.capacity.value : 0);\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        // Show negative values https://github.com/project-koku/koku-ui/issues/1214\n        const unusedRequestCapacity = capacity - request;\n        const unusedUsageCapacity = capacity - usage;\n        let unusedRequestCapacityPercentage = request > 0 ? (request / capacity) * 100 : 0;\n        if (unusedRequestCapacityPercentage > 100) {\n            unusedRequestCapacityPercentage = 100 - unusedRequestCapacityPercentage;\n        }\n        let unusedUsageCapacityPercentage = capacity > usage ? (usage / capacity) * 100 : 0;\n        if (unusedUsageCapacityPercentage > 100) {\n            unusedUsageCapacityPercentage = 100 - unusedUsageCapacityPercentage;\n        }\n        return (React.createElement(Grid, { hasGutter: true },\n            React.createElement(GridItem, { md: 12, lg: 6 },\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_usage_unused_label`)),\n                React.createElement(\"div\", { style: styles.capacity }, formatValue(unusedUsageCapacity)),\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_usage_unused_units`, {\n                    percentage: formatValue(unusedUsageCapacityPercentage, usageUnits),\n                    units: usageUnits,\n                }))),\n            React.createElement(GridItem, { md: 12, lg: 6 },\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_requests_unused_label`)),\n                React.createElement(\"div\", { style: styles.capacity }, formatValue(unusedRequestCapacity)),\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_requests_unused_units`, {\n                    percentage: formatValue(unusedRequestCapacityPercentage, requestUnits),\n                    units: requestUnits,\n                })))));\n    }\n    render() {\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef }, this.getCpuChart()));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupBy = getGroupById(query);\n    const groupByValue = getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -1,\n            resolution: 'monthly',\n        },\n        filter_by: Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (groupBy && { [groupBy]: undefined })),\n        group_by: Object.assign({}, (groupBy && { [groupBy]: groupByValue })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        groupBy,\n        report,\n        reportFetchStatus,\n        queryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst UsageChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(UsageChartBase));\nexport { UsageChart };\n","import { Button, ButtonVariant, Card, CardBody, CardTitle, Grid, GridItem, Popover, Title, } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { orgUnitIdKey, tagPrefix } from 'api/queries/query';\nimport { Cluster } from 'pages/views/details/components/cluster/cluster';\nimport { CostChart } from 'pages/views/details/components/costChart/costChart';\nimport { SummaryCard } from 'pages/views/details/components/summary/summaryCard';\nimport { UsageChart } from 'pages/views/details/components/usageChart/usageChart';\nimport { styles } from 'pages/views/details/ocpDetails/detailsHeader.styles';\nimport React from 'react';\nconst PLACEHOLDER = 'placeholder';\nclass CostOverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Returns cluster chart\n        this.getClusterChart = (widget) => {\n            const { groupBy, report, t } = this.props;\n            let showWidget = false;\n            for (const groupById of widget.cluster.showWidgetOnGroupBy) {\n                if (groupById === groupBy || (groupById === tagPrefix && groupBy.indexOf(tagPrefix) !== -1)) {\n                    showWidget = true;\n                    break;\n                }\n            }\n            if (showWidget) {\n                return (React.createElement(Card, null,\n                    React.createElement(CardTitle, null,\n                        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('breakdown.cluster_title'))),\n                    React.createElement(CardBody, null,\n                        React.createElement(Cluster, { groupBy: widget.cluster.reportGroupBy, report: report }))));\n            }\n            return null;\n        };\n        // Returns cost breakdown chart\n        this.getCostChart = () => {\n            const { report, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" },\n                        t('breakdown.cost_breakdown_title'),\n                        React.createElement(Popover, { \"aria-label\": t('breakdown.cost_breakdown_aria_label'), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.raw_cost_title')),\n                                React.createElement(\"p\", null, t('breakdown.raw_cost_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.usage_cost_title')),\n                                React.createElement(\"p\", null, t('breakdown.usage_cost_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.markup_title')),\n                                React.createElement(\"p\", null, t('breakdown.markup_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"a\", { href: t('docs.cost_model_terminology'), rel: \"noreferrer\", target: \"_blank\" }, t('learn_more'))) },\n                            React.createElement(Button, { variant: ButtonVariant.plain },\n                                React.createElement(OutlinedQuestionCircleIcon, { style: styles.info }))))),\n                React.createElement(CardBody, null,\n                    React.createElement(CostChart, { report: report }))));\n        };\n        // Returns CPU usage chart\n        this.getCpuUsageChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.cpu_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(UsageChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns memory usage chart\n        this.getMemoryUsageChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.memory_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(UsageChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns summary card widget\n        this.getSummaryCard = (widget) => {\n            const { groupBy, query } = this.props;\n            let showWidget = false;\n            for (const groupById of widget.reportSummary.showWidgetOnGroupBy) {\n                if (groupById === groupBy ||\n                    (query && query.group_by && query.group_by[orgUnitIdKey]) ||\n                    (groupById === tagPrefix && groupBy && groupBy.indexOf(tagPrefix) !== -1)) {\n                    showWidget = true;\n                    break;\n                }\n            }\n            if (showWidget) {\n                return (React.createElement(SummaryCard, { reportGroupBy: widget.reportSummary.reportGroupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }));\n            }\n            else if (widget.reportSummary.usePlaceholder) {\n                return PLACEHOLDER;\n            }\n            return null;\n        };\n        // Helper to fill grid columns instead of rows, based on the order defined by the reducer\n        this.getWidgetsColumns = () => {\n            const { selectWidgets, widgets } = this.props;\n            const visibleWidgets = [];\n            widgets.map(widgetId => {\n                const widget = selectWidgets[widgetId];\n                const renderedWidget = this.renderWidget(widget);\n                if (renderedWidget !== null) {\n                    visibleWidgets.push(renderedWidget);\n                }\n            });\n            const rows = Math.floor(visibleWidgets.length / 2) + (visibleWidgets.length % 2);\n            const leftColumnWidgets = [];\n            const rightColumnWidgets = [];\n            for (let i = 0; i < rows; i++) {\n                if (visibleWidgets[i] !== PLACEHOLDER) {\n                    leftColumnWidgets.push(visibleWidgets[i]);\n                }\n                if (i + rows < visibleWidgets.length) {\n                    if (visibleWidgets[i + rows] !== PLACEHOLDER) {\n                        rightColumnWidgets.push(visibleWidgets[i + rows]);\n                    }\n                }\n            }\n            return { leftColumnWidgets, rightColumnWidgets };\n        };\n    }\n    // Returns rendered widget based on type\n    renderWidget(widget) {\n        switch (widget.type) {\n            case \"cluster\" /* cluster */:\n                return this.getClusterChart(widget);\n            case \"cost\" /* cost */:\n                return this.getCostChart();\n            case \"cpuUsage\" /* cpuUsage */:\n                return this.getCpuUsageChart(widget);\n            case \"memoryUsage\" /* memoryUsage */:\n                return this.getMemoryUsageChart(widget);\n            case \"summary\" /* reportSummary */:\n                return this.getSummaryCard(widget);\n            default:\n                return null;\n        }\n    }\n    render() {\n        // Sort widgets vertically\n        const { leftColumnWidgets, rightColumnWidgets } = this.getWidgetsColumns();\n        return (React.createElement(Grid, { hasGutter: true },\n            React.createElement(GridItem, { lg: 12, xl: 6 },\n                React.createElement(Grid, { hasGutter: true }, leftColumnWidgets.map((widget, index) => {\n                    return React.createElement(GridItem, { key: `widget-${index}` }, widget);\n                }))),\n            React.createElement(GridItem, { lg: 12, xl: 6 },\n                React.createElement(Grid, { hasGutter: true }, rightColumnWidgets.map((widget, index) => {\n                    return React.createElement(GridItem, { key: `widget-${index}` }, widget);\n                })))));\n    }\n}\nexport { CostOverviewBase };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    currentCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    currentCostData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    previousCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    previousCostData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString } from 'components/charts/common/chartDatumUtils';\nimport { getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalCostChart.styles';\nclass HistoricalCostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentCostData, currentInfrastructureCostData, previousCostData, previousInfrastructureCostData, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: previousInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: currentInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 120,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 700 ? chartStyles.itemsPerRow : 2;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, previousInfrastructureCostData } = this.props;\n        const currentRequestDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 || previousRequestDate > 0 ? Math.max(currentRequestDate, previousRequestDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 120,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 700\n                ? containerHeight - 25\n                : containerHeight\n            : containerHeight;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: adjustedContainerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalCostChart };\n","import global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    chartHeight: 300,\n    chartContainerHeight: 300,\n};\nexport const styles = {\n    chartContainer: {\n        marginLeft: global_spacer_lg.value,\n    },\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n    costChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    trendChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    usageChart: {\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { Skeleton } from '@patternfly/react-core';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalCostChart } from 'components/charts/historicalCostChart';\nimport { getGroupById, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataCostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, reportType, t, } = this.props;\n        // Current data\n        const currentData = transformReport(currentReport, 0 /* rolling */, 'date', 'cost');\n        const currentInfrastructureCostData = transformReport(currentReport, 0 /* rolling */, 'date', 'infrastructure');\n        // Previous data\n        const previousData = transformReport(previousReport, 0 /* rolling */, 'date', 'cost');\n        const previousInfrastructureCostData = transformReport(previousReport, 0 /* rolling */, 'date', 'infrastructure');\n        const costUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n            ? currentReport.meta.total.cost.total.units\n            : 'USD';\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.costChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalCostChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight - 25, currentCostData: currentData, currentInfrastructureCostData: currentInfrastructureCostData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousCostData: previousData, previousInfrastructureCostData: previousInfrastructureCostData, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: t(`breakdown.historical_chart.${reportType}_label`, {\n                    units: t(`units.${unitLookupKey(costUnits)}`),\n                }) })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupBy = getGroupById(query);\n    const groupByValue = getGroupByValue(query);\n    const baseQuery = {\n        filter_by: Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (groupBy && { [groupBy]: undefined })),\n        group_by: Object.assign({}, (groupBy && { [groupBy]: groupByValue })),\n    };\n    const currentQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        } });\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -2,\n        } });\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataCostChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataCostChartBase));\nexport { HistoricalDataCostChart };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalTrendChart.styles';\nclass HistoricalTrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, showUsageLegendLabel = false } = this.props;\n            const key = showUsageLegendLabel ? 'chart.usage_legend_label' : 'chart.cost_legend_label';\n            const toolTipKey = showUsageLegendLabel ? 'chart.usage_legend_tooltip' : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, toolTipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, toolTipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 120,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: legendItemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData || prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, previousDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, containerHeight = height, padding = {\n            bottom: 120,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: containerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalTrendChart };\n","import { Skeleton } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalTrendChart } from 'components/charts/historicalTrendChart';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataTrendChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, reportType, t, } = this.props;\n        const isCostChart = reportType === \"cost\" /* cost */;\n        // Current data\n        const currentData = transformReport(currentReport, isCostChart ? 0 /* rolling */ : 1 /* daily */, 'date', isCostChart ? 'cost' : 'usage');\n        const previousData = transformReport(previousReport, isCostChart ? 0 /* rolling */ : 1 /* daily */, 'date', isCostChart ? 'cost' : 'usage');\n        const costUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n            ? currentReport.meta.total.cost.total.units\n            : 'USD';\n        let usageUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.usage\n            ? currentReport.meta.total.usage.units\n            : undefined;\n        let yAxisLabel;\n        if (isCostChart) {\n            yAxisLabel = t(`breakdown.historical_chart.${reportType}_label`, {\n                units: t(`units.${unitLookupKey(costUnits)}`),\n            });\n        }\n        else if (usageUnits && Number.isNaN(Number(currentReport.meta.total.usage.units))) {\n            yAxisLabel = t(`breakdown.historical_chart.units_label`, {\n                units: t(`units.${unitLookupKey(usageUnits)}`),\n            });\n        }\n        else {\n            usageUnits = t(`breakdown.historical_chart.${reportType}_label`);\n            yAxisLabel = t(`breakdown.historical_chart.units_label`, {\n                units: t(`units.${unitLookupKey(usageUnits)}`),\n            });\n        }\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.trendChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalTrendChart, { containerHeight: chartStyles.chartContainerHeight - 50, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousData: previousData, units: isCostChart ? costUnits : usageUnits, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: yAxisLabel })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const baseQuery = {\n        filter_by: Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: undefined })),\n        group_by: Object.assign({}, (groupBy && { [groupBy]: groupByValue })),\n    };\n    const currentQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        } });\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -2,\n        } });\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataTrendChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataTrendChartBase));\nexport { HistoricalDataTrendChart };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    currentCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentLimitData: {\n        fill: 'none',\n    },\n    currentRequestData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    currentUsageData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    previousCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousLimitData: {\n        fill: 'none',\n    },\n    previousRequestData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    previousUsageData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getUsageRangeString } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalUsageChart.styles';\nclass HistoricalUsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentLimitData, currentRequestData, currentUsageData, previousLimitData, previousRequestData, previousUsageData, } = this.props;\n            const limitKey = 'chart.limit_legend_label';\n            const limitTooltipKey = 'chart.limit_legend_tooltip';\n            const requestKey = 'chart.requests_legend_label';\n            const requestTooltipKey = 'chart.requests_legend_tooltip';\n            const usageKey = 'chart.usage_legend_label';\n            const usageTooltipKey = 'chart.usage_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousUsage',\n                    data: previousUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousUsageData, usageTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousUsageData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentUsage',\n                    data: currentUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentUsageData, usageTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentUsageData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousRequest',\n                    data: previousRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(previousRequestData, requestTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousRequestData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentRequest',\n                    data: currentRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(currentRequestData, requestTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentRequestData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'previousLimit',\n                    data: previousLimitData,\n                    legendItem: {\n                        name: getUsageRangeString(previousLimitData, limitKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[2],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousLimitData, limitTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousLimitData), { stroke: chartStyles.previousColorScale[2] }),\n                    },\n                },\n                {\n                    childName: 'currentLimit',\n                    data: currentLimitData,\n                    legendItem: {\n                        name: getUsageRangeString(currentLimitData, limitKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[2],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentLimitData, limitTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentLimitData), { stroke: chartStyles.currentColorScale[2] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 130,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 900 ? chartStyles.itemsPerRow : 2;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentLimitData !== this.props.currentLimitData ||\n            prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousLimitData !== this.props.previousLimitData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 130,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 900\n                ? containerHeight - 50\n                : containerHeight\n            : containerHeight;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: adjustedContainerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalUsageChart };\n","import { Skeleton } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalUsageChart } from 'components/charts/historicalUsageChart';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataUsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, t } = this.props;\n        // Current data\n        const currentLimitData = transformReport(currentReport, 1 /* daily */, 'date', 'limit');\n        const currentRequestData = transformReport(currentReport, 1 /* daily */, 'date', 'request');\n        const currentUsageData = transformReport(currentReport, 1 /* daily */, 'date', 'usage');\n        // Previous data\n        const previousLimitData = transformReport(previousReport, 1 /* daily */, 'date', 'limit');\n        const previousRequestData = transformReport(previousReport, 1 /* daily */, 'date', 'request');\n        const previousUsageData = transformReport(previousReport, 1 /* daily */, 'date', 'usage');\n        const usageUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.usage\n            ? currentReport.meta.total.usage.units\n            : '';\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.usageChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalUsageChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight, currentLimitData: currentLimitData, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousLimitData: previousLimitData, previousRequestData: previousRequestData, previousUsageData: previousUsageData, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: t(`breakdown.historical_chart.units_label`, {\n                    units: t(`units.${unitLookupKey(usageUnits)}`),\n                }) })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = getGroupById(query);\n    const groupByValue = getGroupByValue(query);\n    // instance-types and storage APIs must filter org units\n    const useFilter = reportType === \"instance_type\" /* instanceType */ || reportType === \"storage\" /* storage */;\n    const baseQuery = {\n        filter_by: Object.assign(Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: undefined })), (groupByOrgValue && useFilter && { [orgUnitIdKey]: groupByOrgValue })),\n        group_by: Object.assign(Object.assign({}, (groupByOrgValue && !useFilter && { [orgUnitIdKey]: groupByOrgValue })), (groupBy && !groupByOrgValue && { [groupBy]: groupByValue })),\n    };\n    const currentQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        } });\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -2,\n        } });\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataUsageChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataUsageChartBase));\nexport { HistoricalDataUsageChart };\n","import { Card, CardBody, CardTitle, Grid, GridItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { HistoricalDataCostChart } from './historicalDataCostChart';\nimport { HistoricalDataTrendChart } from './historicalDataTrendChart';\nimport { HistoricalDataUsageChart } from './historicalDataUsageChart';\nclass HistoricalDataBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Returns cost chart\n        this.getCostChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataCostChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns trend chart\n        this.getTrendChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataTrendChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns usage chart\n        this.getUsageChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataUsageChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n    }\n    // Returns rendered widget based on type\n    renderWidget(widget) {\n        switch (widget.type) {\n            case \"cost\" /* cost */:\n                return this.getCostChart(widget);\n            case \"trend\" /* trend */:\n                return this.getTrendChart(widget);\n            case \"usage\" /* usage */:\n                return this.getUsageChart(widget);\n            default:\n                return null;\n        }\n    }\n    render() {\n        const { selectWidgets, widgets } = this.props;\n        return (React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n            const widget = selectWidgets[widgetId];\n            return React.createElement(GridItem, { key: `widget-${widgetId}` }, this.renderWidget(widget));\n        })));\n    }\n}\nexport { HistoricalDataBase };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    cost: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    costLabel: {},\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: global_spacer_lg.var,\n        backgroundColor: global_BackgroundColor_light_100.var,\n    },\n    info: {\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { orgUnitIdKey, tagPrefix } from 'api/queries/query';\nexport const getGroupById = (query) => {\n    const groupBys = query && query.group_by ? Object.keys(query.group_by) : [];\n    return groupBys.find(key => key !== orgUnitIdKey);\n};\nexport const getGroupByValue = (query) => {\n    const groupById = getGroupById(query);\n    return groupById ? query.group_by[groupById] : undefined;\n};\nexport const getGroupByOrgValue = (query) => {\n    let groupByOrg;\n    for (const groupBy of Object.keys(query.group_by)) {\n        if (groupBy === orgUnitIdKey) {\n            groupByOrg = query.group_by[orgUnitIdKey];\n            break;\n        }\n    }\n    return groupByOrg;\n};\nexport const getGroupByTagKey = (query) => {\n    let groupByTagKey;\n    for (const groupBy of Object.keys(query.group_by)) {\n        const tagIndex = groupBy.indexOf(tagPrefix);\n        if (tagIndex !== -1) {\n            groupByTagKey = groupBy.substring(tagIndex + tagPrefix.length);\n            break;\n        }\n    }\n    return groupByTagKey;\n};\n","import { getQueryRoute } from 'api/queries/query';\nimport { breakdownDescKey, breakdownTitleKey, orgUnitIdKey } from 'api/queries/query';\nexport const getBreakdownPath = ({ basePath, label, description, groupBy, query, }) => {\n    const newQuery = Object.assign(Object.assign(Object.assign({}, query), (description && description !== label && { [breakdownDescKey]: description })), { group_by: {\n            [groupBy]: label,\n        } });\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\nexport const getOrgBreakdownPath = ({ basePath, description, groupBy, groupByOrg, id, orgUnitId, query, title, type, }) => {\n    const newQuery = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), (description && description !== title && { [breakdownDescKey]: description })), (title && { [breakdownTitleKey]: title })), (groupByOrg && orgUnitId && { [orgUnitIdKey]: orgUnitId })), { group_by: {\n            [groupBy]: id,\n        } });\n    if (!newQuery.filter) {\n        newQuery.filter = {};\n    }\n    if (type === 'account') {\n        newQuery.filter.account = id;\n        newQuery.group_by = {\n            [orgUnitIdKey]: groupByOrg,\n        };\n    }\n    else if (type === 'organizational_unit') {\n        newQuery.group_by = {\n            [orgUnitIdKey]: id,\n        };\n    }\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\n","export const addQueryFilter = (query, filterType, filterValue) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    // Filter by * won't generate a new request if group_by * already exists\n    if (filterValue === '*' && newQuery.group_by[filterType] === '*') {\n        return;\n    }\n    if (newQuery.filter_by[filterType]) {\n        let found = false;\n        const filters = newQuery.filter_by[filterType];\n        if (!Array.isArray(filters)) {\n            found = filterValue === newQuery.filter_by[filterType];\n        }\n        else {\n            for (const filter of filters) {\n                if (filter === filterValue) {\n                    found = true;\n                    break;\n                }\n            }\n        }\n        if (!found) {\n            newQuery.filter_by[filterType] = [newQuery.filter_by[filterType], filterValue];\n        }\n    }\n    else {\n        newQuery.filter_by[filterType] = [filterValue];\n    }\n    return newQuery;\n};\nexport const removeQueryFilter = (query, filterType, filterValue) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    if (filterType === null) {\n        newQuery.filter_by = undefined; // Clear all\n    }\n    else if (filterValue === null) {\n        newQuery.filter_by[filterType] = undefined; // Clear all values\n    }\n    else if (Array.isArray(newQuery.filter_by[filterType])) {\n        const index = newQuery.filter_by[filterType].indexOf(filterValue);\n        if (index > -1) {\n            newQuery.filter_by[filterType] = [\n                ...query.filter_by[filterType].slice(0, index),\n                ...query.filter_by[filterType].slice(index + 1),\n            ];\n        }\n    }\n    else {\n        newQuery.filter_by[filterType] = undefined;\n    }\n    return newQuery;\n};\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        cluster_lnk: 'cluster-lnk',\n        historical_data_btn: 'historical-data-btn',\n        show_more_btn: 'show-more-btn',\n        tag_lnk: 'tag-lnk',\n        view_all_btn: 'view-all-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import { endOfMonth, format, getDate, getMonth, startOfMonth } from 'date-fns';\nimport i18next from 'i18next';\nexport function getNoDataForDateRangeString(key = 'no_data_for_date', offset = 1) {\n    const today = new Date();\n    today.setHours(0);\n    today.setMinutes(0);\n    today.setSeconds(0);\n    if (offset) {\n        today.setMonth(today.getMonth() - offset);\n    }\n    const month = getMonth(today);\n    const endDate = format(today, 'd');\n    const startDate = format(startOfMonth(today), 'd');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n    });\n}\nexport function getForDateRangeString(value, key = 'for_date', offset = 1) {\n    const today = new Date();\n    today.setHours(0);\n    today.setMinutes(0);\n    today.setSeconds(0);\n    if (offset) {\n        today.setMonth(today.getMonth() - offset);\n    }\n    const month = getMonth(today);\n    const endDate = format(today, 'd');\n    const startDate = format(startOfMonth(today), 'd');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n        value,\n    });\n}\nexport function getSinceDateRangeString(key = 'since_date') {\n    const today = new Date();\n    today.setHours(0);\n    today.setMinutes(0);\n    today.setSeconds(0);\n    const month = getMonth(today);\n    const endDate = format(today, 'd');\n    const startDate = format(startOfMonth(today), 'd');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n    });\n}\nexport function getMonthDate(offset) {\n    const today = new Date();\n    today.setHours(0);\n    today.setMinutes(0);\n    today.setSeconds(0);\n    if (offset) {\n        today.setDate(1); // Required to obtain correct month\n        today.setMonth(today.getMonth() - offset);\n    }\n    const start_date = format(startOfMonth(today), 'yyyy-MM-dd');\n    const end_date = format(offset ? endOfMonth(today) : today, 'yyyy-MM-dd');\n    return { start_date, end_date };\n}\nexport function getCurrentMonthDate() {\n    return getMonthDate(0);\n}\nexport function getPreviousMonthDate() {\n    return getMonthDate(1);\n}\n// Returns offset + 1 days, including today's date. See https://issues.redhat.com/browse/COST-1117\nexport function getLastDaysDate(offset) {\n    const endDate = new Date();\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - offset);\n    return {\n        end_date: format(endDate, 'yyyy-MM-dd'),\n        start_date: format(startDate, 'yyyy-MM-dd'),\n    };\n}\n// Returns 31 days, including today's date\nexport function getLast30DaysDate() {\n    return getLastDaysDate(30);\n}\n// Returns 61 days, including today's date\nexport function getLast60DaysDate() {\n    return getLastDaysDate(60);\n}\n","export function isEqual(obj1, obj2) {\n    let a = JSON.stringify(obj1);\n    let b = JSON.stringify(obj2);\n    if (!a) {\n        a = '';\n    }\n    if (!b) {\n        b = '';\n    }\n    return a.split('').sort().join('') === b.split('').sort().join('');\n}\n"],"sourceRoot":""}