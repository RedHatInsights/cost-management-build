{"version":3,"sources":["webpack://koku-ui/./src/components/icons/costIcon/Cost-icon.svg","webpack://koku-ui/./src/api/queries/providersQuery.ts","webpack://koku-ui/./src/components/charts/chartTheme/theme-koku.ts","webpack://koku-ui/./src/components/charts/chartTheme/index.ts","webpack://koku-ui/./src/components/charts/chartTheme/theme-utils.ts","webpack://koku-ui/./src/utils/computedForecast/getComputedForecastItems.ts","webpack://koku-ui/./src/components/charts/common/chartDatumUtils.ts","webpack://koku-ui/./src/components/charts/common/chartUtils.ts","webpack://koku-ui/./src/components/reports/reportSummary/reportSummary.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryAlt.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryDetails.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryItem.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryItems.tsx","webpack://koku-ui/./src/components/charts/costChart/costChart.styles.ts","webpack://koku-ui/./src/components/charts/costChart/costChart.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryCost.tsx","webpack://koku-ui/./src/components/charts/dailyCostChart/dailyCostChart.styles.ts","webpack://koku-ui/./src/components/charts/dailyCostChart/dailyCostChart.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryDailyCost.tsx","webpack://koku-ui/./src/components/charts/dailyTrendChart/dailyTrendChart.styles.ts","webpack://koku-ui/./src/components/charts/dailyTrendChart/dailyTrendChart.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryDailyTrend.tsx","webpack://koku-ui/./src/components/charts/trendChart/trendChart.styles.ts","webpack://koku-ui/./src/components/charts/trendChart/trendChart.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryTrend.tsx","webpack://koku-ui/./src/components/charts/usageChart/usageChart.styles.ts","webpack://koku-ui/./src/components/charts/usageChart/usageChart.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryUsage.tsx","webpack://koku-ui/./src/components/state/emptyValueState/emptyValueState.tsx","webpack://koku-ui/./src/pages/state/loading/loading.tsx","webpack://koku-ui/./src/pages/state/loading/index.ts","webpack://koku-ui/./src/pages/state/noData/noDataState.tsx","webpack://koku-ui/./src/pages/state/noData/noData.tsx","webpack://koku-ui/./src/components/icons/costIcon/costIcon.tsx","webpack://koku-ui/./src/components/icons/costIcon/index.ts","webpack://koku-ui/./src/pages/state/noProviders/noProvidersState.styles.ts","webpack://koku-ui/./src/pages/state/noProviders/noProvidersState.tsx","webpack://koku-ui/./src/pages/state/noProviders/index.ts","webpack://koku-ui/./src/pages/state/noProviders/noProviders.tsx","webpack://koku-ui/./src/utils/computedReport/getComputedReportItems.ts","webpack://koku-ui/./src/utils/computedReport/getItemLabel.ts","webpack://koku-ui/./src/utils/pathname.ts","webpack://koku-ui/./src/utils/sort.ts"],"names":["getProvidersQuery","query","stringify","encode","indices","LAYOUT_PROPS","padding","area","Object","assign","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","getCustomTheme","ChartThemeColor","ChartThemeVariant","getComputedForecastItems","forecast","sortDirection","sortKey","sort","itemMap","Map","visitDataPoint","dataPoint","values","forEach","val","date","item","get","set","cost","getCostData","infrastructure","supplementary","key","Array","data","from","getUnsortedComputedForecastItems","direction","confidence_max","value","units","confidence_min","pvalues","Number","rsquared","total","transformForecast","type","forecastItem","forecastItemValue","computedItems","chartDatums","map","i","createForecastDatum","reduce","acc","d","prevValue","length","y","padChartDatums","transformForecastCone","createForecastConeDatum","prevMaxValue","prevMinValue","y0","transformReport","report","idKey","reportItem","reportItemValue","items","getComputedReportItems","createReportDatum","computedItem","xVal","yVal","isFloat","parseFloat","toFixed","isInt","x","undefined","maxValue","minValue","y0Val","id","label","datums","result","firstDate","Date","lastDate","padDate","getDate","setDate","push","prevChartDatum","chartDatum","find","fillChartDatums","getDateRange","firstOfMonth","lastOfMonth","offset","start","end","today","setMonth","getMonth","firstDay","lastDay","getDatumDateRange","getMaxValue","max","datum","getMaxMinValues","min","maxY","Math","minY","getTooltipContent","formatValue","unit","options","lookup","getCostRangeString","count","endDate","month","startDate","year","getUsageRangeString","n","getChartNames","series","serie","childName","getDomain","hiddenSeries","domain","s","index","isSeriesHidden","threshold","ceil","_min","floor","getLegendData","legendItem","name","getInteractiveLegendItemStyles","has","filter","indexOf","getTooltipLabel","formatDatumValue","formatDatumOptions","formatter","dy","dy0","value0","value1","initHiddenSeries","Set","delete","add","_index","isDataAvailable","unavailable","isDataHidden","keys","next","done","dataChildName","serieChildName","ReportSummary","withTranslation","children","detailsLink","title","subTitle","status","Card","className","CardTitle","Title","headingLevel","size","Boolean","CardBody","Skeleton","CardFooter","ReportSummaryAlt","tabs","Grid","hasGutter","GridItem","xl","ReportSummaryDetails","chartType","computedReportItem","computedReportItemValue","costLabel","formatOptions","requestFormatOptions","requestLabel","reportType","showTooltip","showUnits","showUsageFirst","t","usageFormatOptions","usageLabel","supplementaryCost","infrastructureCost","request","usage","hasTotal","meta","hasCost","hasCount","hasSupplementaryCost","hasInfrastructureCost","hasRequest","hasUsage","getCostLayout","showAltHeroFont","altHeroFont","Tooltip","content","enableFlip","getRequestLayout","usageUnits","_units","unitsLabel","getUsageLayout","ReportSummaryItemBase","totalValue","percentVal","percentLabel","percent","Progress","ProgressSize","defaultProps","v","ReportSummaryItem","ReportSummaryItemsBase","nextProps","this","props","otherIndex","findIndex","toString","includes","slice","getItems","ReportSummaryItems","chartStyles","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","currentCostData","fill","currentInfrastructureColorScale","chart_color_blue_400","chart_color_blue_300","chart_color_blue_200","chart_color_blue_100","chart_color_blue_500","currentInfrastructureCostData","strokeDasharray","forecastConeData","strokeWidth","forecastConeDataColorScale","forecastData","forecastDataColorScale","forecastInfrastructureConeData","forecastInfrastructureConeDataColorScale","forecastInfrastructureData","forecastInfrastructureDataColorScale","previousCostData","previousInfrastructureCostData","previousColorScale","chart_color_black_200","yAxis","axisLabel","grid","stroke","ticks","tickLabels","fontSize","xAxis","CostChart","super","arguments","containerRef","state","width","initDatum","showForecast","costKey","costInfrastructureKey","costInfrastructureTooltipKey","costTooltipKey","symbol","style","cursorVoronoiContainer","getCursorVoronoiContainer","setState","handleNavToggle","setTimeout","handleResize","current","clientWidth","getChart","ChartArea","interpolation","CursorVoronoiContainer","createContainer","cursorDimension","labels","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getLegend","ChartLegend","height","gutter","responsive","handleLegendClick","getAdjustedContainerHeight","adjustContainerHeight","containerHeight","adjustedContainerHeight","window","addEventListener","navToggle","insights","chrome","on","prevProps","removeEventListener","getInteractiveLegendEvents","chartNames","isHidden","legendName","onLegendClick","currentInfrastructureDate","currentCostDate","forecastCostDate","previousInfrastructureDate","previousUsageDate","ge","getEndDate","half","_2ndDay","_3rdDay","_4thDay","container","disable","labelComponent","ChartLegendTooltip","legendData","day","ref","Chart","containerComponent","events","getEvents","legendAllowWrap","legendComponent","legendPosition","theme","ChartAxis","tickValues","dependentAxis","ReportSummaryCost","chart_color_orange_300","DailyCostChart","initDatumChildName","isLine","isBar","isForecast","ChartBar","alignment","ChartLine","getForecastBarChart","getForecastLineChart","barWidth","ChartGroup","ReportSummaryDailyCost","itemsPerRow","DailyTrendChart","currentData","previousData","showSupplementaryLabel","showUsageLegendLabel","tooltipKey","legendItemsPerRow","orientation","previousDate","currentDate","forecastDate","ReportSummaryDailyTrend","currentMonthData","previousMonthData","TrendChart","midDate","ReportSummaryTrend","chartContainer","marginTop","currentRequestData","currentUsageData","legendColorScale","previousRequestData","previousUsageData","UsageChart","usageKey","usageTooltipKey","requestKey","requestTooltipKey","currentRequestDate","currentUsageDate","previousRequestDate","ReportSummaryUsage","EmptyValueState","PageHeader","PageHeaderTitle","Main","NoDataStateBase","showReload","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","icon","EmptyStateBody","Button","onClick","location","reload","NoDataState","src","alt","styles","iconSpacer","marginLeft","viewSources","global_spacer_lg","NoProvidersStateBase","getDocLink","textKey","urlKey","href","rel","target","getRouteToSources","providerType","docUrlKey","descKey","titleKey","component","NoProvidersState","daily","getUnsortedComputedReportItems","markup","raw","getUsageData","capacity","limit","idSuffix","cluster","org_unit_id","mapId","cluster_alias","clusters","delta_percent","delta_value","source_uuid","itemLabelKey","String","group_by","tagPrefixKey","hasOwnProperty","getItemLabel","alias","account_alias","dateMap","getReleasePath","pathName","pathname","split","shift","release","getValueForItem","array","a","b","aVal","bVal"],"mappings":"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","file":"69605c03c83c478376cc.bundle.js","sourcesContent":["export default __webpack_public_path__ + \"6c64594e3aaa32a18532d72ff14cc82e.svg\";","import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, ChartThemeVariant, getCustomTheme } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, ChartThemeVariant.default, ChartTheme);\nexport default getTheme;\n","import { sort } from 'utils/sort';\nexport function getComputedForecastItems({ forecast, sortDirection = 0 /* asc */, sortKey = 'date', }) {\n    return sort(getUnsortedComputedForecastItems({\n        forecast,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nfunction getCostData(val, key, item) {\n    return {\n        confidence_max: {\n            value: item\n                ? item[key].confidence_max.value\n                : 0 + val[key] && val[key].confidence_max\n                    ? val[key].confidence_max.value\n                    : 0,\n            units: val[key] && val[key].confidence_max ? val[key].confidence_max.units : 'USD',\n        },\n        confidence_min: {\n            value: item\n                ? item[key].confidence_min.value\n                : 0 + val[key] && val[key].confidence_min\n                    ? val[key].confidence_min.value\n                    : 0,\n            units: val[key] && val[key].confidence_min ? val[key].confidence_min.units : 'USD',\n        },\n        pvalues: {\n            value: val[key] && val[key].pvalues ? Number(val[key].pvalues.value) : 0,\n            units: val[key] && val[key].pvalues ? val[key].pvalues.units : null,\n        },\n        rsquared: {\n            value: val[key] && val[key].rsquared ? Number(val[key].rsquared.value) : 0,\n            units: val[key] && val[key].rsquared ? val[key].rsquared.units : null,\n        },\n        total: {\n            value: item ? item[key].total.value : 0 + val[key] && val[key].total ? val[key].total.value : 0,\n            units: val[key] && val[key].total ? val[key].total.units : 'USD',\n        },\n    };\n}\nexport function getUnsortedComputedForecastItems({ forecast, }) {\n    if (!forecast) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            dataPoint.values.forEach((val) => {\n                const date = val.date;\n                const item = itemMap.get(date);\n                if (item) {\n                    // This code block is typically entered with filter[resolution]=monthly\n                    itemMap.set(date, Object.assign(Object.assign({}, item), { date, cost: getCostData(val, 'cost', item), infrastructure: getCostData(val, 'infrastructure', item), supplementary: getCostData(val, 'supplementary', item) }));\n                }\n                else {\n                    // This code block is typically entered with filter[resolution]=daily\n                    itemMap.set(date, {\n                        date,\n                        cost: getCostData(val, 'cost'),\n                        infrastructure: getCostData(val, 'infrastructure'),\n                        supplementary: getCostData(val, 'supplementary'),\n                    });\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (forecast && forecast.data) {\n        forecast.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getYear from 'date-fns/get_year';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { getComputedForecastItems } from 'utils/computedForecast/getComputedForecastItems';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { unitLookupKey } from 'utils/formatValue';\nexport function transformForecast(forecast, type = 1 /* daily */, forecastItem = 'cost', forecastItemValue = 'total') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => createForecastDatum(i[forecastItem][forecastItemValue].value, i));\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            return [...acc, createForecastDatum(prevValue + d[forecastItem][forecastItemValue].value, d)];\n        }, []);\n    }\n    return padChartDatums(chartDatums, type);\n}\nexport function transformForecastCone(forecast, type = 1 /* daily */, forecastItem = 'cost', forecastItemValue = 'total') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => createForecastConeDatum(i[forecastItem].confidence_max.value, i[forecastItem].confidence_min.value, i));\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevMaxValue = acc.length ? acc[acc.length - 1].y : d[forecastItem][forecastItemValue].value;\n            const prevMinValue = acc.length ? acc[acc.length - 1].y0 : d[forecastItem][forecastItemValue].value;\n            return [\n                ...acc,\n                createForecastConeDatum(prevMaxValue + d[forecastItem].confidence_max.value, prevMinValue + d[forecastItem].confidence_min.value, d),\n            ];\n        }, []);\n    }\n    return padChartDatums(chartDatums, type);\n}\nexport function transformReport(report, type = 1 /* daily */, idKey = 'date', reportItem = 'cost', reportItemValue = 'total' // useful for infrastructure.usage values\n) {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        idKey,\n        report,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedReportItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => {\n            const val = i[reportItem][reportItemValue] ? i[reportItem][reportItemValue].value : i[reportItem].value;\n            return createReportDatum(val, i, idKey, reportItem, reportItemValue);\n        });\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            const val = d[reportItem][reportItemValue] ? d[reportItem][reportItemValue].value : d[reportItem].value;\n            return [...acc, createReportDatum(prevValue + val, d, idKey, reportItem, reportItemValue)];\n        }, []);\n    }\n    return idKey === 'date' ? padChartDatums(chartDatums, type) : chartDatums;\n}\nexport function createForecastDatum(value, computedItem, forecastItem = 'cost', forecastItemValue = 'total') {\n    const xVal = getDate(computedItem.date);\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.date,\n        units: computedItem[forecastItem] && computedItem[forecastItem][forecastItemValue]\n            ? computedItem[forecastItem][forecastItemValue].units\n            : undefined,\n    };\n}\nexport function createForecastConeDatum(maxValue, minValue, computedItem, forecastItem = 'cost', forecastItemValue = 'total') {\n    const xVal = getDate(computedItem.date);\n    const yVal = isFloat(maxValue) ? parseFloat(maxValue.toFixed(2)) : isInt(maxValue) ? maxValue : 0;\n    const y0Val = isFloat(minValue) ? parseFloat(minValue.toFixed(2)) : isInt(minValue) ? minValue : 0;\n    return {\n        x: xVal,\n        y: maxValue === null ? null : yVal,\n        y0: minValue === null ? null : y0Val,\n        key: computedItem.date,\n        units: computedItem[forecastItem] && computedItem[forecastItem][forecastItemValue]\n            ? computedItem[forecastItem][forecastItemValue].units\n            : undefined,\n    };\n}\nexport function createReportDatum(value, computedItem, idKey = 'date', reportItem = 'cost', reportItemValue = 'total' // useful for infrastructure.usage values\n) {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.id,\n        units: computedItem[reportItem]\n            ? computedItem[reportItem][reportItemValue]\n                ? computedItem[reportItem][reportItemValue].units // cost, infrastructure, supplementary\n                : computedItem[reportItem].units // capacity, limit, request, usage\n            : undefined,\n    };\n}\n// Fill in missing data with previous value to represent cumulative daily cost\nexport function fillChartDatums(datums, type = 1 /* daily */) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    const padDate = startOfMonth(firstDate);\n    let prevChartDatum;\n    for (let i = padDate.getDate(); i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        const chartDatum = datums.find(val => val.key === id);\n        if (chartDatum) {\n            result.push(chartDatum);\n        }\n        else if (prevChartDatum) {\n            result.push(Object.assign(Object.assign({}, prevChartDatum), { key: id, x: getDate(id) }));\n        }\n        if (chartDatum) {\n            // Note: We want to identify missing data, but charts won't extrapolate (connect data points) if we return null here\n            // for missing daily values. For example, if there is only data for the first and last day of the month, charts would\n            // typically draw a line between two points by default. However, showing \"no data\" is more obvious there was a problem.\n            if (type === 1 /* daily */) {\n                prevChartDatum = {\n                    key: id,\n                    x: getDate(id),\n                    y: null,\n                };\n            }\n            else {\n                prevChartDatum = chartDatum;\n            }\n        }\n    }\n    return result;\n}\n// This pads chart datums with null datum objects, representing missing data at the beginning and end of the\n// data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n// message in the tooltip, which helps distinguish between zero values and when there is no data available.\nexport function padChartDatums(datums, type = 1 /* daily */) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    // Pad start for missing data\n    let padDate = startOfMonth(firstDate);\n    for (let i = padDate.getDate(); i < firstDate.getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    // Fill middle with existing data\n    result.push(...datums);\n    // Pad end for missing data\n    padDate = new Date(lastDate);\n    for (let i = padDate.getDate() + 1; i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    return fillChartDatums(result, type);\n}\nexport function getDatumDateRange(datums, offset = 0) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        // If datums is empty, obtain the month based on offset (e.g., to show previous month in chart legends)\n        if (offset) {\n            today.setMonth(today.getMonth() - offset);\n        }\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    // Find the first populated (non-null) day\n    let firstDay = 0;\n    for (let i = firstDay; i < datums.length; i++) {\n        if (datums[i].y && datums[i].y !== null) {\n            firstDay = i;\n            break;\n        }\n    }\n    // Find the last populated (non-null) day\n    let lastDay = datums.length - 1;\n    for (let i = lastDay; i >= 0; i--) {\n        if (datums[i].y && datums[i].y !== null) {\n            lastDay = i;\n            break;\n        }\n    }\n    const start = new Date(datums[firstDay].key + 'T00:00:00');\n    const end = new Date(datums[lastDay].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDatumDateRange(datums, offset);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(`chart.date_range`, {\n        count: getDate(end),\n        endDate: formatDate(end, 'DD'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'DD'),\n        year: getYear(end),\n    });\n}\nexport function getMonthRangeString(datums, key = 'chart.month_legend_label', offset = 0) {\n    const [start, end] = getDateRange(datums, true, false, offset);\n    return [\n        i18next.t(key, {\n            month: Number(formatDate(start, 'M')) - 1,\n        }),\n        i18next.t(key, {\n            month: Number(formatDate(end, 'M')) - 1,\n        }),\n    ];\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getMaxMinValues(datums) {\n    let max = -1;\n    let min = -1;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            const maxY = datum.y0 !== undefined ? Math.max(datum.y, datum.y0) : datum.y;\n            const minY = datum.y0 !== undefined ? Math.min(datum.y, datum.y0) : datum.y;\n            if (maxY > max) {\n                max = maxY;\n            }\n            if ((min === -1 || minY < min) && minY !== null) {\n                min = minY;\n            }\n        });\n    }\n    return { max, min };\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'core-hours':\n            case 'hrs':\n            case 'gb':\n            case 'gb-hours':\n            case 'gb-mo':\n            case 'vm-hours':\n                return i18next.t(`unit_tooltips.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date', units) {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'DD MMM YYYY');\n        return `${date} ${formatValue(datum.y, units ? units : datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nexport function getCostRangeString(datums, key = 'chart.cost_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    if (!(datums && datums.length)) {\n        return i18next.t(`${key}_no_data`);\n    }\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(key, {\n        count: getDate(end),\n        endDate: formatDate(end, 'D'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'D'),\n        year: getYear(end),\n    });\n}\nexport function getUsageRangeString(datums, key = 'chart.usage_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    return getCostRangeString(datums, key, firstOfMonth, lastOfMonth, offset);\n}\nexport function isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nexport function isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\n","import { getInteractiveLegendItemStyles } from '@patternfly/react-charts';\nimport i18next from 'i18next';\nimport { getMaxMinValues, getTooltipContent } from './chartDatumUtils';\n// Returns groups of chart names associated with each data series\nexport const getChartNames = (series) => {\n    const result = [];\n    if (series) {\n        series.map(serie => {\n            // Each group of chart names are hidden / shown together\n            result.push(serie.childName);\n        });\n    }\n    return result;\n};\nexport const getDomain = (series, hiddenSeries) => {\n    const domain = { x: [1, 31] };\n    let maxValue = -1;\n    let minValue = -1;\n    if (series) {\n        series.forEach((s, index) => {\n            if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                const { max, min } = getMaxMinValues(s.data);\n                maxValue = Math.max(maxValue, max);\n                if (minValue === -1) {\n                    minValue = min;\n                }\n                else {\n                    minValue = Math.min(minValue, min);\n                }\n            }\n        });\n    }\n    const threshold = maxValue * 0.1;\n    const max = maxValue > 0 ? Math.ceil(maxValue + threshold) : 0;\n    const _min = minValue > 0 ? Math.max(0, Math.floor(minValue - threshold)) : 0;\n    const min = _min > 0 ? _min : 0;\n    if (max > 0) {\n        domain.y = [min, max];\n    }\n    return domain;\n};\n// Returns legend data styled per hiddenSeries\nexport const getLegendData = (series, hiddenSeries, tooltip = false) => {\n    if (!series) {\n        return undefined;\n    }\n    const result = series.map((s, index) => {\n        const data = Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n        return data;\n    });\n    return tooltip ? result : result.filter(d => d.childName.indexOf('Cone') === -1);\n};\n// Note: Forecast is expected to use both datum.y and datum.y0\nexport const getTooltipLabel = (datum, formatDatumValue, formatDatumOptions) => {\n    const formatter = getTooltipContent(formatDatumValue);\n    const dy = datum.y !== undefined && datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : undefined;\n    const dy0 = datum.y0 !== undefined && datum.y0 !== null ? formatter(datum.y0, datum.units, formatDatumOptions) : undefined;\n    if (dy !== undefined && dy0 !== undefined) {\n        return i18next.t('chart.cost_forecast_cone_tooltip', { value0: dy0, value1: dy });\n    }\n    return dy !== undefined ? dy : i18next.t('chart.no_data');\n};\nexport const initHiddenSeries = (series, hiddenSeries, index) => {\n    const result = new Set(hiddenSeries);\n    if (!result.delete(index)) {\n        result.add(index);\n    }\n    // Toggle forecast confidence\n    const childName = series[index].childName;\n    if (childName.indexOf('forecast') !== -1) {\n        let _index;\n        for (let i = 0; i < series.length; i++) {\n            if (series[i].childName === `${childName}Cone`) {\n                _index = i;\n                break;\n            }\n        }\n        if (index !== undefined && !result.delete(_index)) {\n            result.add(_index);\n        }\n    }\n    return result;\n};\n// Returns true if at least one data series is available\nexport const isDataAvailable = (series, hiddenSeries) => {\n    const unavailable = []; // API data may not be available (e.g., on 1st of month)\n    if (series) {\n        series.forEach((s, index) => {\n            if (isSeriesHidden(hiddenSeries, index) || (s.data && s.data.length === 0)) {\n                unavailable.push(index);\n            }\n        });\n    }\n    return unavailable.length !== (series ? series.length : 0);\n};\n// Returns true if data series is hidden\nexport const isDataHidden = (series, hiddenSeries, data) => {\n    if (data && data.length) {\n        for (let keys = hiddenSeries.keys(), key; !(key = keys.next()).done;) {\n            let dataChildName;\n            let serieChildName;\n            for (const item of data) {\n                if (item.childName) {\n                    dataChildName = item.childName;\n                    break;\n                }\n            }\n            for (const item of series[key.value].data) {\n                if (item.childName) {\n                    serieChildName = item.childName;\n                    break;\n                }\n            }\n            if (serieChildName && dataChildName && serieChildName === dataChildName) {\n                return true;\n            }\n        }\n    }\n    return false;\n};\n// Returns true if data series is hidden\nexport const isSeriesHidden = (hiddenSeries, index) => {\n    return hiddenSeries.has(index);\n};\n","import './reportSummary.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Title } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst ReportSummaryBase = ({ children, detailsLink, title, subTitle, status }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(CardTitle, null,\n        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: \"xs\" }),\n        React.createElement(Skeleton, { className: \"chartSkeleton\", size: \"md\" }),\n        React.createElement(Skeleton, { size: \"sm\" }),\n        React.createElement(Skeleton, { className: \"legendSkeleton\", size: \"xs\" }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst ReportSummary = withTranslation()(ReportSummaryBase);\nexport { ReportSummary };\n","import './reportSummaryAlt.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Grid, GridItem, Title } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst OcpCloudReportSummaryAltBase = ({ children, detailsLink, status, subTitle, tabs, title, }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(Grid, { hasGutter: true },\n        React.createElement(GridItem, { xl: 8 },\n            React.createElement(\"div\", { className: \"cost\" },\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n                    Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: \"xs\" }),\n                    React.createElement(Skeleton, { className: \"chartSkeleton\", size: \"md\" }),\n                    React.createElement(Skeleton, { size: \"sm\" }),\n                    React.createElement(Skeleton, { className: \"legendSkeleton\", size: \"xs\" }))) : (children)))),\n        React.createElement(GridItem, { xl: 4 },\n            React.createElement(\"div\", { className: \"tops\" }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink))))))));\nconst ReportSummaryAlt = withTranslation()(OcpCloudReportSummaryAltBase);\nexport { ReportSummaryAlt };\n","import './reportSummaryDetails.scss';\nimport { Tooltip } from '@patternfly/react-core';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nconst ReportSummaryDetailsBase = ({ chartType, computedReportItem = 'cost', computedReportItemValue = 'total', costLabel, formatValue, formatOptions, report, requestFormatOptions, requestLabel, reportType, showTooltip = false, showUnits = false, showUsageFirst = false, t, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let supplementaryCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const hasTotal = report && report.meta && report.meta.total;\n    const hasCost = hasTotal && report.meta.total.cost && report.meta.total.cost.total;\n    const hasCount = hasTotal && report.meta.total.count;\n    const hasSupplementaryCost = hasTotal &&\n        report.meta.total.supplementary &&\n        report.meta.total.supplementary.total &&\n        report.meta.total.supplementary.total.value;\n    const hasInfrastructureCost = hasTotal &&\n        report.meta.total.infrastructure &&\n        report.meta.total.infrastructure[computedReportItemValue] &&\n        report.meta.total.infrastructure[computedReportItemValue].value;\n    const hasRequest = hasTotal && report.meta.total.request;\n    const hasUsage = hasTotal && report.meta.total.usage;\n    if (hasTotal) {\n        cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD', formatOptions);\n        supplementaryCost = formatValue(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD', formatOptions);\n        infrastructureCost = formatValue(hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].value : 0, hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].units : 'USD', formatOptions);\n        request = formatValue(hasRequest ? report.meta.total.request.value : 0, hasRequest ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        if (hasUsage && report.meta.total.usage.value >= 0) {\n            usage = formatValue(hasUsage ? report.meta.total.usage.value : 0, hasUsage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            // Workaround for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatValue(hasUsage ? report.meta.total.usage : 0, hasCount ? report.meta.total.count.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = (showAltHeroFont = false) => {\n        let value = cost;\n        if (computedReportItem === \"infrastructure\" /* infrastructure */) {\n            value = infrastructureCost;\n        }\n        else if (computedReportItem === \"supplementary\" /* supplementary */) {\n            value = supplementaryCost;\n        }\n        const altHeroFont = showAltHeroFont ? 'Alt' : '';\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            showTooltip ? (React.createElement(Tooltip, { content: t('dashboard.total_cost_tooltip', {\n                    infrastructureCost,\n                    supplementaryCost,\n                }), enableFlip: true },\n                React.createElement(\"div\", { className: `value${altHeroFont}` }, value))) : (React.createElement(\"div\", { className: `value${altHeroFont}` }, value)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, costLabel))));\n    };\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasRequest ? report.meta.total.request.units : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, request),\n            Boolean(showUnits && (units || (hasRequest && report.meta.total.request.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasUsage ? report.meta.total.usage.units : '';\n        // added as a work-around for azure #1079\n        const _units = unitLookupKey(units ? units : usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, usage),\n            Boolean(showUnits && (units || (hasUsage && report.meta.total.usage.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (chartType === \"dailyCost\" /* dailyCost */ ||\n        chartType === \"dailyTrend\" /* dailyTrend */ ||\n        chartType === \"cost\" /* cost */) {\n        return React.createElement(React.Fragment, null, getCostLayout(reportType === \"cost\" /* cost */));\n    }\n    else if (chartType === \"trend\" /* trend */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout(reportType === \"cost\" /* cost */)));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(reportType === \"cost\" /* cost */),\n            getUsageLayout()));\n    }\n    else if (chartType === \"usage\" /* usage */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n    else {\n        return null;\n    }\n};\nconst ReportSummaryDetails = withTranslation()(ReportSummaryDetailsBase);\nexport { ReportSummaryDetails };\n","import './reportSummaryItem.scss';\nimport { Progress, ProgressSize } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nconst ReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: \"reportSummaryItem\" },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst ReportSummaryItem = withTranslation()(ReportSummaryItemBase);\nexport { ReportSummaryItem };\n","import './reportSummaryItems.scss';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nclass ReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { idKey, report } = this.props;\n        const computedItems = getComputedReportItems({\n            report,\n            idKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [...computedItems.slice(0, otherIndex), ...computedItems.slice(otherIndex + 1), computedItems[otherIndex]];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: \"md\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst ReportSummaryItems = withTranslation()(ReportSummaryItemsBase);\nexport { ReportSummaryItems };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentCostData: {\n        fill: 'none',\n    },\n    currentInfrastructureColorScale: [\n        chart_color_blue_400.value,\n        chart_color_blue_300.value,\n        chart_color_blue_200.value,\n        chart_color_blue_100.value,\n        chart_color_blue_500.value,\n    ],\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    forecastConeDataColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastDataColorScale: [chart_color_green_200.value],\n    forecastInfrastructureConeData: {\n        fill: chart_color_blue_100.value,\n        strokeWidth: 0,\n    },\n    forecastInfrastructureConeDataColorScale: [chart_color_blue_100.value],\n    forecastInfrastructureData: {\n        fill: 'none',\n    },\n    forecastInfrastructureDataColorScale: [chart_color_blue_200.value],\n    previousCostData: {\n        fill: 'none',\n    },\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './costChart.styles';\nclass CostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, forecastConeData, forecastData, forecastInfrastructureConeData, forecastInfrastructureData, previousInfrastructureCostData, previousCostData, showForecast, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: previousInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: currentInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentInfrastructureColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentInfrastructureColorScale[1] }),\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastInfrastructure',\n                    data: forecastInfrastructureData,\n                    legendItem: {\n                        name: getCostRangeString(forecastInfrastructureData, 'chart.cost_infrastructure_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastInfrastructureDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastInfrastructureData, 'chart.cost_infrastructure_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastInfrastructureData), { stroke: chartStyles.forecastInfrastructureDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastInfrastructureCone',\n                    data: forecastInfrastructureConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastInfrastructureConeData, 'chart.cost_infrastructure_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastInfrastructureConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastInfrastructureConeData, 'chart.cost_infrastructure_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastInfrastructureConeData), { stroke: chartStyles.forecastInfrastructureConeDataColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: \"legend\", responsive: false }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width > 675 && width < 1175) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width > 450 && width < 675) {\n                        adjustedContainerHeight += 50;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 75;\n                    }\n                }\n                else {\n                    if (width > 450 && width < 725) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 50;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastInfrastructureConeData !== this.props.forecastInfrastructureConeData ||\n            prevProps.forecastInfrastructureData !== this.props.forecastInfrastructureData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, forecastData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentInfrastructureDate > 0 ||\n            currentCostDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentCostDate, forecastCostDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { CostChart };\n","import './reportSummaryCost.scss';\nimport { CostChart } from 'components/charts/costChart';\nimport React from 'react';\nconst ReportSummaryCost = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(CostChart, Object.assign({}, props))));\nexport { ReportSummaryCost };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentInfrastructureColorScale: [\n        chart_color_blue_400.value,\n        chart_color_blue_300.value,\n        chart_color_blue_200.value,\n        chart_color_blue_100.value,\n        chart_color_blue_500.value,\n    ],\n    currentInfrastructureCostData: {\n        strokeDasharray: '3,3',\n    },\n    forecastConeDataColorScale: [chart_color_orange_300.value],\n    forecastDataColorScale: [chart_color_green_200.value],\n    forecastInfrastructureConeDataColorScale: [chart_color_orange_300.value],\n    forecastInfrastructureDataColorScale: [chart_color_blue_200.value],\n    previousInfrastructureCostData: {\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartAxis, ChartBar, ChartGroup, ChartLegend, ChartLegendTooltip, ChartLine, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './dailyCostChart.styles';\nclass DailyCostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, forecastConeData, forecastData, forecastInfrastructureConeData, forecastInfrastructureData, previousInfrastructureCostData, previousCostData, showForecast, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: this.initDatumChildName(previousCostData, 'previousCost'),\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    isLine: true,\n                    style: {\n                        data: {\n                            stroke: chartStyles.previousColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: this.initDatumChildName(currentCostData, 'currentCost'),\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: this.initDatumChildName(previousInfrastructureCostData, 'previousInfrastructureCost'),\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    isLine: true,\n                    style: {\n                        data: {\n                            stroke: chartStyles.previousColorScale[1],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: this.initDatumChildName(currentInfrastructureCostData, 'currentInfrastructureCost'),\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentInfrastructureColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentInfrastructureColorScale[1],\n                        },\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: this.initDatumChildName(forecastData, 'forecast'),\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastInfrastructure',\n                    data: this.initDatumChildName(forecastInfrastructureData, 'forecastInfrastructure'),\n                    legendItem: {\n                        name: getCostRangeString(forecastInfrastructureData, 'chart.cost_infrastructure_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastInfrastructureDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastInfrastructureData, 'chart.cost_infrastructure_forecast_legend_tooltip', false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastInfrastructureDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: this.initDatumChildName(forecastConeData, 'forecastCone'),\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastInfrastructureCone',\n                    data: this.initDatumChildName(forecastInfrastructureConeData, 'forecastInfrastructureCone'),\n                    legendItem: {\n                        name: getCostRangeString(forecastInfrastructureConeData, 'chart.cost_infrastructure_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastInfrastructureConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastInfrastructureConeData, 'chart.cost_infrastructure_forecast_cone_legend_tooltip', false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastInfrastructureConeDataColorScale[0],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!hiddenSeries.has(index) && !series.isForecast) {\n                if (series.isBar) {\n                    return (React.createElement(ChartBar, { alignment: \"middle\", data: series.data, key: series.childName, name: series.childName, style: series.style }));\n                }\n                else if (series.isLine) {\n                    return React.createElement(ChartLine, { data: series.data, key: series.childName, name: series.childName, style: series.style });\n                }\n            }\n            return null;\n        };\n        this.getForecastBarChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!hiddenSeries.has(index) && series.isForecast && series.isBar) {\n                return (React.createElement(ChartBar, { alignment: \"middle\", data: series.data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        this.getForecastLineChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!hiddenSeries.has(index) && series.isForecast && series.isLine) {\n                return (React.createElement(ChartBar, { alignment: \"middle\", barWidth: 1, data: series.data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: \"legend\", responsive: false }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width > 675 && width < 1175) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width > 450 && width < 675) {\n                        adjustedContainerHeight += 50;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 75;\n                    }\n                }\n                else {\n                    if (width > 450 && width < 725) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 50;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastInfrastructureConeData !== this.props.forecastInfrastructureConeData ||\n            prevProps.forecastInfrastructureData !== this.props.forecastInfrastructureData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, forecastData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentInfrastructureDate > 0 ||\n            currentCostDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentCostDate, forecastCostDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getForecastBarChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getForecastLineChart(s, index)))),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { DailyCostChart };\n","import './reportSummaryDailyCost.scss';\nimport { DailyCostChart } from 'components/charts/dailyCostChart';\nimport React from 'react';\nconst ReportSummaryDailyCost = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(DailyCostChart, Object.assign({}, props))));\nexport { ReportSummaryDailyCost };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    forecastConeDataColorScale: [chart_color_orange_300.value],\n    forecastDataColorScale: [chart_color_green_200.value],\n    itemsPerRow: 4,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartAxis, ChartBar, ChartGroup, ChartLegend, ChartLegendTooltip, ChartLine, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './dailyTrendChart.styles';\nclass DailyTrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showForecast, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_label'\n                    : 'chart.cost_legend_label';\n            const tooltipKey = showUsageLegendLabel\n                ? 'chart.usage_legend_tooltip'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_tooltip'\n                    : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: this.initDatumChildName(previousData, 'previousCost'),\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, tooltipKey, false, false, 1),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.previousColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: this.initDatumChildName(currentData, 'currentCost'),\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, tooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentColorScale[0],\n                        },\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: this.initDatumChildName(forecastData, 'forecast'),\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: this.initDatumChildName(forecastConeData, 'forecastCone'),\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!series.isForecast) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                if (series.isBar) {\n                    return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n                }\n                else if (series.isLine) {\n                    return React.createElement(ChartLine, { data: data, key: series.childName, name: series.childName, style: series.style });\n                }\n            }\n            return null;\n        };\n        this.getForecastBarChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isBar) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        this.getForecastLineChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isLine) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", barWidth: 1, data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), gutter: 20, height: 25, itemsPerRow: legendItemsPerRow, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width < 700) {\n                        adjustedContainerHeight += 25;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getEndDate() {\n        const { currentData, forecastData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, forecastDate, previousDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 }, series.map((s, index) => this.getChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 },\n                            React.createElement(ChartBar, { data: [{ y: null }], name: \"forcast_spacer\" }),\n                            series.map((s, index) => this.getForecastBarChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 },\n                            React.createElement(ChartBar, { data: [{ y: null }], name: \"forcast_cone_spacer\" }),\n                            series.map((s, index) => this.getForecastLineChart(s, index)))),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { DailyTrendChart };\n","import './reportSummaryDailyTrend.scss';\nimport { DailyTrendChart } from 'components/charts/dailyTrendChart';\nimport React from 'react';\nconst ReportSummaryDailyTrend = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(DailyTrendChart, Object.assign({}, props))));\nexport { ReportSummaryDailyTrend };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    forecastConeDataColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastDataColorScale: [chart_color_green_200.value],\n    itemsPerRow: 4,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showForecast, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_label'\n                    : 'chart.cost_legend_label';\n            const tooltipKey = showUsageLegendLabel\n                ? 'chart.usage_legend_tooltip'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_tooltip'\n                    : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, tooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, tooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeDataColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), gutter: 20, height: 25, itemsPerRow: legendItemsPerRow, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width < 700) {\n                        adjustedContainerHeight += 25;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getEndDate() {\n        const { currentData, forecastData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, forecastDate, previousDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { TrendChart };\n","import './reportSummaryTrend.scss';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nconst ReportSummaryTrend = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { ReportSummaryTrend };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const chartStyles = {\n    chartContainer: {\n        marginTop: global_spacer_lg.value,\n    },\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_300.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_400.value,\n        },\n    },\n    itemsPerRow: 2,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        chart_color_black_200.value,\n        chart_color_green_400.value,\n        chart_color_black_200.value,\n        chart_color_green_300.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange, getUsageRangeString } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n            const usageKey = 'chart.usage_legend_label';\n            const usageTooltipKey = 'chart.usage_legend_tooltip';\n            const requestKey = 'chart.requests_legend_label';\n            const requestTooltipKey = 'chart.requests_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousUsage',\n                    data: previousUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousUsageData, usageTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousUsageData,\n                },\n                {\n                    childName: 'currentUsage',\n                    data: currentUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[1],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentUsageData, usageTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentUsageData,\n                },\n                {\n                    childName: 'previousRequest',\n                    data: previousRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[2],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(previousRequestData, requestTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousRequestData,\n                },\n                {\n                    childName: 'currentRequest',\n                    data: currentRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[3],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(currentRequestData, requestTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentRequestData,\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 300 ? chartStyles.itemsPerRow : 1;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (width < 480) {\n                    adjustedContainerHeight += 20;\n                }\n            }\n            return adjustedContainerHeight;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { UsageChart };\n","import './reportSummaryUsage.scss';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nconst ReportSummaryUsage = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { ReportSummaryUsage };\n","import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/js/icons/minus-icon';\nimport React from 'react';\nexport const EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nconst Loading = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(LoadingState, null))));\n};\nexport default withRouter(Loading);\n","import Loading from './loading';\nexport default Loading;\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { FileInvoiceDollarIcon } from '@patternfly/react-icons/dist/js/icons/file-invoice-dollar-icon';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { withRouter } from 'react-router';\nclass NoDataStateBase extends React.Component {\n    render() {\n        const { showReload = true, t } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: FileInvoiceDollarIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, t('no_data_state.title')),\n            React.createElement(EmptyStateBody, null, t('no_data_state.desc')),\n            showReload && (React.createElement(Button, { variant: \"primary\", onClick: () => window.location.reload() }, t('no_data_state.refresh')))));\n    }\n}\nconst NoDataState = withRouter(withTranslation()(NoDataStateBase));\nexport { NoDataState };\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { NoDataState } from './noDataState';\nconst NoData = ({ showReload, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(NoDataState, { showReload: showReload }))));\n};\nexport default withRouter(NoData);\n","import './costIcon.scss';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst icon = require('./Cost-icon.svg');\nconst CostIcon = ({ className, t }) => {\n    return React.createElement(\"img\", { className: `cost-icon ${className}`, src: icon, alt: t('cost_management'), \"aria-hidden\": \"true\" });\n};\nexport default withTranslation()(CostIcon);\n","import CostIcon from './costIcon';\nexport default CostIcon;\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    iconSpacer: {\n        marginLeft: global_spacer_xs.value,\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\nimport CostIcon from 'components/icons/costIcon';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { withRouter } from 'react-router';\nimport { getReleasePath } from 'utils/pathname';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDocLink = (textKey, urlKey) => {\n            const { t } = this.props;\n            return (React.createElement(\"a\", { href: t(urlKey), rel: \"noreferrer\", target: \"_blank\" },\n                t(textKey),\n                React.createElement(\"span\", { style: styles.iconSpacer },\n                    React.createElement(ExternalLinkAltIcon, null))));\n        };\n        this.getRouteToSources = () => {\n            const release = getReleasePath();\n            return `${release}/settings/sources`;\n        };\n    }\n    render() {\n        const { providerType, t } = this.props;\n        let descKey = 'no_providers_state.overview_desc';\n        let titleKey = 'no_providers_state.overview_title';\n        let docUrlKey;\n        let icon;\n        let textKey;\n        switch (providerType) {\n            case \"aws\" /* aws */:\n                descKey = 'no_providers_state.aws_desc';\n                titleKey = 'no_providers_state.aws_title';\n                break;\n            case \"azure\" /* azure */:\n                descKey = 'no_providers_state.azure_desc';\n                titleKey = 'no_providers_state.azure_title';\n                break;\n            case \"gcp\" /* gcp */:\n                descKey = 'no_providers_state.gcp_desc';\n                titleKey = 'no_providers_state.gcp_title';\n                break;\n            case \"ocp\" /* ocp */:\n                descKey = 'no_providers_state.ocp_desc';\n                docUrlKey = 'docs.add_ocp_sources';\n                textKey = 'no_providers_state.ocp_add_sources';\n                titleKey = 'no_providers_state.ocp_title';\n                break;\n            default:\n                icon = CostIcon;\n        }\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: icon ? icon : PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, t(titleKey)),\n            React.createElement(EmptyStateBody, null, t(descKey)),\n            docUrlKey && textKey ? (React.createElement(\"div\", { style: styles.viewSources }, this.getDocLink(textKey, docUrlKey))) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: this.getRouteToSources() }, t('no_providers_state.get_started')))));\n    }\n}\nconst NoProvidersState = withRouter(withTranslation()(NoProvidersStateBase));\nexport { NoProvidersState };\n","import NoProviders from './noProviders';\nexport default NoProviders;\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = ({ providerType, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(NoProvidersState, { providerType: providerType }))));\n};\nexport default withRouter(NoProviders);\n","import { sort } from 'utils/sort';\nimport { getItemLabel } from './getItemLabel';\nexport function getComputedReportItems({ daily, idKey, report, sortDirection = 0 /* asc */, sortKey = 'date', }) {\n    return sort(getUnsortedComputedReportItems({\n        daily,\n        idKey,\n        report,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nfunction getCostData(val, key, item) {\n    return {\n        markup: {\n            value: (item ? item[key].markup.value : 0) + val[key] && val[key].markup ? val[key].markup.value : 0,\n            units: val[key] && val[key].markup ? val[key].markup.units : 'USD',\n        },\n        raw: {\n            value: (item ? item[key].raw.value : 0) + val[key] && val[key].raw ? val[key].raw.value : 0,\n            units: val[key] && val[key].raw ? val[key].raw.units : 'USD',\n        },\n        total: {\n            value: (item ? item[key].total.value : 0) + val[key] && val[key].total ? Number(val[key].total.value) : 0,\n            units: val[key] && val[key].total ? val[key].total.units : null,\n        },\n        usage: {\n            value: (item ? item[key].usage.value : 0) + val[key] && val[key].usage ? Number(val[key].usage.value) : 0,\n            units: val[key] && val[key].usage ? val[key].usage.units : null,\n        },\n    };\n}\nfunction getUsageData(val, item) {\n    return {\n        capacity: {\n            value: (item ? item.capacity.value : 0) + val.capacity ? val.capacity.value : 0,\n            units: val.capacity ? val.capacity.units : 'Core-Hours',\n        },\n        limit: {\n            value: (item ? item.limit.value : 0) + val.limit ? val.limit.value : 0,\n            units: val.limit ? val.limit.units : 'Core-Hours',\n        },\n        request: {\n            value: (item ? item.request.value : 0) + val.request ? val.request.value : 0,\n            units: val.request ? val.request.units : 'Core-Hours',\n        },\n        usage: {\n            value: (item ? item.usage.value : 0) + val.usage ? val.usage.value : 0,\n            units: val.usage ? val.usage.units : 'Core-Hours',\n        },\n    };\n}\n// Details pages typically use this function with filter[resolution]=monthly\nexport function getUnsortedComputedReportItems({ daily = false, report, idKey, }) {\n    if (!report) {\n        return [];\n    }\n    // Map<string | number, ComputedReportItem | Map<string | number, ComputedReportItem>\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            const type = dataPoint.type;\n            dataPoint.values.forEach((val) => {\n                // Ensure unique map IDs -- https://github.com/project-koku/koku-ui/issues/706\n                const idSuffix = idKey !== 'date' && idKey !== 'cluster' && val.cluster ? `-${val.cluster}` : '';\n                // org_unit_id workaround for storage and instance-type APIs\n                let id = idKey === 'org_entities' ? val.org_unit_id : val[idKey];\n                if (id === undefined) {\n                    id = val.date; // Note: There is no longer val.id\n                }\n                const mapId = `${id}${idSuffix}`;\n                // 'clusters' will contain either the cluster alias or default cluster ID\n                const cluster_alias = val.clusters && val.clusters.length > 0 ? val.clusters[0] : undefined;\n                const cluster = cluster_alias || val.cluster;\n                const clusters = val.clusters ? val.clusters : [];\n                const date = val.date;\n                const delta_percent = val.delta_percent ? val.delta_percent : 0;\n                const delta_value = val.delta_value ? val.delta_value : 0;\n                const source_uuid = val.source_uuid ? val.source_uuid : [];\n                let label;\n                const itemLabelKey = getItemLabel({ report, idKey, value: val });\n                if (itemLabelKey === 'org_entities' && val.alias) {\n                    label = val.alias;\n                }\n                else if (itemLabelKey === 'account' && val.account_alias) {\n                    label = val.account_alias;\n                }\n                else if (itemLabelKey === 'cluster' && cluster_alias) {\n                    label = cluster_alias;\n                }\n                else if (val[itemLabelKey] instanceof Object) {\n                    label = val[itemLabelKey].value;\n                }\n                else {\n                    label = val[itemLabelKey];\n                }\n                if (label === undefined) {\n                    label = val.alias ? val.alias : val[idKey];\n                }\n                if (daily) {\n                    const data = Object.assign(Object.assign({}, getUsageData(val)), { // capacity, limit, request, & usage\n                        cluster,\n                        clusters, cost: getCostData(val, 'cost'), date,\n                        delta_percent,\n                        delta_value,\n                        id, infrastructure: getCostData(val, 'infrastructure'), label,\n                        source_uuid, supplementary: getCostData(val, 'supplementary'), type });\n                    const item = itemMap.get(mapId);\n                    if (item) {\n                        item.set(date, data);\n                    }\n                    else {\n                        const dateMap = new Map();\n                        dateMap.set(date, data);\n                        itemMap.set(mapId, dateMap);\n                    }\n                }\n                else {\n                    const item = itemMap.get(mapId);\n                    if (item) {\n                        itemMap.set(mapId, Object.assign(Object.assign(Object.assign({}, item), getUsageData(val, item)), { // capacity, limit, request, & usage\n                            cluster,\n                            clusters,\n                            date,\n                            delta_percent,\n                            delta_value, cost: getCostData(val, 'cost', item), id, infrastructure: getCostData(val, 'infrastructure', item), label,\n                            source_uuid, supplementary: getCostData(val, 'supplementary', item), type }));\n                    }\n                    else {\n                        itemMap.set(mapId, Object.assign(Object.assign({}, getUsageData(val)), { // capacity, limit, request, & usage\n                            cluster,\n                            clusters, cost: getCostData(val, 'cost'), date,\n                            delta_percent,\n                            delta_value,\n                            id, infrastructure: getCostData(val, 'infrastructure'), label,\n                            source_uuid, supplementary: getCostData(val, 'supplementary'), type }));\n                    }\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import { tagPrefix } from 'api/queries/query';\nexport function getItemLabel({ idKey, report, value }) {\n    let itemLabelKey = String(idKey);\n    if (report.meta && report.meta.group_by) {\n        const group_by = report.meta.group_by;\n        for (const key of Object.keys(group_by)) {\n            if (key.indexOf(tagPrefix)) {\n                const tagPrefixKey = tagPrefix + idKey;\n                if (value.hasOwnProperty(tagPrefixKey)) {\n                    itemLabelKey = tagPrefixKey;\n                }\n            }\n        }\n    }\n    return itemLabelKey;\n}\n","export const getReleasePath = () => {\n    const pathName = window.location.pathname.split('/');\n    pathName.shift();\n    let release = '';\n    if (pathName[0] === 'beta') {\n        release = `/beta`;\n    }\n    return release;\n};\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */ ? getValueForItem(a, options) : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */ ? getValueForItem(b, options) : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n"],"sourceRoot":""}