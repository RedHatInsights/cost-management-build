{"version":3,"sources":["webpack:///./src/components/commonChart/chartUtils.ts","webpack:///./src/utils/formatValue.ts","webpack:///./src/utils/getComputedOcpReportItems.ts","webpack:///./src/utils/getComputedAwsReportItems.ts","webpack:///./src/testIds.ts","webpack:///./src/utils/sort.ts","webpack:///./src/components/trendChart/trendChart.styles.ts","webpack:///./src/components/trendChart/trendChart.tsx","webpack:///./src/components/victory/path-helpers.ts","webpack:///./src/components/victory/victoryPoint.tsx","webpack:///./src/components/awsReportSummary/awsReportSummary.styles.ts","webpack:///./src/components/awsReportSummary/awsReportSummary.tsx","webpack:///./src/components/awsReportSummary/awsReportSummaryDetails.styles.ts","webpack:///./src/components/awsReportSummary/awsReportSummaryDetails.tsx","webpack:///./src/components/awsReportSummary/awsReportSummaryItem.styles.ts","webpack:///./src/components/awsReportSummary/awsReportSummaryItem.tsx","webpack:///./src/components/awsReportSummary/awsReportSummaryItems.tsx","webpack:///./src/components/awsReportSummary/awsReportSummaryTrend.tsx","webpack:///./src/components/tabs/tabContent.tsx","webpack:///./src/components/tabs/tabItem.styles.ts","webpack:///./src/components/tabs/tabItem.tsx","webpack:///./src/components/tabs/tabNavigation.styles.ts","webpack:///./src/components/tabs/tabNavigation.tsx","webpack:///./src/components/tabs/tabs.tsx","webpack:///./src/components/ocpReportSummary/ocpReportSummary.styles.ts","webpack:///./src/components/ocpReportSummary/ocpReportSummary.tsx","webpack:///./src/components/ocpReportSummary/ocpReportSummaryDetails.styles.ts","webpack:///./src/components/ocpReportSummary/ocpReportSummaryDetails.tsx","webpack:///./src/components/ocpReportSummary/ocpReportSummaryItem.styles.ts","webpack:///./src/components/ocpReportSummary/ocpReportSummaryItem.tsx","webpack:///./src/components/ocpReportSummary/ocpReportSummaryItems.tsx","webpack:///./src/components/ocpReportSummary/ocpReportSummaryTrend.tsx","webpack:///./src/components/usageChart/usageChart.styles.ts","webpack:///./src/components/usageChart/usageChart.tsx","webpack:///./src/components/ocpReportSummary/ocpReportSummaryUsage.tsx","webpack:///./node_modules/react-router-dom/es/Link.js","webpack:///./src/components/link/link.tsx","webpack:///./node_modules/date-fns/get_month/index.js","webpack:///./src/pages/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/pages/ocpDashboard/ocpDashboard.tsx","webpack:///./src/pages/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/pages/awsDashboard/awsDashboard.tsx","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/dollar-sign-icon.js","webpack:///./src/pages/overview/emptyState.styles.ts","webpack:///./src/pages/overview/emptyState.tsx","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/ban-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/error-circle-o-icon.js","webpack:///./src/pages/overview/loadingState.styles.ts","webpack:///./src/pages/overview/errorState.tsx","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/binoculars-icon.js","webpack:///./src/pages/overview/loadingState.tsx","webpack:///./src/pages/overview/overview.tsx","webpack:///./src/pages/ocpDashboard/index.ts","webpack:///./src/pages/awsDashboard/index.ts","webpack:///./src/pages/overview/index.ts"],"names":["transformAwsReport","report","type","key","items","idKey","sortKey","sortDirection","computedItems","Object","utils_getComputedAwsReportItems__WEBPACK_IMPORTED_MODULE_6__","map","i","createDatum","total","reduce","acc","d","prevValue","length","y","transformOcpReport","reportItem","utils_getComputedOcpReportItems__WEBPACK_IMPORTED_MODULE_7__","value","computedItem","n","x","date_fns_get_date__WEBPACK_IMPORTED_MODULE_2___default","id","label","Number","parseFloat","toFixed","isInt","name","units","getDateRange","datums","firstOfMonth","lastOfMonth","start","end","today","Date","date_fns_start_of_month__WEBPACK_IMPORTED_MODULE_3___default","getDatumDateRange","setDate","lastDate","date_fns_end_of_month__WEBPACK_IMPORTED_MODULE_0___default","getDate","getDateRangeString","current","monthName","date_fns_format__WEBPACK_IMPORTED_MODULE_1___default","startDate","endDate","i18next__WEBPACK_IMPORTED_MODULE_4__","t","date","getDateString","month","getMaxValue","max","forEach","datum","getTooltipContent","formatValue","unit","options","lookup","utils_formatValue__WEBPACK_IMPORTED_MODULE_5__","getTooltipLabel","formatOptions","toString","day","unitLookupKey","split","toLowerCase","fValue","formatCurrency","formatStorage","unknownTypeFormatter","_unit","fractionDigits","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","getComputedOcpReportItems","labelKey","_sort__WEBPACK_IMPORTED_MODULE_0__","getUnsortedComputedOcpReportItems","direction","itemMap","visitDataPoint","dataPoint","values","capacity","charge","cluster_alias","limit","request","usage","assign","app","deltaPercent","delta_percent","deltaValue","delta_value","Array","data","getIdKeyForGroupBy","groupBy","project","cluster","node","getComputedAwsReportItems","getUnsortedComputedAwsReportItems","account_alias","account","instance_type","region","service","getTestProps","data-testid","testIds","details","historical_data_btn","tag_lnk","show_more_btn","export","cancel_btn","submit_btn","login","alert","form","username_input","password_input","submit","masthead","username","sidebarToggle","logout","providers","add_btn","bucket_input","empty_state_add_btn","name_input","resource_name_input","cluster_id_input","type_input","sidebar","nav","link","backdrop","getValueForItem","item","sort","array","a","b","aVal","bVal","__webpack_require__","__webpack_exports__","chartStyles","colorScale","esm","legend","labels","fontFamily","fontSize","previousMonth","fill","stroke","currentMonth","yAxis","axisLabel","padding","grid","ticks","tickLabels","xAxis","styles","StyleSheet","create","chartContainer",":not(foo) svg","overflow","display","marginBottom","marginTop","trendChart_TrendChart","react_default","Component","[object Object]","super","arguments","this","containerRef","createRef","state","width","initDatum","currentData","previousData","title","props","legendData","push","chartUtils","symbol","cost","charts","show","onClick","handleCostLegendClick","setState","newDatum","index","handleResize","clientWidth","getChart","createElement","ChartArea","getLegend","ChartLegend","containerComponent","ChartContainer","responsive","events","target","eventHandlers","mutation","gutter","height","orientation","theme","ChartTheme","light","blue","formatDatumValue","formatDatumOptions","setTimeout","window","addEventListener","prevProps","removeEventListener","domain","maxCurrent","maxPrevious","maxValue","Math","ceil","previousDate","get_date_default","currentDate","result","trim","container","ChartVoronoiContainer","legendWidth","minWidth","legendContainer","getDomain","getEndDate","midDate","floor","className","ref","Chart","Boolean","chart","victory_axis","tickValues","dependentAxis","isLegendVisible","path_helpers","size","baseSize","lineHeight","x0","y1","distance","victoryPoint_VictoryPoint","point","propTypes","prop_types_default","oneOfType","oneOf","func","reportSummary","subtitle","color","var","AwsReportSummary","es","subTitle","detailsLink","children","status","Card","CardHeader","Title","CardBody","CardFooter","awsReportSummaryDetails_styles_styles","reportSummaryDetails","alignItems","marginRight","text","paddingBottom","AwsReportSummaryDetails","awsReportSummaryItem_styles_styles","reportSummaryItem",":not(:last-child)","test","AwsReportSummaryItem","totalValue","percentVal","percentLabel","Progress","sm","defaultProps","v","awsReportSummaryItems_AwsReportSummaryItems","nextProps","otherIndex","findIndex","slice","getItems","AwsReportSummaryTrend","trendChart","TabContent","content","role","tabItem","position","flexGrow","textAlign","cursor","tabItemShrink","flexShrink","selected","backgroundImage","tabItem_TabItem","handleClick","onSelect","isSelected","isShrink","aria-selected","tabIndex","tabNavigation_styles_styles","tabNavigation","tabNavigation_TabNavigation","handleKeyDown","event","includes","tabs","onChange","modifier","newIndex","onKeyDown","tab","Tabs","selectedTab","find","OcpReportSummary","ocpReportSummaryDetails_styles_styles","requestedValue","marginLeft","titleContainer","usageText","OcpReportSummaryDetails","reportType","requestLabel","requestValue","Fragment","ocpReportSummaryItem_styles_styles","OcpReportSummaryItem","ocpReportSummaryItems_OcpReportSummaryItems","OcpReportSummaryTrend","currentRequestData","strokeDasharray","currentUsageData","previousRequestData","previousUsageData","currentColorScale","previousColorScale","usageChart_styles_styles","usageChart_UsageChart","previousLegendData","dist_es","previous","handlePreviousLegendClick","currentLegendData","handleCurrentLegendClick","dataComponent","victoryPoint","maxCurrentRequest","maxCurrentUsage","maxPreviousRequest","maxPreviousUsage","currentRequestDate","currentUsageDate","previousRequestDate","previousUsageDate","isPreviousLegendVisible","isCurrentLegendVisible","OcpReportSummaryUsage","_extends","source","prototype","hasOwnProperty","call","_possibleConstructorReturn","self","ReferenceError","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","Link_Link","_React$Component","Link","_temp","_this","instance","Constructor","TypeError","_classCallCheck","_len","args","_key","apply","concat","defaultPrevented","button","preventDefault","history","context","router","_this$props","replace","to","subClass","superClass","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","render","_props","innerRef","obj","keys","indexOf","_objectWithoutProperties","browser_default","undefined","location","href","createHref","string","bool","object","isRequired","contextTypes","shape","es_Link","CastedButton","Button","link_Link","component","variant","parse","module","exports","dirtyDate","getMonth","getIdKeyForTab","mapStateToProps","common","widgetId","widget","ocpDashboard","selectWidget","queries","selectWidgetQueries","currentQuery","previousQuery","tabsQuery","ocpReports","selectReport","selectReportFetchStatus","mapDispatchToProps","fetchReports","fetchWidgetReports","updateTab","changeWidgetTab","OcpDashboardWidget","react_redux_es","getTabTitle","getDetailsLinkTitle","buildDetailsLink","ocpQuery","group_by","order_by","renderTab","tabData","topItems","currentTab","ocpReportSummary","handleTabChange","tabId","titleKey","trend","availableTabs","get_month_default","format_default","start_of_month_default","count","detailLabel","requestLabelKey","components_link","components_tabs","ocpDashboard_mapStateToProps","widgets","selectCurrentWidgets","OcpDashboard","openProvidersModal","ui","Grid","GridItem","xl","lg","awsDashboard","awsReports","AwsDashboardWidget","awsQuery","awsReportSummary","labelKeyContext","trendTitle","awsDashboard_mapStateToProps","AwsDashboard","dollar_sign_icon","createIcon","svgPath","yOffset","xOffset","transform","card","cardBody","primaryAction","EmptyState","md","ban_icon","error_circle_o_icon","loadingState_styles_styles","paddingLeft","paddingRight","ErrorState","isUnauthorized","binoculars_icon","LoadingState","store_providers","selectProviders","results","showAWSTab","showOCPTab","providersError","selectProvidersError","providersFetchStatus","selectProvidersFetchStatus","Overview","onboarding","openModal","getAddSourceButton","secondary","getEmptyState","getErrorState","response","getLoadingState","getTabs","page-type","react_hot_loader__WEBPACK_IMPORTED_MODULE_0__","_ocpDashboard__WEBPACK_IMPORTED_MODULE_1__","_awsDashboard__WEBPACK_IMPORTED_MODULE_1__","_overview__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"429a8c936ebae3b8ac7a.bundle.js","sourcesContent":["import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { unitLookupKey, } from 'utils/formatValue';\nimport { getComputedAwsReportItems, } from 'utils/getComputedAwsReportItems';\nimport { getComputedOcpReportItems, } from 'utils/getComputedOcpReportItems';\nexport function transformAwsReport(report, type = 1 /* daily */, key = 'date') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        report,\n        idKey: key,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedAwsReportItems(items);\n    if (type === 1 /* daily */) {\n        return computedItems.map(i => createDatum(i.total, i, key));\n    }\n    if (type === 2 /* monthly */) {\n        return computedItems.map(i => createDatum(i.total, i, key));\n    }\n    return computedItems.reduce((acc, d) => {\n        const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n        return [...acc, createDatum(prevValue + d.total, d, key)];\n    }, []);\n}\nexport function transformOcpReport(report, type = 1 /* daily */, key = 'date', reportItem = 'charge') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        report,\n        idKey: key,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedOcpReportItems(items);\n    if (type === 1 /* daily */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    if (type === 2 /* monthly */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    return computedItems.reduce((acc, d) => {\n        const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n        return [...acc, createDatum(prevValue + d[reportItem], d, key)];\n    }, []);\n}\nexport function createDatum(value, computedItem, idKey = 'date') {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value)\n        ? parseFloat(value.toFixed(2))\n        : isInt(value)\n            ? value\n            : 0;\n    return {\n        x: xVal,\n        y: yVal,\n        key: computedItem.id,\n        name: computedItem.id,\n        units: computedItem.units,\n    };\n}\nexport function getDatumDateRange(datums) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    const start = new Date(datums[0].key + 'T00:00:00');\n    const end = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false) {\n    const [start, end] = getDatumDateRange(datums);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, current = false) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth);\n    const monthName = format(start, 'MMM');\n    const startDate = getDate(start);\n    const endDate = getDate(end);\n    if (current) {\n        return i18next.t(`date.range_current`, {\n            date: getDateString(startDate),\n            month: startDate !== endDate ? monthName : '',\n        });\n    }\n    return i18next.t(`date.range_full`, {\n        endDate: getDateString(endDate),\n        startDate: getDateString(startDate),\n        month: startDate !== endDate ? monthName : '',\n    });\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'hrs':\n            case 'gb':\n                return i18next.t(`units.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date') {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'MMM D YYYY');\n        return `${date}: ${formatValue(datum.y, datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nfunction isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nfunction isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\nfunction getDateString(date) {\n    const day = date % 10;\n    if (day === 1) {\n        return i18next.t(`date.first`, { date });\n    }\n    else if (day === 2) {\n        return i18next.t(`date.second`, { date });\n    }\n    else if (day === 3) {\n        return i18next.t(`date.third`, { date });\n    }\n    return i18next.t(`date.tenth`, { date });\n}\n","export const unitLookupKey = unit => unit ? unit.split('-')[0].toLowerCase() : '';\nexport const formatValue = (value, unit, options = {}) => {\n    const lookup = unitLookupKey(unit);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'usd':\n            return formatCurrency(fValue, lookup, options);\n        case 'gb':\n            return formatStorage(fValue, lookup, options);\n        default:\n            return unknownTypeFormatter(fValue, lookup, options);\n    }\n};\nconst unknownTypeFormatter = (value, _unit, { fractionDigits } = {}) => {\n    return value.toFixed(fractionDigits);\n};\nexport const formatCurrency = (value, _unit, { fractionDigits = 2 } = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    return fValue.toLocaleString('en', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatStorage = (value, _unit, { fractionDigits = 2 } = {}) => {\n    return value.toFixed(fractionDigits);\n};\n","import { sort } from './sort';\nexport function getComputedOcpReportItems({ report, idKey, labelKey = idKey, sortKey = 'charge', sortDirection = 0 /* asc */, }) {\n    return sort(getUnsortedComputedOcpReportItems({\n        report,\n        idKey,\n        labelKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedOcpReportItems({ report, idKey, labelKey = idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = {};\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint.values) {\n            dataPoint.values.forEach(value => {\n                const capacity = value.capacity;\n                const charge = value.charge;\n                const id = value[idKey];\n                let label = value[labelKey];\n                if (labelKey === 'cluster' && value.cluster_alias) {\n                    label = value.cluster_alias;\n                }\n                const limit = value.limit;\n                const request = value.request;\n                const usage = value.usage;\n                const units = value.units ? value.units : usage ? 'GB' : 'USD';\n                if (!itemMap[id]) {\n                    itemMap[id] = {\n                        app: value.app,\n                        capacity,\n                        charge,\n                        deltaPercent: value.delta_percent,\n                        deltaValue: value.delta_value,\n                        id,\n                        label,\n                        limit,\n                        request,\n                        units,\n                        usage,\n                    };\n                    return;\n                }\n                itemMap[id] = Object.assign({}, itemMap[id], { capacity: itemMap[id].capacity + capacity, charge: itemMap[id].charge + charge, limit: itemMap[id].limit + limit, request: itemMap[id].request + request, usage: itemMap[id].usage + usage });\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Object.values(itemMap);\n}\nexport function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import { sort } from './sort';\nexport function getComputedAwsReportItems({ report, idKey, labelKey = idKey, sortKey = 'total', sortDirection = 0 /* asc */, }) {\n    return sort(getUnsortedComputedAwsReportItems({\n        report,\n        idKey,\n        labelKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedAwsReportItems({ report, idKey, labelKey = idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = {};\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint.values) {\n            dataPoint.values.forEach(value => {\n                const total = value.total;\n                const id = value[idKey];\n                let label = value[labelKey];\n                if (labelKey === 'account' && value.account_alias) {\n                    label = value.account_alias;\n                }\n                if (!itemMap[id]) {\n                    itemMap[id] = {\n                        deltaPercent: value.delta_percent,\n                        deltaValue: value.delta_value,\n                        id,\n                        total,\n                        label,\n                        units: value.units,\n                    };\n                    return;\n                }\n                itemMap[id] = Object.assign({}, itemMap[id], { total: itemMap[id].total + total });\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Object.values(itemMap);\n}\nexport function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.account) {\n        return 'account';\n    }\n    if (groupBy.instance_type) {\n        return 'instance_type';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.service) {\n        return 'service';\n    }\n    return 'date';\n}\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        historical_data_btn: 'historical-data-btn',\n        tag_lnk: 'tag-lnk',\n        show_more_btn: 'show-more-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */\n            ? getValueForItem(a, options)\n            : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */\n            ? getValueForItem(b, options)\n            : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_disabled_color_200, global_FontFamily_sans_serif, global_FontSize_md, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    colorScale: [\n        global_disabled_color_200.value,\n        '#A2DA9C',\n        '#88D080',\n        '#6EC664',\n        '#519149',\n        '#3C6C37',\n    ],\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 12,\n        },\n    },\n    previousMonth: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    currentMonth: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n    legend: {\n        display: 'inline-block',\n        fontSize: global_FontSize_md.value,\n        marginBottom: global_spacer_lg.value,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Chart, ChartArea, ChartContainer, ChartLegend, ChartTheme, ChartVoronoiContainer, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { getDateRangeString, getMaxValue, getTooltipContent, getTooltipLabel, } from 'components/commonChart/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport React from 'react';\nimport { VictoryAxis } from 'victory';\nimport { getDateRange } from '../commonChart/chartUtils';\nimport { chartStyles, styles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, title } = this.props;\n            const legendData = [];\n            if (previousData && previousData.length) {\n                legendData.push({\n                    name: getDateRangeString(previousData, true, true),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            if (currentData && currentData.length) {\n                legendData.push({\n                    name: getDateRangeString(currentData, true, false, true),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            const cost = {\n                charts: [\n                    {\n                        data: previousData,\n                        show: true,\n                        style: chartStyles.previousMonth,\n                    },\n                    {\n                        data: currentData,\n                        show: true,\n                        style: chartStyles.currentMonth,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.colorScale,\n                    data: legendData,\n                    onClick: this.handleCostLegendClick,\n                    title,\n                },\n            };\n            this.setState({\n                datum: {\n                    cost,\n                },\n            });\n        };\n        this.handleCostLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.cost.charts.length) {\n                newDatum.cost.charts[props.index].show = !newDatum.cost.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (datum, index) => {\n            if (datum.data && datum.data.length && datum.show) {\n                return (React.createElement(ChartArea, { data: datum.data, key: `trend-chart-${index}`, style: datum.style }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getLegend = (datum, width) => {\n            if (datum && datum.data && datum.data.length) {\n                return (React.createElement(ChartLegend, { colorScale: datum.colorScale, containerComponent: React.createElement(ChartContainer, { responsive: false }), data: datum.data, events: [\n                        {\n                            target: 'data',\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [\n                                        {\n                                            target: 'data',\n                                            mutation: props => {\n                                                datum.onClick(props);\n                                                return null;\n                                            },\n                                        },\n                                    ];\n                                },\n                            },\n                        },\n                    ], gutter: 5, height: 50, orientation: width > 150 ? 'horizontal' : 'vertical', style: chartStyles.legend, theme: ChartTheme.light.blue, width: width }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTooltipLabel = (datum) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            return getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentData, previousData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrent = currentData ? getMaxValue(currentData) : 0;\n        const maxPrevious = previousData ? getMaxValue(previousData) : 0;\n        const maxValue = Math.max(maxCurrent, maxPrevious);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData\n            ? getDate(getDateRange(previousData, true, true)[1])\n            : 0;\n        const currentDate = currentData\n            ? getDate(getDateRange(currentData, true, true)[1])\n            : 0;\n        return currentDate > 0 || previousDate > 0\n            ? Math.max(currentDate, previousDate)\n            : 31;\n    }\n    isLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.cost.legend && datum.cost.legend.data) {\n            datum.cost.legend.data.forEach(item => {\n                if (item.name && item.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    render() {\n        const { height } = this.props;\n        const { datum, width } = this.state;\n        const container = React.createElement(ChartVoronoiContainer, { labels: this.getTooltipLabel });\n        const legendWidth = styles.legend.minWidth > width / 2\n            ? styles.legendContainer.minWidth\n            : width / 2;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef },\n            React.createElement(Chart, { containerComponent: container, domain: domain, height: height, width: width },\n                Boolean(datum && datum.cost) &&\n                    datum.cost.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                React.createElement(VictoryAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(VictoryAxis, { dependentAxis: true, style: chartStyles.yAxis })),\n            Boolean(this.isLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) },\n                Boolean(datum.cost.legend.title) && (React.createElement(\"div\", null, datum.cost.legend.title)),\n                this.getLegend(datum.cost.legend, legendWidth)))));\n    }\n}\nexport { TrendChart };\n","// import pathHelpers from 'victory-core/src/victory-primitives/path-helpers';\n// Todo: Move this functionality to PF4 react-charts package\nexport default {\n    // Todo: Our jest config fails to process the import in path-helpers\n    // ...pathHelpers,\n    dash(x, y, size) {\n        const baseSize = 1.1 * size;\n        const lineHeight = baseSize - baseSize * 0.3;\n        const x0 = x - baseSize;\n        const y1 = y + lineHeight / 2;\n        const distance = (x + baseSize - x0) * 0.3;\n        const padding = distance / 3;\n        return `M ${x0}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z\n      M ${x0 + distance + padding}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z\n      M ${x0 + distance * 2 + padding * 2}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z`;\n    },\n    minus(x, y, size) {\n        const baseSize = 1.1 * size;\n        const lineHeight = baseSize - baseSize * 0.3;\n        const x0 = x - baseSize;\n        const y1 = y + lineHeight / 2;\n        const distance = x + baseSize - x0;\n        return `M ${x0}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z`;\n    },\n};\n","import PropTypes from 'prop-types';\nimport { Point } from 'victory';\nimport pathHelpers from './path-helpers';\n// Todo: Move this functionality to PF4 react-charts package\nclass VictoryPoint extends Point {\n    getPath(props) {\n        return pathHelpers[`${props.symbol}`](props.x, props.y, props.size);\n    }\n}\nVictoryPoint.propTypes = Object.assign({}, Point.propTypes, { symbol: PropTypes.oneOfType([\n        PropTypes.oneOf([\n            // Todo: Not importing all due to jest issue\n            // 'circle',\n            // 'diamond',\n            // 'plus',\n            'minus',\n            // 'square',\n            // 'star',\n            // 'triangleDown',\n            // 'triangleUp',\n            'dash',\n        ]),\n        PropTypes.func,\n    ]) });\nexport default VictoryPoint;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './awsReportSummary.styles';\nconst AwsReportSummaryBase = ({ title, subTitle, detailsLink, children, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? `${t('loading')}...` : children),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst AwsReportSummary = translate()(AwsReportSummaryBase);\nexport { AwsReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './awsReportSummaryDetails.styles';\nconst AwsReportSummaryDetails = ({ label, formatValue, formatOptions, report, }) => {\n    let value = '----';\n    if (report && report.total) {\n        const units = report.total.units ? report.total.units : 'USD';\n        value = formatValue(report.total.value ? report.total.value : 0, units, formatOptions);\n    }\n    return (React.createElement(\"div\", { className: css(styles.reportSummaryDetails) },\n        React.createElement(\"div\", { className: css(styles.value) }, value),\n        React.createElement(\"div\", { className: css(styles.text) },\n            React.createElement(\"div\", null, label))));\n};\nexport { AwsReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './awsReportSummaryItem.styles';\nconst AwsReportSummaryItem = ({ label, value, totalValue, formatValue, units, formatOptions, }) => {\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = `${formatValue(value, units, formatOptions)} (${percentVal}%)`;\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nAwsReportSummaryItem.defaultProps = {\n    formatValue: v => v,\n};\nexport { AwsReportSummaryItem };\n","import React from 'react';\nimport { getComputedAwsReportItems, } from 'utils/getComputedAwsReportItems';\nclass AwsReportSummaryItems extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedAwsReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => i.id === 'Other');\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { report, children } = this.props;\n        if (!report) {\n            return null;\n        }\n        const items = this.getItems();\n        return React.createElement(\"ul\", null, children({ items }));\n    }\n}\nexport { AwsReportSummaryItems, };\n","import React from 'react';\nimport { TrendChart } from '../trendChart';\nconst AwsReportSummaryTrend = props => (React.createElement(\"div\", { style: { marginBottom: 16 } },\n    React.createElement(TrendChart, Object.assign({ height: 75 }, props))));\nexport { AwsReportSummaryTrend };\n","import React from 'react';\nexport const TabContent = ({ data }) => {\n    const content = typeof data.content === 'function' ? data.content(data) : data.content;\n    return React.createElement(\"div\", { role: \"tabpanel\" }, content);\n};\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_FontSize_md, global_primary_color_100, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    tabItem: {\n        position: 'relative',\n        flexGrow: 1,\n        textAlign: 'center',\n        fontSize: global_FontSize_md.value,\n        padding: global_spacer_sm.value,\n        cursor: 'pointer',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    tabItemShrink: {\n        flexGrow: '0',\n        flexShrink: '2',\n        marginRight: '20px',\n    },\n    selected: {\n        backgroundImage: `linear-gradient(to top, ${global_primary_color_100.value} 2px, transparent 2px)`,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './tabItem.styles';\nclass TabItem extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleClick = () => {\n            const { onSelect, data } = this.props;\n            onSelect(data.id);\n        };\n    }\n    render() {\n        const { data, isSelected, isShrink } = this.props;\n        return (React.createElement(\"div\", { role: \"tab\", onClick: this.handleClick, \"aria-selected\": isSelected, tabIndex: isSelected ? 0 : -1, className: css(styles.tabItem, isSelected && styles.selected, isShrink && styles.tabItemShrink) }, data.label));\n    }\n}\nexport { TabItem };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '../../../node_modules/@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    tabNavigation: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        marginBottom: global_spacer_md.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { TabItem } from './tabItem';\nimport { styles } from './tabNavigation.styles';\nclass TabNavigation extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleKeyDown = (event) => {\n            if (!['ArrowRight', 'ArrowLeft'].includes(event.key)) {\n                return;\n            }\n            const { selected, tabs, onChange } = this.props;\n            const modifier = event.key === 'ArrowRight' ? 1 : -1;\n            const selectedIndex = tabs.findIndex(t => t.id === selected.id);\n            const newIndex = selectedIndex + modifier;\n            if (newIndex < 0 || newIndex > tabs.length - 1) {\n                return;\n            }\n            onChange(tabs[newIndex].id);\n        };\n    }\n    render() {\n        const { isShrink, tabs, selected, onChange } = this.props;\n        return (React.createElement(\"div\", { role: \"tablist\", className: css(styles.tabNavigation), onKeyDown: this.handleKeyDown }, tabs.map(tab => (React.createElement(TabItem, { isShrink: isShrink, onSelect: onChange, key: tab.id, data: tab, isSelected: tab.id === selected.id })))));\n    }\n}\nexport { TabNavigation };\n","import React from 'react';\nimport { TabContent } from './tabContent';\nimport { TabNavigation } from './tabNavigation';\nconst Tabs = ({ isShrink, selected, tabs, onChange }) => {\n    if (tabs.length === 0) {\n        return React.createElement(\"div\", null, \"No data was found\");\n    }\n    const selectedTab = tabs.find(tab => tab.id === selected);\n    return (React.createElement(\"div\", null,\n        React.createElement(TabNavigation, { isShrink: isShrink, tabs: tabs, selected: selectedTab || tabs[0], onChange: onChange }),\n        React.createElement(TabContent, { data: selectedTab || tabs[0] })));\n};\nexport { Tabs };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpReportSummary.styles';\nconst OcpReportSummaryBase = ({ title, subTitle, detailsLink, children, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? `${t('loading')}...` : children),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst OcpReportSummary = translate()(OcpReportSummaryBase);\nexport { OcpReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    requestedValue: {\n        marginLeft: global_spacer_sm.value,\n    },\n    text: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        marginLeft: global_spacer_sm.value,\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    titleContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        minWidth: '175px',\n        width: '50%',\n    },\n    usageText: {\n        marginRight: global_spacer_sm.value,\n    },\n    value: {\n        display: 'flex',\n        color: global_Color_100.var,\n        fontSize: global_FontSize_4xl.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryDetails.styles';\nconst OcpReportSummaryDetails = ({ label, formatValue, formatOptions, report, reportType = \"charge\" /* charge */, requestLabel, }) => {\n    let value = '----';\n    let requestValue = '----';\n    if (report && report.total) {\n        if (reportType === \"charge\" /* charge */) {\n            const units = report.total.units ? report.total.units : 'USD';\n            value = formatValue(report.total.charge ? report.total.charge : 0, units, formatOptions);\n        }\n        else {\n            const units = report.total.units ? report.total.units : 'GB';\n            value = formatValue(report.total.usage ? report.total.usage : 0, units, formatOptions);\n            requestValue = formatValue(report.total.request ? report.total.request : 0, units, formatOptions);\n        }\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: css(styles.titleContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                value,\n                React.createElement(\"div\", { className: css(styles.text) },\n                    React.createElement(\"div\", null, label)))),\n        React.createElement(\"div\", { className: css(styles.titleContainer) }, Boolean(reportType !== \"charge\" /* charge */) && (React.createElement(\"div\", { className: css(styles.value, styles.requestedValue) },\n            requestValue,\n            React.createElement(\"div\", { className: css(styles.text) }, requestLabel))))));\n};\nexport { OcpReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryItem.styles';\nconst OcpReportSummaryItem = ({ label, value, totalValue, formatValue, units, formatOptions, }) => {\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = `${formatValue(value, units, formatOptions)} (${percentVal}%)`;\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nOcpReportSummaryItem.defaultProps = {\n    formatValue: v => v,\n};\nexport { OcpReportSummaryItem };\n","import React from 'react';\nimport { getComputedOcpReportItems, } from 'utils/getComputedOcpReportItems';\nclass OcpReportSummaryItems extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedOcpReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => i.id === 'Other');\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { report, children } = this.props;\n        if (!report) {\n            return null;\n        }\n        const items = this.getItems();\n        return React.createElement(\"ul\", null, children({ items }));\n    }\n}\nexport { OcpReportSummaryItems, };\n","import React from 'react';\nimport { TrendChart } from '../trendChart';\nconst OcpReportSummaryTrend = props => (React.createElement(\"div\", { style: { marginBottom: 16 } },\n    React.createElement(TrendChart, Object.assign({ height: 75 }, props))));\nexport { OcpReportSummaryTrend };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_disabled_color_100, global_disabled_color_200, global_FontFamily_sans_serif, global_FontSize_md, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 12,\n        },\n    },\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: ['#A2DA9C', '#88D080', '#6EC664', '#519149', '#3C6C37'],\n    // TBD: No grey scale, yet\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_100.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n    legend: {\n        display: 'inline-block',\n        fontSize: global_FontSize_md.value,\n        marginBottom: global_spacer_lg.value,\n        marginTop: global_spacer_lg.value,\n        minWidth: '175px',\n        width: '50%',\n    },\n});\n","import { Chart, ChartArea, ChartContainer, ChartLegend, ChartTheme, ChartVoronoiContainer, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { getDateRangeString, getMaxValue, getTooltipContent, getTooltipLabel, } from 'components/commonChart/chartUtils';\nimport VictoryPoint from 'components/victory/victoryPoint';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { VictoryAxis } from 'victory';\nimport { getDateRange } from '../commonChart/chartUtils';\nimport { chartStyles, styles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n            const previousLegendData = [];\n            if (previousUsageData) {\n                previousLegendData.push({\n                    name: i18next.t(`chart.used`),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            if (previousRequestData) {\n                previousLegendData.push({\n                    name: i18next.t(`chart.requested`),\n                    symbol: {\n                        type: 'dash',\n                    },\n                });\n            }\n            const previous = {\n                charts: [\n                    {\n                        data: previousUsageData,\n                        show: true,\n                        style: chartStyles.previousUsageData,\n                    },\n                    {\n                        data: previousRequestData,\n                        show: true,\n                        style: chartStyles.previousRequestData,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.previousColorScale,\n                    data: previousLegendData,\n                    onClick: this.handlePreviousLegendClick,\n                    title: getDateRangeString(previousUsageData, true, true),\n                },\n            };\n            const currentLegendData = [];\n            if (currentUsageData) {\n                currentLegendData.push({\n                    name: i18next.t(`chart.used`),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            if (currentRequestData) {\n                currentLegendData.push({\n                    name: i18next.t(`chart.requested`),\n                    symbol: {\n                        type: 'dash',\n                    },\n                });\n            }\n            const current = {\n                charts: [\n                    {\n                        data: currentUsageData,\n                        show: true,\n                        style: chartStyles.currentUsageData,\n                    },\n                    {\n                        data: currentRequestData,\n                        show: true,\n                        style: chartStyles.currentRequestData,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.currentColorScale,\n                    data: currentLegendData,\n                    gutter: 55,\n                    onClick: this.handleCurrentLegendClick,\n                    title: getDateRangeString(currentUsageData, true, false),\n                },\n            };\n            this.setState({\n                datum: {\n                    previous,\n                    current,\n                },\n            });\n        };\n        this.handleCurrentLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.current.charts.length) {\n                newDatum.current.charts[props.index].show = !newDatum.current.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.handlePreviousLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.previous.charts.length) {\n                newDatum.previous.charts[props.index].show = !newDatum.previous.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.getChart = (datum, index) => {\n            if (datum.data && datum.data.length && datum.show) {\n                return (React.createElement(ChartArea, { data: datum.data, key: `usage-chart-${index}`, style: datum.style }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getLegend = (datum, width) => {\n            if (datum && datum.data && datum.data.length) {\n                return (React.createElement(ChartLegend, { colorScale: datum.colorScale, containerComponent: React.createElement(ChartContainer, { responsive: false }), data: datum.data, dataComponent: React.createElement(VictoryPoint, null), events: [\n                        {\n                            target: 'data',\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [\n                                        {\n                                            target: 'data',\n                                            mutation: props => {\n                                                datum.onClick(props);\n                                                return null;\n                                            },\n                                        },\n                                    ];\n                                },\n                            },\n                        },\n                    ], height: 25, orientation: \"horizontal\", style: chartStyles.legend, theme: ChartTheme.light.blue }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTooltipLabel = (datum) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            return getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentRequest = currentRequestData\n            ? getMaxValue(currentRequestData)\n            : 0;\n        const maxCurrentUsage = currentUsageData\n            ? getMaxValue(currentUsageData)\n            : 0;\n        const maxPreviousRequest = previousRequestData\n            ? getMaxValue(previousRequestData)\n            : 0;\n        const maxPreviousUsage = previousUsageData\n            ? getMaxValue(previousUsageData)\n            : 0;\n        const maxValue = Math.max(maxCurrentRequest, maxCurrentUsage, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const currentRequestDate = currentRequestData\n            ? getDate(getDateRange(currentRequestData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentUsageData\n            ? getDate(getDateRange(currentUsageData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousRequestData\n            ? getDate(getDateRange(previousRequestData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousUsageData\n            ? getDate(getDateRange(previousUsageData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 ||\n            currentUsageDate > 0 ||\n            previousRequestDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    isCurrentLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.current.legend && datum.current.legend.data) {\n            datum.current.legend.data.forEach(data => {\n                if (data.name && data.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    isPreviousLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.previous.legend && datum.previous.legend.data) {\n            datum.previous.legend.data.forEach(data => {\n                if (data.name && data.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    render() {\n        const { height } = this.props;\n        const { datum, width } = this.state;\n        const container = React.createElement(ChartVoronoiContainer, { labels: this.getTooltipLabel });\n        const legendWidth = styles.legend.minWidth > width / 2\n            ? styles.legendContainer.minWidth\n            : width / 2;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef },\n            React.createElement(Chart, { containerComponent: container, domain: domain, height: height, width: width },\n                Boolean(datum && datum.previous) &&\n                    datum.previous.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                Boolean(datum && datum.current) &&\n                    datum.current.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                React.createElement(VictoryAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(VictoryAxis, { dependentAxis: true, style: chartStyles.yAxis })),\n            Boolean(this.isPreviousLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) },\n                Boolean(datum.previous.legend.title) && (React.createElement(\"div\", null, datum.previous.legend.title)),\n                this.getLegend(datum.previous.legend, legendWidth))),\n            Boolean(this.isCurrentLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) },\n                Boolean(datum.current.legend.title) && (React.createElement(\"div\", null, datum.current.legend.title)),\n                this.getLegend(datum.current.legend, legendWidth)))));\n    }\n}\nexport { UsageChart };\n","import React from 'react';\nimport { UsageChart } from '../usageChart';\nconst OcpReportSummaryUsage = props => (React.createElement(\"div\", { style: { marginBottom: 16 } },\n    React.createElement(UsageChart, Object.assign({ height: 75 }, props))));\nexport { OcpReportSummaryUsage };\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"invariant\";\nimport { createLocation } from \"history\";\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nvar Link = function (_React$Component) {\n  _inherits(Link, _React$Component);\n\n  function Link() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Link);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {\n      if (_this.props.onClick) _this.props.onClick(event);\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && // ignore everything but left clicks\n      !_this.props.target && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n\n          var history = _this.context.router.history;\n          var _this$props = _this.props,\n              replace = _this$props.replace,\n              to = _this$props.to;\n\n\n          if (replace) {\n            history.replace(to);\n          } else {\n            history.push(to);\n          }\n        }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Link.prototype.render = function render() {\n    var _props = this.props,\n        replace = _props.replace,\n        to = _props.to,\n        innerRef = _props.innerRef,\n        props = _objectWithoutProperties(_props, [\"replace\", \"to\", \"innerRef\"]); // eslint-disable-line no-unused-vars\n\n    invariant(this.context.router, \"You should not use <Link> outside a <Router>\");\n\n    invariant(to !== undefined, 'You must specify the \"to\" property');\n\n    var history = this.context.router.history;\n\n    var location = typeof to === \"string\" ? createLocation(to, null, null, history.location) : to;\n\n    var href = history.createHref(location);\n    return React.createElement(\"a\", _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));\n  };\n\n  return Link;\n}(React.Component);\n\nLink.propTypes = {\n  onClick: PropTypes.func,\n  target: PropTypes.string,\n  replace: PropTypes.bool,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  innerRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n};\nLink.defaultProps = {\n  replace: false\n};\nLink.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired,\n      createHref: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired\n};\n\n\nexport default Link;","import { Button } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nconst CastedButton = Button;\nconst Link = props => (React.createElement(CastedButton, Object.assign({ component: RouterLink, variant: \"link\" }, props)));\nexport { Link };\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the month\n *\n * @example\n * // Which month is 29 February 2012?\n * var result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\nfunction getMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  return month\n}\n\nmodule.exports = getMonth\n","import { getQuery, parseQuery } from 'api/ocpQuery';\nimport { transformOcpReport } from 'components/commonChart/chartUtils';\nimport { Link } from 'components/link';\nimport { OcpReportSummary, OcpReportSummaryDetails, OcpReportSummaryItem, OcpReportSummaryItems, OcpReportSummaryTrend, OcpReportSummaryUsage, } from 'components/ocpReportSummary';\nimport { Tabs } from 'components/tabs';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors, } from 'store/ocpDashboard';\nimport { ocpReportsSelectors } from 'store/ocpReports';\nimport { formatValue } from 'utils/formatValue';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nclass OcpDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.buildDetailsLink = () => {\n            const { currentQuery } = this.props;\n            const groupBy = parseQuery(currentQuery).group_by;\n            return `/ocp?${getQuery({\n                group_by: groupBy,\n                order_by: { charge: 'desc' },\n            })}`;\n        };\n        this.renderTab = (tabData) => {\n            const { reportType, tabs, topItems } = this.props;\n            const currentTab = tabData.id;\n            return (React.createElement(OcpReportSummaryItems, { idKey: getIdKeyForTab(currentTab), report: tabs }, ({ items }) => items.map(tabItem => (React.createElement(OcpReportSummaryItem, { key: tabItem.id, formatOptions: topItems.formatOptions, formatValue: formatValue, label: tabItem.label.toString(), totalValue: reportType === \"charge\" /* charge */\n                    ? tabs.total.charge\n                    : tabs.total.usage, units: tabItem.units, value: reportType === \"charge\" /* charge */\n                    ? tabItem.charge\n                    : tabItem.usage })))));\n        };\n        this.handleTabChange = (tabId) => {\n            this.props.updateTab(this.props.id, tabId);\n        };\n    }\n    componentDidMount() {\n        const { fetchReports, widgetId } = this.props;\n        fetchReports(widgetId);\n    }\n    render() {\n        const { t, titleKey, trend, details, current, previous, availableTabs, currentTab, reportType, status, } = this.props;\n        const today = new Date();\n        const month = getMonth(today);\n        const endDate = formatDate(today, 'Do');\n        const startDate = formatDate(startOfMonth(today), 'Do');\n        const title = t(titleKey, { endDate, month, startDate });\n        const subTitle = t('ocp_dashboard.widget_subtitle', {\n            endDate,\n            month,\n            startDate,\n            count: getDate(today),\n        });\n        const detailLabel = t(details.labelKey);\n        const requestLabel = t(details.requestLabelKey);\n        const detailsLink = reportType === \"charge\" /* charge */ && (React.createElement(Link, { to: this.buildDetailsLink() }, this.getDetailsLinkTitle(currentTab)));\n        const reportItem = reportType === \"charge\" /* charge */ ? 'charge' : 'usage';\n        const currentUsageData = transformOcpReport(current, trend.type, 'date', reportItem);\n        const previousUsageData = transformOcpReport(previous, trend.type, 'date', reportItem);\n        const currentRequestData = reportType !== \"charge\" /* charge */\n            ? transformOcpReport(current, trend.type, 'date', 'request')\n            : undefined;\n        const previousRequestData = reportType !== \"charge\" /* charge */\n            ? transformOcpReport(previous, trend.type, 'date', 'request')\n            : undefined;\n        return (React.createElement(OcpReportSummary, { title: title, subTitle: subTitle, detailsLink: detailsLink, status: status },\n            React.createElement(OcpReportSummaryDetails, { report: current, reportType: reportType, formatValue: formatValue, label: detailLabel, formatOptions: details.formatOptions, requestLabel: requestLabel }),\n            Boolean(reportType === \"charge\" /* charge */) ? (React.createElement(OcpReportSummaryTrend, { title: t(trend.titleKey), currentData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, previousData: previousUsageData })) : (React.createElement(OcpReportSummaryUsage, { currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, previousRequestData: previousRequestData, previousUsageData: previousUsageData })),\n            React.createElement(Tabs, { tabs: availableTabs.map(tab => ({\n                    id: tab,\n                    label: this.getTabTitle(tab),\n                    content: this.renderTab,\n                })), selected: currentTab, onChange: this.handleTabChange })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, current: ocpReportsSelectors.selectReport(state, widget.reportType, queries.current), previous: ocpReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabs: ocpReportsSelectors.selectReport(state, widget.reportType, queries.tabs), status: ocpReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(OcpDashboardWidgetBase));\nexport { OcpDashboardWidget, OcpDashboardWidgetBase };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/ocpDashboard';\nimport { uiActions } from 'store/ui';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\nconst OcpDashboardBase = ({ t, openProvidersModal, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        return (React.createElement(GridItem, { xl: 4, lg: 6, key: widgetId },\n            React.createElement(OcpDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = translate()(connect(mapStateToProps, {\n    openProvidersModal: uiActions.openProvidersModal,\n})(OcpDashboardBase));\nexport default OcpDashboard;\n","import { getQuery, parseQuery } from 'api/awsQuery';\nimport { AwsReportSummary, AwsReportSummaryDetails, AwsReportSummaryItem, AwsReportSummaryItems, AwsReportSummaryTrend, } from 'components/awsReportSummary';\nimport { transformAwsReport } from 'components/commonChart/chartUtils';\nimport { Link } from 'components/link';\nimport { Tabs } from 'components/tabs';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { awsDashboardActions, awsDashboardSelectors, } from 'store/awsDashboard';\nimport { awsReportsSelectors } from 'store/awsReports';\nimport { createMapStateToProps } from 'store/common';\nimport { formatValue } from 'utils/formatValue';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nclass AwsDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.buildDetailsLink = () => {\n            const { currentQuery } = this.props;\n            const groupBy = parseQuery(currentQuery).group_by;\n            return `/aws?${getQuery({\n                group_by: groupBy,\n                order_by: { total: 'desc' },\n            })}`;\n        };\n        this.renderTab = (tabData) => {\n            const { tabs, topItems } = this.props;\n            const currentTab = tabData.id;\n            return (React.createElement(AwsReportSummaryItems, { idKey: getIdKeyForTab(currentTab), report: tabs }, ({ items }) => items.map(tabItem => (React.createElement(AwsReportSummaryItem, { key: tabItem.id, formatOptions: topItems.formatOptions, formatValue: formatValue, label: tabItem.label.toString(), totalValue: tabs.total.value, units: tabItem.units, value: tabItem.total })))));\n        };\n        this.handleTabChange = (tabId) => {\n            this.props.updateTab(this.props.id, tabId);\n        };\n    }\n    componentDidMount() {\n        const { fetchReports, widgetId } = this.props;\n        fetchReports(widgetId);\n    }\n    render() {\n        const { t, titleKey, trend, details, current, previous, availableTabs, currentTab, reportType, status, } = this.props;\n        const today = new Date();\n        const month = getMonth(today);\n        const endDate = formatDate(today, 'Do');\n        const startDate = formatDate(startOfMonth(today), 'Do');\n        const title = t(titleKey, { endDate, month, startDate });\n        const subTitle = t('aws_dashboard.widget_subtitle', {\n            endDate,\n            month,\n            startDate,\n            count: getDate(today),\n        });\n        const detailLabel = t(details.labelKey, {\n            context: details.labelKeyContext,\n        });\n        const detailsLink = reportType === \"cost\" /* cost */ && (React.createElement(Link, { to: this.buildDetailsLink() }, this.getDetailsLinkTitle(currentTab)));\n        const trendTitle = t(trend.titleKey);\n        const currentData = transformAwsReport(current, trend.type);\n        const previousData = transformAwsReport(previous, trend.type);\n        return (React.createElement(AwsReportSummary, { title: title, subTitle: subTitle, detailsLink: detailsLink, status: status },\n            React.createElement(AwsReportSummaryDetails, { report: current, formatValue: formatValue, label: detailLabel, formatOptions: details.formatOptions }),\n            React.createElement(AwsReportSummaryTrend, { title: trendTitle, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, previousData: previousData }),\n            React.createElement(Tabs, { tabs: availableTabs.map(tab => ({\n                    id: tab,\n                    label: this.getTabTitle(tab),\n                    content: this.renderTab,\n                })), selected: currentTab, onChange: this.handleTabChange })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, current: awsReportsSelectors.selectReport(state, widget.reportType, queries.current), previous: awsReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabs: awsReportsSelectors.selectReport(state, widget.reportType, queries.tabs), status: awsReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current) });\n});\nconst mapDispatchToProps = {\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(AwsDashboardWidgetBase));\nexport { AwsDashboardWidget, AwsDashboardWidgetBase };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { awsDashboardSelectors } from 'store/awsDashboard';\nimport { createMapStateToProps } from 'store/common';\nimport { uiActions } from 'store/ui';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\nconst AwsDashboardBase = ({ t, openProvidersModal, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        return (React.createElement(GridItem, { xl: 4, lg: 6, key: widgetId },\n            React.createElement(AwsDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = translate()(connect(mapStateToProps, {\n    openProvidersModal: uiActions.openProvidersModal,\n})(AwsDashboardBase));\nexport default AwsDashboard;\n","/* This file is generated by createIcons.js any changes will be lost. */\nimport createIcon from '../createIcon';\n\nvar DollarSignIcon = createIcon({\n  name: 'DollarSignIcon',\n  height: 512,\n  width: 288,\n  svgPath: 'M209.2 233.4l-108-31.6C88.7 198.2 80 186.5 80 173.5c0-16.3 13.2-29.5 29.5-29.5h66.3c12.2 0 24.2 3.7 34.2 10.5 6.1 4.1 14.3 3.1 19.5-2l34.8-34c7.1-6.9 6.1-18.4-1.8-24.5C238 74.8 207.4 64.1 176 64V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48h-2.5C45.8 64-5.4 118.7.5 183.6c4.2 46.1 39.4 83.6 83.8 96.6l102.5 30c12.5 3.7 21.2 15.3 21.2 28.3 0 16.3-13.2 29.5-29.5 29.5h-66.3C100 368 88 364.3 78 357.5c-6.1-4.1-14.3-3.1-19.5 2l-34.8 34c-7.1 6.9-6.1 18.4 1.8 24.5 24.5 19.2 55.1 29.9 86.5 30v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-48.2c46.6-.9 90.3-28.6 105.7-72.7 21.5-61.6-14.6-124.8-72.5-141.7z',\n  yOffset: '',\n  xOffset: '',\n  transform: ''\n});\n\nexport default DollarSignIcon;","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200 } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    card: {\n        height: '100vh',\n        marginTop: '150px',\n    },\n    cardBody: {\n        textAlign: 'center',\n    },\n    primaryAction: {\n        marginTop: '60px',\n    },\n    subtitle: {\n        color: global_Color_200.var,\n        marginTop: '30px',\n    },\n    title: {\n        marginTop: '30px',\n    },\n});\n","import { Grid, GridItem, Title } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './emptyState.styles';\nconst EmptyState = ({ primaryAction, subTitle, title, }) => (React.createElement(\"div\", { className: css(styles.card) },\n    React.createElement(\"div\", { className: css(styles.cardBody) },\n        React.createElement(Grid, { gutter: \"lg\" },\n            React.createElement(GridItem, { md: 1, lg: 2 }),\n            React.createElement(GridItem, { md: 10, lg: 8 },\n                React.createElement(DollarSignIcon, { size: \"xl\" }),\n                React.createElement(Title, { className: css(styles.title), size: \"lg\" }, title),\n                Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n                Boolean(primaryAction) && (React.createElement(\"div\", { className: css(styles.primaryAction) }, primaryAction))),\n            React.createElement(GridItem, { md: 1, lg: 2 })))));\nexport { EmptyState };\n","/* This file is generated by createIcons.js any changes will be lost. */\nimport createIcon from '../createIcon';\n\nvar BanIcon = createIcon({\n  name: 'BanIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z',\n  yOffset: '',\n  xOffset: '',\n  transform: ''\n});\n\nexport default BanIcon;","/* This file is generated by createIcons.js any changes will be lost. */\nimport createIcon from '../createIcon';\n\nvar ErrorCircleOIcon = createIcon({\n  name: 'ErrorCircleOIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M512.073-73.143c-282.331 0-512.073 229.669-512.073 512 0 282.258 229.742 512 512.073 512 282.258 0 511.927-229.742 511.927-512 0-282.331-229.669-512-511.927-512zM512.073 826.514c-213.797 0-387.73-173.861-387.73-387.657 0-213.87 173.861-387.657 387.73-387.657 213.723 0 387.657 173.787 387.657 387.73 0 213.723-173.934 387.584-387.657 387.584v0zM730.77 316.196c0.073 4.901-1.829 9.216-5.632 13.019l-109.714 109.714 110.373 110.373c3.803 3.803 5.632 8.119 5.632 13.019s-1.975 9.216-5.778 13.093l-77.166 77.166c-3.877 3.803-8.192 5.778-13.093 5.778s-9.216-1.829-13.019-5.632l-110.373-110.373-110.373 110.373c-3.803 3.803-8.119 5.632-13.019 5.632s-9.216-1.975-13.093-5.778l-77.166-77.166c-3.803-3.877-5.778-8.192-5.778-13.093s1.829-9.216 5.632-13.019l110.373-110.373-110.373-109.714c-3.803-3.803-5.632-8.119-5.632-13.019s1.975-9.216 5.778-13.093l77.166-77.166c3.877-3.877 8.192-5.778 13.093-5.778s9.216 1.829 13.019 5.632l110.373 109.714 109.714-109.714c3.803-3.803 8.119-5.632 13.019-5.632s9.216 1.975 13.093 5.778l77.166 77.166c3.877 3.803 5.778 8.192 5.851 13.019v0z',\n  yOffset: '64',\n  xOffset: '',\n  transform: 'rotate(180 0 512) scale(-1 1)'\n});\n\nexport default ErrorCircleOIcon;","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_spacer_lg } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    card: {\n        height: '75vh',\n        paddingLeft: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        marginTop: '150px',\n    },\n    cardBody: {\n        textAlign: 'center',\n    },\n    subtitle: {\n        color: global_Color_200.var,\n        marginTop: '30px',\n    },\n    title: {\n        marginTop: '30px',\n    },\n});\n","import { Title } from '@patternfly/react-core';\nimport { BanIcon, ErrorCircleOIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './loadingState.styles';\nconst ErrorState = ({ isUnauthorized, subTitle, title, }) => (React.createElement(\"div\", { className: css(styles.card) },\n    React.createElement(\"div\", { className: css(styles.cardBody) },\n        Boolean(isUnauthorized) ? (React.createElement(BanIcon, { size: \"xl\" })) : (React.createElement(ErrorCircleOIcon, { size: \"xl\" })),\n        React.createElement(Title, { className: css(styles.title), size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))));\nexport { ErrorState };\n","/* This file is generated by createIcons.js any changes will be lost. */\nimport createIcon from '../createIcon';\n\nvar BinocularsIcon = createIcon({\n  name: 'BinocularsIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M416 48c0-8.84-7.16-16-16-16h-64c-8.84 0-16 7.16-16 16v48h96V48zM63.91 159.99C61.4 253.84 3.46 274.22 0 404v44c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32V288h32V128H95.84c-17.63 0-31.45 14.37-31.93 31.99zm384.18 0c-.48-17.62-14.3-31.99-31.93-31.99H320v160h32v160c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-44c-3.46-129.78-61.4-150.16-63.91-244.01zM176 32h-64c-8.84 0-16 7.16-16 16v48h96V48c0-8.84-7.16-16-16-16zm48 256h64V128h-64v160z',\n  yOffset: '',\n  xOffset: '',\n  transform: ''\n});\n\nexport default BinocularsIcon;","import { Title } from '@patternfly/react-core';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './loadingState.styles';\nconst LoadingState = ({ subTitle, title }) => (React.createElement(\"div\", { className: css(styles.card) },\n    React.createElement(\"div\", { className: css(styles.cardBody) },\n        React.createElement(BinocularsIcon, { size: \"xl\" }),\n        React.createElement(Title, { className: css(styles.title), size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))));\nexport { LoadingState };\n","import { Button, ButtonType, ButtonVariant, Grid, GridItem, Title, TitleSize, } from '@patternfly/react-core';\nimport { Tabs } from 'components/tabs';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions } from 'store/onboarding';\nimport { providersSelectors } from 'store/providers';\nimport { getTestProps, testIds } from 'testIds';\nimport AwsDashboard from '../awsDashboard';\nimport OcpDashboard from '../ocpDashboard';\nimport { EmptyState } from './emptyState';\nimport { ErrorState } from './errorState';\nimport { LoadingState } from './loadingState';\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            currentTab: \"aws\" /* aws */,\n        };\n        this.getAddSourceButton = () => {\n            const { openProvidersModal, t } = this.props;\n            return (React.createElement(Button, Object.assign({}, getTestProps(testIds.providers.add_btn), { onClick: openProvidersModal, type: ButtonType.submit, variant: ButtonVariant.secondary }), t('providers.add_source')));\n        };\n        this.getEmptyState = () => {\n            const { t } = this.props;\n            return (React.createElement(Grid, { gutter: \"lg\" },\n                React.createElement(GridItem, null,\n                    React.createElement(EmptyState, { primaryAction: this.getAddSourceButton(), title: t('overview.empty_state_title'), subTitle: t('overview.empty_state_desc') }))));\n        };\n        this.getErrorState = () => {\n            const { providersError, t } = this.props;\n            let isUnauthorized = false;\n            let title = t('overview.error_unexpected_title');\n            let subTitle = t('overview.error_unexpected_desc');\n            if (providersError &&\n                providersError.response &&\n                providersError.response.status === 401) {\n                isUnauthorized = true;\n                title = t('overview.error_unauthorized_title');\n                subTitle = t('overview.error_unauthorized_desc');\n            }\n            return (React.createElement(Grid, { gutter: \"lg\" },\n                React.createElement(GridItem, null,\n                    React.createElement(ErrorState, { isUnauthorized: isUnauthorized, title: title, subTitle: subTitle }))));\n        };\n        this.getLoadingState = () => {\n            const { t } = this.props;\n            return (React.createElement(Grid, { gutter: \"lg\" },\n                React.createElement(GridItem, null,\n                    React.createElement(LoadingState, { title: t('overview.loading_state_title'), subTitle: t('overview.loading_state_desc') }))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"aws\" /* aws */) {\n                return t('overview.aws');\n            }\n            else if (tab === \"ocp\" /* ocp */) {\n                return t('overview.ocp');\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            const { currentTab } = this.state;\n            return (React.createElement(Tabs, { isShrink: Boolean(true), tabs: availableTabs.map(tab => ({\n                    id: tab,\n                    label: this.getTabTitle(tab),\n                    content: this.renderTab,\n                })), selected: currentTab, onChange: this.handleTabChange }));\n        };\n        this.handleTabChange = (tabId) => {\n            this.setState({ currentTab: tabId });\n        };\n        this.renderTab = (tabData) => {\n            const currentTab = tabData.id;\n            if (currentTab === \"aws\" /* aws */) {\n                return React.createElement(AwsDashboard, null);\n            }\n            else {\n                return React.createElement(OcpDashboard, null);\n            }\n        };\n    }\n    render() {\n        const { providers, providersError, providersFetchStatus, t } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"section\", { className: \"pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light\" },\n                React.createElement(\"header\", { className: \"pf-u-display-flex pf-u-justify-content-space-between pf-u-align-items-center\" },\n                    React.createElement(Title, { size: TitleSize.lg }, t('overview.title')),\n                    this.getAddSourceButton())),\n            React.createElement(\"section\", { className: \"pf-l-page__main-section pf-c-page__main-section\", \"page-type\": \"cost-management-overview\" }, Boolean(providersError)\n                ? this.getErrorState()\n                : Boolean(providers &&\n                    providers.count > 0 &&\n                    providersFetchStatus === 2 /* complete */)\n                    ? this.getTabs()\n                    : Boolean(providers &&\n                        providers.count === 0 &&\n                        providersFetchStatus === 2 /* complete */)\n                        ? this.getEmptyState()\n                        : this.getLoadingState())));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    const availableTabs = [];\n    const providers = providersSelectors.selectProviders(state);\n    if (providers && providers.results) {\n        let showAWSTab = false;\n        let showOCPTab = false;\n        for (const result of providers.results) {\n            if (result.type === 'AWS') {\n                showAWSTab = true;\n            }\n            else if (result.type === 'OCP') {\n                showOCPTab = true;\n            }\n        }\n        if (showAWSTab) {\n            availableTabs.push(\"aws\" /* aws */);\n        }\n        if (showOCPTab) {\n            availableTabs.push(\"ocp\" /* ocp */);\n        }\n    }\n    return {\n        availableTabs,\n        providers,\n        providersError: providersSelectors.selectProvidersError(state),\n        providersFetchStatus: providersSelectors.selectProvidersFetchStatus(state),\n    };\n});\nconst Overview = translate()(connect(mapStateToProps, {\n    openProvidersModal: onboardingActions.openModal,\n})(OverviewBase));\nexport default Overview;\n","import { hot } from 'react-hot-loader';\nimport OcpDashboard from './ocpDashboard';\nexport default hot(module)(OcpDashboard);\n","import { hot } from 'react-hot-loader';\nimport AwsDashboard from './awsDashboard';\nexport default hot(module)(AwsDashboard);\n","import { hot } from 'react-hot-loader';\nimport Overview from './overview';\nexport default hot(module)(Overview);\n"],"sourceRoot":""}