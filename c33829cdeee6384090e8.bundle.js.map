{"version":3,"sources":["webpack:///./src/utils/formatValue.ts","webpack:///./src/components/charts/common/chartUtils.ts","webpack:///./src/components/charts/common/chart.styles.ts","webpack:///./src/components/charts/chartTheme/theme-koku.ts","webpack:///./src/components/charts/chartTheme/index.ts","webpack:///./src/components/charts/chartTheme/theme-utils.ts","webpack:///./src/utils/computedReport/getComputedReportItems.ts","webpack:///./src/utils/computedReport/getItemLabel.ts","webpack:///./src/testIds.ts","webpack:///./src/components/state/loadingState/loadingState.tsx","webpack:///./src/components/state/emptyValueState/emptyValueState.styles.ts","webpack:///./src/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/utils/sort.ts","webpack:///./src/components/reports/reportSummary/reportSummary.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummary.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItem.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryItem.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItems.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryItems.tsx","webpack:///./src/components/charts/costChart/costChart.styles.ts","webpack:///./src/components/charts/costChart/costChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryCost.tsx","webpack:///./src/components/charts/trendChart/trendChart.styles.ts","webpack:///./src/components/charts/trendChart/trendChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.tsx","webpack:///./src/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/components/charts/usageChart/usageChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.tsx","webpack:///./src/pages/state/noProviders/noProvidersState.styles.ts","webpack:///./src/pages/state/noProviders/noProvidersState.tsx","webpack:///./src/utils/pathname.ts","webpack:///./src/pages/state/noProviders/notProviders.tsx","webpack:///./src/pages/state/noProviders/index.ts","webpack:///./src/pages/state/loading/loading.tsx","webpack:///./src/pages/state/loading/index.ts","webpack:///./src/pages/dashboard/components/dashboardBase.tsx","webpack:///./src/pages/dashboard/components/dashboardWidget.styles.ts","webpack:///./src/pages/dashboard/components/dashboardWidgetBase.tsx","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboard.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboard.tsx","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboard.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboard.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboard.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboard.tsx","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboard.tsx","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboard.tsx","webpack:///./src/pages/overview/overview.styles.ts","webpack:///./src/pages/overview/perspective.styles.ts","webpack:///./src/pages/overview/perspective.tsx","webpack:///./src/pages/overview/overview.tsx","webpack:///./src/pages/overview/index.ts"],"names":["unitLookupKey","unit","lookup","toLowerCase","formatValue","value","options","fValue","formatCurrency","formatUsageGb","formatUsageHrs","unknownTypeFormatter","_unit","fractionDigits","toLocaleString","minimumFractionDigits","maximumFractionDigits","style","currency","transformReport","report","type","key","reportItem","reportItemValue","items","idKey","sortKey","sortDirection","computedItems","result","map","i","createDatum","reduce","acc","d","prevValue","length","y","datums","firstDate","Date","lastDate","padDate","getDate","setDate","id","push","padComputedReportItems","computedItem","xVal","label","yVal","n","Number","parseFloat","toFixed","isInt","x","name","units","undefined","getDateRange","firstOfMonth","lastOfMonth","offset","start","end","today","setMonth","getMonth","getDatumDateRange","getMaxValue","max","forEach","datum","getTooltipContent","t","getCostRangeString","count","endDate","month","startDate","year","getUsageRangeString","chartOverride","LAYOUT_PROPS","padding","area","Object","assign","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","ChartTheme","default","getComputedReportItems","labelKey","sort","getUnsortedComputedReportItems","direction","itemMap","Map","visitDataPoint","dataPoint","values","idSuffix","cluster","org_unit_id","mapId","cluster_alias","clusters","capacity","cost","total","deltaPercent","delta_percent","deltaValue","delta_value","source_uuid","supplementary","infrastructure","itemLabelKey","String","meta","group_by","keys","indexOf","tagPrefixKey","hasOwnProperty","getItemLabel","alias","account_alias","limit","request","usage","item","get","set","Array","data","from","getTestProps","testIds","details","cluster_lnk","historical_data_btn","show_more_btn","tag_lnk","view_all_btn","export","cancel_btn","submit_btn","login","alert","form","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","s3_input","clusterid_input","arn_input","providers","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","view_all_link","sidebar","nav","link","backdrop","LoadingState","icon","title","subTitle","createElement","variant","large","className","size","headingLevel","styles","container","fontSize","EmptyValueState","getValueForItem","array","a","b","aVal","bVal","chartSkeleton","height","marginBottom","global_spacer_md","marginTop","legendSkeleton","reportSummary","subtitle","display","global_FontSize_xs","color","global_Color_200","var","ReportSummary","children","detailsLink","status","Card","CardTitle","Title","Boolean","CardBody","Fragment","Skeleton","xs","md","sm","CardFooter","flexGrow","minHeight","marginRight","tops","global_spacer_lg","ReportSummaryAlt","tabs","Grid","hasGutter","GridItem","lg","xl","reportSummaryDetails","alignItems","text","paddingBottom","global_spacer_sm","lineHeight","global_LineHeight_sm","paddingLeft","global_spacer_xs","whiteSpace","global_Color_100","global_FontSize_4xl","valueContainer","width","wordWrap","ReportSummaryDetails","chartType","computedReportItem","computedReportItemValue","costLabel","formatOptions","requestFormatOptions","requestLabel","showTooltip","showUnits","showUsageFirst","usageFormatOptions","usageLabel","supplementaryCost","infrastructureCost","hasTotal","hasCost","hasCount","hasSupplementaryCost","hasInfrastructureCost","hasRequest","hasUsage","getCostLayout","Tooltip","content","enableFlip","getRequestLayout","usageUnits","_units","unitsLabel","getUsageLayout","reportSummaryItem","ReportSummaryItemBase","totalValue","percentVal","percentLabel","percent","Progress","defaultProps","v","ReportSummaryItem","skeleton","Component","nextProps","this","props","otherIndex","findIndex","toString","includes","slice","getItems","ReportSummaryItems","chartStyles","currentColorScale","chart_color_green_100","chart_color_green_200","chart_color_green_300","chart_color_green_400","chart_color_green_500","currentCostData","fill","currentInfrastructureCostData","strokeDasharray","itemsPerRow","previousCostData","previousInfrastructureCostData","previousColorScale","global_disabled_color_200","yAxis","axisLabel","grid","stroke","ticks","tickLabels","xAxis","super","arguments","containerRef","createRef","state","hiddenSeries","Set","initDatum","costKey","setState","CursorVoronoiContainer","series","childName","legendItem","symbol","handleNavToggle","setTimeout","handleResize","current","clientWidth","getChart","index","ChartArea","has","interpolation","getContainer","cursorDimension","labels","isDataAvailable","getTooltipLabel","labelComponent","ChartLegendTooltip","legendData","getLegendData","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getLegend","legendItemsPerRow","ChartLegend","gutter","responsive","formatDatumValue","formatDatumOptions","formatter","handleLegendClick","delete","add","unavailable","s","isSeriesHidden","getChartNames","serie","getEvents","chartNames","isHidden","legendName","onLegendClick","window","addEventListener","navToggle","insights","chrome","on","prevProps","removeEventListener","domain","maxCurrentInfrastructure","maxCurrentUsage","maxPreviousInfrastructure","maxPreviousUsage","maxValue","Math","ceil","currentInfrastructureDate","currentUsageDate","previousInfrastructureDate","previousUsageDate","adjustContainerHeight","containerHeight","getDomain","getEndDate","midDate","floor","adjustedContainerHeight","ref","Chart","containerComponent","events","legendComponent","legendPosition","theme","ChartAxis","tickValues","dependentAxis","ReportSummaryCost","currentMonthData","previousMonthData","currentData","previousData","showSupplementaryLabel","showUsageLegendLabel","orientation","maxCurrent","maxPrevious","previousDate","currentDate","ReportSummaryTrend","chartContainer","currentRequestData","currentUsageData","legendColorScale","previousRequestData","previousUsageData","maxCurrentRequest","maxPreviousRequest","currentRequestDate","previousRequestDate","ReportSummaryUsage","viewSources","getViewSources","release","pathName","location","pathname","split","shift","getReleasePath","href","EmptyState","EmptyStateIcon","EmptyStateBody","NoProvidersState","withRouter","Main","DashboardBase","DashboardWidget","selectWidgets","widgets","widgetId","widget","showHorizontal","xl2","chartAltHeight","chartHeight","containerAltHeight","containerTrendHeight","containerUsageHeight","global_spacer_2xl","tabItems","global_spacer_xl","activeTabKey","buildDetailsLink","tab","getIdKeyForTab","currentTab","viewAllPath","order_by","getCostChart","getTrendChart","getUsageChart","currentReport","previousReport","trend","getUnits","titleKey","currentInfrastructureData","previousInfrastructureData","getDetails","getDetailsLabel","requestKey","usageKey","getDetailsLink","Link","to","onClick","handleInsightsNavClick","getDetailsLinkTitle","groupBy","getHorizontalLayout","currentReportFetchStatus","getSubTitle","getTabs","getTitle","adjustChartContainerHeight","getTab","tabsReport","tabsReportFetchStatus","Tab","eventKey","TabTitleText","getTabTitle","getTabItem","availableTabs","topItems","activeTab","Tabs","isFilled","activeKey","onSelect","handleTabClick","getVerticalLayout","appNavId","appNavClick","secondaryNav","event","tabIndex","updateTab","fetchReports","mapStateToProps","awsCloudDashboard","selectWidget","queries","selectWidgetQueries","selectReport","reportPathsType","reportType","selectReportFetchStatus","previous","mapDispatchToProps","fetchWidgetReports","changeWidgetTab","AwsCloudDashboardWidget","selectCurrentWidgets","awsDashboard","AwsDashboardWidget","azureCloudDashboard","AzureCloudDashboardWidget","azureDashboard","AzureDashboardWidget","ocpCloudDashboard","OcpCloudDashboardWidget","ocpDashboard","currentQuery","previousQuery","tabsQuery","OcpDashboardWidget","ocpSupplementaryDashboard","OcpSupplementaryDashboardWidget","ocpUsageDashboard","OcpUsageDashboardWidget","info","marginLeft","verticalAlign","infoIcon","global_FontSize_md","infoTitle","fontWeight","perspective","headerOverride","perspectiveSelector","perspectiveLabel","defaultState","isPerspectiveOpen","getDropDownItems","option","DropdownItem","component","handleClick","getCurrentLabel","currentItem","onItemClicked","handleSelect","handleToggle","dropdownItems","Dropdown","toggle","DropdownToggle","onToggle","isOpen","Perspective","ocpOptions","infrastructureAllCloudOptions","infrastructureAwsOptions","infrastructureAzureOptions","infrastructureOcpOptions","showPopover","getAvailableTabs","isAwsAvailable","isAzureAvailable","isOcpAvailable","isOcpCloudAvailable","contentRef","getCurrentTab","getDefaultInfrastructurePerspective","getDefaultOcpPerspective","getPerspective","currentInfrastructurePerspective","currentOcpPerspective","handlePerspectiveClick","tabContentId","tabContentRef","getTabContent","val","TabContent","emptyTab","handlePopoverClick","show","awsProviders","azureProviders","ocpProviders","prevState","awsProvidersFetchStatus","azureProvidersFetchStatus","ocpProvidersFetchStatus","isLoading","noAwsProviders","noAzureProviders","noOcpProviders","noProviders","showTabs","Popover","bodyContent","awsProvidersQueryString","selectProviders","selectProvidersFetchStatus","azureProvidersQueryString","ocpProvidersQueryString"],"mappings":"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","file":"c33829cdeee6384090e8.bundle.js","sourcesContent":["export const unitLookupKey = unit => {\n    const lookup = unit ? unit.toLowerCase() : '';\n    switch (lookup) {\n        case 'usd':\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'core-hours':\n        case 'hrs':\n        case 'tag-mo':\n        case 'vm-hours':\n            return lookup;\n        default:\n            return '';\n    }\n};\nexport const formatValue = (value, unit, options = {}) => {\n    const lookup = unitLookupKey(unit);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'usd':\n            return formatCurrency(fValue, lookup, options);\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'tag-mo':\n        case 'vm-hours':\n            return formatUsageGb(fValue, lookup, options);\n        case 'core-hours':\n        case 'hrs':\n            return formatUsageHrs(fValue, lookup, options);\n        default:\n            return unknownTypeFormatter(fValue, lookup, options);\n    }\n};\nconst unknownTypeFormatter = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatCurrency = (value, unit, { fractionDigits = 2 } = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    return fValue.toLocaleString('en', {\n        style: 'currency',\n        currency: unit || 'USD',\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageGb = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageHrs = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\n","import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getYear from 'date-fns/get_year';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nimport { unitLookupKey, } from 'utils/formatValue';\nexport function transformReport(report, type = 1 /* daily */, key = 'date', reportItem = 'cost', reportItemValue = 'total') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        idKey: key,\n        report,\n        reportItemValue,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedReportItems(items);\n    let result;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        result = computedItems.map(i => createDatum(i[reportItem], i, key, reportItem));\n    }\n    else {\n        result = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            return [\n                ...acc,\n                createDatum(prevValue + d[reportItem], d, key, reportItem),\n            ];\n        }, []);\n    }\n    return key === 'date' ? padComputedReportItems(result) : result;\n}\nexport function createDatum(value, computedItem, idKey = 'date', reportItem = 'cost') {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value)\n        ? parseFloat(value.toFixed(2))\n        : isInt(value)\n            ? value\n            : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.id,\n        name: computedItem.id,\n        units: computedItem.units ? computedItem.units[reportItem] : undefined,\n    };\n}\n// This pads computed report items with null datum objects, representing missing data at the begining and end of the\n// data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n// message in the tooltip, which helps distinguish between zero values and when there is no data available.\nexport function padComputedReportItems(datums) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    // Pad start for missing data\n    let padDate = startOfMonth(firstDate);\n    for (let i = padDate.getDate(); i < firstDate.getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createDatum(null, { id }, 'date', null));\n    }\n    // Fill middle with existing data\n    result.push(...datums);\n    // Pad end for missing data\n    padDate = new Date(lastDate);\n    for (let i = padDate.getDate() + 1; i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createDatum(null, { id }, 'date', null));\n    }\n    return result;\n}\nexport function getDatumDateRange(datums, offset = 0) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        // If datums is empty, obtain the month based on offset (e.g., to show previous month in chart legends)\n        if (offset) {\n            today.setMonth(today.getMonth() - offset);\n        }\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    const start = new Date(datums[0].key + 'T00:00:00');\n    const end = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDatumDateRange(datums, offset);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(`chart.date_range`, {\n        count: getDate(end),\n        endDate: formatDate(end, 'DD'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'DD'),\n        year: getYear(end),\n    });\n}\nexport function getMonthRangeString(datums, key = 'chart.month_legend_label', offset = 0) {\n    const [start, end] = getDateRange(datums, true, false, offset);\n    return [\n        i18next.t(key, {\n            month: Number(formatDate(start, 'M')) - 1,\n        }),\n        i18next.t(key, {\n            month: Number(formatDate(end, 'M')) - 1,\n        }),\n    ];\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'core-hours':\n            case 'hrs':\n            case 'gb':\n            case 'gb-hours':\n            case 'gb-mo':\n            case 'vm-hours':\n                return i18next.t(`unit_tooltips.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date', units) {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'DD MMM YYYY');\n        return `${date} ${formatValue(datum.y, units ? units : datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nexport function getCostRangeString(datums, key = 'chart.cost_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(key, {\n        count: getDate(end),\n        endDate: formatDate(end, 'D'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'D'),\n        year: getYear(end),\n    });\n}\nexport function getUsageRangeString(datums, key = 'chart.usage_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    return getCostRangeString(datums, key, firstOfMonth, lastOfMonth, offset);\n}\nfunction isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nfunction isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\n","import { global_Color_dark_100, global_Color_light_100, global_primary_color_100, global_primary_color_200, global_success_color_100, global_success_color_200, } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const chartStyles = {\n    padding: 8,\n    group: {\n        data: { strokeWidth: 2, fillOpacity: 0.4 },\n    },\n    tooltipText: {\n        fontSize: '14px',\n        fill: global_Color_light_100.value,\n    },\n    tooltipFlyout: { fill: global_Color_dark_100.value },\n    previousMonth: {\n        data: {\n            fill: global_success_color_200.value,\n            stroke: global_success_color_100.value,\n        },\n    },\n    currentMonth: {\n        data: {\n            fill: global_primary_color_100.value,\n            stroke: global_primary_color_200.value,\n        },\n    },\n};\nexport const chartOverride = css `\n  :not(foo) svg {\n    overflow: visible;\n  }\n`;\n","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, ChartThemeVariant, getCustomTheme, } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, ChartThemeVariant.default, ChartTheme);\nexport default getTheme;\n","import { sort } from 'utils/sort';\nimport { getItemLabel } from './getItemLabel';\nexport function getComputedReportItems({ idKey, labelKey = idKey, report, reportItemValue = 'total', sortDirection = 0 /* asc */, sortKey = 'cost', }) {\n    return sort(getUnsortedComputedReportItems({\n        idKey,\n        labelKey,\n        report,\n        reportItemValue,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedReportItems({ report, idKey, labelKey = idKey, reportItemValue = 'total', }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            const type = dataPoint.type;\n            dataPoint.values.forEach((value) => {\n                // Ensure unique map IDs -- https://github.com/project-koku/koku-ui/issues/706\n                const idSuffix = idKey !== 'date' && idKey !== 'cluster' && value.cluster\n                    ? `-${value.cluster}`\n                    : '';\n                // org_unit_id workaround for storage and instance-type APIs\n                const id = idKey === 'org_entities' ? value.id || value.org_unit_id : value[idKey];\n                const mapId = `${id}${idSuffix}`;\n                // clusters will either contain the cluster alias or default to cluster ID\n                const cluster_alias = value.clusters && value.clusters.length > 0\n                    ? value.clusters[0]\n                    : undefined;\n                const cluster = cluster_alias || value.cluster;\n                const clusters = value.clusters ? value.clusters : [];\n                const capacity = value.capacity ? value.capacity.value : 0;\n                const cost = value.cost && value.cost.total ? value.cost.total.value : 0;\n                const deltaPercent = value.delta_percent ? value.delta_percent : 0;\n                const deltaValue = value.delta_value ? value.delta_value : 0;\n                const source_uuid = value.source_uuid ? value.source_uuid : [];\n                const supplementary = value.supplementary && value.supplementary.total\n                    ? value.supplementary.total.value\n                    : 0;\n                const infrastructure = value.infrastructure && value.infrastructure[reportItemValue]\n                    ? value.infrastructure[reportItemValue].value\n                    : 0;\n                let label;\n                const itemLabelKey = getItemLabel({ report, labelKey, value });\n                if (itemLabelKey === 'org_entities' && value.alias) {\n                    label = value.alias;\n                }\n                else if (itemLabelKey === 'account' && value.account_alias) {\n                    label = value.account_alias;\n                }\n                else if (itemLabelKey === 'cluster' && cluster_alias) {\n                    label = cluster_alias;\n                }\n                else if (value[itemLabelKey] instanceof Object) {\n                    label = value[itemLabelKey].value;\n                }\n                else {\n                    label = value[itemLabelKey];\n                }\n                const limit = value.limit ? value.limit.value : 0;\n                const request = value.request ? value.request.value : 0;\n                const usage = value.usage ? value.usage.value : 0;\n                const units = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (value.capacity && { capacity: value.capacity.units })), { cost: value.cost && value.cost.total ? value.cost.total.units : 'USD' }), (value.limit && { limit: value.limit.units })), (value.infrastructure &&\n                    value.infrastructure.total && {\n                    infrastructure: value.infrastructure.total.units,\n                })), (value.request && { request: value.request.units })), (value.supplementary &&\n                    value.supplementary.total && {\n                    supplementary: value.supplementary.total.units,\n                })), (value.usage && { usage: value.usage.units }));\n                const item = itemMap.get(mapId);\n                if (item) {\n                    itemMap.set(mapId, Object.assign(Object.assign({}, item), { capacity: item.capacity + capacity, cost: item.cost + cost, supplementary: item.supplementary + supplementary, infrastructure: item.infrastructure + infrastructure, limit: item.limit + limit, request: item.request + request, usage: item.usage + usage }));\n                }\n                else {\n                    itemMap.set(mapId, {\n                        capacity,\n                        cluster,\n                        clusters,\n                        cost,\n                        deltaPercent,\n                        deltaValue,\n                        source_uuid,\n                        supplementary,\n                        id,\n                        infrastructure,\n                        label,\n                        limit,\n                        request,\n                        type,\n                        units,\n                        usage,\n                    });\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import { tagPrefix } from 'api/queries/query';\nexport function getItemLabel({ report, labelKey, value }) {\n    let itemLabelKey = String(labelKey);\n    if (report.meta && report.meta.group_by) {\n        const group_by = report.meta.group_by;\n        for (const key of Object.keys(group_by)) {\n            if (key.indexOf(tagPrefix)) {\n                const tagPrefixKey = tagPrefix + labelKey;\n                if (value.hasOwnProperty(tagPrefixKey)) {\n                    itemLabelKey = tagPrefixKey;\n                }\n            }\n        }\n    }\n    return itemLabelKey;\n}\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        cluster_lnk: 'cluster-lnk',\n        historical_data_btn: 'historical-data-btn',\n        show_more_btn: 'show-more-btn',\n        tag_lnk: 'tag-lnk',\n        view_all_btn: 'view-all-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n        view_all_link: 'view-all-lnk',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import { EmptyState, EmptyStateBody, EmptyStateVariant, Spinner, Title, } from '@patternfly/react-core';\nimport { BinocularsIcon } from '@patternfly/react-icons/dist/js/icons/binoculars-icon';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nconst LoadingStateBase = ({ icon = BinocularsIcon, t, }) => {\n    const title = t('loading_state.sources_title');\n    const subTitle = t('loading_state.sources_desc');\n    return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n        React.createElement(Spinner, { size: \"lg\" }),\n        React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, title),\n        React.createElement(EmptyStateBody, null, subTitle)));\n};\nconst LoadingState = translate()(LoadingStateBase);\nexport { LoadingState };\n","import { global_FontSize_sm } from '@patternfly/react-tokens';\nexport const styles = {\n    container: {\n        fontSize: global_FontSize_sm.value,\n    },\n};\n","import { MinusIcon } from '@patternfly/react-icons/dist/js/icons/minus-icon';\nimport React from 'react';\nimport { styles } from './emptyValueState.styles';\nexport const EmptyValueState = () => {\n    return (React.createElement(\"span\", { style: styles.container },\n        React.createElement(MinusIcon, null)));\n};\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */\n            ? getValueForItem(a, options)\n            : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */\n            ? getValueForItem(b, options)\n            : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n","import { global_Color_200, global_FontSize_xs, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = {\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n};\n","import { Card, CardBody, CardFooter, CardTitle, Title, } from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './reportSummary.styles';\nconst ReportSummaryBase = ({ children, detailsLink, title, subTitle, status, t, }) => (React.createElement(Card, { style: styles.reportSummary },\n    React.createElement(CardTitle, null,\n        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { style: styles.subtitle }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: SkeletonSize.xs }),\n        React.createElement(Skeleton, { style: styles.chartSkeleton, size: SkeletonSize.md }),\n        React.createElement(Skeleton, { size: SkeletonSize.sm }),\n        React.createElement(Skeleton, { style: styles.legendSkeleton, size: SkeletonSize.xs }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst ReportSummary = translate()(ReportSummaryBase);\nexport { ReportSummary };\n","import { global_Color_200, global_FontSize_xs, global_spacer_lg, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = {\n    chartSkeleton: {\n        height: '175px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '470px',\n        marginRight: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Card, CardBody, CardFooter, CardTitle, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './reportSummaryAlt.styles';\nconst OcpCloudReportSummaryAltBase = ({ children, detailsLink, status, subTitle, t, tabs, title, }) => (React.createElement(Card, { style: styles.reportSummary },\n    React.createElement(Grid, { hasGutter: true },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { style: styles.cost },\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n                    Boolean(subTitle) && React.createElement(\"p\", { style: styles.subtitle }, subTitle)),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: SkeletonSize.xs }),\n                    React.createElement(Skeleton, { style: styles.chartSkeleton, size: SkeletonSize.md }),\n                    React.createElement(Skeleton, { size: SkeletonSize.sm }),\n                    React.createElement(Skeleton, { style: styles.legendSkeleton, size: SkeletonSize.xs }))) : (children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { style: styles.container },\n                React.createElement(\"div\", { style: styles.tops }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst ReportSummaryAlt = translate()(OcpCloudReportSummaryAltBase);\nexport { ReportSummaryAlt };\n","import { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, global_spacer_xs, } from '@patternfly/react-tokens';\nexport const styles = {\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    text: {\n        paddingBottom: global_spacer_sm.value,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    units: {\n        paddingLeft: global_spacer_xs.value,\n        paddingBottom: global_spacer_sm.value,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n        whiteSpace: 'nowrap',\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    valueContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        width: '50%',\n        wordWrap: 'break-word',\n    },\n};\n","import { Tooltip } from '@patternfly/react-core';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey, } from 'utils/formatValue';\nimport { styles } from './reportSummaryDetails.styles';\nconst ReportSummaryDetailsBase = ({ chartType, computedReportItem = 'cost', computedReportItemValue = 'total', costLabel, formatValue, formatOptions, report, requestFormatOptions, requestLabel, showTooltip = false, showUnits = false, showUsageFirst = false, t, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let supplementaryCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const hasTotal = report && report.meta && report.meta.total;\n    const hasCost = hasTotal && report.meta.total.cost && report.meta.total.cost.total;\n    const hasCount = hasTotal && report.meta.total.count;\n    const hasSupplementaryCost = hasTotal &&\n        report.meta.total.supplementary &&\n        report.meta.total.supplementary.total &&\n        report.meta.total.supplementary.total.value;\n    const hasInfrastructureCost = hasTotal &&\n        report.meta.total.infrastructure &&\n        report.meta.total.infrastructure[computedReportItemValue] &&\n        report.meta.total.infrastructure[computedReportItemValue].value;\n    const hasRequest = hasTotal && report.meta.total.request;\n    const hasUsage = hasTotal && report.meta.total.usage;\n    if (hasTotal) {\n        cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD', formatOptions);\n        supplementaryCost = formatValue(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost\n            ? report.meta.total.supplementary.total.units\n            : 'USD', formatOptions);\n        infrastructureCost = formatValue(hasInfrastructureCost\n            ? report.meta.total.infrastructure[computedReportItemValue].value\n            : 0, hasInfrastructureCost\n            ? report.meta.total.infrastructure[computedReportItemValue].units\n            : 'USD', formatOptions);\n        request = formatValue(hasRequest ? report.meta.total.request.value : 0, hasRequest ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        if (hasUsage && report.meta.total.usage.value >= 0) {\n            usage = formatValue(hasUsage ? report.meta.total.usage.value : 0, hasUsage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            // Workaround for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatValue(hasUsage ? report.meta.total.usage : 0, hasCount ? report.meta.total.count.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = () => {\n        let value = cost;\n        if (computedReportItem === \"infrastructure\" /* infrastructure */) {\n            value = infrastructureCost;\n        }\n        else if (computedReportItem === \"supplementary\" /* supplementary */) {\n            value = supplementaryCost;\n        }\n        return (React.createElement(\"div\", { style: styles.valueContainer },\n            Boolean(showTooltip) ? (React.createElement(Tooltip, { content: t('dashboard.total_cost_tooltip', {\n                    infrastructureCost,\n                    supplementaryCost,\n                }), enableFlip: true },\n                React.createElement(\"div\", { style: styles.value }, value))) : (React.createElement(\"div\", { style: styles.value }, value)),\n            React.createElement(\"div\", { style: styles.text },\n                React.createElement(\"div\", null, costLabel))));\n    };\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasRequest\n            ? report.meta.total.request.units\n            : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { style: styles.valueContainer },\n            React.createElement(\"div\", { style: styles.value },\n                request,\n                Boolean(showUnits &&\n                    (units || (hasRequest && report.meta.total.request.value >= 0))) && React.createElement(\"span\", { style: styles.units }, unitsLabel)),\n            React.createElement(\"div\", { style: styles.text },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasUsage ? report.meta.total.usage.units : '';\n        // added as a work-around for azure #1079\n        const _units = unitLookupKey(units ? units : usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { style: styles.valueContainer },\n            React.createElement(\"div\", { style: styles.value },\n                usage,\n                Boolean(showUnits &&\n                    (units || (hasUsage && report.meta.total.usage.value >= 0))) && React.createElement(\"span\", { style: styles.units }, unitsLabel)),\n            React.createElement(\"div\", { style: styles.text },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (chartType === \"cost\" /* cost */ ||\n        chartType === \"supplementary\" /* supplementary */) {\n        return React.createElement(React.Fragment, null, getCostLayout());\n    }\n    else if (chartType === \"trend\" /* trend */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(),\n            getUsageLayout()));\n    }\n    else if (chartType === \"usage\" /* usage */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n    else {\n        return null;\n    }\n};\nconst ReportSummaryDetails = translate()(ReportSummaryDetailsBase);\nexport { ReportSummaryDetails };\n","import { global_spacer_md } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const reportSummaryItem = css `\n  :not(:last-child) {\n    margin-bottom: ${global_spacer_md.value};\n  }\n`;\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { reportSummaryItem } from './reportSummaryItem.styles';\nconst ReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: reportSummaryItem },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst ReportSummaryItem = translate()(ReportSummaryItemBase);\nexport { ReportSummaryItem };\n","import { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = {\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n};\n","import { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nimport { styles } from './reportSummaryItems.styles';\nclass ReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { computedReportItemValue = 'total', idKey, labelKey, report, } = this.props;\n        const computedItems = getComputedReportItems({\n            report,\n            idKey,\n            labelKey,\n            reportItemValue: computedReportItemValue,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: SkeletonSize.md }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, style: styles.skeleton }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, style: styles.skeleton }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, style: styles.skeleton })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst ReportSummaryItems = translate()(ReportSummaryItemsBase);\nexport { ReportSummaryItems, };\n","import { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    currentCostData: {\n        fill: 'none',\n    },\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    itemsPerRow: 2,\n    previousCostData: {\n        fill: 'none',\n    },\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_200.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './costChart.styles';\nclass CostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                // Note: Container order is important\n                CursorVoronoiContainer: createContainer('cursor', 'voronoi'),\n                series: [\n                    {\n                        childName: 'previousCost',\n                        data: previousCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'currentCost',\n                        data: currentCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentCostData, costKey, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'previousInfrastructureCost',\n                        data: previousInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[1],\n                                type: 'dash',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                        },\n                    },\n                    {\n                        childName: 'currentInfrastructureCost',\n                        data: currentInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[1],\n                                type: 'dash',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentColorScale[1] }),\n                        },\n                    },\n                ],\n            });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            const { CursorVoronoiContainer } = this.state;\n            if (!CursorVoronoiContainer) {\n                return undefined;\n            }\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData() }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > 400\n                    ? chartStyles.itemsPerRow\n                    : 1;\n            return (React.createElement(ChartLegend, { height: 25, gutter: 10, itemsPerRow: itemsPerRow, name: \"legend\", responsive: false }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null\n                ? formatter(datum.y, datum.units, formatDatumOptions)\n                : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign({ childName: s.childName }, s.legendItem), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n            return undefined;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !==\n            this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.previousInfrastructureCostData !==\n                this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentInfrastructure = currentInfrastructureCostData\n            ? getMaxValue(currentInfrastructureCostData)\n            : 0;\n        const maxCurrentUsage = currentCostData ? getMaxValue(currentCostData) : 0;\n        const maxPreviousInfrastructure = previousInfrastructureCostData\n            ? getMaxValue(previousInfrastructureCostData)\n            : 0;\n        const maxPreviousUsage = previousCostData\n            ? getMaxValue(previousCostData)\n            : 0;\n        const maxValue = Math.max(maxCurrentInfrastructure, maxCurrentUsage, maxPreviousInfrastructure, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentCostData\n            ? getDate(getDateRange(currentCostData, true, true)[1])\n            : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData\n            ? getDate(getDateRange(previousCostData, true, true)[1])\n            : 0;\n        return currentInfrastructureDate > 0 ||\n            currentUsageDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentUsageDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 75\n            : containerHeight;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: chartOverride, ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                    series &&\n                        series.map((s, index) => {\n                            return this.getChart(s, index);\n                        }),\n                    React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                    React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis })))));\n    }\n}\nexport { CostChart };\n","import { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = {\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n};\n","import { CostChart } from 'components/charts/costChart';\nimport React from 'react';\nimport { styles } from './reportSummaryTrend.styles';\nconst ReportSummaryCost = props => (React.createElement(\"div\", { style: styles.chart },\n    React.createElement(CostChart, Object.assign({}, props))));\nexport { ReportSummaryCost };\n","import { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200 } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_200.value,\n    ],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_label'\n                    : 'chart.cost_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                // Note: Container order is important\n                CursorVoronoiContainer: createContainer('cursor', 'voronoi'),\n                series: [\n                    {\n                        childName: 'previousCost',\n                        data: previousData,\n                        legendItem: {\n                            name: getCostRangeString(previousData, key, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'currentCost',\n                        data: currentData,\n                        legendItem: {\n                            name: getCostRangeString(currentData, key, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[0] }),\n                        },\n                    },\n                ],\n            });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            const { CursorVoronoiContainer } = this.state;\n            if (!CursorVoronoiContainer) {\n                return undefined;\n            }\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData() }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: this.getLegendData(), gutter: 10, height: 25, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions, units } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null\n                ? formatter(datum.y, units || datum.units, formatDatumOptions)\n                : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            // Todo: Leave one legend item visible at all times?\n            // const { hiddenSeries, series } = this.state;\n            // const leaveVisible = hiddenSeries.size === series.length - 1;\n            // if (leaveVisible && !this.isSeriesHidden(props.index)) {\n            //   return;\n            // }\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign({ childName: s.childName }, s.legendItem), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentData, previousData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrent = currentData ? getMaxValue(currentData) : 0;\n        const maxPrevious = previousData ? getMaxValue(previousData) : 0;\n        const maxValue = Math.max(maxCurrent, maxPrevious);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData\n            ? getDate(getDateRange(previousData, true, true)[1])\n            : 0;\n        const currentDate = currentData\n            ? getDate(getDateRange(currentData, true, true)[1])\n            : 0;\n        return currentDate > 0 || previousDate > 0\n            ? Math.max(currentDate, previousDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 20\n            : containerHeight;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: chartOverride, ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                    series &&\n                        series.map((s, index) => {\n                            return this.getChart(s, index);\n                        }),\n                    React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                    React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis })))));\n    }\n}\nexport { TrendChart };\n","import { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './reportSummaryTrend.styles';\nconst ReportSummaryTrend = props => (React.createElement(\"div\", { style: styles.chart },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { ReportSummaryTrend };\n","import { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartContainer: {\n        marginTop: global_spacer_lg.value,\n    },\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    itemsPerRow: 2,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        global_disabled_color_200.value,\n        chart_color_green_100.value,\n        global_disabled_color_200.value,\n        chart_color_green_200.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_200.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getDateRange, getMaxValue, getTooltipContent, getUsageRangeString, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n            const usageKey = 'chart.usage_legend_label';\n            const requestKey = 'chart.requests_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                // Note: Container order is important\n                CursorVoronoiContainer: createContainer('cursor', 'voronoi'),\n                series: [\n                    {\n                        childName: 'previousUsage',\n                        data: previousUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.previousUsageData,\n                    },\n                    {\n                        childName: 'currentUsage',\n                        data: currentUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[1],\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.currentUsageData,\n                    },\n                    {\n                        childName: 'previousRequest',\n                        data: previousRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[2],\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.previousRequestData,\n                    },\n                    {\n                        childName: 'currentRequest',\n                        data: currentRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[3],\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.currentRequestData,\n                    },\n                ],\n            });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            const { CursorVoronoiContainer } = this.state;\n            if (!CursorVoronoiContainer) {\n                return undefined;\n            }\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData() }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > 300\n                    ? chartStyles.itemsPerRow\n                    : 1;\n            return (React.createElement(ChartLegend, { data: this.getLegendData(), height: 25, gutter: 10, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null\n                ? formatter(datum.y, datum.units, formatDatumOptions)\n                : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign({ childName: s.childName }, s.legendItem), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentRequest = currentRequestData\n            ? getMaxValue(currentRequestData)\n            : 0;\n        const maxCurrentUsage = currentUsageData\n            ? getMaxValue(currentUsageData)\n            : 0;\n        const maxPreviousRequest = previousRequestData\n            ? getMaxValue(previousRequestData)\n            : 0;\n        const maxPreviousUsage = previousUsageData\n            ? getMaxValue(previousUsageData)\n            : 0;\n        const maxValue = Math.max(maxCurrentRequest, maxCurrentUsage, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const currentRequestDate = currentRequestData\n            ? getDate(getDateRange(currentRequestData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentUsageData\n            ? getDate(getDateRange(currentUsageData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousRequestData\n            ? getDate(getDateRange(previousRequestData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousUsageData\n            ? getDate(getDateRange(previousUsageData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 ||\n            currentUsageDate > 0 ||\n            previousRequestDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 480\n                ? containerHeight\n                : containerHeight + 20\n            : containerHeight;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: chartOverride, ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                    series &&\n                        series.map((s, index) => {\n                            return this.getChart(s, index);\n                        }),\n                    React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                    React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis })))));\n    }\n}\nexport { UsageChart };\n","import { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nimport { styles } from './reportSummaryTrend.styles';\nconst ReportSummaryUsage = props => (React.createElement(\"div\", { style: styles.chart },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { ReportSummaryUsage };\n","import { global_spacer_lg } from '@patternfly/react-tokens';\nexport const styles = {\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title, } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons/dist/js/icons/dollar-sign-icon';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getTestProps, testIds } from 'testIds';\nimport { getReleasePath } from 'utils/pathname';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getViewSources = () => {\n            const { t } = this.props;\n            const release = getReleasePath();\n            return (React.createElement(\"a\", Object.assign({ href: `${release}/settings/sources` }, getTestProps(testIds.providers.view_all_link)), t('providers.view_sources')));\n        };\n    }\n    render() {\n        const { t } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: DollarSignIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, t('providers.empty_state_title')),\n            React.createElement(EmptyStateBody, null, t('providers.empty_state_desc')),\n            React.createElement(\"div\", { style: styles.viewSources }, this.getViewSources())));\n    }\n}\nconst NoProvidersState = translate()(NoProvidersStateBase);\nexport { NoProvidersState };\n","export const getReleasePath = () => {\n    const pathName = window.location.pathname.split('/');\n    pathName.shift();\n    let release = '';\n    if (pathName[0] === 'beta') {\n        release = `/beta`;\n    }\n    return release;\n};\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = () => {\n    return (React.createElement(Main, null,\n        React.createElement(NoProvidersState, null)));\n};\nexport default withRouter(NoProviders);\n","import NoProviders from './notProviders';\nexport default NoProviders;\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nconst NoProviders = () => {\n    return (React.createElement(Main, null,\n        React.createElement(LoadingState, null)));\n};\nexport default withRouter(NoProviders);\n","import Loading from './loading';\nexport default Loading;\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nconst DashboardBase = ({ DashboardWidget, selectWidgets, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.details.showHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(DashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(DashboardWidget, { widgetId: widgetId })));\n    }))));\nexport { DashboardBase };\n","import { global_spacer_2xl, global_spacer_xl } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartAltHeight: 250,\n    chartHeight: 180,\n    containerAltHeight: 250,\n    containerTrendHeight: 180,\n    containerUsageHeight: 180,\n};\nexport const styles = {\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n};\n","import { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/awsQuery';\nimport { transformReport, } from 'components/charts/common/chartUtils';\nimport { ReportSummary, ReportSummaryAlt, ReportSummaryCost, ReportSummaryDetails, ReportSummaryItem, ReportSummaryItems, ReportSummaryTrend, ReportSummaryUsage, } from 'components/reports/reportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './dashboardWidget.styles';\nclass DashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const { details, getIdKeyForTab } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return `${details.viewAllPath}?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { chartType } = this.props;\n            if (chartType === \"cost\" /* cost */) {\n                return this.getCostChart(containerHeight, height, adjustContainerHeight);\n            }\n            else if (chartType === \"supplementary\" /* supplementary */) {\n                return this.getTrendChart(containerHeight, height, adjustContainerHeight, true);\n            }\n            else if (chartType === \"trend\" /* trend */) {\n                return this.getTrendChart(containerHeight, height, adjustContainerHeight);\n            }\n            else if (chartType === \"usage\" /* usage */) {\n                return this.getUsageChart(height, adjustContainerHeight);\n            }\n            else {\n                return null;\n            }\n        };\n        // This chart displays cost and infrastructure cost\n        this.getCostChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            const computedReportItem = trend.computedReportItem || 'cost'; // cost, supplementaryCost, etc.\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            // Infrastructure data\n            const currentInfrastructureData = transformReport(currentReport, trend.type, 'date', 'infrastructure', computedReportItemValue);\n            const previousInfrastructureData = transformReport(previousReport, trend.type, 'date', 'infrastructure', computedReportItemValue);\n            // Usage data\n            const currentUsageData = transformReport(currentReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            const previousUsageData = transformReport(previousReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            return (React.createElement(ReportSummaryCost, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentCostData: currentUsageData, currentInfrastructureCostData: currentInfrastructureData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousCostData: previousUsageData, previousInfrastructureCostData: previousInfrastructureData, title: title }));\n        };\n        // This chart displays cost only\n        this.getTrendChart = (containerHeight, height, adjustContainerHeight = false, showSupplementaryLabel = false) => {\n            const { currentReport, details, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            const computedReportItem = trend.computedReportItem || 'cost'; // cost, supplementaryCost, etc.\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            // Data\n            const currentData = transformReport(currentReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            const previousData = transformReport(previousReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            return (React.createElement(ReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, showSupplementaryLabel: showSupplementaryLabel, showUsageLegendLabel: details.showUsageLegendLabel, title: title, units: units }));\n        };\n        // This chart displays usage and requests\n        this.getUsageChart = (height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            // Request data\n            const currentRequestData = transformReport(currentReport, trend.type, 'date', 'request');\n            const previousRequestData = transformReport(previousReport, trend.type, 'date', 'request');\n            // Usage data\n            const currentUsageData = transformReport(currentReport, trend.type, 'date', 'usage');\n            const previousUsageData = transformReport(previousReport, trend.type, 'date', 'usage');\n            return (React.createElement(ReportSummaryUsage, { adjustContainerHeight: adjustContainerHeight, containerHeight: chartStyles.containerUsageHeight, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: title }));\n        };\n        this.getDetails = () => {\n            const { chartType, currentReport, details, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            const units = this.getUnits();\n            return (React.createElement(ReportSummaryDetails, { chartType: chartType, computedReportItem: computedReportItem, computedReportItemValue: computedReportItemValue, costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, requestLabel: this.getDetailsLabel(details.requestKey, units), showTooltip: details.showTooltip, showUnits: details.showUnits, showUsageFirst: details.showUsageFirst, units: details.units, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, details } = this.props;\n            if (details.viewAllPath) {\n                return (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab)));\n            }\n            return null;\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { getIdKeyForTab, t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { containerAltHeight = chartStyles.containerAltHeight, chartAltHeight = chartStyles.chartAltHeight, currentReportFetchStatus, details, } = this.props;\n            return (React.createElement(ReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(containerAltHeight, chartAltHeight, details.adjustChartContainerHeight)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('aws_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { getIdKeyForTab, tabsReport, tabsReportFetchStatus, trend, } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) },\n                React.createElement(\"div\", { style: styles.tabItems },\n                    React.createElement(ReportSummaryItems, { computedReportItemValue: computedReportItemValue, idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, details, getIdKeyForTab, tabsReport, topItems, trend, } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            let totalValue;\n            const hasTotal = tabsReport && tabsReport.meta && tabsReport.meta.total;\n            if (computedReportItem === \"usage\" /* usage */) {\n                if (hasTotal && tabsReport.meta.total.usage) {\n                    totalValue = tabsReport.meta.total.usage.value;\n                }\n            }\n            else {\n                if (hasTotal &&\n                    tabsReport.meta.total[computedReportItem] &&\n                    tabsReport.meta.total[computedReportItem][computedReportItemValue]) {\n                    totalValue =\n                        tabsReport.meta.total[computedReportItem][computedReportItemValue]\n                            .value;\n                }\n            }\n            if (activeTab === currentTab) {\n                return (React.createElement(ReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: totalValue, units: details.units ? details.units : this.getUnits(), value: reportItem[computedReportItem] }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { getIdKeyForTab, t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, details, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            if (details.units) {\n                return details.units;\n            }\n            let units;\n            const hasTotal = currentReport && currentReport.meta && currentReport.meta.total;\n            if (computedReportItem === \"usage\" /* usage */) {\n                const hasUsage = hasTotal && currentReport.meta.total.usage;\n                units = hasUsage\n                    ? unitLookupKey(currentReport.meta.total.usage.units)\n                    : '';\n            }\n            else {\n                const hasCost = hasTotal &&\n                    currentReport.meta.total[computedReportItem] &&\n                    currentReport.meta.total[computedReportItem][computedReportItemValue];\n                units = hasCost\n                    ? unitLookupKey(currentReport.meta.total[computedReportItem][computedReportItemValue].units)\n                    : '';\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus, details } = this.props;\n            return (React.createElement(ReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight, details.adjustChartContainerHeight),\n                Boolean(availableTabs) && (React.createElement(\"div\", { style: styles.tabs }, this.getTabs()))));\n        };\n        this.handleInsightsNavClick = () => {\n            const { details } = this.props;\n            if (details.appNavId) {\n                insights.chrome.appNavClick({\n                    id: details.appNavId,\n                    secondaryNav: true,\n                });\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        fetchReports(widgetId);\n    }\n    render() {\n        const { details } = this.props;\n        return details.showHorizontal\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nexport { DashboardWidgetBase, };\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsCloudDashboardActions, awsCloudDashboardSelectors, } from 'store/dashboard/awsCloudDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: awsCloudDashboardActions.fetchWidgetReports,\n    updateTab: awsCloudDashboardActions.changeWidgetTab,\n};\nconst AwsCloudDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsCloudDashboardSelectors } from 'store/dashboard/awsCloudDashboard';\nimport { AwsCloudDashboardWidget } from './awsCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        DashboardWidget: AwsCloudDashboardWidget,\n        selectWidgets: awsCloudDashboardSelectors.selectWidgets(state),\n        widgets: awsCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsCloudDashboard = translate()(connect(mapStateToProps, {})(DashboardBase));\nexport default AwsCloudDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardActions, awsDashboardSelectors, } from 'store/dashboard/awsDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardSelectors } from 'store/dashboard/awsDashboard';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        DashboardWidget: AwsDashboardWidget,\n        selectWidgets: awsDashboardSelectors.selectWidgets(state),\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = translate()(connect(mapStateToProps, {})(DashboardBase));\nexport default AwsDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureCloudDashboardActions, azureCloudDashboardSelectors, } from 'store/dashboard/azureCloudDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: azureCloudDashboardActions.fetchWidgetReports,\n    updateTab: azureCloudDashboardActions.changeWidgetTab,\n};\nconst AzureCloudDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureCloudDashboardSelectors } from 'store/dashboard/azureCloudDashboard';\nimport { AzureCloudDashboardWidget } from './azureCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        DashboardWidget: AzureCloudDashboardWidget,\n        selectWidgets: azureCloudDashboardSelectors.selectWidgets(state),\n        widgets: azureCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureCloudDashboard = translate()(connect(mapStateToProps, {})(DashboardBase));\nexport default AzureCloudDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardActions, azureDashboardSelectors, } from 'store/dashboard/azureDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: azureDashboardActions.fetchWidgetReports,\n    updateTab: azureDashboardActions.changeWidgetTab,\n};\nconst AzureDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardSelectors } from 'store/dashboard/azureDashboard';\nimport { AzureDashboardWidget } from './azureDashboardWidget';\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        DashboardWidget: AzureDashboardWidget,\n        selectWidgets: azureDashboardSelectors.selectWidgets(state),\n        widgets: azureDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureDashboard = translate()(connect(mapStateToProps, {})(DashboardBase));\nexport default AzureDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardActions, ocpCloudDashboardSelectors, } from 'store/dashboard/ocpCloudDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"services\" /* services */:\n            return 'service';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpCloudDashboardActions.fetchWidgetReports,\n    updateTab: ocpCloudDashboardActions.changeWidgetTab,\n};\nconst OcpCloudDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardSelectors } from 'store/dashboard/ocpCloudDashboard';\nimport { OcpCloudDashboardWidget } from './ocpCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        DashboardWidget: OcpCloudDashboardWidget,\n        selectWidgets: ocpCloudDashboardSelectors.selectWidgets(state),\n        widgets: ocpCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpCloudDashboard = translate()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpCloudDashboard;\n","export const chartStyles = {\n    chartAltHeight: 250,\n    containerAltHeight: 250,\n};\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors, } from 'store/dashboard/ocpDashboard';\nimport { reportSelectors } from 'store/reports';\nimport { chartStyles } from './ocpDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, chartAltHeight: chartStyles.chartAltHeight, containerAltHeight: chartStyles.containerAltHeight, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/dashboard/ocpDashboard';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        DashboardWidget: OcpDashboardWidget,\n        selectWidgets: ocpDashboardSelectors.selectWidgets(state),\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = translate()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpSupplementaryDashboardActions, ocpSupplementaryDashboardSelectors, } from 'store/dashboard/ocpSupplementaryDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpSupplementaryDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpSupplementaryDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpSupplementaryDashboardActions.fetchWidgetReports,\n    updateTab: ocpSupplementaryDashboardActions.changeWidgetTab,\n};\nconst OcpSupplementaryDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpSupplementaryDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpSupplementaryDashboardSelectors } from 'store/dashboard/ocpSupplementaryDashboard';\nimport { OcpSupplementaryDashboardWidget } from './ocpSupplementaryDashboardWidget';\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        DashboardWidget: OcpSupplementaryDashboardWidget,\n        selectWidgets: ocpSupplementaryDashboardSelectors.selectWidgets(state),\n        widgets: ocpSupplementaryDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpSupplementaryDashboard = translate()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpSupplementaryDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpUsageDashboardActions, ocpUsageDashboardSelectors, } from 'store/dashboard/ocpUsageDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpUsageDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpUsageDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpUsageDashboardActions.fetchWidgetReports,\n    updateTab: ocpUsageDashboardActions.changeWidgetTab,\n};\nconst OcpUsageDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpUsageDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpUsageDashboardSelectors } from 'store/dashboard/ocpUsageDashboard';\nimport { OcpUsageDashboardWidget } from './ocpUsageDashboardWidget';\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        DashboardWidget: OcpUsageDashboardWidget,\n        selectWidgets: ocpUsageDashboardSelectors.selectWidgets(state),\n        widgets: ocpUsageDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpUsageDashboard = translate()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpUsageDashboard;\n","import { global_FontSize_md, global_spacer_lg, global_spacer_sm, } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const styles = {\n    info: {\n        marginLeft: global_spacer_sm.value,\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    perspective: {\n        marginBottom: global_spacer_lg.value,\n        marginTop: global_spacer_lg.value,\n    },\n    tabs: {\n        marginTop: global_spacer_lg.value,\n    },\n};\nexport const headerOverride = css `\n  &.pf-c-page__main-section {\n    --pf-c-page__main-section--PaddingBottom: 0;\n  }\n`;\n","import { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = {\n    perspectiveSelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    perspectiveLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './perspective.styles';\nclass PerspectiveBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isPerspectiveOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getDropDownItems = () => {\n            const { options, t } = this.props;\n            return options.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleClick(option.value) }, t(option.label))));\n        };\n        this.getCurrentLabel = () => {\n            const { currentItem, options, t } = this.props;\n            let label = '';\n            for (const option of options) {\n                if (currentItem === option.value) {\n                    label = t(option.label);\n                    break;\n                }\n            }\n            return label;\n        };\n        this.handleClick = value => {\n            const { onItemClicked } = this.props;\n            if (onItemClicked) {\n                onItemClicked(value);\n            }\n        };\n        this.handleSelect = event => {\n            this.setState({\n                isPerspectiveOpen: !this.state.isPerspectiveOpen,\n            });\n        };\n        this.handleToggle = isPerspectiveOpen => {\n            this.setState({\n                isPerspectiveOpen,\n            });\n        };\n    }\n    render() {\n        const { t } = this.props;\n        const { isPerspectiveOpen } = this.state;\n        const dropdownItems = this.getDropDownItems();\n        return (React.createElement(\"div\", { style: styles.perspectiveSelector },\n            React.createElement(\"label\", { style: styles.perspectiveLabel }, t('overview.perspective.label')),\n            React.createElement(Dropdown, { onSelect: this.handleSelect, toggle: React.createElement(DropdownToggle, { onToggle: this.handleToggle }, this.getCurrentLabel()), isOpen: isPerspectiveOpen, dropdownItems: dropdownItems })));\n    }\n}\nconst Perspective = translate()(PerspectiveBase);\nexport { Perspective };\n","import { Popover, Tab, TabContent, Tabs, TabTitleText, Title, } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons/dist/js/icons/info-circle-icon';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport AwsCloudDashboard from 'pages/dashboard/awsCloudDashboard/awsCloudDashboard';\nimport AwsDashboard from 'pages/dashboard/awsDashboard/awsDashboard';\nimport AzureCloudDashboard from 'pages/dashboard/azureCloudDashboard/azureCloudDashboard';\nimport AzureDashboard from 'pages/dashboard/azureDashboard/azureDashboard';\nimport OcpCloudDashboard from 'pages/dashboard/ocpCloudDashboard/ocpCloudDashboard';\nimport OcpDashboard from 'pages/dashboard/ocpDashboard/ocpDashboard';\nimport OcpSupplementaryDashboard from 'pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboard';\nimport OcpUsageDashboard from 'pages/dashboard/ocpUsageDashboard/ocpUsageDashboard';\nimport Loading from 'pages/state/loading';\nimport NoProviders from 'pages/state/noProviders';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsProvidersQuery, azureProvidersQuery, ocpProvidersQuery, providersSelectors, } from 'store/providers';\nimport { headerOverride, styles } from './overview.styles';\nimport { Perspective } from './perspective';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"infrastructure\" /* infrastructure */:\n            return 'infrastructure';\n        case \"ocp\" /* ocp */:\n            return 'ocp';\n    }\n};\n// Ocp options\nconst ocpOptions = [\n    { label: 'overview.perspective.all', value: 'all' },\n    { label: 'overview.perspective.supplementary', value: 'supplementary' },\n];\n// Infrastructure all cloud options\nconst infrastructureAllCloudOptions = [\n    { label: 'overview.perspective.all_cloud', value: 'all_cloud' },\n];\n// Infrastructure AWS options\nconst infrastructureAwsOptions = [\n    { label: 'overview.perspective.aws', value: 'aws' },\n    { label: 'overview.perspective.aws_cloud', value: 'aws_cloud' },\n];\n// Infrastructure Azure options\nconst infrastructureAzureOptions = [\n    { label: 'overview.perspective.azure', value: 'azure' },\n    { label: 'overview.perspective.azure_cloud', value: 'azure_cloud' },\n];\n// Infrastructure Ocp options\nconst infrastructureOcpOptions = [\n    { label: 'overview.perspective.ocp_usage', value: 'ocp_usage' },\n];\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n            showPopover: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [];\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            const isOcpCloudAvailable = this.isOcpCloudAvailable();\n            if (isOcpAvailable) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"ocp\" /* ocp */,\n                });\n            }\n            if (isAwsAvailable || isAzureAvailable || isOcpCloudAvailable) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"infrastructure\" /* infrastructure */,\n                });\n            }\n            return availableTabs;\n        };\n        this.getCurrentTab = () => {\n            const { activeTabKey } = this.state;\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            const isOcpCloudAvailable = this.isOcpCloudAvailable();\n            const showOcpOnly = isOcpAvailable &&\n                !(isAwsAvailable || isAzureAvailable || isOcpCloudAvailable);\n            const showInfrastructureOnly = !isOcpAvailable &&\n                (isAwsAvailable || isAzureAvailable || isOcpCloudAvailable);\n            if (showOcpOnly) {\n                return \"ocp\" /* ocp */;\n            }\n            else if (showInfrastructureOnly) {\n                return \"infrastructure\" /* infrastructure */;\n            }\n            else {\n                return activeTabKey === 0 ? \"ocp\" /* ocp */ : \"infrastructure\" /* infrastructure */;\n            }\n        };\n        this.getDefaultInfrastructurePerspective = () => {\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            if (isOcpAvailable) {\n                return \"all_cloud\" /* allCloud */;\n            }\n            if (isAwsAvailable) {\n                return \"aws\" /* aws */;\n            }\n            if (isAzureAvailable) {\n                return \"azure\" /* azure */;\n            }\n            return undefined;\n        };\n        this.getDefaultOcpPerspective = () => {\n            const isOcpAvailable = this.isOcpAvailable();\n            if (isOcpAvailable) {\n                return \"all\" /* all */;\n            }\n            return undefined;\n        };\n        this.getPerspective = () => {\n            const { currentInfrastructurePerspective, currentOcpPerspective, } = this.state;\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            if (!(isAwsAvailable || isAzureAvailable || isOcpAvailable)) {\n                return null;\n            }\n            // Dynamically show options if providers are available\n            const options = [];\n            if (this.getCurrentTab() === \"infrastructure\" /* infrastructure */) {\n                if (isOcpAvailable) {\n                    options.push(...infrastructureAllCloudOptions);\n                }\n                if (isAwsAvailable) {\n                    options.push(...infrastructureAwsOptions);\n                }\n                if (isAzureAvailable) {\n                    options.push(...infrastructureAzureOptions);\n                }\n                if (isOcpAvailable) {\n                    options.push(...infrastructureOcpOptions);\n                }\n            }\n            else {\n                options.push(...ocpOptions);\n            }\n            const currentItem = this.getCurrentTab() === \"infrastructure\" /* infrastructure */\n                ? currentInfrastructurePerspective\n                : currentOcpPerspective;\n            return (React.createElement(Perspective, { currentItem: currentItem || options[0].value, onItemClicked: this.handlePerspectiveClick, options: options }));\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { activeTabKey, currentInfrastructurePerspective, currentOcpPerspective, } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"infrastructure\" /* infrastructure */) {\n                if (currentInfrastructurePerspective === \"all_cloud\" /* allCloud */) {\n                    return React.createElement(OcpCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"aws\" /* aws */) {\n                    return React.createElement(AwsDashboard, null);\n                }\n                else if (currentInfrastructurePerspective ===\n                    \"aws_cloud\" /* awsFiltered */) {\n                    return React.createElement(AwsCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"azure\" /* azure */) {\n                    return React.createElement(AzureDashboard, null);\n                }\n                else if (currentInfrastructurePerspective ===\n                    \"azure_cloud\" /* azureCloud */) {\n                    return React.createElement(AzureCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"ocp_usage\" /* ocpUsage */) {\n                    return React.createElement(OcpUsageDashboard, null);\n                }\n                else {\n                    return React.createElement(OcpCloudDashboard, null); // default\n                }\n            }\n            else if (currentTab === \"ocp\" /* ocp */) {\n                if (currentOcpPerspective === \"all\" /* all */) {\n                    return React.createElement(OcpDashboard, null);\n                }\n                else if (currentOcpPerspective === \"supplementary\" /* supplementary */) {\n                    return React.createElement(OcpSupplementaryDashboard, null);\n                }\n                else {\n                    return React.createElement(OcpDashboard, null); // default\n                }\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"infrastructure\" /* infrastructure */) {\n                return t('overview.infrastructure');\n            }\n            else if (tab === \"ocp\" /* ocp */) {\n                return t('overview.ocp');\n            }\n        };\n        this.handlePerspectiveClick = (value) => {\n            const currentTab = this.getCurrentTab();\n            this.setState(Object.assign(Object.assign({}, (currentTab === \"infrastructure\" /* infrastructure */ && {\n                currentInfrastructurePerspective: value,\n            })), (currentTab === \"ocp\" /* ocp */ && { currentOcpPerspective: value })));\n        };\n        this.handlePopoverClick = () => {\n            this.setState({\n                show: !this.state.showPopover,\n            });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                });\n            }\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders } = this.props;\n            return (awsProviders !== undefined &&\n                awsProviders.meta !== undefined &&\n                awsProviders.meta.count > 0);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders } = this.props;\n            return (azureProviders !== undefined &&\n                azureProviders.meta !== undefined &&\n                azureProviders.meta.count > 0);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders } = this.props;\n            return (ocpProviders !== undefined &&\n                ocpProviders.meta !== undefined &&\n                ocpProviders.meta.count > 0);\n        };\n        this.isOcpCloudAvailable = () => {\n            return this.isAwsAvailable() && this.isOcpAvailable();\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n            currentOcpPerspective: this.getDefaultOcpPerspective(),\n        });\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { awsProviders, azureProviders, ocpProviders } = this.props;\n        if (prevProps.awsProviders !== awsProviders ||\n            prevProps.azureProviders !== azureProviders ||\n            prevProps.ocpProviders !== ocpProviders) {\n            this.setState({\n                currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n                currentOcpPerspective: this.getDefaultOcpPerspective(),\n            });\n        }\n    }\n    render() {\n        const { awsProvidersFetchStatus, azureProvidersFetchStatus, ocpProvidersFetchStatus, t, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        const isLoading = awsProvidersFetchStatus === 1 /* inProgress */ ||\n            azureProvidersFetchStatus === 1 /* inProgress */ ||\n            ocpProvidersFetchStatus === 1 /* inProgress */;\n        const noAwsProviders = !this.isAwsAvailable() &&\n            awsProvidersFetchStatus === 2 /* complete */;\n        const noAzureProviders = !this.isAzureAvailable() &&\n            azureProvidersFetchStatus === 2 /* complete */;\n        const noOcpProviders = !this.isOcpAvailable() &&\n            ocpProvidersFetchStatus === 2 /* complete */;\n        const noProviders = noAwsProviders && noAzureProviders && noOcpProviders;\n        const showTabs = !(noProviders || isLoading);\n        if (noProviders) {\n            return React.createElement(NoProviders, null);\n        }\n        else if (isLoading) {\n            return React.createElement(Loading, null);\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"section\", { className: `pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light ${showTabs ? headerOverride : ''}` },\n                React.createElement(\"header\", { className: \"pf-u-display-flex pf-u-justify-content-space-between pf-u-align-items-center\" },\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"xl\" },\n                        t('overview.title'),\n                        Boolean(showTabs) && (React.createElement(\"span\", { style: styles.infoIcon },\n                            React.createElement(Popover, { \"aria-label\": t('ocp_details.supplementary_aria_label'), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.ocp_cloud')),\n                                    React.createElement(\"p\", null, t('overview.ocp_cloud_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.ocp')),\n                                    React.createElement(\"p\", null, t('overview.ocp_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.aws')),\n                                    React.createElement(\"p\", null, t('overview.aws_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.azure')),\n                                    React.createElement(\"p\", null, t('overview.azure_desc'))) },\n                                React.createElement(InfoCircleIcon, { style: styles.info, onClick: this.handlePopoverClick })))))),\n                Boolean(showTabs) && (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tabs }, this.getTabs(availableTabs)),\n                    React.createElement(\"div\", { style: styles.perspective }, this.getPerspective())))),\n            React.createElement(\"section\", { className: \"pf-l-page__main-section pf-c-page__main-section\", \"page-type\": \"cost-management-overview\" }, this.getTabContent(availableTabs))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    const awsProvidersQueryString = getProvidersQuery(awsProvidersQuery);\n    const awsProviders = providersSelectors.selectProviders(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const azureProvidersQueryString = getProvidersQuery(azureProvidersQuery);\n    const azureProviders = providersSelectors.selectProviders(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const azureProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const ocpProvidersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const ocpProviders = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    return {\n        awsProviders,\n        awsProvidersFetchStatus,\n        awsProvidersQueryString,\n        azureProviders,\n        azureProvidersFetchStatus,\n        azureProvidersQueryString,\n        ocpProviders,\n        ocpProvidersFetchStatus,\n        ocpProvidersQueryString,\n    };\n});\nconst Overview = translate()(connect(mapStateToProps)(OverviewBase));\nexport default Overview;\n","import Overview from './overview';\nexport default Overview;\n"],"sourceRoot":""}