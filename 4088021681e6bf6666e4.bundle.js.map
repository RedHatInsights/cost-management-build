{"version":3,"sources":["webpack:///./src/pages/onboardingModal/index.ts","webpack:///./src/testIds.ts","webpack:///./src/pages/onboardingModal/final/item.tsx","webpack:///./src/pages/onboardingModal/final/loader.tsx","webpack:///./src/pages/onboardingModal/final/index.tsx","webpack:///./src/utils/validators.ts","webpack:///./src/pages/onboardingModal/awsConfigure/form.tsx","webpack:///./src/pages/onboardingModal/awsConfigure/instructions.tsx","webpack:///./src/pages/onboardingModal/awsConfigure/awsConfigure.tsx","webpack:///./src/pages/onboardingModal/awsConfigure/index.ts","webpack:///./src/pages/onboardingModal/configure/instructions.tsx","webpack:///./src/pages/onboardingModal/configure/index.ts","webpack:///./src/pages/onboardingModal/enableAccountAccess/form.tsx","webpack:///./src/pages/onboardingModal/enableAccountAccess/instructions.tsx","webpack:///./src/pages/onboardingModal/enableAccountAccess/enableAccountAccess.tsx","webpack:///./src/pages/onboardingModal/enableAccountAccess/index.ts","webpack:///./src/pages/onboardingModal/iamPolicy/instructions.tsx","webpack:///./src/pages/onboardingModal/iamPolicy/index.ts","webpack:///./src/pages/onboardingModal/iamRole/instructions.tsx","webpack:///./src/pages/onboardingModal/iamRole/index.ts","webpack:///./src/pages/onboardingModal/obtainLogin/instructions.tsx","webpack:///./src/pages/onboardingModal/obtainLogin/index.ts","webpack:///./src/pages/onboardingModal/sourceKind/checkItem.tsx","webpack:///./src/pages/onboardingModal/sourceKind/checkList.styles.ts","webpack:///./src/pages/onboardingModal/sourceKind/checkList.tsx","webpack:///./src/pages/onboardingModal/sourceKind/form.tsx","webpack:///./src/pages/onboardingModal/sourceKind/instructions.tsx","webpack:///./src/pages/onboardingModal/sourceKind/sourceKind.tsx","webpack:///./src/pages/onboardingModal/sourceKind/index.tsx","webpack:///./src/pages/onboardingModal/usageCollector/form.tsx","webpack:///./src/pages/onboardingModal/usageCollector/instructions.tsx","webpack:///./src/pages/onboardingModal/usageCollector/usageCollector.tsx","webpack:///./src/pages/onboardingModal/usageCollector/index.ts","webpack:///./src/pages/onboardingModal/wizard/index.ts","webpack:///./src/pages/onboardingModal/wizard/wizard.tsx"],"names":["__webpack_exports__","Object","react_hot_loader__WEBPACK_IMPORTED_MODULE_0__","module","_wizard__WEBPACK_IMPORTED_MODULE_1__","getTestProps","id","data-testid","testIds","details","historical_data_btn","tag_lnk","show_more_btn","view_all_btn","export","cancel_btn","submit_btn","login","alert","form","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","s3_input","clusterid_input","arn_input","providers","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","view_all_link","sidebar","nav","link","backdrop","item","title","value","react_default","a","createElement","style","paddingBottom","Title","size","sizes","md","lg","loader","Component","[object Object]","props","super","t","apiStatus","status","apiErrors","error","this","errorMessage","response","data","Error","undefined","errors","map","er","detail","join","message","name","type","clusterId","arn","parseError","Fragment","Alert","variant","xl","onboardingModal_final","react_redux_es","common","state","selectOnboardingName","selectOnboardingType","selectOnboardingClusterID","selectOnboardingArn","s3BucketName","selectOnboardingS3BucketName","selectApiErrors","selectApiStatus","es","sourceTypeValidator","sourceNameValidator","RegExp","test","ocpClusterIdValidator","awsS3BucketNameValidator","arnValidator","length","indexOf","awsConfigure_form","isValid","onChange","Form","onSubmit","e","preventDefault","FormGroup","fieldId","label","helperText","helperTextInvalid","TextInput","assign","instructions","List","ListItem","awsConfigure","updateS3BucketName","s3BucketNameValid","_name","event","currentTarget","onboardingModal_awsConfigure","selectOnboardingValidation","configure_instructions","Popover","position","aria-label","bodyContent","i18nKey","metering_operator","sub_text","path","Button","question_circle_icon","ClipboardCopy","textAriaLabel","configure","enableAccountAccess_form","enableAccountAccess_instructions","enableAccountAccess","updateArn","arnValid","onboardingModal_enableAccountAccess","iamPolicy_instructions","iampolicy","href","target","expansion","iamPolicy","iamRole_instructions","iamRole","obtainLogin_instructions","learn_more","obtainLogin","checkItem","children","isChecked","ariaLabel","Checkbox","margin","styles","StyleSheet","create","listWrapper","paddingLeft","esm","marginBottom","marginTop","listTitle","checkList","checkedItems","updateCheckItem","className","install_openshift","install_others","ansible","epel","sourceKind_form","updateName","nameValid","updateType","typeValid","FormSelect","FormSelectOption","sourceKind_instructions","sourceKind","checked","updateCheck","Boolean","onboardingModal_sourceKind","selectOnboardingSourceKindChecked","updateSourceKindCheckList","checkAll","checkSourceKindCheckList","usageCollector_form","usageCollector_instructions","usage_collector","usageCollector","updateClusterId","clusterIdValid","onboardingModal_usageCollector","updateClusterID","isModalOpen","selectOnboardingModal","isInvalid","selectOnboardingIsInvalid","dirtyMap","selectOnboardingDirty","sourceKindChecked","bucket","cancelOnboarding","updateSources","sourceSettings","fetchSources","addSource","steps","key","stepMap","isDirty","keys","every","k","dirtyStepMap","src","index","setIndex","actions","isDisabled","onClick","provider_resource_name","billing_source_obj","billing_source","authentication","Modal","height","width","isLarge","isOpen","onClose"],"mappings":"mIAEAA,EAAA,QAAAC,OAAAC,EAAA,IAAAD,CAAAE,EAAA,CAAAC,EAAA,0HCFA,MACAC,EAAAC,KAAsCC,cAAAD,IACtCE,GACAC,SACAC,oBAAA,sBACAC,QAAA,UACAC,cAAA,gBACAC,aAAA,gBAEAC,QACAC,WAAA,aACAC,WAAA,cAEAC,OACAC,MAAA,QACAC,KAAA,aACAC,eAAA,iBACAC,eAAA,iBACAC,OAAA,UAEAC,UACAA,SAAA,WACAC,SAAA,WACAC,cAAA,iBACAC,OAAA,UAEAC,YACAC,WAAA,aACAC,SAAA,WACAC,aAAA,eACAC,UAAA,YACAC,cAAA,gBACAC,aAAA,kBACAC,aAAA,kBACAC,aAAA,kBACAC,WAAA,aACAC,YAAA,cACAC,YAAA,cACAC,SAAA,WACAC,gBAAA,kBACAC,UAAA,aAEAC,WACAC,QAAA,UACAC,aAAA,eACA7B,WAAA,aACA8B,oBAAA,sBACAT,WAAA,sBACAU,oBAAA,+BACAC,iBAAA,4BACA/B,WAAA,aACAgC,WAAA,sBACAC,cAAA,gBAEAC,SACAC,IAAA,eACAC,KAAA,oBACAC,SAAA,gKCpDA,IAAAC,EAHA,EAAeC,QAAAC,WAAeC,EAAAC,EAAAC,cAAA,OAAkCC,OAASC,cAAA,SACzEJ,EAAAC,EAAAC,cAAAG,EAAA,GAAgCC,KAAAC,EAAA,EAAAC,IAAqBV,GACrDE,EAAAC,EAAAC,cAAAG,EAAA,GAAgCC,KAAAC,EAAA,EAAAE,IAAqBV,ICwCrD,IAAAW,gBAzCAV,EAAAC,EAAAU,UACAC,YAAAC,GACAC,MAAAD,GAEAD,aACA,MAAAG,EAAeA,EAAAC,UAAAC,EAAAC,UAAAC,GAAyCC,KAAAP,MACxD,OAAAI,EACA,YAEA,UAAAE,EACA,YAEA,IAAAE,EAAAN,EAAA,kCAYA,OAXAI,EAAAG,UAAAH,EAAAG,SAAAC,MACAF,EAAAF,EAAAG,SAAAC,KAAAC,aACAC,IAAAN,EAAAG,SAAAC,KAAAG,SACAL,EAAAF,EAAAG,SAAAC,KAAAG,OACAC,IAAAC,KAAAC,QACAC,KAAA,OAGAX,EAAAY,UACAV,EAAAF,EAAAY,SAEAV,EAEAT,SACA,MAAAG,EAAeA,EAAAiB,OAAAC,OAAAC,YAAAC,OAAgCf,KAAAP,MAC/Ca,EAAAN,KAAAgB,aACA,OAAApC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KACA,OAAAX,GAAA1B,EAAAC,EAAAC,cAAA,OAA4DC,OAASC,cAAA,SACrEJ,EAAAC,EAAAC,cAAAoC,EAAA,GAA4CC,QAAA,SAAAzC,SAA8B4B,MAAWX,EAAA,uCACrFf,EAAAC,EAAAC,cAAAG,EAAA,GAAwCC,KAAAC,EAAA,EAAAiC,IAAqBzB,EAAA,2BAC7Df,EAAAC,EAAAC,cAAA,SAAAa,EAAA,0BACAf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAAL,GAAuCE,MAAAiC,EAAAlC,MAAAiB,EAAA,2BACvCf,EAAAC,EAAAC,cAAAL,GAAuCE,MAAAgB,2BAAmCkB,KAAKnC,MAAAiB,EAAA,iCAC/E,QAAAkB,GAAAjC,EAAAC,EAAAC,cAAAL,GAA0DE,MAAAoC,EAAArC,MAAAiB,EAAA,0BAC1D,QAAAkB,GAAAjC,EAAAC,EAAAC,cAAAL,GAA0DE,MAAAmC,EAAApC,MAAAiB,EAAA,iCCnC1D0B,UAAAjG,OAAAkG,EAAA,EAAAlG,QAAAmG,EAAA,EAAAnG,CAAAoG,KACAZ,KAAA9D,EAAA,EAAA2E,qBAAAD,GACAX,KAAA/D,EAAA,EAAA4E,qBAAAF,GACAV,UAAAhE,EAAA,EAAA6E,0BAAAH,GACAT,IAAAjE,EAAA,EAAA8E,oBAAAJ,GACAK,aAAA/E,EAAA,EAAAgF,6BAAAN,GACA1B,UAAAhD,EAAA,EAAAiF,gBAAAP,GACA5B,UAAA9C,EAAA,EAAAkF,gBAAAR,SAPA,CAQOpG,OAAA6G,EAAA,EAAA7G,GAAAkE,KCdP,MAAA4C,EAAAvD,GAAA,KAAAA,EACAwD,EAAAxD,GAAA,IAAAyD,OAAA,MAAAC,KAAA1D,GACA2D,EAAA3D,GAAA,IAAAyD,OAAA,MAAAC,KAAA1D,GACA4D,EAAA5D,GAAA,IAAAyD,OAAA,gCAAAC,KAAA1D,GACA6D,EAAA7D,IAEA,QAAAA,EAAA8D,OADA,WACAA,UAGA9D,EAAA8D,SAJA,WAIAA,OAJA,aAKA9D,EAEA,IAAAA,EAAA+D,QAPA,sDCMA,IAAAC,EARA,EAAuBhD,IAAAiD,UAAAjE,QAAAkE,cACvBjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAuCC,SAAAC,IACvCA,EAAAC,kBACA,IAEArE,EAAAC,EAAAC,cAAAoE,EAAA,GAAwCN,UAAAO,QAAA,iBAAAC,MAAAzD,EAAA,iDAAA0D,WAAA1D,EAAA,uDAAA2D,kBAAA3D,EAAA,gEACxCf,EAAAC,EAAAC,cAAAyE,EAAA,EAAAnI,OAAAoI,UAA2DpI,OAAAO,EAAA,EAAAP,CAAAO,EAAA,EAAAmB,WAAAY,WAA8CkF,UAAAnH,GAAA,iBAAAkD,QAAAkE,kCCUzG,IAAAY,EAjBA,EAAmC9D,OACnCf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KACArC,EAAAC,EAAAC,cAAAG,EAAA,GAAoCC,KAAA,MAAaS,EAAA,gDACjDf,EAAAC,EAAAC,cAAA,WAAAa,EAAA,mCACAf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA4E,EAAA,OACA9E,EAAAC,EAAAC,cAAA6E,EAAA,OAAAhE,EAAA,+CACAf,EAAAC,EAAAC,cAAA6E,EAAA,OACAhE,EAAA,wCACAf,EAAAC,EAAAC,cAAA4E,EAAA,OACA9E,EAAAC,EAAAC,cAAA6E,EAAA,OAAAhE,EAAA,yCACAf,EAAAC,EAAAC,cAAA6E,EAAA,OAAAhE,EAAA,uCACAf,EAAAC,EAAAC,cAAA6E,EAAA,OAAAhE,EAAA,qCACAf,EAAAC,EAAAC,cAAA6E,EAAA,OAAAhE,EAAA,qCACAf,EAAAC,EAAAC,cAAA6E,EAAA,OAAAhE,EAAA,sCACAf,EAAAC,EAAAC,cAAA6E,EAAA,OAAAhE,EAAA,+CCHA,IAAAiE,EAVA,EAAuBjE,IAAAkC,eAAAgC,qBAAAC,wBAIvB,OAAAlF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KACArC,EAAAC,EAAAC,cAAA2E,GAAuD9D,MACvDf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA6D,GAA2ChD,IAAAkD,SAP3C,CAAAkB,EAAAC,KACAH,EAAAG,EAAAC,cAAAtF,MAAA4D,IAM2CK,QAAAkB,EAAAnF,MAAAkD,MCP3CqC,EAAA9I,OAAAkG,EAAA,EAAAlG,QAAAmG,EAAA,EAAAnG,CAAAoG,KACAK,aAAA/E,EAAA,EAAAgF,6BAAAN,GACAsC,kBAAAhH,EAAA,EAAAqH,2BAAA3C,GACAsC,sBAEAD,mBAAA/G,EAAA,EAAA+G,oBALA,CAMCzI,OAAA6G,EAAA,EAAA7G,GAAAwI,+BCqBD,IAAAQ,EA5BA,EAAgCzE,OAChCf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KACArC,EAAAC,EAAAC,cAAAG,EAAA,GAAoCC,KAAA,MAAaS,EAAA,4CACjDf,EAAAC,EAAAC,cAAA,WAAAa,EAAA,2CACAf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA4E,EAAA,OACA9E,EAAAC,EAAAC,cAAA6E,EAAA,OACAhE,EAAA,qCACAf,EAAAC,EAAAC,cAAAuF,EAAA,GAA8CC,SAAA,QAAAC,aAAA5E,EAAA,gDAAA6E,YAAA5F,EAAAC,EAAAC,cAAA,WAC9Ca,EAAA,uCACAf,EAAAC,EAAAC,cAAA4E,EAAA,OACA9E,EAAAC,EAAAC,cAAA6E,EAAA,OACA/E,EAAAC,EAAAC,cAAAmD,EAAA,GAAkEwC,QAAA,uCAAAC,kBAAA9F,EAAAC,EAAAC,cAAA,iCAClEF,EAAAC,EAAAC,cAAA6E,EAAA,OAAAhE,EAAA,0CACAf,EAAAC,EAAAC,cAAAmD,EAAA,GAA0DwC,QAAA,sCAAAE,SAAA/F,EAAAC,EAAAC,cAAA,yBAAA8F,KAAAhG,EAAAC,EAAAC,cAAA,2BAC1DF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA+F,EAAA,GAAiD1D,QAAA,SACjDvC,EAAAC,EAAAC,cAAAgG,EAAA,UACAlG,EAAAC,EAAAC,cAAAiG,EAAA,GAAoDC,cAAArF,EAAA,yCAA2D,6BAC/Gf,EAAAC,EAAAC,cAAA6E,EAAA,OACAhE,EAAA,qCACAf,EAAAC,EAAAC,cAAAiG,EAAA,GAAoDC,cAAArF,EAAA,2CAA6D,iDACjHf,EAAAC,EAAAC,cAAA6E,EAAA,OACA,IACAhE,EAAA,mCACA,OC5BAsF,EAAA7J,OAAA6G,EAAA,EAAA7G,EAAA,CAAAgJ,GCSA,IAAAc,EARA,EAAkBvF,IAAAiD,UAAAjE,QAAAkE,cAClBjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAuCC,SAAAC,IACvCA,EAAAC,kBACA,IAEArE,EAAAC,EAAAC,cAAAoE,EAAA,GAAwCN,UAAAO,QAAA,MAAAC,MAAAzD,EAAA,8CAAA0D,WAAA1D,EAAA,oDAAA2D,kBAAA3D,EAAA,6DACxCf,EAAAC,EAAAC,cAAAyE,EAAA,EAAAnI,OAAAoI,UAA2DpI,OAAAO,EAAA,EAAAP,CAAAO,EAAA,EAAAmB,WAAAc,YAA+CgF,UAAAnH,GAAA,MAAAkD,QAAAkE,gBCE1G,IAAAsC,EATA,EAA0CxF,OAC1Cf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KACArC,EAAAC,EAAAC,cAAAG,EAAA,GAAoCC,KAAA,MAAaS,EAAA,wDACjDf,EAAAC,EAAAC,cAAA,WAAAa,EAAA,2CACAf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA4E,EAAA,OACA9E,EAAAC,EAAAC,cAAA6E,EAAA,OAAAhE,EAAA,iDACAf,EAAAC,EAAAC,cAAA6E,EAAA,OAAAhE,EAAA,gDCKA,IAAAyF,EAVA,EAA8BzF,IAAAoB,MAAAsE,YAAAC,eAI9B,OAAA1G,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KACArC,EAAAC,EAAAC,cAAAqG,GAA8DxF,MAC9Df,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAAoG,GAAsCvF,IAAAkD,SAPtC,CAAAkB,EAAAC,KACAqB,EAAArB,EAAAC,cAAAtF,MAAA6D,IAMsCI,QAAA0C,EAAA3G,MAAAoC,MCPtCwE,EAAAnK,OAAAkG,EAAA,EAAAlG,QAAAmG,EAAA,EAAAnG,CAAAoG,KACAT,IAAAjE,EAAA,EAAA8E,oBAAAJ,GACA8D,SAAAxI,EAAA,EAAAqH,2BAAA3C,GAAA8D,aAEAD,UAAAvI,EAAA,EAAAuI,WAJA,CAKCjK,OAAA6G,EAAA,EAAA7G,GAAAgK,ICoCD,IAAAI,EA3CA,EAAgC7F,IAAAkC,kBAChCjD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KACArC,EAAAC,EAAAC,cAAAG,EAAA,GAAoCC,KAAA,MAAaS,EAAA,6CACjDf,EAAAC,EAAAC,cAAA,WAAAa,EAAA,gCACAf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA4E,EAAA,OACA9E,EAAAC,EAAAC,cAAA6E,EAAA,OACA/E,EAAAC,EAAAC,cAAAmD,EAAA,GAAkDwD,UAAA7G,EAAAC,EAAAC,cAAA,KAAsC4G,KAAA,gEAAAC,OAAA,UAA0FhG,EAAA,oCAAA8E,QAAA,mCAClL7F,EAAAC,EAAAC,cAAA6E,EAAA,OACAhE,EAAA,oCACAf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAAiG,EAAA,GAAoDC,cAAArF,EAAA,sCAAAwB,QAAA4D,EAAA,EAAAa,mQAUxB/D,kCACAA,6RAc5BjD,EAAAC,EAAAC,cAAA6E,EAAA,OAAAhE,EAAA,4CACAf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAAa,EAAA,8CACAA,EAAA,gCCvCAkG,EAAAzK,OAAAkG,EAAA,EAAAlG,QAAAmG,EAAA,EAAAnG,CAAAoG,KACAK,aAAA/E,EAAA,EAAAgF,6BAAAN,SADA,CAEOpG,OAAA6G,EAAA,EAAA7G,GAAAoK,ICSP,IAAAM,EAdA,EAA8BnG,OAC9Bf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KACArC,EAAAC,EAAAC,cAAAG,EAAA,GAAoCC,KAAA,MAAaS,EAAA,2CACjDf,EAAAC,EAAAC,cAAA,WAAAa,EAAA,8BACAf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA4E,EAAA,OACA9E,EAAAC,EAAAC,cAAA6E,EAAA,OAAAhE,EAAA,wCACAf,EAAAC,EAAAC,cAAA6E,EAAA,OACAhE,EAAA,wCACAf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAAiG,EAAA,GAAoDC,cAAArF,EAAA,8CAAgE,iBACpHf,EAAAC,EAAAC,cAAA6E,EAAA,OAAAhE,EAAA,2CACAf,EAAAC,EAAAC,cAAA6E,EAAA,OAAAhE,EAAA,2CCZAoG,EAAA3K,OAAA6G,EAAA,EAAA7G,EAAA,CAAA0K,GCmBA,IAAAE,EAjBA,EAAkCrG,OAClCf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KACArC,EAAAC,EAAAC,cAAAG,EAAA,GAAoCC,KAAA,MAAaS,EAAA,+CACjDf,EAAAC,EAAAC,cAAA,WACAa,EAAA,iCACAf,EAAAC,EAAAC,cAAAuF,EAAA,GAA0CE,aAAA5E,EAAA,8CAAA2E,SAAA,MAAAE,YAAA5F,EAAAC,EAAAC,cAAAmD,EAAA,GAAgIwC,QAAA,0CAAAC,kBAAA9F,EAAAC,EAAAC,cAAA,8BAAAmH,WAAArH,EAAAC,EAAAC,cAAA,KAAmK4G,KAAA,IAAW/F,EAAA,0CACxVf,EAAAC,EAAAC,cAAA+F,EAAA,GAA6C1D,QAAA,SAC7CvC,EAAAC,EAAAC,cAAAgG,EAAA,WACAlG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA4E,EAAA,OACA9E,EAAAC,EAAAC,cAAA6E,EAAA,OAAAhE,EAAA,yCACAf,EAAAC,EAAAC,cAAA6E,EAAA,OACAhE,EAAA,uCACAf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAAiG,EAAA,GAAoDC,cAAArF,EAAA,mDAAqE,qEACzHf,EAAAC,EAAAC,cAAA6E,EAAA,OAAAhE,EAAA,uCCjBAuG,EAAA9K,OAAA6G,EAAA,EAAA7G,EAAA,CAAA4K,qBCGA,IAAAG,EAHA,EAAoBC,WAAAvD,WAAAnE,QAAA2H,aAAA,EAAAC,YAAA,KAAA7K,KAAA,QAA6EmD,EAAAC,EAAAC,cAAA,WACjGF,EAAAC,EAAAC,cAAAyH,EAAA,GAAmCF,YAAAxD,WAAAO,MAAA1E,EAAAjD,KAAA8I,aAAA+B,IACnC1H,EAAAC,EAAAC,cAAA,QAAiCC,OAASyH,OAAA,qBAA+BJ,aCFzE,MAAAK,EAAAC,EAAA,EAAAC,QACAC,aACAC,YAAAC,EAAA,GAAAnI,MACAoI,aAAAD,EAAA,GAAAnI,MACAqI,cAAuBF,EAAA,GAAAnI,SAEvBsI,WACAF,aAAAD,EAAA,GAAAnI,SCkBA,IAAAuI,EAAA9L,OAAA6G,EAAA,EAAA7G,EAAA,CApBA,EAAkCuE,IAAAwH,eAAAC,qBAClCxI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KACArC,EAAAC,EAAAC,cAAA,OAAoCuI,UAAAjM,OAAAsL,EAAA,EAAAtL,CAAAqL,EAAAQ,YAAmCtH,EAAA,2CACvEf,EAAAC,EAAAC,cAAAqH,EAAA/K,OAAAoI,UAAuDpI,OAAAO,EAAA,EAAAP,CAAAO,EAAA,EAAAmB,WAAAU,cAAiD6I,UAAAc,EAAAG,kBAAA5I,MAAAiB,EAAA,qCAAAkD,SAAAuE,EAAA3L,GAAA,oBAAA6K,UAAA3G,EAAA,kDACxGf,EAAAC,EAAAC,cAAA,OAAwCuI,UAAAjM,OAAAsL,EAAA,EAAAtL,CAAAqL,EAAAG,cACxChI,EAAAC,EAAAC,cAAA4E,EAAA,OACA9E,EAAAC,EAAAC,cAAA6E,EAAA,OACA/E,EAAAC,EAAAC,cAAA,KAAkD6G,OAAA,SAAAD,KAAA,6FAAsH/F,EAAA,yCACxKf,EAAAC,EAAAC,cAAA6E,EAAA,OACA/E,EAAAC,EAAAC,cAAA,KAAkD6G,OAAA,SAAAD,KAAA,2IAAoK/F,EAAA,4CACtNf,EAAAC,EAAAC,cAAAqH,EAAA/K,OAAAoI,UAAuDpI,OAAAO,EAAA,EAAAP,CAAAO,EAAA,EAAAmB,WAAAW,cAAiD4I,UAAAc,EAAAI,eAAA7I,MAAAiB,EAAA,qCAAAkD,SAAAuE,EAAA3L,GAAA,iBAAA6K,UAAA3G,EAAA,kDACxGf,EAAAC,EAAAC,cAAA,OAAwCuI,UAAAjM,OAAAsL,EAAA,EAAAtL,CAAAqL,EAAAG,cACxChI,EAAAC,EAAAC,cAAA4E,EAAA,OACA9E,EAAAC,EAAAC,cAAA6E,EAAA,OACA/E,EAAAC,EAAAC,cAAA,KAAkD6G,OAAA,SAAAD,KAAA,kEAA2F/F,EAAA,yCAC7If,EAAAC,EAAAC,cAAA6E,EAAA,OACA/E,EAAAC,EAAAC,cAAAmD,EAAA,GAA0DwC,QAAA,sCAAA+C,QAAA5I,EAAAC,EAAAC,cAAA,KAAoF6G,OAAA,SAAAD,KAAA,oHAA6I/F,EAAA,mCAAA8H,KAAA7I,EAAAC,EAAAC,cAAA,KAAwE6G,OAAA,SAAAD,KAAA,oHAA6I/F,EAAA,mCAChff,EAAAC,EAAAC,cAAA6E,EAAA,OACA/E,EAAAC,EAAAC,cAAA,KAAkD6G,OAAA,SAAAD,KAAA,yFAAkH/F,EAAA,kECTpK,IAAA+H,GAbA,EAAyB/H,IAAAiB,OAAA+G,aAAAC,YAAA/G,OAAAgH,aAAAC,eACzBlJ,EAAAC,EAAAC,cAAAgE,EAAA,GAAuCC,SAAAC,IACvCA,EAAAC,kBACA,IAEArE,EAAAC,EAAAC,cAAAoE,EAAA,GAAwCN,QAAAgF,EAAAtE,kBAAA3D,EAAA,uCAAA0D,WAAA1D,EAAA,+BAAAwD,QAAA,cAAAC,MAAAzD,EAAA,0BACxCf,EAAAC,EAAAC,cAAAyE,EAAA,EAAAnI,OAAAoI,UAA2DpI,OAAAO,EAAA,EAAAP,CAAAO,EAAA,EAAAmB,WAAAS,aAAgDqF,QAAAgF,EAAAnM,GAAA,cAAAkD,MAAAiC,EAAAiC,SAAA8E,MAC3G/I,EAAAC,EAAAC,cAAAoE,EAAA,GAAwCN,QAAAkF,EAAA3E,QAAA,cAAAC,MAAAzD,EAAA,0BACxCf,EAAAC,EAAAC,cAAAiJ,GAAA,EAAA3M,OAAAoI,UAA4DpI,OAAAO,EAAA,EAAAP,CAAAO,EAAA,EAAAmB,WAAAK,gBAAmDyF,QAAAkF,EAAAnJ,MAAAkC,EAAApF,GAAA,cAAAoH,SAAAgF,IAC/GjJ,EAAAC,EAAAC,cAAAkJ,GAAA,EAAA5M,OAAAoI,UAAsEpI,OAAAO,EAAA,EAAAP,CAAAO,EAAA,EAAAmB,WAAAQ,eAAkD8F,MAAAzD,EAAA,gCAAAhB,MAAA,MACxHC,EAAAC,EAAAC,cAAAkJ,GAAA,EAAA5M,OAAAoI,UAAsEpI,OAAAO,EAAA,EAAAP,CAAAO,EAAA,EAAAmB,WAAAM,eAAkDgG,MAAAzD,EAAA,+BAAAhB,MAAA,SACxHC,EAAAC,EAAAC,cAAAkJ,GAAA,EAAA5M,OAAAoI,UAAsEpI,OAAAO,EAAA,EAAAP,CAAAO,EAAA,EAAAmB,WAAAO,eAAkD+F,MAAAzD,EAAA,+BAAAhB,MAAA,YCNxH,IAAAsJ,GANA,EAAiCtI,OACjCf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KACArC,EAAAC,EAAAC,cAAAG,EAAA,GAAoCC,KAAA,MAAaS,EAAA,8CACjDf,EAAAC,EAAAC,cAAA,WAAAa,EAAA,6CACAf,EAAAC,EAAAC,cAAA,YCeA,IAAAoJ,GAhBA,EAAqBvI,IAAAiB,OAAA+G,aAAAC,YAAA/G,OAAAgH,aAAAC,YAAAK,UAAAC,kBAUrB,OAAAxJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KACArC,EAAAC,EAAAC,cAAAmJ,IAAqDtI,MACrDf,EAAAC,EAAAC,cAAA4I,IAA6CC,WAX7C,CAAA5D,EAAAC,KACA2D,EAAA3D,EAAAC,cAAAtF,MAAAwD,IAU6C0F,WAR7C,CAAAlJ,EAAAqF,KACA6D,EAAA7D,EAAA9B,IAO6CtB,OAAAgH,YAAA/G,OAAAiH,YAAAnI,MAC7Cf,EAAAC,EAAAC,cAAA,WACAuJ,QAAA,QAAAxH,IAAAjC,EAAAC,EAAAC,cAAAoI,GAA8EC,aAAAgB,EAAAf,gBAP9E,CAAAzI,EAAAqF,KACAoE,GAAqB3J,KAAAuF,EAAAC,cAAAxI,GAAAkD,eCRrB2J,GAAAlN,OAAAkG,EAAA,EAAAlG,QAAAmG,EAAA,EAAAnG,CAAAoG,GAAApG,OAAAoI,QAAsE5C,KAAA9D,EAAA,EAAA2E,qBAAAD,GAAAX,KAAA/D,EAAA,EAAA4E,qBAAAF,GAAA2G,QAAArL,EAAA,EAAAyL,kCAAA/G,IAAsL1E,EAAA,EAAAqH,2BAAA3C,MAC5PmG,WAAA7K,EAAA,EAAA6K,WACAE,WAAA/K,EAAA,EAAA+K,WACAO,YAAAtL,EAAA,EAAA0L,0BACAC,SAAA3L,EAAA,EAAA4L,0BAJA,CAKCtN,OAAA6G,EAAA,EAAA7G,GAAA8M,KCMD,IAAAS,GAXA,EAAsBhJ,IAAAiD,UAAAjE,QAAAkE,cACtBjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAuCC,SAAAC,IACvCA,EAAAC,kBACA,IAEArE,EAAAC,EAAAC,cAAAoE,EAAA,GAAwCN,UAAAO,QAAA,aAAAC,MAAAzD,EAAA,gDACxCf,EAAAC,EAAAC,cAAAuF,EAAA,GAA0CE,aAAA5E,EAAA,2DAAA2E,SAAA,SAAAE,YAAA5F,EAAAC,EAAAC,cAAAmD,EAAA,GAAgJwC,QAAA,uDAAAG,KAAAhG,EAAAC,EAAAC,cAAA,+CAC1LF,EAAAC,EAAAC,cAAA+F,EAAA,GAA6C1D,QAAA,SAC7CvC,EAAAC,EAAAC,cAAAgG,EAAA,UACAlG,EAAAC,EAAAC,cAAAyE,EAAA,EAAAnI,OAAAoI,UAA2DpI,OAAAO,EAAA,EAAAP,CAAAO,EAAA,EAAAmB,WAAAa,kBAAqDiF,UAAAnH,GAAA,aAAAkD,QAAAkE,gBCWhH,IAAA+F,GArBA,EAAqCjJ,OACrCf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KACArC,EAAAC,EAAAC,cAAAG,EAAA,GAAoCC,KAAAC,EAAA,EAAAiC,IAAqBzB,EAAA,kDACzDf,EAAAC,EAAAC,cAAA,WAAAa,EAAA,iDACAf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA4E,EAAA,OACA9E,EAAAC,EAAAC,cAAA6E,EAAA,OACA/E,EAAAC,EAAAC,cAAAmD,EAAA,GAAkDwC,QAAA,kDAAAoE,gBAAAjK,EAAAC,EAAAC,cAAA,KAAwG4G,KAAA,kHAAAC,OAAA,UAA4IhG,EAAA,sDACtSf,EAAAC,EAAAC,cAAA6E,EAAA,OAAAhE,EAAA,wCACAf,EAAAC,EAAAC,cAAA6E,EAAA,OACAhE,EAAA,kCACAf,EAAAC,EAAAC,cAAA,WACAa,EAAA,2CACAf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACA,mKACAF,EAAAC,EAAAC,cAAAuF,EAAA,GAA8CE,aAAA5E,EAAA,qDAAA2E,SAAA,QAAAE,YAAA7E,EAAA,mDAC9Cf,EAAAC,EAAAC,cAAA+F,EAAA,GAAiD1D,QAAA,SACjDvC,EAAAC,EAAAC,cAAAgG,EAAA,WACAlG,EAAAC,EAAAC,cAAA6E,EAAA,OAAAhE,EAAA,wDCTA,IAAAmJ,GAVA,EAAyBnJ,IAAAmB,YAAAiI,kBAAAC,qBAIzB,OAAApK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KACArC,EAAAC,EAAAC,cAAA8J,IAA2CjJ,MAC3Cf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA6J,IAA4ChJ,IAAAkD,SAP5C,CAAAkB,EAAAC,KACA+E,EAAA/E,EAAAC,cAAAtF,MAAA2D,IAM4CM,QAAAoG,EAAArK,MAAAmC,MCP5CmI,GAAA7N,OAAAkG,EAAA,EAAAlG,QAAAmG,EAAA,EAAAnG,CAAAoG,KACAV,UAAAhE,EAAA,EAAA6E,0BAAAH,GACAwH,eAAAlM,EAAA,EAAAqH,2BAAA3C,GACAwH,mBAEAD,gBAAAjM,EAAA,EAAAoM,iBALA,CAMC9N,OAAA6G,EAAA,EAAA7G,GAAA0N,eCLD3N,EAAA,EAAAC,OAAAkG,EAAA,EAAAlG,QAAAmG,EAAA,EAAAnG,CAAAoG,KACA2H,YAAArM,EAAA,EAAAsM,sBAAA5H,GACA6H,UAAAvM,EAAA,EAAAwM,0BAAA9H,GACA+H,SAAAzM,EAAA,EAAA0M,sBAAAhI,GACAiI,kBAAA3M,EAAA,EAAAyL,kCAAA/G,GACAX,KAAA/D,EAAA,EAAA4E,qBAAAF,GACAZ,KAAA9D,EAAA,EAAA2E,qBAAAD,GACAkI,OAAA5M,EAAA,EAAAgF,6BAAAN,GACAV,UAAAhE,EAAA,EAAA6E,0BAAAH,GACAT,IAAAjE,EAAA,EAAA8E,oBAAAJ,GACA3B,OAAA/C,EAAA,EAAAkF,gBAAAR,GACAlB,OAAAxD,EAAA,EAAAiF,gBAAAP,OAEAmI,iBAAA7M,EAAA,EAAA6M,iBACAC,cAAAC,EAAA,EAAAC,aACAC,UAAAjN,EAAA,EAAAiN,WAfA,CAgBC3O,OAAA6G,EAAA,EAAA7G,GCuCD,EAA4BuE,IAAAgK,mBAAAC,gBAAAT,cAAAE,YAAAE,WAAAE,oBAAA5J,SAAAgB,OAAA6I,SAAA9I,OAAAG,MAAAD,YAAAiJ,gBAC5B,MAAAC,EAjDAnJ,KACA,OAAAA,GACA,UACA,OACAjC,EAAAC,EAAAC,cAAAwJ,IAAiD2B,IAAA,gBACjDrL,EAAAC,EAAAC,cAAAoF,GAAmD+F,IAAA,kBACnDrL,EAAAC,EAAAC,cAAA+G,GAAgDoE,IAAA,mBAChDrL,EAAAC,EAAAC,cAAAiH,GAA8CkE,IAAA,iBAC9CrL,EAAAC,EAAAC,cAAAyG,GAA0D0E,IAAA,0BAC1DrL,EAAAC,EAAAC,cAAAuC,GAA4C4I,IAAA,eAE5C,UACA,OACArL,EAAAC,EAAAC,cAAAwJ,IAAiD2B,IAAA,gBACjDrL,EAAAC,EAAAC,cAAAoH,GAAkD+D,IAAA,iBAClDrL,EAAAC,EAAAC,cAAAmK,IAAqDgB,IAAA,oBACrDrL,EAAAC,EAAAC,cAAAmG,GAAgDgF,IAAA,cAChDrL,EAAAC,EAAAC,cAAAuC,GAA4C4I,IAAA,WAE5C,QACA,OAAArL,EAAAC,EAAAC,cAAAwJ,IAAqD2B,IAAA,mBA6BrDC,CAAArJ,GACAsJ,EA3BA,EAAAZ,EAAAE,IAAA5I,IACA,OAAAA,GACA,UACA,OACA0I,EAAA3I,MAAA2I,EAAA1I,KACA0I,EAAA1H,cACA,GACA,EACA0H,EAAAxI,KACA,GAEA,UACA,OACAwI,EAAA3I,MACA2I,EAAA1I,MACAzF,OAAAgP,KAAAX,GAAAY,MAAAC,GAAAb,EAAAa,KACA,EACAf,EAAAzI,WACA,GACA,GAEA,QACA,WAKAyJ,CAAAhB,EAAAE,EAAAc,CAAA1J,GACA,OAAAjC,EAAAC,EAAAC,cAAA0L,GAAA,SAAgDC,QAAAC,eAChD,MAAAC,IACA,KAAA9J,GAAA4J,EAAAT,EAAAvH,SAAA7D,EAAAC,EAAAC,cAAA+F,EAAA,EAAAzJ,OAAAoI,UAAkGpI,OAAAO,EAAA,EAAAP,CAAAO,EAAA,EAAAmB,WAAAC,aAAgDkN,IAAA,gBAAA9I,QAAA,YAAA1F,GAAA,uBAAAmP,WAAA,IAAA/K,EAAAgL,QAAA,KAClJH,EAAA,GACAf,OACmBhK,EAAA,6BACnB8K,EAAA,GAAA7L,EAAAC,EAAAC,cAAA+F,EAAA,EAAAzJ,OAAAoI,UAAsEpI,OAAAO,EAAA,EAAAP,CAAAO,EAAA,EAAAmB,WAAAE,WAA8CiN,IAAA,cAAA9I,QAAA,YAAA1F,GAAA,qBAAAmP,WAAA,IAAA/K,EAAAgL,QAAA,IAAAH,EAAAD,EAAA,KAAoJ9K,EAAA,2BACxQ,KAAAkB,GAAAjC,EAAAC,EAAAC,cAAA+F,EAAA,GAAyD+F,YAAA,EAAAX,IAAA,uBAAA9I,QAAA,UAAA1F,GAAA,sBAA8FkE,EAAA,2BACvJ,KAAAkB,GAAA4J,EAAAT,EAAAvH,OAAA,GAAA7D,EAAAC,EAAAC,cAAA+F,EAAA,EAAAzJ,OAAAoI,UAAoGpI,OAAAO,EAAA,EAAAP,CAAAO,EAAA,EAAAmB,WAAAG,eAAkD2N,YAAAT,EAAAM,IAAApB,EAAAY,IAAA,kBAAA9I,QAAA,UAAA1F,GAAA,yBAAAoP,QAAA,KACtJH,EAAAD,EAAA,MACmB9K,EAAA,2BACnB,KAAAkB,GAAA4J,IAAAT,EAAAvH,OAAA,GAAA7D,EAAAC,EAAAC,cAAA+F,EAAA,EAAAzJ,OAAAoI,UAAsGpI,OAAAO,EAAA,EAAAP,CAAAO,EAAA,EAAAmB,WAAAG,eAAkD2N,WAAA,IAAA/K,EAAAoK,IAAA,gBAAA9I,QAAA,UAAA1F,GAAA,uBAAAoP,QAAA,KACxJ,MAAAC,EAAA,QAAAjK,EAAAC,EAAAC,EACAgK,EAAA,QAAAlK,GAAiEmK,gBAAkBtB,WAAW,KAC9FK,EAAA3O,OAAAoI,QAA6C3C,OAC7CD,OAAAqK,gBACAH,2BAC2BC,GAAA,IAAAL,EAAA,OACR/K,EAAA,kCAEnB,OAAAf,EAAAC,EAAAC,cAAAoM,EAAA,GAA4CnM,OAC5CoM,OAAA,QACAC,MAAA,SACaC,SAAA,EAAA3M,MAAAiB,EAAA,2BAAA2L,OAAAnC,EAAAwB,UAAAY,QAAA,KACbb,EAAA,GACAf,MACe,KAAA9I,EAAAmJ,EAAA,GAAAA,EAAAS","file":"4088021681e6bf6666e4.bundle.js","sourcesContent":["import { hot } from 'react-hot-loader';\nimport Wizard from './wizard';\nexport default hot(module)(Wizard);\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        historical_data_btn: 'historical-data-btn',\n        tag_lnk: 'tag-lnk',\n        show_more_btn: 'show-more-btn',\n        view_all_btn: 'view-all-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n        view_all_link: 'view-all-lnk',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import { Title, TitleSize } from '@patternfly/react-core';\nimport React from 'react';\nconst Item = ({ title, value }) => (React.createElement(\"div\", { style: { paddingBottom: '12px' } },\n    React.createElement(Title, { size: TitleSize.md }, title),\n    React.createElement(Title, { size: TitleSize.lg }, value)));\nexport default Item;\n","import { Alert, Title, TitleSize } from '@patternfly/react-core';\nimport React from 'react';\nimport Item from './item';\nclass Loader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    parseError() {\n        const { t, apiStatus: status, apiErrors: error } = this.props;\n        if (status === 1 /* inProgress */) {\n            return null;\n        }\n        if (error === null) {\n            return null;\n        }\n        let errorMessage = t('onboarding.final.default_error');\n        if (error.response && error.response.data) {\n            errorMessage = error.response.data.Error;\n            if (!errorMessage && error.response.data.errors !== undefined) {\n                errorMessage = error.response.data.errors\n                    .map(er => er.detail)\n                    .join(', ');\n            }\n        }\n        else if (error.message) {\n            errorMessage = error.message;\n        }\n        return errorMessage;\n    }\n    render() {\n        const { t, name, type, clusterId, arn } = this.props;\n        const errors = this.parseError();\n        return (React.createElement(React.Fragment, null,\n            errors !== null && (React.createElement(\"div\", { style: { paddingBottom: '30px' } },\n                React.createElement(Alert, { variant: \"danger\", title: `${errors}. ${t('onboarding.final.please_revise')}` }))),\n            React.createElement(Title, { size: TitleSize.xl }, t('onboarding.final.title')),\n            React.createElement(\"p\", null, t('onboarding.final.desc')),\n            React.createElement(\"br\", null),\n            React.createElement(Item, { value: name, title: t('onboarding.final.name') }),\n            React.createElement(Item, { value: t(`onboarding.final.type.${type}`), title: t('onboarding.final.type.title') }),\n            type === 'AWS' && (React.createElement(Item, { value: arn, title: t('onboarding.final.arn') })),\n            type === 'OCP' && (React.createElement(Item, { value: clusterId, title: t('onboarding.final.cluster') }))));\n    }\n}\nexport default Loader;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingSelectors } from 'store/onboarding';\nimport Loader from './loader';\nimport './loader.css';\nexport default connect(createMapStateToProps(state => ({\n    name: onboardingSelectors.selectOnboardingName(state),\n    type: onboardingSelectors.selectOnboardingType(state),\n    clusterId: onboardingSelectors.selectOnboardingClusterID(state),\n    arn: onboardingSelectors.selectOnboardingArn(state),\n    s3BucketName: onboardingSelectors.selectOnboardingS3BucketName(state),\n    apiErrors: onboardingSelectors.selectApiErrors(state),\n    apiStatus: onboardingSelectors.selectApiStatus(state),\n})), {})(translate()(Loader));\n","export const sourceTypeValidator = (value) => value !== '';\nexport const sourceNameValidator = (value) => new RegExp('^.').test(value);\nexport const ocpClusterIdValidator = (value) => new RegExp('^.').test(value);\nexport const awsS3BucketNameValidator = (value) => new RegExp('^[A-Za-z0-9]+[A-Za-z0-9_-]*$').test(value);\nexport const arnValidator = (value) => {\n    const arnPrefix = 'arn:aws:';\n    if (value.length < arnPrefix.length) {\n        return false;\n    }\n    if (value.length === arnPrefix.length) {\n        return value === arnPrefix;\n    }\n    return value.indexOf(arnPrefix) === 0;\n};\n","import { Form, FormGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\nimport { getTestProps, testIds } from 'testIds';\nconst S3BucketForm = ({ t, isValid, value, onChange }) => {\n    return (React.createElement(Form, { onSubmit: e => {\n            e.preventDefault();\n            return false;\n        } },\n        React.createElement(FormGroup, { isValid: isValid, fieldId: \"s3_bucket_name\", label: t('onboarding.aws_configure.s3_bucket_name_label'), helperText: t('onboarding.aws_configure.s3_bucket_name_helper_text'), helperTextInvalid: t('onboarding.aws_configure.s3_bucket_name_helper_text_invalid') },\n            React.createElement(TextInput, Object.assign({}, getTestProps(testIds.onboarding.s3_input), { isValid: isValid, id: \"s3_bucket_name\", value: value, onChange: onChange })))));\n};\nexport default S3BucketForm;\n","import { List, ListItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nconst AwsConfigureInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.aws_configure.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.aws_configure.intro')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null, t('onboarding.aws_configure.s3_bucket_account')),\n            React.createElement(ListItem, null,\n                t('onboarding.aws_configure.cost_report'),\n                React.createElement(List, null,\n                    React.createElement(ListItem, null, t('onboarding.aws_configure.report_name')),\n                    React.createElement(ListItem, null, t('onboarding.aws_configure.time_unit')),\n                    React.createElement(ListItem, null, t('onboarding.aws_configure.include')),\n                    React.createElement(ListItem, null, t('onboarding.aws_configure.support')),\n                    React.createElement(ListItem, null, t('onboarding.aws_configure.prefix')))),\n            React.createElement(ListItem, null, t('onboarding.aws_configure.enter_s3_bucket')))));\n};\nexport default AwsConfigureInstructions;\n","import React from 'react';\nimport { awsS3BucketNameValidator } from 'utils/validators';\nimport S3BucketForm from './form';\nimport AwsConfigureInstructions from './instructions';\nconst AwsConfigure = ({ t, s3BucketName, updateS3BucketName, s3BucketNameValid, }) => {\n    const onChange = (_name, event) => {\n        updateS3BucketName(event.currentTarget.value, awsS3BucketNameValidator);\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(AwsConfigureInstructions, { t: t }),\n        React.createElement(\"br\", null),\n        React.createElement(\"br\", null),\n        React.createElement(S3BucketForm, { t: t, onChange: onChange, isValid: s3BucketNameValid, value: s3BucketName })));\n};\nexport default AwsConfigure;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport AwsConfigure from './awsConfigure';\nexport default connect(createMapStateToProps(state => ({\n    s3BucketName: onboardingSelectors.selectOnboardingS3BucketName(state),\n    s3BucketNameValid: onboardingSelectors.selectOnboardingValidation(state)\n        .s3BucketNameValid,\n})), {\n    updateS3BucketName: onboardingActions.updateS3BucketName,\n})(translate()(AwsConfigure));\n","import { Button, ClipboardCopy, List, ListItem, Popover, Title, } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { Interpolate } from 'react-i18next';\nconst ConfigureInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.configure.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.configure.instructions_text')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null,\n                t('onboarding.configure.edit_contrab'),\n                React.createElement(Popover, { position: \"right\", \"aria-label\": t('onboarding.configure.explain_more_about_cron'), bodyContent: React.createElement(\"div\", null,\n                        t('onboarding.configure.cron_user_reqs'),\n                        React.createElement(List, null,\n                            React.createElement(ListItem, null,\n                                React.createElement(Interpolate, { i18nKey: \"onboarding.configure.cron_user_req_1\", metering_operator: React.createElement(\"i\", null, \"metering-operator\") })),\n                            React.createElement(ListItem, null, t('onboarding.configure.cron_user_req_2'))),\n                        React.createElement(Interpolate, { i18nKey: \"onboarding.configure.cron_user_more\", sub_text: React.createElement(\"i\", null, \"ocpcollector\"), path: React.createElement(\"b\", null, \"/etc/sudoers\") }),\n                        React.createElement(\"br\", null),\n                        React.createElement(\"b\", null, \"ocpcollector ALL=(ALL) NOPASSWD: ALL\")) },\n                    React.createElement(Button, { variant: \"plain\" },\n                        React.createElement(QuestionCircleIcon, null))),\n                React.createElement(ClipboardCopy, { textAriaLabel: t('onboarding.configure.crontab_command') }, `contrab -u <username> -e`)),\n            React.createElement(ListItem, null,\n                t('onboarding.configure.create_entry'),\n                React.createElement(ClipboardCopy, { textAriaLabel: t('onboarding.configure.entry_description') }, \"*/45 * * * * /path/to/ocp_usage.sh --collect\")),\n            React.createElement(ListItem, null,\n                \" \",\n                t('onboarding.configure.click_next'),\n                \" \"))));\n};\nexport default ConfigureInstructions;\n","import { translate } from 'react-i18next';\nimport ConfigureInstructions from './instructions';\nexport default translate()(ConfigureInstructions);\n","import { Form, FormGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\nimport { getTestProps, testIds } from 'testIds';\nconst ArnForm = ({ t, isValid, value, onChange }) => {\n    return (React.createElement(Form, { onSubmit: e => {\n            e.preventDefault();\n            return false;\n        } },\n        React.createElement(FormGroup, { isValid: isValid, fieldId: \"arn\", label: t('onboarding.enable_account_access.arn_label'), helperText: t('onboarding.enable_account_access.arn_helper_text'), helperTextInvalid: t('onboarding.enable_account_access.arn_helper_text_invalid') },\n            React.createElement(TextInput, Object.assign({}, getTestProps(testIds.onboarding.arn_input), { isValid: isValid, id: \"arn\", value: value, onChange: onChange })))));\n};\nexport default ArnForm;\n","import { List, ListItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nconst EnableAccountAccessInstructions = ({ t, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.enable_account_access.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.enable_account_access.intro')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null, t('onboarding.enable_account_access.select_role')),\n            React.createElement(ListItem, null, t('onboarding.enable_account_access.copy_arn')))));\n};\nexport default EnableAccountAccessInstructions;\n","import React from 'react';\nimport { arnValidator } from 'utils/validators';\nimport ArnForm from './form';\nimport EnableAccountAccessInstructions from './instructions';\nconst EnableAccountAccess = ({ t, arn, updateArn, arnValid, }) => {\n    const onChange = (_name, event) => {\n        updateArn(event.currentTarget.value, arnValidator);\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(EnableAccountAccessInstructions, { t: t }),\n        React.createElement(\"br\", null),\n        React.createElement(\"br\", null),\n        React.createElement(ArnForm, { t: t, onChange: onChange, isValid: arnValid, value: arn })));\n};\nexport default EnableAccountAccess;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport EnableAccountAccess from './enableAccountAccess';\nexport default connect(createMapStateToProps(state => ({\n    arn: onboardingSelectors.selectOnboardingArn(state),\n    arnValid: onboardingSelectors.selectOnboardingValidation(state).arnValid,\n})), {\n    updateArn: onboardingActions.updateArn,\n})(translate()(EnableAccountAccess));\n","import { ClipboardCopy, ClipboardCopyVariant, List, ListItem, Title, } from '@patternfly/react-core';\nimport React from 'react';\nimport { Interpolate } from 'react-i18next';\nconst IamPolicyInstructions = ({ t, s3BucketName }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.iam_policy.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.iam_policy.intro')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null,\n                React.createElement(Interpolate, { iampolicy: React.createElement(\"a\", { href: \"https://docs.aws.amazon.com/IAM/latest/UserGuide/console.html\", target: \"_blank\" }, t('onboarding.iam_policy.link_text')), i18nKey: \"onboarding.iam_policy.sign_in\" })),\n            React.createElement(ListItem, null,\n                t('onboarding.iam_policy.new_policy'),\n                React.createElement(\"br\", null),\n                React.createElement(ClipboardCopy, { textAriaLabel: t('onboarding.iam_policy.json_content'), variant: ClipboardCopyVariant.expansion }, `{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Sid\": \"VisualEditor0\",\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"s3:Get*\",\n            \"s3:List*\"\n        ],\n        \"Resource\": [\n            \"arn:aws:s3:::${s3BucketName}\",\n            \"arn:aws:s3:::${s3BucketName}/*\"\n        ]\n    },\n    {\n        \"Sid\": \"VisualEditor1\",\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"s3:ListAllMyBuckets\",\n            \"iam:ListAccountAliases\",\n            \"cur:DescribeReportDefinitions\"\n        ],\n        \"Resource\": \"*\"\n    }]\n}`)),\n            React.createElement(ListItem, null, t('onboarding.iam_policy.complete_process'))),\n        React.createElement(\"br\", null),\n        React.createElement(\"br\", null),\n        React.createElement(\"div\", null,\n            React.createElement(\"b\", null, t('onboarding.iam_policy.donot_close_browser')),\n            t('onboarding.iam_policy.note'))));\n};\nexport default IamPolicyInstructions;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingSelectors } from 'store/onboarding';\nimport IamPolicyInstructions from './instructions';\nexport default connect(createMapStateToProps(state => ({\n    s3BucketName: onboardingSelectors.selectOnboardingS3BucketName(state),\n})), {})(translate()(IamPolicyInstructions));\n","import { ClipboardCopy, List, ListItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nconst IamRoleInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.iam_role.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.iam_role.intro')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null, t('onboarding.iam_role.create_new_role')),\n            React.createElement(ListItem, null,\n                t('onboarding.iam_role.paste_account_id'),\n                React.createElement(\"br\", null),\n                React.createElement(ClipboardCopy, { textAriaLabel: t('onboarding.iam_role.paste_account_id_aria') }, \"589173575009\")),\n            React.createElement(ListItem, null, t('onboarding.iam_role.attach_permissions')),\n            React.createElement(ListItem, null, t('onboarding.iam_role.complete_process')))));\n};\nexport default IamRoleInstructions;\n","import { translate } from 'react-i18next';\nimport IamRole from './instructions';\nexport default translate()(IamRole);\n","import { Button, ClipboardCopy, List, ListItem, Popover, Title, } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { Interpolate } from 'react-i18next';\nconst ObtainLoginInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.obtain_login.instructions_title')),\n        React.createElement(\"div\", null,\n            t('onboarding.obtain_login.intro'),\n            React.createElement(Popover, { \"aria-label\": t('onboarding.obtain_login.popover_aria_label'), position: \"top\", bodyContent: React.createElement(Interpolate, { i18nKey: \"onboarding.obtain_login.popover_content\", metering_operator: React.createElement(\"i\", null, \"metering-operator\"), learn_more: React.createElement(\"a\", { href: \"\" }, t('onboarding.obtain_login.learn_more')) }) },\n                React.createElement(Button, { variant: \"plain\" },\n                    React.createElement(QuestionCircleIcon, null)))),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null, t('onboarding.obtain_login.obtain_token')),\n            React.createElement(ListItem, null,\n                t('onboarding.obtain_login.run_command'),\n                React.createElement(\"br\", null),\n                React.createElement(ClipboardCopy, { textAriaLabel: t('onboarding.obtain_login.run_command_aria_label') }, \"oc serviceaccounts get-token metering-operator > ocp_usage_token\")),\n            React.createElement(ListItem, null, t('onboarding.obtain_login.security')))));\n};\nexport default ObtainLoginInstructions;\n","import { translate } from 'react-i18next';\nimport ObtainLogin from './instructions';\nexport default translate()(ObtainLogin);\n","import { Checkbox } from '@patternfly/react-core';\nimport React from 'react';\nconst CheckItem = ({ children, onChange, title, isChecked = false, ariaLabel = null, id = null, }) => (React.createElement(\"div\", null,\n    React.createElement(Checkbox, { isChecked: isChecked, onChange: onChange, label: title, id: id, \"aria-label\": ariaLabel }),\n    React.createElement(\"span\", { style: { margin: '10px 0 10px 20px' } }, children)));\nexport default CheckItem;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    listWrapper: {\n        paddingLeft: global_spacer_md.value,\n        marginBottom: global_spacer_md.value,\n        marginTop: `-${global_spacer_md.value}`,\n    },\n    listTitle: {\n        marginBottom: global_spacer_md.value,\n    },\n});\n","import { List, ListItem } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { Interpolate, translate } from 'react-i18next';\nimport { getTestProps, testIds } from 'testIds';\nimport CheckItem from './checkItem';\nimport { styles } from './checkList.styles';\nconst SourceKindCheckListBase = ({ t, checkedItems, updateCheckItem, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: css(styles.listTitle) }, t('onboarding.source_kind.checklist_title')),\n        React.createElement(CheckItem, Object.assign({}, getTestProps(testIds.onboarding.check_box_1), { isChecked: checkedItems.install_openshift, title: t('onboarding.source_kind.checkbox_1'), onChange: updateCheckItem, id: 'install_openshift', ariaLabel: t('onboarding.source_kind.checkbox_1_aria_label') }),\n            React.createElement(\"div\", { className: css(styles.listWrapper) },\n                React.createElement(List, null,\n                    React.createElement(ListItem, null,\n                        React.createElement(\"a\", { target: \"_blank\", href: \"https://docs.openshift.com/container-platform/3.11/getting_started/install_openshift.html\" }, t('onboarding.source_kind.checkbox_1_1'))),\n                    React.createElement(ListItem, null,\n                        React.createElement(\"a\", { target: \"_blank\", href: \"https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html/configuring_clusters/installing-operator-framework\" }, t('onboarding.source_kind.checkbox_1_2')))))),\n        React.createElement(CheckItem, Object.assign({}, getTestProps(testIds.onboarding.check_box_2), { isChecked: checkedItems.install_others, title: t('onboarding.source_kind.checkbox_2'), onChange: updateCheckItem, id: 'install_others', ariaLabel: t('onboarding.source_kind.checkbox_2_aria_label') }),\n            React.createElement(\"div\", { className: css(styles.listWrapper) },\n                React.createElement(List, null,\n                    React.createElement(ListItem, null,\n                        React.createElement(\"a\", { target: \"_blank\", href: \"https://access.redhat.com/products/red-hat-insights#getstarted\" }, t('onboarding.source_kind.checkbox_2_1'))),\n                    React.createElement(ListItem, null,\n                        React.createElement(Interpolate, { i18nKey: \"onboarding.source_kind.checkbox_2_2\", ansible: React.createElement(\"a\", { target: \"_blank\", href: \"https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html#basics-what-will-be-installed\" }, t('onboarding.source_kind.ansible')), epel: React.createElement(\"a\", { target: \"_blank\", href: \"https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html#basics-what-will-be-installed\" }, t('onboarding.source_kind.epel')) })),\n                    React.createElement(ListItem, null,\n                        React.createElement(\"a\", { target: \"_blank\", href: \"https://docs.openshift.com/container-platform/3.11/cli_reference/get_started_cli.html\" }, t('onboarding.source_kind.checkbox_2_3'))))))));\n};\nexport default translate()(SourceKindCheckListBase);\n","import { Form, FormGroup, FormSelect, FormSelectOption, TextInput, } from '@patternfly/react-core';\nimport React from 'react';\nimport { getTestProps, testIds } from 'testIds';\nconst SourceKindForm = ({ t, name, updateName, nameValid, type, updateType, typeValid, }) => {\n    return (React.createElement(Form, { onSubmit: e => {\n            e.preventDefault();\n            return false;\n        } },\n        React.createElement(FormGroup, { isValid: nameValid, helperTextInvalid: t('onboarding.name_helper_invalid_text'), helperText: t('onboarding.name_helper_text'), fieldId: \"source_name\", label: t('onboarding.name_label') },\n            React.createElement(TextInput, Object.assign({}, getTestProps(testIds.onboarding.name_input), { isValid: nameValid, id: \"source_name\", value: name, onChange: updateName }))),\n        React.createElement(FormGroup, { isValid: typeValid, fieldId: \"source_type\", label: t('onboarding.type_label') },\n            React.createElement(FormSelect, Object.assign({}, getTestProps(testIds.onboarding.type_selector), { isValid: typeValid, value: type, id: \"source_type\", onChange: updateType }),\n                React.createElement(FormSelectOption, Object.assign({}, getTestProps(testIds.onboarding.type_opt_non), { label: t('onboarding.select_type_label'), value: \"\" })),\n                React.createElement(FormSelectOption, Object.assign({}, getTestProps(testIds.onboarding.type_opt_aws), { label: t('onboarding.type_options.aws'), value: \"AWS\" })),\n                React.createElement(FormSelectOption, Object.assign({}, getTestProps(testIds.onboarding.type_opt_ocp), { label: t('onboarding.type_options.ocp'), value: \"OCP\" }))))));\n};\nexport default SourceKindForm;\n","import { Title } from '@patternfly/react-core';\nimport React from 'react';\nconst SourceKindInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.source_kind.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.source_kind.instructions_text')),\n        React.createElement(\"br\", null)));\n};\nexport default SourceKindInstructions;\n","import React from 'react';\nimport { sourceNameValidator, sourceTypeValidator } from 'utils/validators';\nimport SourceKindCheckList from './checkList';\nimport SourceKindForm from './form';\nimport SourceKindInstructions from './instructions';\nconst SourceKind = ({ t, name, updateName, nameValid, type, updateType, typeValid, checked, updateCheck, }) => {\n    const updateNameText = (_name, event) => {\n        updateName(event.currentTarget.value, sourceNameValidator);\n    };\n    const updateTypeOption = (value, event) => {\n        updateType(event, sourceTypeValidator);\n    };\n    const updateCheckItem = (value, event) => {\n        updateCheck({ item: event.currentTarget.id, value });\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(SourceKindInstructions, { t: t }),\n        React.createElement(SourceKindForm, { updateName: updateNameText, updateType: updateTypeOption, name: name, nameValid: nameValid, type: type, typeValid: typeValid, t: t }),\n        React.createElement(\"br\", null),\n        Boolean(type === 'OCP') && (React.createElement(SourceKindCheckList, { checkedItems: checked, updateCheckItem: updateCheckItem }))));\n};\nexport default SourceKind;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport SourceKind from './sourceKind';\nexport default connect(createMapStateToProps(state => (Object.assign({ name: onboardingSelectors.selectOnboardingName(state), type: onboardingSelectors.selectOnboardingType(state), checked: onboardingSelectors.selectOnboardingSourceKindChecked(state) }, onboardingSelectors.selectOnboardingValidation(state)))), {\n    updateName: onboardingActions.updateName,\n    updateType: onboardingActions.updateType,\n    updateCheck: onboardingActions.updateSourceKindCheckList,\n    checkAll: onboardingActions.checkSourceKindCheckList,\n})(translate()(SourceKind));\n","import { Button, Form, FormGroup, Popover, TextInput, } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { Interpolate } from 'react-i18next';\nimport { getTestProps, testIds } from 'testIds';\nconst ClusterForm = ({ t, isValid, value, onChange }) => {\n    return (React.createElement(Form, { onSubmit: e => {\n            e.preventDefault();\n            return false;\n        } },\n        React.createElement(FormGroup, { isValid: isValid, fieldId: \"cluster_id\", label: t('onboarding.usage_collector.cluster_id_label') },\n            React.createElement(Popover, { \"aria-label\": t('onboarding.usage_collector.popover_clusterid_aria_label'), position: \"bottom\", bodyContent: React.createElement(Interpolate, { i18nKey: \"onboarding.usage_collector.popover_clusterid_content\", path: React.createElement(\"b\", null, \"~/.config/ocp_usage/config.json\") }) },\n                React.createElement(Button, { variant: \"plain\" },\n                    React.createElement(QuestionCircleIcon, null))),\n            React.createElement(TextInput, Object.assign({}, getTestProps(testIds.onboarding.clusterid_input), { isValid: isValid, id: \"cluster_id\", value: value, onChange: onChange })))));\n};\nexport default ClusterForm;\n","import { Button, List, ListItem, Popover, Title, TitleSize, } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { Interpolate } from 'react-i18next';\nconst UsageCollectorInstructions = ({ t, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: TitleSize.xl }, t('onboarding.usage_collector.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.usage_collector.instructions_text')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null,\n                React.createElement(Interpolate, { i18nKey: \"onboarding.usage_collector.download_and_install\", usage_collector: React.createElement(\"a\", { href: \"https://koku.readthedocs.io/en/latest/providers.html#download-and-configure-ocp-usage-collector-usage_collector\", target: \"_blank\" }, t('onboarding.usage_collector.ocp_usage_collector')) })),\n            React.createElement(ListItem, null, t('onboarding.usage_collector.navigate')),\n            React.createElement(ListItem, null,\n                t('onboarding.usage_collector.run'),\n                React.createElement(\"br\", null),\n                t('onboarding.usage_collector.example_text'),\n                React.createElement(\"br\", null),\n                React.createElement(\"br\", null),\n                \"# ./ocp_usage.sh --setup -e OCP_API=\\\"https://api.openshift-prod.mycompany.com\\\" -e OCP_METERING_NAMESPACE=\\\"metering\\\" -e OCP_TOKEN_PATH=\\\"/path/to/ocp_usage_token\\\"\",\n                React.createElement(Popover, { \"aria-label\": t('onboarding.usage_collector.popover_cmd_aria_label'), position: \"right\", bodyContent: t('onboarding.usage_collector.popover_cmd_content') },\n                    React.createElement(Button, { variant: \"plain\" },\n                        React.createElement(QuestionCircleIcon, null)))),\n            React.createElement(ListItem, null, t('onboarding.usage_collector.configuration_complete')))));\n};\nexport default UsageCollectorInstructions;\n","import React from 'react';\nimport { ocpClusterIdValidator } from 'utils/validators';\nimport ClusterIdForm from './form';\nimport Instructions from './instructions';\nconst UsageCollector = ({ t, clusterId, updateClusterId, clusterIdValid, }) => {\n    const onChange = (_name, event) => {\n        updateClusterId(event.currentTarget.value, ocpClusterIdValidator);\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Instructions, { t: t }),\n        React.createElement(\"br\", null),\n        React.createElement(\"br\", null),\n        React.createElement(ClusterIdForm, { t: t, onChange: onChange, isValid: clusterIdValid, value: clusterId })));\n};\nexport default UsageCollector;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport UsageCollector from './usageCollector';\nexport default connect(createMapStateToProps(state => ({\n    clusterId: onboardingSelectors.selectOnboardingClusterID(state),\n    clusterIdValid: onboardingSelectors.selectOnboardingValidation(state)\n        .clusterIdValid,\n})), {\n    updateClusterId: onboardingActions.updateClusterID,\n})(translate()(UsageCollector));\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport { sourcesActions } from 'store/sourceSettings';\nimport { WizardBase } from './wizard';\nexport default connect(createMapStateToProps(state => ({\n    isModalOpen: onboardingSelectors.selectOnboardingModal(state),\n    isInvalid: onboardingSelectors.selectOnboardingIsInvalid(state),\n    dirtyMap: onboardingSelectors.selectOnboardingDirty(state),\n    sourceKindChecked: onboardingSelectors.selectOnboardingSourceKindChecked(state),\n    type: onboardingSelectors.selectOnboardingType(state),\n    name: onboardingSelectors.selectOnboardingName(state),\n    bucket: onboardingSelectors.selectOnboardingS3BucketName(state),\n    clusterId: onboardingSelectors.selectOnboardingClusterID(state),\n    arn: onboardingSelectors.selectOnboardingArn(state),\n    status: onboardingSelectors.selectApiStatus(state),\n    errors: onboardingSelectors.selectApiErrors(state),\n})), {\n    cancelOnboarding: onboardingActions.cancelOnboarding,\n    updateSources: sourcesActions.fetchSources,\n    addSource: onboardingActions.addSource,\n})(translate()(WizardBase));\n","import { Button, Modal } from '@patternfly/react-core';\nimport Final from 'pages/onboardingModal//final';\nimport AwsConfigure from 'pages/onboardingModal/awsConfigure';\nimport Configure from 'pages/onboardingModal/configure';\nimport EnableAccountAccess from 'pages/onboardingModal/enableAccountAccess';\nimport IamPolicy from 'pages/onboardingModal/iamPolicy';\nimport IamRole from 'pages/onboardingModal/iamRole';\nimport ObtainLogin from 'pages/onboardingModal/obtainLogin';\nimport SourceKind from 'pages/onboardingModal/sourceKind';\nimport UsageCollector from 'pages/onboardingModal/usageCollector';\nimport React from 'react';\nimport Merlin from 'react-merlin';\nimport { getTestProps, testIds } from 'testIds';\nconst stepMap = type => {\n    switch (type) {\n        case 'AWS':\n            return [\n                React.createElement(SourceKind, { key: \"source_kind\" }),\n                React.createElement(AwsConfigure, { key: \"aws_configure\" }),\n                React.createElement(IamPolicy, { key: \"aws_iam_policy\" }),\n                React.createElement(IamRole, { key: \"aws_iam_role\" }),\n                React.createElement(EnableAccountAccess, { key: \"enable_account_access\" }),\n                React.createElement(Final, { key: \"aws_final\" }),\n            ];\n        case 'OCP':\n            return [\n                React.createElement(SourceKind, { key: \"source_kind\" }),\n                React.createElement(ObtainLogin, { key: \"obtain_login\" }),\n                React.createElement(UsageCollector, { key: \"usage_collector\" }),\n                React.createElement(Configure, { key: \"configure\" }),\n                React.createElement(Final, { key: \"final\" }),\n            ];\n        default:\n            return [React.createElement(SourceKind, { key: \"source_kind\" })];\n    }\n};\nconst dirtyStepMap = (dirtyMap, sourceKindChecked) => type => {\n    switch (type) {\n        case 'AWS':\n            return [\n                dirtyMap.name && dirtyMap.type,\n                dirtyMap.s3BucketName,\n                true,\n                true,\n                dirtyMap.arn,\n                true,\n            ];\n        case 'OCP':\n            return [\n                dirtyMap.name &&\n                    dirtyMap.type &&\n                    Object.keys(sourceKindChecked).every(k => sourceKindChecked[k]),\n                true,\n                dirtyMap.clusterId,\n                true,\n                true,\n            ];\n        default:\n            return [];\n    }\n};\nexport const WizardBase = ({ t, cancelOnboarding, updateSources, isModalOpen, isInvalid, dirtyMap, sourceKindChecked, status, type, bucket, name, arn, clusterId, addSource, }) => {\n    const steps = stepMap(type);\n    const isDirty = dirtyStepMap(dirtyMap, sourceKindChecked)(type);\n    return (React.createElement(Merlin, null, ({ index, setIndex }) => {\n        const actions = [\n            (type === '' || index < steps.length) && (React.createElement(Button, Object.assign({}, getTestProps(testIds.onboarding.btn_cancel), { key: \"wizard_cancel\", variant: \"secondary\", id: \"wizard_cancel_button\", isDisabled: status === 1 /* inProgress */, onClick: () => {\n                    setIndex(0);\n                    cancelOnboarding();\n                } }), t('onboarding.wizard.cancel'))),\n            index > 0 && (React.createElement(Button, Object.assign({}, getTestProps(testIds.onboarding.btn_back), { key: \"wizard_back\", variant: \"secondary\", id: \"wizard_back_button\", isDisabled: status === 1 /* inProgress */, onClick: () => setIndex(index - 1) }), t('onboarding.wizard.back'))),\n            type === '' && (React.createElement(Button, { isDisabled: true, key: \"wizard_init_continue\", variant: \"primary\", id: \"wizard_init_button\" }, t('onboarding.wizard.next'))),\n            type !== '' && index < steps.length - 1 && (React.createElement(Button, Object.assign({}, getTestProps(testIds.onboarding.btn_continue), { isDisabled: !isDirty[index] || isInvalid, key: \"wizard_continue\", variant: \"primary\", id: \"wizard_continue_button\", onClick: () => {\n                    setIndex(index + 1);\n                } }), t('onboarding.wizard.next'))),\n            type !== '' && index === steps.length - 1 && (React.createElement(Button, Object.assign({}, getTestProps(testIds.onboarding.btn_continue), { isDisabled: status === 1 /* inProgress */, key: \"wizard_finish\", variant: \"primary\", id: \"wizard_finish_button\", onClick: () => {\n                    const provider_resource_name = type === 'OCP' ? clusterId : arn;\n                    const billing_source_obj = type === 'AWS' ? { billing_source: { bucket } } : null;\n                    addSource(Object.assign({ type,\n                        name, authentication: {\n                            provider_resource_name,\n                        } }, billing_source_obj), () => setIndex(0));\n                } }), t('onboarding.wizard.add_source'))),\n        ];\n        return (React.createElement(Modal, { style: {\n                height: '700px',\n                width: '800px',\n            }, isLarge: true, title: t('onboarding.wizard.title'), isOpen: isModalOpen, actions: actions, onClose: () => {\n                setIndex(0);\n                cancelOnboarding();\n            } }, type === '' ? steps[0] : steps[index]));\n    }));\n};\n"],"sourceRoot":""}