{"version":3,"sources":["webpack://koku-ui/./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeader.js","webpack://koku-ui/./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack://koku-ui/./src/pages/costModels/costModel/markup.styles.ts","webpack://koku-ui/./src/pages/costModels/costModel/updateMarkupDialog.tsx","webpack://koku-ui/./src/pages/costModels/costModel/markup.tsx","webpack://koku-ui/./src/pages/costModels/costModel/addRateModal.tsx","webpack://koku-ui/./src/pages/costModels/costModel/dialog.tsx","webpack://koku-ui/./src/pages/costModels/costModel/updateRateModel.tsx","webpack://koku-ui/./src/pages/costModels/costModel/priceListTable.tsx","webpack://koku-ui/./src/pages/costModels/costModel/assignSourcesModalToolbar.tsx","webpack://koku-ui/./src/pages/costModels/costModel/addSourceStep.tsx","webpack://koku-ui/./src/pages/costModels/costModel/addSourceWizard.tsx","webpack://koku-ui/./src/pages/costModels/costModel/sourcesTable.tsx","webpack://koku-ui/./src/pages/costModels/costModel/sourcesToolbar.tsx","webpack://koku-ui/./src/pages/costModels/costModel/table.styles.ts","webpack://koku-ui/./src/pages/costModels/costModel/table.tsx","webpack://koku-ui/./src/pages/costModels/costModel/sourceTable.tsx","webpack://koku-ui/./src/pages/costModels/costModel/costModelInfo.styles.ts","webpack://koku-ui/./src/pages/costModels/costModel/costModelsDetails.styles.ts","webpack://koku-ui/./src/pages/costModels/costModel/updateCostModel.tsx","webpack://koku-ui/./src/pages/costModels/costModel/header.tsx","webpack://koku-ui/./src/pages/costModels/costModel/index.tsx","webpack://koku-ui/./src/pages/state/loading/loading.tsx","webpack://koku-ui/./src/pages/state/loading/index.ts","webpack://koku-ui/./src/pages/state/notAvailable/notAvailable.tsx","webpack://koku-ui/./src/pages/state/notAvailable/index.ts"],"names":["PageHeader","_ref","className","children","props","pageHeaderClasses","theme","arguments","length","undefined","themeClasses","concat","propTypes","PageHeaderTitle","title","pageHeaderTitleClasses","headingLevel","size","styles","card","minHeight","marginLeft","global_spacer_lg","marginRight","cardBody","fontSize","global_FontSize_xl","textAlign","UpdateMarkupModelBase","super","this","state","markup","formatValue","Number","current","value","fractionDigits","error","onClose","updateCostModel","isLoading","t","Modal","isOpen","name","variant","actions","Button","key","onClick","newState","Object","assign","source_uuids","sources","map","provider","uuid","source_type","unit","isDisabled","isNaN","Stack","hasGutter","StackItem","Alert","Title","TextContent","Text","component","Form","FormGroup","label","fieldId","helperTextInvalid","validated","InputGroup","style","width","TextInput","type","id","onChange","markupDecimal","dx","split","findIndex","c","setState","InputGroupText","borderLeft","connect","stateProps","dispatchProps","ownProps","withTranslation","updateMarkup","isUpdateDialogOpen","costModelDialog","isWritePermission","rbac","setCostModelDialog","dropdownIsOpen","setDropdownIsOpen","markupValue","Card","CardHeader","CardHeaderMain","CardActions","Dropdown","toggle","KebabToggle","onToggle","onSelect","position","isPlain","dropdownItems","DropdownItem","CardBody","isFilled","costModels","costModel","addRate","updateError","isProcessing","metricsHash","metrics","dispatch","request","rates","onProceed","rateFormData","costModelReq","canSubmit","errors","rateKind","reset","otherTiers","Translation","body","actionText","isSmall","CancelButtonSecondary","ProceedButton","CloseButtonPrimary","header","color","updateRate","rate","index","otherRates","useTranslation","gotDiffs","tag_rates","filter","orate","metric","cost_type","tag_key","PriceListTable","deleteRate","pagination","perPage","page","fetchStatus","fetchError","isDialogOpen","metricOpts","keys","m","measurementOpts","reduce","acc","curr","measurs","i","includes","rateComponent","cm","label_metric","label_measurement","label_measurement_unit","setDialogOpen","slice","Trans","i18nKey","components","values","assignees","List","p","ListItem","initialFilters","primary","measurements","search","setSearch","onRemove","onClearAll","from","to","res","filtered","setPrimary","options","selected","secondaries","placeholderText","selections","setSelections","selection","filters","button","onClear","Pagination","isCompact","itemCount","onSetPage","_evt","onPerPageSelect","Boolean","Unavailable","Bullseye","EmptyState","EmptyStateIcon","icon","EmptyStateBody","tiers","pointerEvents","tooltip","_rowIndex","rowData","data","rowIndex","Toolbar","ToolbarContent","ToolbarItem","costTypes","FilterInput","placeholder","onSearch","onKeyPress","evt","AssignSourcesToolbar","filterInputProps","paginationProps","clearAllFilters","ToolbarFilter","deleteChip","chips","query","categoryName","AddSourcesStep","isLoadingSources","fetchingSourcesError","providers","providerData","isSelected","checked","provCostModels","cost_models","join","warningIcon","find","text","cost_model","cells","disableSelection","fetch","category","chip","newQuery","updateFilter","currentFilterType","currentFilterValue","currentFilter","curQuery","count","newPerPage","newPage","Table","rows","rowId","meta","cur","disabled","subTitle","flexDirection","sourceTypeMap","AddSourceWizardBase","prevProps","initChecked","some","isUpdateInProgress","onSave","updateApiError","Grid","GridItem","span","canWrite","_","showDeleteDialog","source","T","SourcesToolbar","actionButtonProps","categoryNames","emptyState","display","justifyContent","TableBase","onAdd","filteredRows","every","fName","_category","onDelete","SourceTableBase","dialogSource","addSource","deleteSource","onDeleteText","item","headerDescription","wordWrap","content","paddingTop","height","costmodelsContainer","backgroundColor","global_BackgroundColor_light_100","paddingBottom","global_spacer_md","headerCostModel","padding","global_spacer_sm","paddingLeft","paddingRight","tableContainer","paginationContainer","marginBottom","toolbarContainer","breadcrumb","sourceTypeTitle","UpdateCostModelBase","description","previous","s","e","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","isRequired","TextArea","isDeleteProcessing","deleteError","deleteCostModel","tabRefs","tabIndex","onSelectTab","historyObject","baseName","getBaseName","window","location","pathname","Breadcrumb","BreadcrumbItem","isActive","Split","SplitItem","Tabs","activeKey","Tab","eventKey","TabTitleText","tabContentId","tabContentRef","CostModelInformation","fetchRbac","fetchMetrics","fetchCostModels","match","params","metricsStatus","rbacStatus","costModelStatus","rbacError","costModelError","metricsError","Main","history","TabContent","ref","hidden","store","maxRate","status","withRouter"],"mappings":"gOAYIA,EAAa,SAAoBC,GACnC,IAAIC,EAAYD,EAAKC,UACjBC,EAAWF,EAAKE,SAChBC,GAAQ,OAAyBH,EAAM,CAAC,YAAa,aAErDI,EAAoB,IAAWH,EAAW,mBAAoB,mBAAoB,0BAA2B,2BACjH,OAAoB,kBAAoB,aAAuB,MAAM,WACnE,IAAII,EAAQC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,QAC5EG,EAAe,KAAW,OAAgB,GAAI,QAAQC,OAAOL,EAAO,QAAmB,SAAVA,IAAmB,OAAgB,GAAI,aAAwB,UAAVA,IACtI,OAAoB,kBAAoB,WAAW,OAAS,GAAIF,EAAO,CACrEF,UAAW,GAAGS,OAAON,EAAmB,KAAKM,OAAOD,GACpD,cAAe,uBACbP,OAIR,UACAH,EAAWY,UAAY,CACrBT,SAAU,mBACVD,UAAW,a,yHCvBTW,EAAkB,SAAyBZ,GAC7C,IAAIC,EAAYD,EAAKC,UACjBY,EAAQb,EAAKa,MACbC,EAAyB,IAAWb,GACxC,OAAoB,kBAAoB,IAAO,CAC7Cc,aAAc,KACdC,KAAM,MACNf,UAAWa,EACX,cAAe,2BACd,IAAKD,EAAO,MAGjB,UACAD,EAAgBD,UAAY,CAC1BE,MAAO,oBACPZ,UAAW,a,wXCrBN,MAAMgB,EAAS,CAClBC,KAAM,CACFC,UAAW,QACXC,WAAYC,EAAA,SACZC,YAAaD,EAAA,UAEjBE,SAAU,CACNC,SAAUC,EAAA,SACVC,UAAW,W,uICHnB,MAAMC,UAA8B,cAChC,YAAYxB,GACRyB,MAAMzB,GACN0B,KAAKC,MAAQ,CACTC,QAAQ,EAAAC,EAAA,IAAYC,OAAOJ,KAAK1B,MAAM+B,QAAQH,OAAOI,OAAQ,SAAU,CACnEC,eAAgB,KACd,QAGd,SACI,MAAM,MAAEC,EAAK,QAAEH,EAAO,QAAEI,EAAO,gBAAEC,EAAe,UAAEC,EAAS,EAAEC,GAAMZ,KAAK1B,MACxE,OAAQ,kBAAoBuC,EAAA,EAAO,CAAE7B,MAAO4B,EAAE,mCAAoCE,QAAQ,EAAML,QAAS,IAAMA,EAAQ,CAAEM,KAAM,eAAgBD,QAAQ,IAAUE,QAAS,QAASC,QAAS,CACpL,kBAAoBC,EAAA,GAAQ,CAAEC,IAAK,UAAWH,QAAS,UAAWI,QAAS,KACnE,MAAMC,EAAWC,OAAOC,OAAOD,OAAOC,OAAO,GAAIlB,GAAU,CAAEmB,aAAcnB,EAAQoB,QAAQC,KAAIC,GAAYA,EAASC,OAAOC,YAAqC,iCAAxBxB,EAAQwB,YAAiD,MAAQ,MAAO3B,OAAQ,CAChNI,MAAON,KAAKC,MAAMC,OAClB4B,KAAM,aAEdpB,EAAgBL,EAAQuB,KAAMP,EAAU,iBACzCU,WAAYC,MAAM5B,OAAOJ,KAAKC,MAAMC,UACnCE,OAAOJ,KAAKC,MAAMC,UAAYE,OAAOC,EAAQH,OAAOI,OAAS,IAC7DK,GAAaC,EAAE,4CACvB,kBAAoBM,EAAA,GAAQ,CAAEC,IAAK,SAAUH,QAAS,OAAQI,QAAS,IAAMX,EAAQ,CAAEM,KAAM,eAAgBD,QAAQ,IAAUiB,WAAYpB,GAAaC,EAAE,gDAE9J,kBAAoBqB,EAAA,EAAO,CAAEC,WAAW,GACpC,kBAAoBC,EAAA,EAAW,KAAM3B,GAAS,kBAAoB4B,EAAA,EAAO,CAAEpB,QAAS,SAAUhC,MAAO,GAAGwB,OACxG,kBAAoB2B,EAAA,EAAW,KAC3B,kBAAoBE,EAAA,EAAO,CAAEnD,aAAc,KAAMC,KAAM,MAAQyB,EAAE,4CACrE,kBAAoBuB,EAAA,EAAW,KAC3B,kBAAoBG,EAAA,EAAa,KAC7B,kBAAoBC,EAAA,EAAM,CAAEC,UAAWD,EAAA,MAAmBlC,EAAQU,QAC1E,kBAAoBoB,EAAA,EAAW,KAC3B,kBAAoBM,EAAA,EAAM,KACtB,kBAAoBC,EAAA,EAAW,CAAEC,MAAO/B,EAAE,0CAA2CgC,QAAS,mBAAoBC,kBAAmBjC,EAAE,iDAAkDkC,UAAYd,MAAM5B,OAAOJ,KAAKC,MAAMC,SAAuB,QAAZ,WACpO,kBAAoB6C,EAAA,EAAY,CAAEC,MAAO,CAAEC,MAAO,UAC9C,kBAAoBC,EAAA,GAAW,CAAEC,KAAM,OAAQ,aAAcvC,EAAE,0CAA2CwC,GAAI,mBAAoB9C,MAAON,KAAKC,MAAMC,OAAQmD,SAAWnD,IAC/J,MAAMoD,EAAgBlD,OAAOF,GACvBqD,EAAKrD,EAAOsD,MAAM,IAAIC,WAAUC,GAAW,MAANA,KACtC1B,MAAMsB,IAAkBC,GAAM,GAAKrD,EAAOxB,OAAS6E,EAAK,EAAI,EAC7DvD,KAAK2D,SAAS,CACVzD,QAAQ,EAAAC,EAAA,IAAYmD,EAAe,SAAU,CACzC/C,eAAgB,MAK5BP,KAAK2D,SAAS,CAAEzD,YACjB4C,UAAYd,MAAM5B,OAAOJ,KAAKC,MAAMC,SAAuB,QAAZ,YACtD,kBAAoB0D,EAAA,EAAgB,CAAEZ,MAAO,CAAEa,WAAY,MAAS,YAKpG,MAGA,GAAe,IAAAC,UAAQ,SAAsB7D,IAClC,CACHU,UAAW,sBAAqCV,GAChDO,MAAO,iBAAgCP,OAE3C,CACAQ,QAAS,wBACTC,gBAAiB,uBAVF,CAACqD,EAAYC,EAAeC,IACpC3C,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAO,GAAIwC,GAAaC,GAAgBC,IAEtF,EAQe,IAAAC,kBAAA,CAAkBpE,ICpCjC,GAAe,IAAAgE,UAAQ,SAAsB7D,IACzC,MAAM,aAAEkE,GAAiB,kBAAiClE,EAAjC,CAAwC,UACjE,MAAO,CACHmE,mBAAoBD,EACpBE,gBAAiB,kBAAiCpE,EAAjC,CAAwC,UACzDqE,kBAAmBC,EAAA,8BAAyCtE,OAEhE,CACAuE,mBAAoB,yBARxB,EASG,IAAAN,kBAAA,EAhCoB,EAAGI,oBAAmBE,qBAAoBnE,UAAS+D,qBAAoBxD,QAC1F,MAAO6D,EAAgBC,GAAqB,cAAe,GACrDC,EAActE,GAAWA,EAAQH,QAAUG,EAAQH,OAAOI,OAC1D,EAAAH,EAAA,IAAYC,OAAOC,EAAQH,OAAOI,OAAQ,SAAU,CAClDC,eAAgB,IAElB,MACN,OAAQ,kBAAoB,aAAgB,KACxC6D,GAAsB,kBAAoB,EAAoB,CAAE/D,QAASA,IACzE,kBAAoBuE,EAAA,EAAM,CAAE5B,MAAO5D,EAAOC,MACtC,kBAAoBwF,EAAA,EAAY,KAC5B,kBAAoBC,EAAA,EAAgB,KAAMlE,EAAE,2CAC5C,kBAAoBmE,EAAA,EAAa,KAC7B,kBAAoBC,EAAA,EAAU,CAAEC,OAAQ,kBAAoBC,EAAA,EAAa,CAAEC,SAAUT,IAAsB5D,OAAQ2D,EAAgBW,SAAU,IAAMV,GAAkB,GAAQW,SAAU,WAAwBC,SAAS,EAAMC,cAAe,CACrO,kBAAoB,IAAiB,CAAEpE,IAAK,OAAQY,YAAauC,GAC7D,kBAAoBkB,EAAA,EAAc,CAAEzD,YAAauC,EAAmBlD,QAAS,IAAMoD,EAAmB,CAAE1D,QAAQ,EAAMC,KAAM,iBAAmByB,UAAW,UAAY5B,EAAE,iDAE5L,kBAAoB6E,EAAA,EAAU,CAAEC,UAAU,IAC1C,kBAAoBD,EAAA,EAAU,CAAEzC,MAAO5D,EAAOM,UAC1CiF,EACA,KACJ,kBAAoBc,EAAA,EAAU,CAAEC,UAAU,U,iOCxB/C,MAkBP,IAAe,IAAA5B,UAAS7D,IACpB,MAAM0F,EAAa,KAAAA,WAA+B1F,GAClD,IAAI2F,EAAY,KAIhB,OAHID,EAAWjH,OAAS,IACpBkH,EAAYD,EAAW,IAEpB,CACHC,YACA9E,OAAQ,kBAAiCb,EAAjC,CAAwC,QAAQ4F,QACxDC,YAAa,iBAAgC7F,GAC7C8F,aAAc,sBAAqC9F,GACnD+F,YAAaC,GAAA,GAAAA,QAAyBhG,OAE3CiG,IACQ,CACHzF,QAAS,KACLyF,EAAS,wBAAqC,CAC1CnF,KAAM,UACND,QAAQ,MAGhBJ,gBAAiB,CAACkB,EAAMuE,IAAY,qBAAkCvE,EAAMuE,EAAS,UAAjD,CAA4DD,OAErG,CAACnC,EAAYC,KACZ,MAAM,KAAEpC,EAAI,MAAEwE,GAAUrC,EAAW6B,UACnC,MAAO,CACH9E,OAAQiD,EAAWjD,OACnBkF,YAAajC,EAAWiC,YACxBI,QACAN,YAAa/B,EAAW+B,YACxBC,aAAchC,EAAWgC,aACzBtF,QAASuD,EAAcvD,QACvB4F,UAAYC,IACR,MAAMC,GAAe,SAAexC,EAAWiC,YAAajC,EAAW6B,UAAWU,GAClFtC,EAActD,gBAAgBkB,EAAM2E,OAlChD,EAlBgC,EAAGzF,SAAQiF,eAAcM,YAAW5F,UAASqF,cAAaE,cAAaI,YACnG,MAAME,GAAe,SAAYN,GAC3BQ,EAAY,aAAc,KAAM,SAAiBF,IAAe,CAACA,EAAaG,OAAQH,EAAaI,WAIzG,OAHA,eAAgB,KACZJ,EAAaK,MAAMrF,OAAOC,OAAOD,OAAOC,OAAO,GAAI,OAAsB,CAAEqF,WAAYR,OACxF,CAACtF,IACI,kBAAoB,EAAA+F,YAAa,MAAMjG,GACnC,kBAAoBC,EAAA,EAAO,CAAE7B,MAAO4B,EAAE,4CAA6CE,OAAQA,EAAQL,QAASA,EAASO,QAAS,QAASC,QAAS,CAChJ,kBAAoBC,EAAA,GAAQ,CAAEC,IAAK,WAAYH,QAASE,EAAA,WAAuBa,YAAayE,GAAaT,EAAc3E,QAAS,KACxHiF,EAAUC,KACT1F,EAAE,iCACX,kBAAoBM,EAAA,GAAQ,CAAEC,IAAK,SAAUH,QAASE,EAAA,QAAoBa,WAAYgE,EAAc3E,QAASX,GAAWG,EAAE,gDAE9H,kBAAoB6B,EAAA,EAAM,KACtBqD,GAAe,kBAAoB1D,EAAA,EAAO,CAAEpB,QAAS,SAAUhC,MAAO,GAAG8G,MACzE,kBAAoB,MAAU,CAAEE,YAAaA,EAAaM,aAAcA,W,gBCnBxF,MAYA,IAAe,IAAApC,kBAAf,EAZmB,EAAGtD,IAAGH,UAAS4F,YAAWrH,QAAO8H,OAAMC,aAAYhB,gBAAe,EAAOjF,UAAS,EAAOkG,WAAU,EAAOxG,QAAQ,OACjI,MAAMyG,EAAyB,kBAAoB/F,EAAA,GAAQ,CAAEC,IAAK,SAAUH,QAAS,OAAQI,QAASX,EAASsB,WAAYgE,GAAgBnF,EAAE,kBACvIsG,EAAiB,kBAAoBhG,EAAA,GAAQ,CAAEC,IAAK,UAAWH,QAAS,SAAUI,QAASiF,EAAWtE,WAAYgE,GAAgBgB,GAClII,EAAsB,kBAAoBjG,EAAA,GAAQ,CAAEC,IAAK,QAASH,QAAS,UAAWI,QAASX,EAASsB,WAAYgE,GAAgBnF,EAAE,iBACtIK,EAAyB,KAAf8F,EAAoB,CAACG,EAAeD,GAAyB,CAACE,GAC9E,OAAQ,kBAAoBtG,EAAA,EAAO,CAAE,aAAc7B,EAAOoI,OAAQ,kBAAoB/E,EAAA,EAAO,CAAEnD,aAAc,KAAMC,KAAMkD,EAAA,UACjH,kBAAoB,MAAyB,CAAEgF,MAAO,WACtD,IACArI,GAAQ8B,OAAQA,EAAQL,QAASA,EAASQ,QAASA,EAASD,QAASgG,EAAU,QAAU,WAC7FxG,GAAS,kBAAoB4B,EAAA,EAAO,CAAEpB,QAAS,SAAUhC,MAAO,GAAGwB,MACnEsG,M,gBCNR,MAyBA,IAAe,IAAAhD,UAAS7D,IACpB,MAAM0F,EAAa,KAAAA,WAA+B1F,GAClD,IAAI2F,EAAY,KAIhB,OAHID,EAAWjH,OAAS,IACpBkH,EAAYD,EAAW,IAEpB,CACHC,YACA9E,OAAQ,kBAAiCb,EAAjC,CAAwC,QAAQqH,WACxDxB,YAAa,iBAAgC7F,GAC7C8F,aAAc,sBAAqC9F,GACnD+F,YAAaC,GAAA,GAAAA,QAAyBhG,OAE3CiG,IACQ,CACHzF,QAAS,KACLyF,EAAS,wBAAqC,CAC1CnF,KAAM,aACND,QAAQ,MAGhBJ,gBAAiB,CAACkB,EAAMuE,KACpB,qBAAkCvE,EAAMuE,EAAS,aAAjD,CAA+DD,QAGxE,CAACnC,EAAYC,EAAeC,KAC3B,MAAM,KAAErC,EAAI,MAAEwE,GAAUrC,EAAW6B,UAInC,MAAO,CACH2B,KAJSxD,EAAW6B,WAAa7B,EAAW6B,UAAUQ,OAASrC,EAAW6B,UAAUQ,MAAMnC,EAASuD,OACjGzD,EAAW6B,UAAUQ,MAAMnC,EAASuD,OACpC,KAGFC,WAAYrB,EACZJ,YAAajC,EAAWiC,YACxBvF,QAASuD,EAAcvD,QACvBK,OAAQiD,EAAWjD,OACnBiF,aAAchC,EAAWgC,aACzBD,YAAa/B,EAAW+B,YACxBO,UAAYC,IACR,MAAMC,GAAe,SAAexC,EAAWiC,YAAajC,EAAW6B,UAAWU,EAAcrC,EAASuD,OACzGxD,EAActD,gBAAgBkB,EAAM2E,OAxChD,EAzB4B,EAAGgB,OAAME,aAAYzB,cAAavF,UAASK,SAAQiF,eAAcD,cAAaO,gBACtG,MAAM,EAAEzF,IAAM,IAAA8G,kBACRpB,GAAe,SAAYN,EAAauB,EAAME,GAC9CjB,EAAY,aAAc,KAAM,SAAiBF,IAAe,CAACA,IACjEqB,EAAW,aAAc,KAAM,SAAQJ,EAAMjB,IAAe,CAACA,IAQnE,OAPA,eAAgB,KACZA,EAAaK,OAAM,SAAoBY,OAAM5I,EAAW4I,GAAQA,EAAKK,UAC/DH,EAAWI,QAAOC,GAASA,EAAMC,OAAOhH,OAASwG,EAAKQ,OAAOhH,MAC3D+G,EAAME,YAAcT,EAAKS,WACzBF,EAAMF,UAAUK,UAAYV,EAAKK,UAAUK,UAC7CR,MACP,CAAC3G,IACI,kBAAoBD,EAAA,EAAO,CAAE7B,MAAO4B,EAAE,iCAAkCE,OAAQA,EAAQL,QAASA,EAASO,QAAS,QAASC,QAAS,CACrI,kBAAoBC,EAAA,GAAQ,CAAEC,IAAK,UAAWH,QAAS,UAAWI,QAAS,KACnEiF,EAAUC,IACXvE,YAAayE,GAAaT,IAAiB4B,GAAY/G,EAAE,4CAChE,kBAAoBM,EAAA,GAAQ,CAAEC,IAAK,SAAUH,QAAS,OAAQI,QAASX,EAASsB,WAAYgE,GAAgBnF,EAAE,gDAElH,kBAAoBqB,EAAA,EAAO,CAAEC,WAAW,GACpC4D,GAAgB,kBAAoB3D,EAAA,EAAW,KAC3C,kBAAoBC,EAAA,EAAO,CAAEpB,QAAS,SAAUhC,MAAO,GAAG8G,OAC9D,kBAAoB3D,EAAA,EAAW,KAC3B,kBAAoB,KAAM,KACtB,kBAAoB,MAAU,CAAE6D,YAAaA,EAAaM,aAAcA,WCX5F,MAAM4B,WAAuB,cACzB,cACInI,SAAStB,WACTuB,KAAKC,MAAQ,CACTkI,WAAY,KACZX,OAAQ,EACRY,WAAY,CACRC,QAAS,GACTC,KAAM,IAIlB,SACI,MAAM,EAAE1H,EAAC,YAAE2H,EAAW,WAAEC,EAAU,aAAEC,EAAY,YAAEzC,EAAW,kBAAE1B,GAAsBtE,KAAK1B,MACpFoK,EAAapH,OAAOqH,KAAK3C,GAAatE,KAAIkH,IAAK,CACjDjG,MAAOiG,EACPtI,MAAOsI,MAELC,EAAkBH,EAAWI,QAAO,CAACC,EAAKC,KAC5C,MAAMC,EAAU3H,OAAOqH,KAAK3C,EAAYgD,EAAK1I,QACxCuH,QAAOe,IAAMG,EAAIrH,KAAIwH,GAAKA,EAAE5I,QAAO6I,SAASP,KAC5ClH,KAAIkH,IAAK,CAAGjG,MAAOiG,EAAGtI,MAAOsI,MAClC,MAAO,IAAIG,KAAQE,KACpB,IACGG,EAAgB,kBAAoB,IAAK,KAAM,cAC/CC,EAAKrJ,KAAK1B,MAAMsH,UAChBmC,EAAS/H,KAAKC,MAAMkI,WACpB,GAAGnI,KAAKC,MAAMkI,WAAWJ,OAAOuB,gBAAgBtJ,KAAKC,MAAMkI,WAAWJ,OAAOwB,sBAAsBvJ,KAAKC,MAAMkI,WAAWJ,OAAOyB,0BAChI,GACN,OAAQ,kBAAoB,aAAgB,KACxC,kBAAoB,GAAc,MAClC,kBAAoB,GAAiB,CAAEhC,MAAOxH,KAAKC,MAAMuH,QACzD,kBAAoB,GAAQ,CAAER,SAAS,EAAMlG,OAAQ2H,EAAaN,WAAYnJ,MAAO4B,EAAE,qBAAsBH,QAAS,KAC9GT,KAAK1B,MAAMmL,cAAc,CAAE1I,KAAM,aAAcD,QAAQ,IACvDd,KAAK2D,SAAS,CAAEwE,WAAY,QAC7BpC,aAAc/F,KAAK1B,MAAMqC,UAAW0F,UAAW,KAC9C,MAAM,MAAEmB,GAAUxH,KAAKC,OACjB,QAAEI,GAAYL,KAAK1B,MACnB+C,EAAWC,OAAOC,OAAOD,OAAOC,OAAO,GAAIlB,GAAU,CAAEmB,aAAcnB,EAAQoB,QAAQC,KAAIC,GAAYA,EAASC,OAAOC,YAAa,MAAOuE,MAAO,IAAI/F,EAAQ+F,MAAMsD,MAAM,EAAGlC,MAAWnH,EAAQ+F,MAAMsD,MAAMlC,EAAQ,MACxNxH,KAAK1B,MAAMoC,gBAAgBL,EAAQuB,KAAMP,EAAU,eACpDyF,KAAM,kBAAoB,aAAgB,KACzC,kBAAoB,EAAA6C,MAAO,CAAEC,QAAS,mBAAoBC,WAAY,CAACT,EAAeA,GAAgBU,OAAQ,CAAE/B,SAAQsB,QACxHrJ,KAAK1B,MAAMyL,WAAa/J,KAAK1B,MAAMyL,UAAUrL,OAAS,GAAM,kBAAoB,aAAgB,KAC5FkC,EAAE,wBACF,kBAAoBoJ,EAAA,GAAM,KAAMhK,KAAK1B,MAAMyL,UAAUrI,KAAIuI,GAAM,kBAAoBC,EAAA,EAAU,CAAE/I,IAAK8I,GAAKA,QAAUlD,WAAYnG,EAAE,uBAC7I,kBAAoB,KAAqB,CAAEuJ,eAAgB,CAAEC,QAAS,UAAWnE,QAAS,GAAIoE,aAAc,MAAQ,EAAGC,SAAQC,YAAWC,WAAUpF,WAAUqF,iBAC1J,MAAMC,GAAQ1K,KAAKC,MAAMmI,WAAWE,KAAO,GAAKtI,KAAKC,MAAMmI,WAAWC,QAChEsC,EAAK3K,KAAKC,MAAMmI,WAAWE,KAAOtI,KAAKC,MAAMmI,WAAWC,QACxDuC,EAAM5K,KAAK1B,MAAM+B,QAAQ+F,MAC1ByB,QAAON,GAAkC,IAA1B+C,EAAOrE,QAAQvH,QAAgB4L,EAAOrE,QAAQkD,SAAS5B,EAAKQ,OAAOuB,gBAClFzB,QAAON,GAAuC,IAA/B+C,EAAOD,aAAa3L,QAAgB4L,EAAOD,aAAalB,SAAS5B,EAAKQ,OAAOwB,qBAC3FsB,EAAWD,EAAIlB,MAAMgB,EAAMC,GACjC,OAAQ,kBAAoB,aAAgB,KACxC,kBAAoB,KAAkB,CAAEP,QAAS,kBAAoB,KAAiB,CAAErI,WAAgD,IAApC/B,KAAK1B,MAAM+B,QAAQ+F,MAAM1H,OAAc0L,QAASE,EAAOF,QAASU,WAAaV,GAAYG,EAAU,CAAEH,YAAYW,QAAS,CAClN,CACIpI,MAAO/B,EAAE,4BACTN,MAAO,WAEX,CACIqC,MAAO/B,EAAE,iCACTN,MAAO,mBAET0K,SAAUV,EAAOF,QAASa,YAAa,CAC7C,CACIzI,UAAY,kBAAoB,KAAkB,CAAET,WAAgD,IAApC/B,KAAK1B,MAAM+B,QAAQ+F,MAAM1H,OAAcwM,gBAAiBtK,EAAE,6CAA8CuK,WAAYb,EAAOD,aAAce,cAAgBC,GAAcjG,EAAS,eAAgBiG,GAAYN,QAASlC,IACrR9H,KAAM,eACNyJ,WACAc,QAAShB,EAAOD,cAEpB,CACI7H,UAAY,kBAAoB,KAAkB,CAAET,WAAgD,IAApC/B,KAAK1B,MAAM+B,QAAQ+F,MAAM1H,OAAcwM,gBAAiBtK,EAAE,wCAAyCuK,WAAYb,EAAOrE,QAASmF,cAAgBC,GAAcjG,EAAS,UAAWiG,GAAYN,QAASrC,IACtQ3H,KAAM,UACNyJ,WACAc,QAAShB,EAAOrE,UAErBsF,OAAQ,kBAAoBrK,EAAA,GAAQ,CAAEa,YAAauC,EAAmBlD,QAAS,IAAMpB,KAAK1B,MAAMmL,cAAc,CACzG1I,KAAM,UACND,QAAQ,KACNF,EAAE,+BAAgC4K,QAASf,EAAYrC,WAAY,kBAAoBqD,EAAA,EAAY,CAAEC,WAAW,EAAMC,UAAWf,EAAIlM,OAAQ2J,QAASrI,KAAKC,MAAMmI,WAAWC,QAASC,KAAMtI,KAAKC,MAAMmI,WAAWE,KAAMsD,UAAW,CAACC,EAAMvD,IAAStI,KAAK2D,SAAS,CAClQyE,WAAY9G,OAAOC,OAAOD,OAAOC,OAAO,GAAIvB,KAAKC,MAAMmI,YAAa,CAAEE,WACtEwD,gBAAiB,CAACD,EAAMxD,IAAYrI,KAAK2D,SAAS,CAAEyE,WAAY,CAAEE,KAAM,EAAGD,iBACvE,IAAhBE,GAAoC,kBAAoB,KAAc,MACtD,IAAhBA,GAAoCwD,QAAQvD,IAAe,kBAAoBwD,GAAA,EAAa,MAC5E,IAAhBzD,GACwB,IAApBsC,EAASnM,SACkB,IAA1B4L,EAAOrE,QAAQvH,QAA+C,IAA/B4L,EAAOD,aAAa3L,SAAkB,kBAAoB,KAAkB,CAAEmJ,OAAQjH,EAAE,kEAC5G,IAAhB2H,GACwB,IAApBsC,EAASnM,QACsB,IAA/B4L,EAAOD,aAAa3L,QACM,IAA1B4L,EAAOrE,QAAQvH,QAAiB,kBAAoBuN,EAAA,EAAU,KAC9D,kBAAoBC,EAAA,EAAY,KAC5B,kBAAoBC,EAAA,EAAgB,CAAEC,KAAM,QAC5C,kBAAoB/J,EAAA,EAAO,CAAEnD,aAAc,KAAMC,KAAM,MAAQyB,EAAE,+CACjE,kBAAoByL,EAAA,EAAgB,KAAMzL,EAAE,uDACpC,IAAhB2H,GAAoCsC,EAASnM,OAAS,GAAM,kBAAoB,aAAgB,KAC5F,kBAAoB,KAAW,CAAEkC,EAAGA,EAAG0L,MAAOzB,EAAU5J,QAAS,CACzD,CACIjC,MAAO4B,EAAE,+CACTmB,YAAauC,EAEbtB,MAAQsB,OAAgD3F,EAA5B,CAAE4N,cAAe,QAC7CC,QAAUlI,OAA2F3F,EAAvE,kBAAoB,MAAO,KAAMiC,EAAE,kCACjEQ,QAAS,CAACyK,EAAMY,EAAWC,KACvB1M,KAAK2D,SAAS,CACVwE,WAAY,KACZX,MAAOkF,EAAQC,KAAKnF,MAAQkD,IAEhC1K,KAAK1B,MAAMmL,cAAc,CACrB1I,KAAM,aACND,QAAQ,MAIpB,CACI9B,MAAO4B,EAAE,+CACTmB,YAAauC,EAEbtB,MAAQsB,EAAgD,GAA5B,CAAEiI,cAAe,QAC7CC,QAAUlI,OAA2F3F,EAAvE,kBAAoB,MAAO,KAAMiC,EAAE,kCACjEQ,QAAS,CAACyK,EAAMY,EAAWC,KACvB,MAAME,EAAWF,EAAQC,KAAKnF,MAC9BxH,KAAK2D,SAAS,CACVwE,WAAY0C,EAAS+B,GACrBpF,MAAOoF,EAAWlC,IAEtB1K,KAAK1B,MAAMmL,cAAc,CACrB1I,KAAM,aACND,QAAQ,SAK5B,kBAAoB+L,EAAA,EAAS,CAAEzJ,GAAI,6BAC/B,kBAAoB0J,EAAA,EAAgB,KAChC,kBAAoBC,GAAA,EAAa,CAAE/L,QAAS+L,GAAA,cACxC,kBAAoBtB,EAAA,EAAY,CAAEE,UAAWf,EAAIlM,OAAQ2J,QAASrI,KAAKC,MAAMmI,WAAWC,QAASC,KAAMtI,KAAKC,MAAMmI,WAAWE,KAAMsD,UAAW,CAACC,EAAMvD,IAAStI,KAAK2D,SAAS,CACpKyE,WAAY9G,OAAOC,OAAOD,OAAOC,OAAO,GAAIvB,KAAKC,MAAMmI,YAAa,CAAEE,WACtEwD,gBAAiB,CAACD,EAAMxD,IAAYrI,KAAK2D,SAAS,CAClDyE,WAAY,CAAEE,KAAM,EAAGD,aACvBrH,QAAS,qBAIrD,UAAe,IAAA8C,UAAQ,SAAsB7D,IAAS,CAClDU,UAAW,sBAAqCV,GAChDO,MAAO,iBAAgCP,GACvCwI,aAAc,kBAAiCxI,EAAjC,CAAwC,QACtDuI,WAAY,WAA0BvI,GACtCsI,YAAa,YAA2BtI,GACxC+F,YAAaC,GAAA,GAAAA,QAAyBhG,GACtC+M,UAAW/G,GAAA,aAA2BhG,GACtCqE,kBAAmBC,EAAA,8BAAyCtE,OAC3D,CACDS,gBAAiB,qBACjB+I,cAAe,yBAXnB,EAYG,IAAAvF,kBAAA,CAAkBgE,K,mJC3KrB,MAAM+E,GAAc,EAAG7J,KAAI8J,cAAc,GAAI5M,QAAO+C,WAAU8J,cAClD,kBAAoBpK,EAAA,EAAY,KACpC,kBAAoBG,EAAA,GAAW,CAAE5C,MAAOA,EAAO4M,YAAaA,EAAa9J,GAAIA,EAAIC,SAAUA,EAAU+J,WAAaC,IAC1F,UAAZA,EAAIlM,KAA6B,KAAVb,GAG3B6M,EAASE,MAEjB,kBAAoBzJ,EAAA,EAAgB,CAAEZ,MAAO,CAAEa,WAAY,MACvD,kBAAoB,MAAY,QAW/ByJ,IAAuB,IAAApJ,kBAAA,EATI,EAAGtD,IAAG2M,mBAAkBC,kBAAiB3F,YACrE,kBAAoBgF,EAAA,EAAS,CAAEzJ,GAAI,yBAA0BqK,gBAAiB5F,EAAO4C,YACzF,kBAAoBqC,EAAA,EAAgB,KAChC,kBAAoBC,GAAA,EAAa,CAAE/L,QAAS,iBACxC,kBAAoB0M,GAAA,EAAe,CAAEC,WAAY9F,EAAO2C,SAAUoD,MAAO/F,EAAOgG,MAAM9M,KAAM+M,aAAc,QACtG,kBAAoBb,GAAa3L,OAAOC,OAAO,CAAE2L,YAAatM,EAAE,uDAAyD2M,MACjI,kBAAoBR,GAAA,EAAa,CAAE/L,QAAS,cACxC,kBAAoByK,EAAA,EAAY,CAAEC,UAAW8B,EAAgB9B,UAAWC,UAAW6B,EAAgB7B,UAAWrD,KAAMkF,EAAgBlF,KAAMD,QAASmF,EAAgBnF,QAASuD,UAAW4B,EAAgB5B,UAAWE,gBAAiB0B,EAAgB1B,uBCTnQ,MAAMiC,WAAuB,cACzB,SACI,MAAM,UAAEnI,GAAc5F,KAAK1B,MAC3B,GAAI0B,KAAK1B,MAAM0P,iBACX,OAAO,kBAAoB,KAAc,MAE7C,GAAIhO,KAAK1B,MAAM2P,qBACX,OAAO,kBAAoB,MAAwB,MAEvD,MAeMxM,EAAUzB,KAAK1B,MAAM4P,UAAUxM,KAAIyM,IACrC,MAAMC,IAAapO,KAAK1B,MAAM+P,QAAQF,EAAavM,OAAQ5B,KAAK1B,MAAM+P,QAAQF,EAAavM,MAAMoJ,SAC3FsD,OAA8C3P,IAA7BwP,EAAaI,YAC9BvO,KAAK1B,MAAMsC,EAAE,sDACbuN,EAAaI,YAAY7M,KAAI2H,GAAMA,EAAGtI,OAAMyN,KAAK,KACjDC,EAAcN,EAAaI,YAAY7P,aAC2BC,IAApEwP,EAAaI,YAAYG,MAAKrF,GAAMA,EAAGtI,OAAS6E,EAAU7E,OAAuB,kBAAoB,KAAa,CAAEI,IAAKgN,EAAavM,KAAM+M,KAAM3O,KAAK1B,MAAMsC,EAAE,oCAAqC,CAChMgO,WAAYN,MACP,KAKb,MAAO,CACHO,MAAO,CALO,kBAAoB,MAAO,CAAE1N,IAAKgN,EAAavM,MAC7DuM,EAAapN,KACb,IACA0N,GAEkBH,GAAkB,IACpCtD,SAAUoD,EACVU,iBAAkBX,EAAaI,YAAY7P,OAAS,MAQtDmD,EALgB,CAClB,+BAAgC,MAChC,kBAAmB,QACnB,sBAAuB,OAEO+D,EAAU/D,aAC5C,OAAQ,kBAAoB,aAAgB,KACxC,kBAAoByL,GAAsB,CAAEzF,OAAQ,CAC5C4C,WAAY,IAAMzK,KAAK1B,MAAMyQ,MAAM,eAAelN,WAAqB7B,KAAK1B,MAAM8J,WAAWC,WAC7FmC,SAAU,CAACwE,EAAUC,KACjB,MAAMC,GAAW,SAAsB,CACnCnO,KAAMf,KAAK1B,MAAMuP,MAAM9M,KAAOf,KAAK1B,MAAMuP,MAAM9M,KAAKyC,MAAM,KAAO,IADpD,CAEdwL,EAAUC,GACbjP,KAAK1B,MAAMyQ,MAAM,eAAelN,IAAcqN,EAASnO,KAAO,SAASmO,EAASnO,KAAKyN,KAAK,OAAS,qBAAqBxO,KAAK1B,MAAM8J,WAAWC,YAElJwF,MAAO,CACH9M,KAAMf,KAAK1B,MAAMuP,MAAM9M,KAAOf,KAAK1B,MAAMuP,MAAM9M,KAAKyC,MAAM,KAAO,KAEtE+J,iBAAkB,CACjBnK,GAAI,+BACJC,SAAU/C,GAASN,KAAK1B,MAAM6Q,aAAa,CACvCC,kBAAmB,OACnBC,mBAAoB/O,IAExBA,MAAON,KAAK1B,MAAMgR,cAAchP,MAChC6M,SAAU,KACN,MAAMoC,EAAWvP,KAAK1B,MAAMuP,MAAM9M,KAAOf,KAAK1B,MAAMuP,MAAM9M,KAAKyC,MAAM,KAAO,GACtE0L,GAAW,SAAmB,CAAEnO,KAAMwO,GAA3B,CAAuC,OAAQvP,KAAK1B,MAAMgR,cAAchP,OACzFN,KAAK1B,MAAMyQ,MAAM,eAAelN,UAAoBqN,EAASnO,KAAKyN,KAAK,cAAcxO,KAAK1B,MAAM8J,WAAWC,sBAEhHmF,gBAAiB,CAChB9B,WAAW,EACXC,UAAW3L,KAAK1B,MAAM8J,WAAWoH,MACjCnH,QAASrI,KAAK1B,MAAM8J,WAAWC,QAC/BC,KAAMtI,KAAK1B,MAAM8J,WAAWE,KAC5BwD,gBAAiB,CAACD,EAAM4D,KACpBzP,KAAK1B,MAAMyQ,MAAM,eAAelN,WAAqB4N,cAAuBzP,KAAK1B,MAAMuP,MAAM9M,KAAO,QAAQf,KAAK1B,MAAMuP,MAAM9M,OAAS,OAE1I6K,UAAW,CAACC,EAAM6D,KACd1P,KAAK1B,MAAMyQ,MAAM,eAAelN,WAAqB7B,KAAK1B,MAAM8J,WAAWC,kBAAkBrI,KAAK1B,MAAM8J,WAAWC,SAAWqH,EAAU,MAAM1P,KAAK1B,MAAMuP,MAAM9M,KAAO,QAAQf,KAAK1B,MAAMuP,MAAM9M,OAAS,UAGpNU,EAAQ/C,OAAS,GAAM,kBAAoBiR,GAAA,EAAO,CAAE,aAAc3P,KAAK1B,MAAMsC,EAAE,kCAAmCiO,MAAO,CAAC7O,KAAK1B,MAAMsC,EAAE,QAASZ,KAAK1B,MAAMsC,EAAE,sDAAuDgP,KAAMnO,EAAS2D,SA5EtN,CAACyG,EAAMuC,EAAYyB,KAChC,IAAe,IAAXA,EASJ7P,KAAK1B,MAAMqF,SAASrC,OAAOC,OAAOD,OAAOC,OAAO,GAAIvB,KAAK1B,MAAM+P,SAAU,CAAE,CAACrO,KAAK1B,MAAM4P,UAAU2B,GAAOjO,MAAO,CACvGoJ,SAAUoD,EACV0B,KAAM9P,KAAK1B,MAAM4P,UAAU2B,WAXnC,CACI,MAAMxO,EAAWrB,KAAK1B,MAAM4P,UAAUpF,QAAO,CAACC,EAAKgH,KAC/C,MAAM/E,IAAWhL,KAAK1B,MAAM+P,QAAQ0B,EAAInO,OAAQ5B,KAAK1B,MAAM+P,QAAQ0B,EAAInO,MAAMoJ,SACvEgF,EAAWD,EAAIxB,YAAY7P,OAAS,EAC1C,OAAO4C,OAAOC,OAAOD,OAAOC,OAAO,GAAIwH,GAAM,CAAE,CAACgH,EAAInO,MAAO,CAAEoJ,SAAUgF,EAAWhF,EAAWoD,EAAY0B,KAAMC,OAChH,IACH/P,KAAK1B,MAAMqF,SAAStC,MAsEpB,kBAAoB,KAAa,MACjC,kBAAoB,KAAW,OAChB,IAAnBI,EAAQ/C,QAAgB,kBAAoB,KAAkB,CAAEuR,SAAUjQ,KAAK1B,MAAMsC,EAAE,+BACvF,kBAAoBiM,EAAA,EAAS,CAAEzJ,GAAI,qDAC/B,kBAAoB0J,EAAA,EAAgB,CAAE9J,MAAO,CAAEkN,cAAe,eAAiB,aAAclQ,KAAK1B,MAAMsC,EAAE,kDACtG,kBAAoBmM,GAAA,EAAa,CAAE/L,QAAS,cACxC,kBAAoByK,EAAA,EAAY,CAAEE,UAAW3L,KAAK1B,MAAM8J,WAAWoH,MAAOzN,WAAY/B,KAAK1B,MAAM0P,iBAAkB3F,QAASrI,KAAK1B,MAAM8J,WAAWC,QAASC,KAAMtI,KAAK1B,MAAM8J,WAAWE,KAAMwD,gBAAiB,CAACD,EAAM4D,KAC7MzP,KAAK1B,MAAMyQ,MAAM,SAASU,cAAuBzP,KAAK1B,MAAMuP,MAAM9M,KAAO,QAAQf,KAAK1B,MAAMuP,MAAM9M,OAAS,OAC5G6K,UAAW,CAACC,EAAM6D,KACjB1P,KAAK1B,MAAMyQ,MAAM,SAAS/O,KAAK1B,MAAM8J,WAAWC,kBAAkBrI,KAAK1B,MAAM8J,WAAWC,SAAWqH,EAAU,MAAM1P,KAAK1B,MAAMuP,MAAM9M,KAAO,QAAQf,KAAK1B,MAAMuP,MAAM9M,OAAS,cAI7M,UAAe,IAAA+C,UAAQ,SAAsB7D,IAClC,CACHqP,cAAe,CACXvO,KAAM,wBAAmCd,GACzCK,MAAO,yBAAoCL,QAGnD,CACAkP,aAAc,2BARlB,EASG,IAAAjL,kBAAA,CAAkB6J,KChHfoC,GAAgB,CAClB,+BAAgC,MAChC,kBAAmB,QACnB,sBAAuB,OAE3B,MAAMC,WAA4B,cAC9B,cACIrQ,SAAStB,WACTuB,KAAKC,MAAQ,CAAEoO,QAAS,IAE5B,oBACI,MAAQzI,WAAW,YAAE/D,GAAa,MAAEkN,GAAW/O,KAAK1B,MAEpDyQ,EAAM,QADaoB,GAActO,wBAGrC,mBAAmBwO,GACf,IAAmC,IAA/BA,EAAUrC,mBAA6D,IAAhChO,KAAK1B,MAAM0P,iBAA4B,CAC9E,MAAMsC,EAActQ,KAAK1B,MAAM4P,UAAUpF,QAAO,CAACC,EAAKC,IAC3C1H,OAAOC,OAAOD,OAAOC,OAAO,GAAIwH,GAAM,CAAE,CAACC,EAAKpH,MAAO,CACpDoJ,SAAUhL,KAAK1B,MAAMsH,UAAUnE,QAAQ8O,MAAKtG,GAAKA,EAAErI,OAASoH,EAAKpH,OACjEkO,KAAM9G,MAEf,IACHhJ,KAAK2D,SAAS,CAAE0K,QAASiC,KAGjC,SACI,MAAM,mBAAEE,EAAkB,QAAE/P,EAAO,OAAEK,EAAM,OAAE2P,EAAM,EAAE7P,EAAC,UAAEgF,EAAS,eAAE8K,GAAmB1Q,KAAK1B,MAC3F,OAAQ,kBAAoBuC,EAAA,EAAO,CAAEC,OAAQA,EAAQ9B,MAAO4B,EAAE,sCAAuCH,QAASA,EAASO,QAAS,QAASC,QAAS,CAC1I,kBAAoBC,EAAA,GAAQ,CAAEC,IAAK,OAAQY,WAAYyO,GAAsBxQ,KAAK1B,MAAM0P,kBAAwD,OAApChO,KAAK1B,MAAM2P,qBAA+B7M,QAAS,KACvJqP,EAAOnP,OAAOqH,KAAK3I,KAAKC,MAAMoO,SAASxG,QAAOjG,GAAQ5B,KAAKC,MAAMoO,QAAQzM,GAAMoJ,cAC9EpK,EAAE,sCACX,kBAAoBM,EAAA,GAAQ,CAAEC,IAAK,SAAUH,QAAS,OAAQe,WAAYyO,EAAoBpP,QAASX,GAAWG,EAAE,uCAExH,kBAAoBqB,EAAA,EAAO,KACvB,kBAAoBE,EAAA,EAAW,KAAM4J,QAAQ2E,IAAmB,kBAAoBtO,EAAA,EAAO,CAAEpB,QAAS,SAAUhC,MAAO,GAAG0R,OAC1H,kBAAoBvO,EAAA,EAAW,KAC3B,kBAAoBwO,GAAA,EAAM,KACtB,kBAAoBC,GAAA,EAAU,CAAEC,KAAM,GAClC,kBAAoBvO,EAAA,EAAa,KAC7B,kBAAoBC,EAAA,EAAM,CAAEC,UAAWD,EAAA,MAAmB3B,EAAE,WACpE,kBAAoBgQ,GAAA,EAAU,CAAEC,KAAM,IAClC,kBAAoBvO,EAAA,EAAa,KAC7B,kBAAoBC,EAAA,EAAM,CAAEC,UAAWD,EAAA,KAAkBvC,KAAK1B,MAAMsH,UAAU7E,QACtF,kBAAoB6P,GAAA,EAAU,CAAEC,KAAM,GAClC,kBAAoBvO,EAAA,EAAa,KAC7B,kBAAoBC,EAAA,EAAM,CAAEC,UAAWD,EAAA,MAAmB3B,EAAE,wDACpE,kBAAoBgQ,GAAA,EAAU,CAAEC,KAAM,IAClC,kBAAoBvO,EAAA,EAAa,KAC7B,kBAAoBC,EAAA,EAAM,CAAEC,UAAWD,EAAA,KAAkBvC,KAAK1B,MAAMsH,UAAU/D,iBAC9F,kBAAoBM,EAAA,EAAW,KAC3B,kBAAoB,GAAe,CAAE4M,MAAO/O,KAAK1B,MAAMyQ,MAAOd,qBAAsBjO,KAAK1B,MAAM2P,qBAAsBD,iBAAkBhO,KAAK1B,MAAM0P,iBAAkBE,UAAWlO,KAAK1B,MAAM4P,UAAW9F,WAAYpI,KAAK1B,MAAM8J,WAAYyF,MAAO7N,KAAK1B,MAAMuP,MAAOjI,UAAWA,EAAWyI,QAASrO,KAAKC,MAAMoO,QAAS1K,SAAUtC,IACtTrB,KAAK2D,SAAS,CAAE0K,QAAShN,WAIrD,UAAe,IAAAyC,UAAQ,SAAsB7D,IAClC,CACHmI,WAAY,iBAA4BnI,GACxC4N,MAAO,YAAuB5N,GAC9BiO,UAAW,MAAAzM,QAAyBxB,GACpC+N,iBAAqD,IAAnC,aAAwB/N,GAC1CuQ,mBAAoB,sBAAqCvQ,GACzDyQ,eAAgB,iBAAgCzQ,GAChDgO,qBAAsB,YAAuBhO,IAAS,QAAc,YAAuBA,IAAU,SAEzG,CACA8O,MAAO,oBAXX,EAYG,IAAA7K,kBAAA,CAAkBkM,K,wCCzErB,MAiCA,IAfqB,IAAAtM,UAAS7D,IACnB,CACH6Q,SAAUvM,EAAA,8BAAyCtE,GACnD0F,WAAY,KAAAA,WAA+B1F,WAEhDtB,GAAW,CAACoF,EAAYgN,EAAG9M,KAC1B,MAAMhD,GAxBU6P,EAwBW/M,EAAW+M,SAxBZE,EAwBsB/M,EAAS+M,iBAvBrDF,EACO,CACH,CACI9R,MAAO,sCACPoC,QAAS,CAACyK,EAAMe,IAAaoE,EAAiBpE,KAInD,CACH,CACI5J,MAAO,CAAEuJ,cAAe,QACxBC,QAAS,gCACTzK,YAAY,EACZ/C,MAAO,yCAdA,IAAC8R,EAAUE,EA0B1B,MAAO,CACH,aAAc,gBACdnC,MAAO,CAAC,QACRe,KAJS7L,EAAW4B,WAAWjH,OAAS,EAAIqF,EAAW4B,WAAW,GAAGlE,QAAQC,KAAIuP,GAAU,CAACA,EAAOlQ,QAAS,GAK5GE,aAZa,CAclB,GAAAiQ,GChCG,GAAc,EAAG9N,KAAI8J,cAAc,GAAI5M,QAAO+C,WAAU8J,cAClD,kBAAoBpK,EAAA,EAAY,KACpC,kBAAoBG,EAAA,GAAW,CAAE5C,MAAOA,EAAO4M,YAAaA,EAAa9J,GAAIA,EAAIC,SAAUA,EAAU+J,WAAaC,IAC1F,UAAZA,EAAIlM,KAA6B,KAAVb,GAG3B6M,EAASE,MAEjB,kBAAoBzJ,EAAA,EAAgB,CAAEZ,MAAO,CAAEa,WAAY,MACvD,kBAAoB,MAAY,QAE/BsN,GAAiB,EAAG5D,mBAAkBC,kBAAiB3F,SAAQuJ,uBAChE,kBAAoBvE,EAAA,EAAS,CAAEzJ,GAAI,yBAA0BqK,gBAAiB5F,EAAO4C,YACzF,kBAAoBqC,EAAA,EAAgB,KAChC,kBAAoBC,GAAA,EAAa,CAAE/L,QAAS,iBACxC,kBAAoB0M,GAAA,EAAe,CAAEC,WAAY9F,EAAO2C,SAAUoD,MAAO/F,EAAOgG,MAAM9M,KAAM+M,aAAcjG,EAAOwJ,cAActQ,MAC3H,kBAAoB,GAAaO,OAAOC,OAAO,GAAIgM,MAC3D,kBAAoBR,GAAA,EAAa,KAC7B,kBAAoB,IAAiB,CAAEhL,WAAYqP,EAAkBrP,YACjE,kBAAoBb,EAAA,GAAQI,OAAOC,OAAO,GAAI6P,MACtD,kBAAoBrE,GAAA,EAAa,CAAE/L,QAAS,cACxC,kBAAoByK,EAAA,EAAY,CAAEC,UAAW8B,EAAgB9B,UAAWC,UAAW6B,EAAgB7B,UAAWrD,KAAMkF,EAAgBlF,KAAMD,QAASmF,EAAgBnF,QAASuD,UAAW4B,EAAgB5B,UAAWE,gBAAiB0B,EAAgB1B,qBCzBtP,GAAS,CAClBwF,WAAY,CACRC,QAAS,OACTrB,cAAe,MACfsB,eAAgB,WCSxB,MAAMC,WAAkB,cACpB,cACI1R,SAAStB,WACTuB,KAAKC,MAAQ,CACT4N,MAAO,CAAE9M,KAAM,IACfuO,cAAe,GACflH,WAAY,CAAEE,KAAM,EAAGD,QAAS,KAGxC,SACI,MAAQD,YAAY,KAAEE,EAAI,QAAED,IAAerI,KAAKC,OAC1C,MAAEyR,EAAK,EAAE9Q,EAAC,KAAEgP,EAAI,kBAAEtL,GAAsBtE,KAAK1B,MAC7CqT,EAAe/B,EAChB/H,QAAOjG,IACH5B,KAAKC,MAAM4N,MAAM9M,MAGff,KAAKC,MAAM4N,MAAM9M,KAAK6Q,OAAMC,GAASjQ,EAAKuH,SAAS0I,OAEzDnQ,KAAIE,GAAQ,CAACA,KACZgJ,EAAM+G,EAAajI,OAAOpB,EAAO,GAAKD,EAASC,EAAOD,GAC5D,OAAQ,kBAAoB,aAAgB,KACxC,kBAAoB8I,GAAgB,CAAEC,kBAAmB,CACjDrP,YAAauC,EACblD,QAASsQ,EACTrT,SAAUuC,EAAE,mCACbiH,OAAQ,CACP4C,WAAY,IAAMzK,KAAK2D,SAAS,CAC5ByE,WAAY9G,OAAOC,OAAOD,OAAOC,OAAO,GAAIvB,KAAKC,MAAMmI,YAAa,CAAEE,KAAM,IAC5EuF,MAAO,CAAE9M,KAAM,MAEnByJ,SAAU,CAACsH,EAAW7C,KAClBjP,KAAK2D,SAAS,CACVyE,WAAY9G,OAAOC,OAAOD,OAAOC,OAAO,GAAIvB,KAAKC,MAAMmI,YAAa,CAAEE,KAAM,IAC5EuF,OAAO,SAAsB7N,KAAKC,MAAM4N,MAAjC,CAAwC,OAAQoB,MAG/DpB,MAAO7N,KAAKC,MAAM4N,MAClBwD,cAAe,CAAEtQ,KAAMH,EAAE,UAC1B4M,gBAAiB,CAChB9B,WAAW,EACXC,UAAWgG,EAAajT,OACxB2J,UACAC,OACAsD,UAAW,CAACC,EAAM6D,IAAY1P,KAAK2D,SAAS,CACxCyE,WAAY9G,OAAOC,OAAOD,OAAOC,OAAO,GAAIvB,KAAKC,MAAMmI,YAAa,CAAEE,KAAMoH,MAEhF5D,gBAAiB,CAACD,EAAM4D,IAAezP,KAAK2D,SAAS,CACjDyE,WAAY,CAAEE,KAAM,EAAGD,QAASoH,MAErClC,iBAAkB,CACjBnK,GAAI,sBACJC,SAAW/C,GAAUN,KAAK2D,SAAS,CAC/B2L,cAAehP,IAEnB6M,SAAU,KACNnN,KAAK2D,SAAS,CACVkK,OAAO,SAAmB7N,KAAKC,MAAM4N,MAA9B,CAAqC,OAAQ7N,KAAKC,MAAMqP,eAC/DA,cAAe,GACflH,WAAY9G,OAAOC,OAAOD,OAAOC,OAAO,GAAIvB,KAAKC,MAAMmI,YAAa,CAAEE,KAAM,OAGpFhI,MAAON,KAAKC,MAAMqP,cAClBpC,YAAatM,EAAE,yCAEvBgK,EAAIlM,OAAS,GAAM,kBAAoB,GAAc,CAAEsS,iBAAmBnB,IAClE7P,KAAK1B,MAAMyT,SAASnH,EAAIiF,OAEhB,IAAhBD,EAAKlR,QAAiB,kBAAoB,MAAO,CAAEsE,MAAO,eACtD,kBAAoBkJ,EAAA,EAAY,KAC5B,kBAAoBC,EAAA,EAAgB,CAAEC,KAAM,QAC5C,kBAAoB/J,EAAA,EAAO,CAAEnD,aAAc,KAAMC,KAAM,MAAQyB,EAAE,iDACjE,kBAAoByL,EAAA,EAAgB,KAAMzL,EAAE,yDAC5B,IAAxB+Q,EAAajT,QAAgBkR,EAAKlR,OAAS,GAAM,kBAAoB,KAAkB,CAAEmJ,OAAQ7H,KAAKC,MAAMqP,cAAeW,SAAUrP,EAAE,+BACvI,kBAAoB,KAA2B,CAAEwC,GAAI,wCAAyC,aAAc,gDAAiDpC,QAAS,SAAU2K,UAAWgG,EAAajT,OAAQ2J,QAASA,EAASC,KAAMA,EAAMsD,UAAW,CAACC,EAAM6D,IAAY1P,KAAK2D,SAAS,CAClRyE,WAAY9G,OAAOC,OAAOD,OAAOC,OAAO,GAAIvB,KAAKC,MAAMmI,YAAa,CAAEE,KAAMoH,MAC5E5D,gBAAiB,CAACD,EAAM4D,IAAezP,KAAK2D,SAAS,CACrDyE,WAAY,CAAEE,KAAM,EAAGD,QAASoH,SAIpD,UAAe,IAAA3L,UAAQ,SAAsB7D,IAAS,CAClDqE,kBAAmBC,EAAA,8BAAyCtE,OADhE,EAEK,IAAAiE,kBAAA,CAAkBuN,KCxFvB,MAAMO,WAAwB,cAC1B,cACIjS,SAAStB,WACTuB,KAAKC,MAAQ,CAAEgS,aAAc,MAEjC,SACI,MAAM,cAAExI,EAAa,UAAE9I,EAAS,QAAEc,EAAO,UAAEmE,EAAS,EAAEhF,EAAC,aAAE6H,GAAiBzI,KAAK1B,MAC/E,OAAQ,kBAAoB,aAAgB,KACxCmK,EAAayJ,WAAc,kBAAoB,GAAiB,CAAEtM,UAAWA,EAAW9E,QAAQ,EAAML,QAAS,IAAMgJ,EAAc,CAAE1I,KAAM,YAAaD,QAAQ,IAAU2P,OAASjP,IAC3KxB,KAAK1B,MAAMoC,gBAAgBkF,EAAUhE,KAAMN,OAAOC,OAAOD,OAAOC,OAAO,GAAIqE,GAAY,CAAE/D,YAAuC,iCAA1B+D,EAAU/D,YAAiD,MAAQ,MAAOL,iBAAiB,gBAEzM,kBAAoB,GAAQ,CAAEwF,SAAS,EAAMlG,OAAQ2H,EAAa0J,aAAcnT,MAAO4B,EAAE,6CAA8C,CAC/HqQ,OAAQjR,KAAKC,MAAMgS,aACnBrD,WAAYhJ,EAAU7E,OACtBN,QAAS,KACTgJ,EAAc,CAAE1I,KAAM,eAAgBD,QAAQ,IAC9Cd,KAAK2D,SAAS,CAAEsO,aAAc,QAC/BlM,aAAcpF,EAAW0F,UAAW,KACnC,MAAMhF,EAAWC,OAAOC,OAAOD,OAAOC,OAAO,GAAIqE,GAAY,CAAE/D,YAAuC,iCAA1B+D,EAAU/D,YAAiD,MAAQ,MAAOL,aAAcC,EAC3JoG,QAAOlG,GAAYA,EAASZ,OAASf,KAAKC,MAAMgS,eAChDvQ,KAAIC,GAAYA,EAASC,SAClC5B,KAAK1B,MAAMoC,gBAAgBkF,EAAUhE,KAAMP,EAAU,iBACtDyF,KAAMlG,EAAE,4CAA6C,CACpDqQ,OAAQjR,KAAKC,MAAMgS,aACnBrD,WAAYhJ,EAAU7E,OACtBgG,WAAYnG,EAAE,yBACtB,kBAAoB,GAAO,CAAEwR,aAAcxR,EAAE,uCAAwCmR,SAAUM,IACvFrS,KAAK2D,SAAS,CAAEsO,aAAcI,EAAK,KACnC5I,EAAc,CAAE1I,KAAM,eAAgBD,QAAQ,KAC/C4Q,MAAO,IAAMjI,EAAc,CAAE1I,KAAM,YAAaD,QAAQ,IAAS8O,KAAMnO,EAAQC,KAAIuI,GAAKA,EAAElJ,WAG7G,UAAe,IAAA+C,UAAQ,SAAsB7D,IAAS,CAClDU,UAAW,sBAAqCV,GAChDwI,aAAc,kBAAiCxI,EAAjC,CAAwC,eACrD,CACDwJ,cAAe,wBACf/I,gBAAiB,sBALrB,EAMG,IAAAwD,kBAAA,CAAkB8N,K,gEC1Cd,MAAM,GAAS,CAClBM,kBAAmB,CACfrP,MAAO,MACPsP,SAAU,cAEdC,QAAS,CACLC,WAAYjT,EAAA,SACZkT,OAAQ,SAEZC,oBAAqB,CACjBpT,WAAYC,EAAA,SACZC,YAAaD,EAAA,SACboT,gBAAiBC,GAAA,SACjBC,cAAeC,GAAA,SACfN,WAAYM,GAAA,UAEhBC,gBAAiB,CACbC,QAASzT,EAAA,OACTsT,cAAe,EACfF,gBAAiBC,GAAA,UAErB7T,MAAO,CACH8T,cAAeI,GAAA,S,wFCtBhB,MAAM,GAAS,CAClBZ,kBAAmB,CACfrP,MAAO,MACPsP,SAAU,cAEdC,QAAS,CACLC,WAAYjT,EAAA,SACZkT,OAAQ,SAEZC,oBAAqB,CACjBpT,WAAYC,EAAA,SACZC,YAAaD,EAAA,SACbsT,cAAeC,GAAA,SACfN,WAAYM,GAAA,SACZI,YAAa3T,EAAA,SACb4T,aAAc5T,EAAA,UAElB6T,eAAgB,CACZ9T,WAAYC,EAAA,SACZC,YAAaD,EAAA,UAEjB8T,oBAAqB,CACjBR,cAAeC,GAAA,SACfN,WAAYM,GAAA,SACZI,YAAa3T,EAAA,SACb4T,aAAc5T,EAAA,SACdD,WAAYC,EAAA,SACZC,YAAaD,EAAA,SACb+T,aAAc/T,EAAA,SACdoT,gBAAiBC,GAAA,UAErBW,iBAAkB,CACdV,cAAeC,GAAA,SACfN,WAAYM,GAAA,SACZxT,WAAYC,EAAA,SACZC,YAAaD,EAAA,SACboT,gBAAiBC,GAAA,UAErBzL,OAAQ,CACJ6L,QAASzT,EAAA,OACToT,gBAAiBC,GAAA,QAErBG,gBAAiB,CACbC,QAASzT,EAAA,SACTsT,cAAe,EACfF,gBAAiBC,GAAA,QAErBY,WAAY,CACRX,cAAeC,GAAA,QAEnB/T,MAAO,CACH8T,cAAeI,GAAA,QAEnBQ,gBAAiB,CACbZ,cAAeC,GAAA,S,gBCzCvB,MAAMY,WAA4B,cAC9B,YAAYrV,GACRyB,MAAMzB,GACN,MAAM+B,EAAUL,KAAK1B,MAAMsH,UAAU,GACrC5F,KAAKC,MAAQ,CACTc,KAAMV,EAAQU,KACd6S,YAAavT,EAAQuT,aAG7B,SACI,MAAM,gBAAElT,EAAe,YAAEoF,EAAW,UAAEF,EAAS,aAAEG,EAAY,cAAE0D,EAAa,EAAE7I,GAAMZ,KAAK1B,MACnF+B,EAAUuF,EAAU,GAC1B,OAAQ,kBAAoB/E,EAAA,EAAO,CAAE7B,MAAO4B,EAAE,uCAAwCE,QAAQ,EAAML,QAAS,IAAMgJ,EAAc,CAAE1I,KAAM,kBAAmBD,QAAQ,IAAUE,QAAS,QAASC,QAAS,CACjM,kBAAoBC,EAAA,GAAQ,CAAEC,IAAK,UAAWH,QAAS,UAAWI,QAAS,KACnE,MAAM,KAAEQ,EAAI,QAAEH,GAAYpB,EAASwT,EA/BrB,SAAUC,EAAGC,GAC/C,IAAInT,EAAI,GACR,IAAK,IAAIqJ,KAAK6J,EAAOxS,OAAO0S,UAAUC,eAAeC,KAAKJ,EAAG7J,IAAM8J,EAAEI,QAAQlK,GAAK,IAC9ErJ,EAAEqJ,GAAK6J,EAAE7J,IACb,GAAS,MAAL6J,GAAqD,mBAAjCxS,OAAO8S,sBACtB,KAAIlL,EAAI,EAAb,IAAgBe,EAAI3I,OAAO8S,sBAAsBN,GAAI5K,EAAIe,EAAEvL,OAAQwK,IAC3D6K,EAAEI,QAAQlK,EAAEf,IAAM,GAAK5H,OAAO0S,UAAUK,qBAAqBH,KAAKJ,EAAG7J,EAAEf,MACvEtI,EAAEqJ,EAAEf,IAAM4K,EAAE7J,EAAEf,KAE1B,OAAOtI,EAsB2D0T,CAAOjU,EAAS,CAAC,OAAQ,YACvEK,EAAgBkB,EAAMN,OAAOC,OAAOD,OAAOC,OAAO,GAAIsS,GAAW,CAAErS,aAAcC,EAAQC,KAAIC,GAAYA,EAASC,OAAOb,KAAMf,KAAKC,MAAMc,KAAM6S,YAAa5T,KAAKC,MAAM2T,YAAa/R,YAAqC,iCAAxBxB,EAAQwB,YAAiD,MAAQ,QAAU,oBAC9QE,WAAYgE,GAAiB/F,KAAKC,MAAMc,OAASV,EAAQU,MAAQf,KAAKC,MAAM2T,cAAgBvT,EAAQuT,aAAgBhT,EAAE,oCAC7H,kBAAoBM,EAAA,GAAQ,CAAEC,IAAK,SAAUH,QAAS,YAAaI,QAAS,IAAMqI,EAAc,CAAE1I,KAAM,kBAAmBD,QAAQ,IAAUiB,WAAYgE,GAAgBnF,EAAE,oBAE/K,kBAAoB,aAAgB,KAChCkF,GAAe,kBAAoB1D,EAAA,EAAO,CAAEpB,QAAS,SAAUhC,MAAO,GAAG8G,MACzE,kBAAoBrD,EAAA,EAAM,KACtB,kBAAoBC,EAAA,EAAW,CAAEC,MAAO/B,EAAE,QAAS2T,YAAY,EAAM3R,QAAS,QAC1E,kBAAoBM,EAAA,GAAW,CAAEqR,YAAY,EAAMpR,KAAM,OAAQC,GAAI,OAAQrC,KAAM,OAAQT,MAAON,KAAKC,MAAMc,KAAMsC,SAAU/C,GAASN,KAAK2D,SAAS,CAAE5C,KAAMT,OAChK,kBAAoBoC,EAAA,EAAW,CAAEC,MAAO/B,EAAE,eAAgBgC,QAAS,eAC/D,kBAAoB4R,GAAA,GAAU,CAAErR,KAAM,OAAQC,GAAI,cAAerC,KAAM,cAAeT,MAAON,KAAKC,MAAM2T,YAAavQ,SAAU/C,GAASN,KAAK2D,SAAS,CAAEiQ,YAAatT,WAG7L,MAQA,IAR6B,IAAA4D,kBAAA,EAAkB,IAAAJ,UAAQ,SAAsB7D,IAAS,CAClF2F,UAAW,KAAAD,WAA+B1F,GAC1C8F,aAAc,sBAAqC9F,GACnD6F,YAAa,iBAAgC7F,OAC5C,CACDwJ,cAAe,wBACf/I,gBAAiB,sBAN0B,CAO5CiT,K,4BCvCH,MAqDA,IAAe,IAAA7P,UAAQ,SAAsB7D,IAAS,CAClDwI,aAAc,kBAAiCxI,EAAjC,CAAwC,aACtDwU,mBAAoB,sBAAqCxU,GACzDyU,YAAa,iBAAgCzU,GAC7CqE,kBAAmBC,EAAA,8BAAyCtE,OAC3D,CACDwJ,cAAe,wBACfkL,gBAAiB,sBAPrB,EAQG,IAAAzQ,kBAAA,EA7DY,EAAGtD,IAAGgU,UAASC,WAAUC,cAAarL,gBAAehB,eAAciM,cAAaD,qBAAoBE,kBAAiBtU,UAASiE,oBAAmByQ,oBAC5J,MAAOtQ,EAAgBC,GAAqB,cAAe,GACrDsQ,GAAW,EAAAC,GAAA,GAAYC,OAAOC,SAASC,UAC7C,OAAQ,kBAAoB,aAAgB,KACxC3M,EAAa/H,iBAAmB,kBAAoB,GAAsB,MAC1E,kBAAoB,GAAQ,CAAEsG,SAAS,EAAMlG,OAAQ2H,EAAakM,gBAAiB3V,MAAO4B,EAAE,kCAAmCH,QAAS,IAAMgJ,EAAc,CAAE1I,KAAM,kBAAmBD,QAAQ,IAAUN,MAAOkU,EAAa3O,aAAc0O,EAAoBpO,UAAW,KAClQsO,EAAgBtU,EAAQuB,KAAM,kBAAmBmT,IAClDjO,KAAM,kBAAoB,aAAgB,KACd,IAA3BzG,EAAQoB,QAAQ/C,QACZkC,EAAE,sCAAuC,CACrCgO,WAAYvO,EAAQU,OAE5BV,EAAQoB,QAAQ/C,OAAS,GAAM,kBAAoB,aAAgB,KAC/DkC,EAAE,oCAAqC,CACnCgO,WAAYvO,EAAQU,OAExB,kBAAoB,KAAM,MAC1B,kBAAoB,KAAM,MAC1BH,EAAE,sDACF,kBAAoB,KAAM,MAC1B,kBAAoBoJ,EAAA,GAAM,KAAM3J,EAAQoB,QAAQC,KAAIC,GAAa,kBAAoBuI,EAAA,EAAU,CAAE/I,IAAK,GAAGQ,EAASC,QAAUD,EAASZ,WAAagG,WAAuC,IAA3B1G,EAAQoB,QAAQ/C,OAAekC,EAAE,0BAA4B,KACvO,kBAAoB,SAAU,CAAEoC,MAAO,oBACnC,kBAAoBqS,GAAA,EAAY,CAAErS,MAAO,eACrC,kBAAoBsS,GAAA,EAAgB,CAAE3K,GAAI,GAAGqK,IAAW,oBAAsBpU,EAAE,+CAChF,kBAAoB0U,GAAA,EAAgB,CAAEC,UAAU,GAAQlV,EAAQU,OACpE,kBAAoByU,GAAA,EAAO,KACvB,kBAAoBC,GAAA,EAAW,CAAEzS,MAAO,sBACpC,kBAAoBX,EAAA,EAAO,CAAEnD,aAAc,KAAM8D,MAAO,SAAc7D,KAAM,OAASkB,EAAQU,MAC7FV,EAAQuT,aAAgB,kBAAoBvR,EAAA,EAAO,CAAEnD,aAAc,KAAM8D,MAAO,SAAc7D,KAAM,MAAQkB,EAAQuT,aACpH,kBAAoBvR,EAAA,EAAO,CAAEnD,aAAc,KAAM8D,MAAO,mBAAwB7D,KAAM,MAClFyB,EAAE,8CACF,KACAP,EAAQwB,aACY,iCAAxBxB,EAAQwB,YAAkD,kBAAoB6T,GAAA,EAAM,CAAEC,UAAWd,EAAUzP,SAAU,CAACyG,EAAMrE,IAAUsN,EAAYtN,IAC9I,kBAAoBoO,GAAA,EAAK,CAAEC,SAAU,EAAG7W,MAAO,kBAAoB8W,GAAA5E,EAAc,KAAM,cAAe6E,aAAc,eAAgBC,cAAepB,EAAQ,KAC3J,kBAAoBgB,GAAA,EAAK,CAAEC,SAAU,EAAG7W,MAAO,kBAAoB8W,GAAA5E,EAAc,KAAM,UAAW6E,aAAc,YAAaC,cAAepB,EAAQ,KACpJ,kBAAoBgB,GAAA,EAAK,CAAEC,SAAU,EAAG7W,MAAO,kBAAoB8W,GAAA5E,EAAc,KAAM,WAAY6E,aAAc,aAAcC,cAAepB,EAAQ,MAAW,kBAAoBc,GAAA,EAAM,CAAEC,UAAWd,EAAUzP,SAAU,CAACyG,EAAMrE,IAAUsN,EAAYtN,IACzP,kBAAoBoO,GAAA,EAAK,CAAEC,SAAU,EAAG7W,MAAO,kBAAoB8W,GAAA5E,EAAc,KAAM,UAAW6E,aAAc,YAAaC,cAAepB,EAAQ,KACpJ,kBAAoBgB,GAAA,EAAK,CAAEC,SAAU,EAAG7W,MAAO,kBAAoB8W,GAAA5E,EAAc,KAAM,WAAY6E,aAAc,aAAcC,cAAepB,EAAQ,OAC9J,kBAAoBa,GAAA,EAAW,KAC3B,kBAAoBzQ,EAAA,EAAU,CAAEC,OAAQ,kBAAoBC,EAAA,EAAa,CAAEC,SAAUT,IAAsB5D,OAAQ2D,EAAgBW,SAAU,IAAMV,GAAkB,GAAQY,SAAS,EAAMD,SAAU,QAASE,cAAe,CACtN,kBAAoB,IAAiB,CAAEpE,IAAK,OAAQY,YAAauC,GAC7D,kBAAoBkB,EAAA,EAAc,CAAEzD,YAAauC,EAAmBlD,QAAS,IAAMqI,EAAc,CACzF3I,QAAQ,EACRC,KAAM,qBACJH,EAAE,qCAChB,kBAAoB,IAAiB,CAAEO,IAAK,SAAUY,YAAauC,GAC/D,kBAAoBkB,EAAA,EAAc,CAAEzD,YAAauC,EAAmBlD,QAAS,IAAMqI,EAAc,CACzF3I,QAAQ,EACRC,KAAM,qBACJH,EAAE,kDC5C5C,MAAMqV,WAA6B,cAC/B,YAAY3X,GACRyB,MAAMzB,GACN0B,KAAK4U,QAAU,CAAC,gBAAmB,gBAAmB,iBACtD5U,KAAKC,MAAQ,CAAE4U,SAAU,GAE7B,oBACI7U,KAAK1B,MAAM4X,YACXlW,KAAK1B,MAAM6X,eACXnW,KAAK1B,MAAM8X,gBAAgB,QAAQpW,KAAK1B,MAAM+X,MAAMC,OAAO1U,QAE/D,SACI,MAAM,WAAE+D,EAAU,cAAE4Q,EAAa,WAAEC,EAAU,gBAAEC,EAAe,UAAEC,EAAS,eAAEC,EAAc,aAAEC,GAAkB5W,KAAK1B,MAClH,GAAsB,IAAlBiY,GACe,IAAfC,GACoB,IAApBC,EACA,OAAO,kBAAoB,EAAA5P,YAAa,MAAMjG,GAAK,kBAAoB,KAAS,CAAE5B,MAAO4B,EAAE,wCAG/F,GADmBgW,GAAgBF,GAAaC,EAE5C,OAAuB,OAAnBA,GAE4B,mCADA,QAAcA,GAE9B,kBAAoB,EAAA9P,YAAa,MAAMjG,GACnC,kBAAoB,aAAgB,KACxC,kBAAoB1C,EAAA,EAAY,KAC5B,kBAAoBa,EAAA,EAAiB,CAAEC,MAAO4B,EAAE,uCACpD,kBAAoBiW,EAAA,EAAM,KACtB,kBAAoB3K,EAAA,EAAY,KAC5B,kBAAoBC,EAAA,EAAgB,CAAEC,KAAM,OAC5C,kBAAoB/J,EAAA,EAAO,CAAEnD,aAAc,KAAMC,KAAM,MAAQyB,EAAE,mDACjE,kBAAoByL,EAAA,EAAgB,KAAMzL,EAAE,uDAAwD,CAChGgB,KAAM5B,KAAK1B,MAAM+X,MAAMC,OAAO1U,aAKnD,kBAAoB,EAAAiF,YAAa,MAAMjG,GAAK,kBAAoB,KAAc,CAAE5B,MAAO4B,EAAE,wCAEpG,MAAMP,EAAUsF,EAAW,GACrBlE,EAAUpB,EAAQoB,QACxB,OAAQ,kBAAoB,MAAO,KAC/B,kBAAoB,GAAQ,CAAEsT,cAAe/U,KAAK1B,MAAMwY,QAASzW,QAASA,EAASuU,QAAS5U,KAAK4U,QAASC,SAAU7U,KAAKC,MAAM4U,SAAUC,YAAaD,GAAY7U,KAAK2D,SAAS,CAAEkR,eAClL,kBAAoB,MAAO,CAAE7R,MAAO,YAA0C,iCAAxB3C,EAAQwB,YAAkD,kBAAoB,aAAgB,KAChJ,kBAAoBkV,EAAA,EAAY,CAAElB,SAAU,EAAGzS,GAAI,eAAgB4T,IAAKhX,KAAK4U,QAAQ,GAAIqC,OAAgC,IAAxBjX,KAAKC,MAAM4U,UACxG,kBAAoB,MAAO,CAAE7R,MAAO,wBAChC,kBAAoB,GAAgB,CAAE4C,UAAWvF,EAAQU,KAAMgJ,UAAWtI,EAAQC,KAAIuI,GAAKA,EAAElJ,OAAOV,QAASA,MACrH,kBAAoB0W,EAAA,EAAY,CAAElB,SAAU,EAAGzS,GAAI,YAAa4T,IAAKhX,KAAK4U,QAAQ,GAAIqC,OAAgC,IAAxBjX,KAAKC,MAAM4U,UACrG,kBAAoB,EAAY,CAAExU,QAASA,KAC/C,kBAAoB0W,EAAA,EAAY,CAAElB,SAAU,EAAGzS,GAAI,aAAc4T,IAAKhX,KAAK4U,QAAQ,GAAIqC,OAAgC,IAAxBjX,KAAKC,MAAM4U,UACtG,kBAAoB,MAAO,CAAE7R,MAAO,wBAChC,kBAAoB,GAAa,CAAE4C,UAAWvF,EAASoB,QAASA,OAAkB,kBAAoB,aAAgB,KAC9H,kBAAoBsV,EAAA,EAAY,CAAElB,SAAU,EAAGzS,GAAI,YAAa4T,IAAKhX,KAAK4U,QAAQ,GAAIqC,OAAgC,IAAxBjX,KAAKC,MAAM4U,UACrG,kBAAoB,EAAY,CAAExU,QAASA,KAC/C,kBAAoB0W,EAAA,EAAY,CAAElB,SAAU,EAAGzS,GAAI,aAAc4T,IAAKhX,KAAK4U,QAAQ,GAAIqC,OAAgC,IAAxBjX,KAAKC,MAAM4U,UACtG,kBAAoB,MAAO,CAAE7R,MAAO,wBAChC,kBAAoB,GAAa,CAAE4C,UAAWvF,EAASoB,QAASA,UAGxF,UAAe,IAAAqC,UAAQ,SAAsBoT,IAClC,CACHvR,WAAY,KAAAA,WAA+BuR,GAC3CP,eAAgB,WAA0BO,GAC1CT,gBAAiB,YAA2BS,GAC5ClR,YAAaC,GAAA,GAAAA,QAAyBiR,GACtCC,QAASlR,GAAA,WAAyBiR,GAClClK,UAAW/G,GAAA,aAA2BiR,GACtCN,aAAc3Q,GAAA,gBAA8BiR,GAAO1W,MACnD+V,cAAetQ,GAAA,UAAwBiR,GACvCR,UAAWnS,EAAA,mBAA8B2S,GAAO1W,MAChDgW,WAAYjS,EAAA,mBAA8B2S,GAAOE,WAErD,CACAjB,aAAclQ,GAAA,gBACdiQ,UAAW3R,EAAA,aACX6R,gBAAiB,sBAhBrB,CAiBGH,K,kHC1FH,MCJA,GDWe,E,SAAAoB,aAPC,EAAGrY,WACP,kBAAoB,aAAgB,KACxCA,GAAU,kBAAoBd,EAAA,EAAY,KACtC,kBAAoBa,EAAA,EAAiB,CAAEC,MAAOA,KAClD,kBAAoB6X,EAAA,EAAM,KACtB,kBAAoB,IAAc,W,kHEL9C,MCJA,GDWe,E,SAAAQ,aAPM,EAAGrY,WACZ,kBAAoB,aAAgB,KACxCA,GAAU,kBAAoBd,EAAA,EAAY,KACtC,kBAAoBa,EAAA,EAAiB,CAAEC,MAAOA,KAClD,kBAAoB6X,EAAA,EAAM,KACtB,kBAAoB7K,EAAA,EAAa","file":"4688d6151302a13128dc.bundle.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ThemeContext from '../Dark/configContext';\nimport \"../../PageHeader/./page-header.css\";\n/**\n * This is a page header that mimics the patternfly layout for a header section\n */\n\nvar PageHeader = function PageHeader(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"className\", \"children\"]);\n\n  var pageHeaderClasses = classNames(className, 'pf-l-page-header', 'pf-c-page-header', 'pf-l-page__main-section', 'pf-c-page__main-section');\n  return /*#__PURE__*/React.createElement(ThemeContext.Consumer, null, function () {\n    var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';\n    var themeClasses = classNames(_defineProperty({}, \"pf-m-\".concat(theme, \"-200\"), theme === 'dark'), _defineProperty({}, \"pf-m-light\", theme === 'light'));\n    return /*#__PURE__*/React.createElement(\"section\", _extends({}, props, {\n      className: \"\".concat(pageHeaderClasses, \" \").concat(themeClasses),\n      \"widget-type\": \"InsightsPageHeader\"\n    }), children);\n  });\n};\n\nexport default PageHeader;\nPageHeader.propTypes = {\n  children: propTypes.any.isRequired,\n  className: propTypes.string\n};","import React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Title } from \"@patternfly/react-core/dist/esm/components/Title/Title.js\";\n/**\n * This is the title section of the pageHeader\n */\n\nvar PageHeaderTitle = function PageHeaderTitle(_ref) {\n  var className = _ref.className,\n      title = _ref.title;\n  var pageHeaderTitleClasses = classNames(className);\n  return /*#__PURE__*/React.createElement(Title, {\n    headingLevel: \"h1\",\n    size: \"2xl\",\n    className: pageHeaderTitleClasses,\n    \"widget-type\": \"InsightsPageHeaderTitle\"\n  }, \" \", title, \" \");\n};\n\nexport default PageHeaderTitle;\nPageHeaderTitle.propTypes = {\n  title: propTypes.node.isRequired,\n  className: propTypes.string\n};","import global_FontSize_xl from '@patternfly/react-tokens/dist/js/global_FontSize_xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const styles = {\n    card: {\n        minHeight: '130px',\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    cardBody: {\n        fontSize: global_FontSize_xl.value,\n        textAlign: 'center',\n    },\n};\n","import { Alert, Button, Form, FormGroup, InputGroup, InputGroupText, Modal, Stack, StackItem, Text, TextContent, TextInput, TextVariants, Title, } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { formatValue } from 'utils/formatValue';\nclass UpdateMarkupModelBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            markup: formatValue(Number(this.props.current.markup.value), 'markup', {\n                fractionDigits: 2,\n            }) || '0.00',\n        };\n    }\n    render() {\n        const { error, current, onClose, updateCostModel, isLoading, t } = this.props;\n        return (React.createElement(Modal, { title: t('cost_models_details.edit_markup'), isOpen: true, onClose: () => onClose({ name: 'updateMarkup', isOpen: false }), variant: \"small\", actions: [\n                React.createElement(Button, { key: \"proceed\", variant: \"primary\", onClick: () => {\n                        const newState = Object.assign(Object.assign({}, current), { source_uuids: current.sources.map(provider => provider.uuid), source_type: current.source_type === 'OpenShift Container Platform' ? 'OCP' : 'AWS', markup: {\n                                value: this.state.markup,\n                                unit: 'percent',\n                            } });\n                        updateCostModel(current.uuid, newState, 'updateMarkup');\n                    }, isDisabled: isNaN(Number(this.state.markup)) ||\n                        Number(this.state.markup) === Number(current.markup.value || 0) ||\n                        isLoading }, t('cost_models_details.add_rate_modal.save')),\n                React.createElement(Button, { key: \"cancel\", variant: \"link\", onClick: () => onClose({ name: 'updateMarkup', isOpen: false }), isDisabled: isLoading }, t('cost_models_details.add_rate_modal.cancel')),\n            ] },\n            React.createElement(Stack, { hasGutter: true },\n                React.createElement(StackItem, null, error && React.createElement(Alert, { variant: \"danger\", title: `${error}` })),\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"md\" }, t('cost_models_details.table.columns.name'))),\n                React.createElement(StackItem, null,\n                    React.createElement(TextContent, null,\n                        React.createElement(Text, { component: TextVariants.h6 }, current.name))),\n                React.createElement(StackItem, null,\n                    React.createElement(Form, null,\n                        React.createElement(FormGroup, { label: t('cost_models_wizard.markup.markup_label'), fieldId: \"markup-input-box\", helperTextInvalid: t('cost_models_wizard.markup.invalid_markup_text'), validated: !isNaN(Number(this.state.markup)) ? 'default' : 'error' },\n                            React.createElement(InputGroup, { style: { width: '150px' } },\n                                React.createElement(TextInput, { type: \"text\", \"aria-label\": t('cost_models_wizard.markup.markup_label'), id: \"markup-input-box\", value: this.state.markup, onChange: (markup) => {\n                                        const markupDecimal = Number(markup);\n                                        const dx = markup.split('').findIndex(c => c === '.');\n                                        if (!isNaN(markupDecimal) && dx > -1 && markup.length - dx - 1 > 2) {\n                                            this.setState({\n                                                markup: formatValue(markupDecimal, 'markup', {\n                                                    fractionDigits: 2,\n                                                }),\n                                            });\n                                            return;\n                                        }\n                                        this.setState({ markup });\n                                    }, validated: !isNaN(Number(this.state.markup)) ? 'default' : 'error' }),\n                                React.createElement(InputGroupText, { style: { borderLeft: '0' } }, \"%\"))))))));\n    }\n}\n// Fixes issue with Typescript:\n// https://github.com/microsoft/TypeScript/issues/25103#issuecomment-412806226\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    return Object.assign(Object.assign(Object.assign({}, stateProps), dispatchProps), ownProps);\n};\nexport default connect(createMapStateToProps(state => {\n    return {\n        isLoading: costModelsSelectors.updateProcessing(state),\n        error: costModelsSelectors.updateError(state),\n    };\n}), {\n    onClose: costModelsActions.setCostModelDialog,\n    updateCostModel: costModelsActions.updateCostModel,\n}, mergeProps)(withTranslation()(UpdateMarkupModelBase));\n","import { Card, CardActions, CardBody, CardHeader, CardHeaderMain, Dropdown, DropdownItem, DropdownPosition, KebabToggle, } from '@patternfly/react-core';\nimport { ReadOnlyTooltip } from 'pages/costModels/components/readOnlyTooltip';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { rbacSelectors } from 'store/rbac';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './markup.styles';\nimport UpdateMarkupDialog from './updateMarkupDialog';\nconst MarkupCardBase = ({ isWritePermission, setCostModelDialog, current, isUpdateDialogOpen, t, }) => {\n    const [dropdownIsOpen, setDropdownIsOpen] = React.useState(false);\n    const markupValue = current && current.markup && current.markup.value\n        ? formatValue(Number(current.markup.value), 'markup', {\n            fractionDigits: 2,\n        })\n        : '0.0';\n    return (React.createElement(React.Fragment, null,\n        isUpdateDialogOpen && React.createElement(UpdateMarkupDialog, { current: current }),\n        React.createElement(Card, { style: styles.card },\n            React.createElement(CardHeader, null,\n                React.createElement(CardHeaderMain, null, t('cost_models_details.description_markup')),\n                React.createElement(CardActions, null,\n                    React.createElement(Dropdown, { toggle: React.createElement(KebabToggle, { onToggle: setDropdownIsOpen }), isOpen: dropdownIsOpen, onSelect: () => setDropdownIsOpen(false), position: DropdownPosition.right, isPlain: true, dropdownItems: [\n                            React.createElement(ReadOnlyTooltip, { key: \"edit\", isDisabled: !isWritePermission },\n                                React.createElement(DropdownItem, { isDisabled: !isWritePermission, onClick: () => setCostModelDialog({ isOpen: true, name: 'updateMarkup' }), component: \"button\" }, t('cost_models_details.edit_markup_action'))),\n                        ] }))),\n            React.createElement(CardBody, { isFilled: true }),\n            React.createElement(CardBody, { style: styles.cardBody },\n                markupValue,\n                \"%\"),\n            React.createElement(CardBody, { isFilled: true }))));\n};\nexport default connect(createMapStateToProps(state => {\n    const { updateMarkup } = costModelsSelectors.isDialogOpen(state)('markup');\n    return {\n        isUpdateDialogOpen: updateMarkup,\n        costModelDialog: costModelsSelectors.isDialogOpen(state)('markup'),\n        isWritePermission: rbacSelectors.isCostModelWritePermission(state),\n    };\n}), {\n    setCostModelDialog: costModelsActions.setCostModelDialog,\n})(withTranslation()(MarkupCardBase));\n","import { Alert, Button, ButtonVariant, Form, Modal } from '@patternfly/react-core';\nimport { canSubmit as isReadyForSubmit, mergeToRequest, RateForm, useRateData, } from 'pages/costModels/components/rateForm';\nimport { initialRateFormData } from 'pages/costModels/components/rateForm/utils';\nimport React from 'react';\nimport { Translation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { metricsSelectors } from 'store/metrics';\nexport const AddRateModalBase = ({ isOpen, isProcessing, onProceed, onClose, updateError, metricsHash, rates, }) => {\n    const rateFormData = useRateData(metricsHash);\n    const canSubmit = React.useMemo(() => isReadyForSubmit(rateFormData), [rateFormData.errors, rateFormData.rateKind]);\n    React.useEffect(() => {\n        rateFormData.reset(Object.assign(Object.assign({}, initialRateFormData), { otherTiers: rates }));\n    }, [isOpen]);\n    return (React.createElement(Translation, null, t => {\n        return (React.createElement(Modal, { title: t('cost_models_details.add_rate_modal.title'), isOpen: isOpen, onClose: onClose, variant: \"large\", actions: [\n                React.createElement(Button, { key: \"add-rate\", variant: ButtonVariant.primary, isDisabled: !canSubmit || isProcessing, onClick: () => {\n                        onProceed(rateFormData);\n                    } }, t('cost_models_details.add_rate')),\n                React.createElement(Button, { key: \"cancel\", variant: ButtonVariant.link, isDisabled: isProcessing, onClick: onClose }, t('cost_models_details.add_rate_modal.cancel')),\n            ] },\n            React.createElement(Form, null,\n                updateError && React.createElement(Alert, { variant: \"danger\", title: `${updateError}` }),\n                React.createElement(RateForm, { metricsHash: metricsHash, rateFormData: rateFormData }))));\n    }));\n};\nexport default connect((state) => {\n    const costModels = costModelsSelectors.costModels(state);\n    let costModel = null;\n    if (costModels.length > 0) {\n        costModel = costModels[0];\n    }\n    return {\n        costModel,\n        isOpen: costModelsSelectors.isDialogOpen(state)('rate').addRate,\n        updateError: costModelsSelectors.updateError(state),\n        isProcessing: costModelsSelectors.updateProcessing(state),\n        metricsHash: metricsSelectors.metrics(state),\n    };\n}, dispatch => {\n    return {\n        onClose: () => {\n            dispatch(costModelsActions.setCostModelDialog({\n                name: 'addRate',\n                isOpen: false,\n            }));\n        },\n        updateCostModel: (uuid, request) => costModelsActions.updateCostModel(uuid, request, 'addRate')(dispatch),\n    };\n}, (stateProps, dispatchProps) => {\n    const { uuid, rates } = stateProps.costModel;\n    return {\n        isOpen: stateProps.isOpen,\n        metricsHash: stateProps.metricsHash,\n        rates,\n        updateError: stateProps.updateError,\n        isProcessing: stateProps.isProcessing,\n        onClose: dispatchProps.onClose,\n        onProceed: (rateFormData) => {\n            const costModelReq = mergeToRequest(stateProps.metricsHash, stateProps.costModel, rateFormData);\n            dispatchProps.updateCostModel(uuid, costModelReq);\n        },\n    };\n})(AddRateModalBase);\n","import { Alert, Button, Modal, Title, TitleSizes } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst DialogBase = ({ t, onClose, onProceed, title, body, actionText, isProcessing = false, isOpen = false, isSmall = false, error = '', }) => {\n    const CancelButtonSecondary = (React.createElement(Button, { key: \"cancel\", variant: \"link\", onClick: onClose, isDisabled: isProcessing }, t('dialog.cancel')));\n    const ProceedButton = (React.createElement(Button, { key: \"proceed\", variant: \"danger\", onClick: onProceed, isDisabled: isProcessing }, actionText));\n    const CloseButtonPrimary = (React.createElement(Button, { key: \"close\", variant: \"primary\", onClick: onClose, isDisabled: isProcessing }, t('dialog.close')));\n    const actions = actionText !== '' ? [ProceedButton, CancelButtonSecondary] : [CloseButtonPrimary];\n    return (React.createElement(Modal, { \"aria-label\": title, header: React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes['2xl'] },\n            React.createElement(ExclamationTriangleIcon, { color: \"orange\" }),\n            \" \",\n            title), isOpen: isOpen, onClose: onClose, actions: actions, variant: isSmall ? 'small' : 'default' },\n        error && React.createElement(Alert, { variant: \"danger\", title: `${error}` }),\n        body));\n};\nexport default withTranslation()(DialogBase);\n","import { Alert, Button, Modal, Stack, StackItem } from '@patternfly/react-core';\nimport { Form } from 'components/forms/form';\nimport { canSubmit as isReadyForSubmit, genFormDataFromRate, hasDiff, mergeToRequest, RateForm, useRateData, } from 'pages/costModels/components/rateForm';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { metricsSelectors } from 'store/metrics';\nconst UpdateRateModalBase = ({ rate, otherRates, metricsHash, onClose, isOpen, isProcessing, updateError, onProceed, }) => {\n    const { t } = useTranslation();\n    const rateFormData = useRateData(metricsHash, rate, otherRates);\n    const canSubmit = React.useMemo(() => isReadyForSubmit(rateFormData), [rateFormData]);\n    const gotDiffs = React.useMemo(() => hasDiff(rate, rateFormData), [rateFormData]);\n    React.useEffect(() => {\n        rateFormData.reset(genFormDataFromRate(rate, undefined, rate && rate.tag_rates\n            ? otherRates.filter(orate => orate.metric.name !== rate.metric.name ||\n                orate.cost_type !== rate.cost_type ||\n                orate.tag_rates.tag_key !== rate.tag_rates.tag_key)\n            : otherRates));\n    }, [isOpen]);\n    return (React.createElement(Modal, { title: t('cost_models_details.edit_rate'), isOpen: isOpen, onClose: onClose, variant: \"large\", actions: [\n            React.createElement(Button, { key: \"proceed\", variant: \"primary\", onClick: () => {\n                    onProceed(rateFormData);\n                }, isDisabled: !canSubmit || isProcessing || !gotDiffs }, t('cost_models_details.add_rate_modal.save')),\n            React.createElement(Button, { key: \"cancel\", variant: \"link\", onClick: onClose, isDisabled: isProcessing }, t('cost_models_details.add_rate_modal.cancel')),\n        ] },\n        React.createElement(Stack, { hasGutter: true },\n            updateError && (React.createElement(StackItem, null,\n                React.createElement(Alert, { variant: \"danger\", title: `${updateError}` }))),\n            React.createElement(StackItem, null,\n                React.createElement(Form, null,\n                    React.createElement(RateForm, { metricsHash: metricsHash, rateFormData: rateFormData }))))));\n};\nexport default connect((state) => {\n    const costModels = costModelsSelectors.costModels(state);\n    let costModel = null;\n    if (costModels.length > 0) {\n        costModel = costModels[0];\n    }\n    return {\n        costModel,\n        isOpen: costModelsSelectors.isDialogOpen(state)('rate').updateRate,\n        updateError: costModelsSelectors.updateError(state),\n        isProcessing: costModelsSelectors.updateProcessing(state),\n        metricsHash: metricsSelectors.metrics(state),\n    };\n}, dispatch => {\n    return {\n        onClose: () => {\n            dispatch(costModelsActions.setCostModelDialog({\n                name: 'updateRate',\n                isOpen: false,\n            }));\n        },\n        updateCostModel: (uuid, request) => {\n            costModelsActions.updateCostModel(uuid, request, 'updateRate')(dispatch);\n        },\n    };\n}, (stateProps, dispatchProps, ownProps) => {\n    const { uuid, rates } = stateProps.costModel;\n    const rate = stateProps.costModel && stateProps.costModel.rates && stateProps.costModel.rates[ownProps.index]\n        ? stateProps.costModel.rates[ownProps.index]\n        : null;\n    return {\n        rate,\n        otherRates: rates,\n        metricsHash: stateProps.metricsHash,\n        onClose: dispatchProps.onClose,\n        isOpen: stateProps.isOpen,\n        isProcessing: stateProps.isProcessing,\n        updateError: stateProps.updateError,\n        onProceed: (rateFormData) => {\n            const costModelReq = mergeToRequest(stateProps.metricsHash, stateProps.costModel, rateFormData, ownProps.index);\n            dispatchProps.updateCostModel(uuid, costModelReq);\n        },\n    };\n})(UpdateRateModalBase);\n","import { Bullseye, Button, EmptyState, EmptyStateBody, EmptyStateIcon, List, ListItem, Pagination, Title, Toolbar, ToolbarContent, ToolbarItem, ToolbarItemVariant, } from '@patternfly/react-core';\nimport { FileInvoiceDollarIcon } from '@patternfly/react-icons/dist/js/icons/file-invoice-dollar-icon';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport { EmptyFilterState } from 'components/state/emptyFilterState/emptyFilterState';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport { WithPriceListSearch } from 'pages/costModels/components/hoc/withPriceListSearch';\nimport { PriceListToolbar } from 'pages/costModels/components/priceListToolbar';\nimport { RateTable } from 'pages/costModels/components/rateTable';\nimport { CheckboxSelector } from 'pages/costModels/components/toolbar/checkboxSelector';\nimport { PrimarySelector } from 'pages/costModels/components/toolbar/primarySelector';\nimport React from 'react';\nimport { Trans, withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { metricsSelectors } from 'store/metrics';\nimport { rbacSelectors } from 'store/rbac';\nimport AddRateModal from './addRateModal';\nimport Dialog from './dialog';\nimport UpdateRateModal from './updateRateModel';\nclass PriceListTable extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            deleteRate: null,\n            index: -1,\n            pagination: {\n                perPage: 10,\n                page: 1,\n            },\n        };\n    }\n    render() {\n        const { t, fetchStatus, fetchError, isDialogOpen, metricsHash, isWritePermission } = this.props;\n        const metricOpts = Object.keys(metricsHash).map(m => ({\n            label: m,\n            value: m,\n        }));\n        const measurementOpts = metricOpts.reduce((acc, curr) => {\n            const measurs = Object.keys(metricsHash[curr.value])\n                .filter(m => !acc.map(i => i.value).includes(m))\n                .map(m => ({ label: m, value: m }));\n            return [...acc, ...measurs];\n        }, []);\n        const rateComponent = React.createElement(\"b\", null, \"dummyChild\");\n        const cm = this.props.costModel;\n        const metric = this.state.deleteRate\n            ? `${this.state.deleteRate.metric.label_metric}-${this.state.deleteRate.metric.label_measurement} (${this.state.deleteRate.metric.label_measurement_unit})`\n            : '';\n        return (React.createElement(React.Fragment, null,\n            React.createElement(AddRateModal, null),\n            React.createElement(UpdateRateModal, { index: this.state.index }),\n            React.createElement(Dialog, { isSmall: true, isOpen: isDialogOpen.deleteRate, title: t('dialog.rate.title'), onClose: () => {\n                    this.props.setDialogOpen({ name: 'deleteRate', isOpen: false });\n                    this.setState({ deleteRate: null });\n                }, isProcessing: this.props.isLoading, onProceed: () => {\n                    const { index } = this.state;\n                    const { current } = this.props;\n                    const newState = Object.assign(Object.assign({}, current), { source_uuids: current.sources.map(provider => provider.uuid), source_type: 'OCP', rates: [...current.rates.slice(0, index), ...current.rates.slice(index + 1)] });\n                    this.props.updateCostModel(current.uuid, newState, 'deleteRate');\n                }, body: React.createElement(React.Fragment, null,\n                    React.createElement(Trans, { i18nKey: \"dialog.rate.body\", components: [rateComponent, rateComponent], values: { metric, cm } }),\n                    this.props.assignees && this.props.assignees.length > 0 && (React.createElement(React.Fragment, null,\n                        t('dialog.rate.assigned'),\n                        React.createElement(List, null, this.props.assignees.map(p => (React.createElement(ListItem, { key: p }, p))))))), actionText: t('dialog.deleteRate') }),\n            React.createElement(WithPriceListSearch, { initialFilters: { primary: 'metrics', metrics: [], measurements: [] } }, ({ search, setSearch, onRemove, onSelect, onClearAll }) => {\n                const from = (this.state.pagination.page - 1) * this.state.pagination.perPage;\n                const to = this.state.pagination.page * this.state.pagination.perPage;\n                const res = this.props.current.rates\n                    .filter(rate => search.metrics.length === 0 || search.metrics.includes(rate.metric.label_metric))\n                    .filter(rate => search.measurements.length === 0 || search.measurements.includes(rate.metric.label_measurement));\n                const filtered = res.slice(from, to);\n                return (React.createElement(React.Fragment, null,\n                    React.createElement(PriceListToolbar, { primary: React.createElement(PrimarySelector, { isDisabled: this.props.current.rates.length === 0, primary: search.primary, setPrimary: (primary) => setSearch({ primary }), options: [\n                                {\n                                    label: t('toolbar.pricelist.metric'),\n                                    value: 'metrics',\n                                },\n                                {\n                                    label: t('toolbar.pricelist.measurement'),\n                                    value: 'measurements',\n                                },\n                            ] }), selected: search.primary, secondaries: [\n                            {\n                                component: (React.createElement(CheckboxSelector, { isDisabled: this.props.current.rates.length === 0, placeholderText: t('toolbar.pricelist.measurement_placeholder'), selections: search.measurements, setSelections: (selection) => onSelect('measurements', selection), options: measurementOpts })),\n                                name: 'measurements',\n                                onRemove,\n                                filters: search.measurements,\n                            },\n                            {\n                                component: (React.createElement(CheckboxSelector, { isDisabled: this.props.current.rates.length === 0, placeholderText: t('toolbar.pricelist.metric_placeholder'), selections: search.metrics, setSelections: (selection) => onSelect('metrics', selection), options: metricOpts })),\n                                name: 'metrics',\n                                onRemove,\n                                filters: search.metrics,\n                            },\n                        ], button: React.createElement(Button, { isDisabled: !isWritePermission, onClick: () => this.props.setDialogOpen({\n                                name: 'addRate',\n                                isOpen: true,\n                            }) }, t('toolbar.pricelist.add_rate')), onClear: onClearAll, pagination: React.createElement(Pagination, { isCompact: true, itemCount: res.length, perPage: this.state.pagination.perPage, page: this.state.pagination.page, onSetPage: (_evt, page) => this.setState({\n                                pagination: Object.assign(Object.assign({}, this.state.pagination), { page }),\n                            }), onPerPageSelect: (_evt, perPage) => this.setState({ pagination: { page: 1, perPage } }) }) }),\n                    fetchStatus !== 2 /* complete */ && React.createElement(LoadingState, null),\n                    fetchStatus === 2 /* complete */ && Boolean(fetchError) && React.createElement(Unavailable, null),\n                    fetchStatus === 2 /* complete */ &&\n                        filtered.length === 0 &&\n                        (search.metrics.length !== 0 || search.measurements.length !== 0) && (React.createElement(EmptyFilterState, { filter: t('cost_models_wizard.price_list.toolbar_top_results_aria_label') })),\n                    fetchStatus === 2 /* complete */ &&\n                        filtered.length === 0 &&\n                        search.measurements.length === 0 &&\n                        search.metrics.length === 0 && (React.createElement(Bullseye, null,\n                        React.createElement(EmptyState, null,\n                            React.createElement(EmptyStateIcon, { icon: FileInvoiceDollarIcon }),\n                            React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('cost_models_details.empty_state_rate.title')),\n                            React.createElement(EmptyStateBody, null, t('cost_models_details.empty_state_rate.description'))))),\n                    fetchStatus === 2 /* complete */ && filtered.length > 0 && (React.createElement(React.Fragment, null,\n                        React.createElement(RateTable, { t: t, tiers: filtered, actions: [\n                                {\n                                    title: t('cost_models_wizard.price_list.update_button'),\n                                    isDisabled: !isWritePermission,\n                                    // HACK: to display tooltip on disable\n                                    style: !isWritePermission ? { pointerEvents: 'auto' } : undefined,\n                                    tooltip: !isWritePermission ? React.createElement(\"div\", null, t('cost_models.read_only_tooltip')) : undefined,\n                                    onClick: (_evt, _rowIndex, rowData) => {\n                                        this.setState({\n                                            deleteRate: null,\n                                            index: rowData.data.index + from,\n                                        });\n                                        this.props.setDialogOpen({\n                                            name: 'updateRate',\n                                            isOpen: true,\n                                        });\n                                    },\n                                },\n                                {\n                                    title: t('cost_models_wizard.price_list.delete_button'),\n                                    isDisabled: !isWritePermission,\n                                    // HACK: to display tooltip on disable\n                                    style: !isWritePermission ? { pointerEvents: 'auto' } : {},\n                                    tooltip: !isWritePermission ? React.createElement(\"div\", null, t('cost_models.read_only_tooltip')) : undefined,\n                                    onClick: (_evt, _rowIndex, rowData) => {\n                                        const rowIndex = rowData.data.index;\n                                        this.setState({\n                                            deleteRate: filtered[rowIndex],\n                                            index: rowIndex + from,\n                                        });\n                                        this.props.setDialogOpen({\n                                            name: 'deleteRate',\n                                            isOpen: true,\n                                        });\n                                    },\n                                },\n                            ] }),\n                        React.createElement(Toolbar, { id: \"price-list-toolbar-bottom\" },\n                            React.createElement(ToolbarContent, null,\n                                React.createElement(ToolbarItem, { variant: ToolbarItemVariant.pagination },\n                                    React.createElement(Pagination, { itemCount: res.length, perPage: this.state.pagination.perPage, page: this.state.pagination.page, onSetPage: (_evt, page) => this.setState({\n                                            pagination: Object.assign(Object.assign({}, this.state.pagination), { page }),\n                                        }), onPerPageSelect: (_evt, perPage) => this.setState({\n                                            pagination: { page: 1, perPage },\n                                        }), variant: \"bottom\" }))))))));\n            })));\n    }\n}\nexport default connect(createMapStateToProps(state => ({\n    isLoading: costModelsSelectors.updateProcessing(state),\n    error: costModelsSelectors.updateError(state),\n    isDialogOpen: costModelsSelectors.isDialogOpen(state)('rate'),\n    fetchError: costModelsSelectors.error(state),\n    fetchStatus: costModelsSelectors.status(state),\n    metricsHash: metricsSelectors.metrics(state),\n    costTypes: metricsSelectors.costTypes(state),\n    isWritePermission: rbacSelectors.isCostModelWritePermission(state),\n})), {\n    updateCostModel: costModelsActions.updateCostModel,\n    setDialogOpen: costModelsActions.setCostModelDialog,\n})(withTranslation()(PriceListTable));\n","import { InputGroup, InputGroupText, Pagination, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarItem, } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst FilterInput = ({ id, placeholder = '', value, onChange, onSearch }) => {\n    return (React.createElement(InputGroup, null,\n        React.createElement(TextInput, { value: value, placeholder: placeholder, id: id, onChange: onChange, onKeyPress: (evt) => {\n                if (evt.key !== 'Enter' || value === '') {\n                    return;\n                }\n                onSearch(evt);\n            } }),\n        React.createElement(InputGroupText, { style: { borderLeft: '0' } },\n            React.createElement(SearchIcon, null))));\n};\nexport const AssignSourcesToolbarBase = ({ t, filterInputProps, paginationProps, filter, }) => {\n    return (React.createElement(Toolbar, { id: \"assign-sources-toolbar\", clearAllFilters: filter.onClearAll },\n        React.createElement(ToolbarContent, null,\n            React.createElement(ToolbarItem, { variant: \"search-filter\" },\n                React.createElement(ToolbarFilter, { deleteChip: filter.onRemove, chips: filter.query.name, categoryName: \"name\" },\n                    React.createElement(FilterInput, Object.assign({ placeholder: t('cost_models_wizard.source_table.filter_placeholder') }, filterInputProps)))),\n            React.createElement(ToolbarItem, { variant: \"pagination\" },\n                React.createElement(Pagination, { isCompact: paginationProps.isCompact, itemCount: paginationProps.itemCount, page: paginationProps.page, perPage: paginationProps.perPage, onSetPage: paginationProps.onSetPage, onPerPageSelect: paginationProps.onPerPageSelect })))));\n};\nexport const AssignSourcesToolbar = withTranslation()(AssignSourcesToolbarBase);\n","import { Pagination, Toolbar, ToolbarContent, ToolbarItem } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { EmptyFilterState } from 'components/state/emptyFilterState/emptyFilterState';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport { SourcesModalErrorState } from 'pages/costModels/components/errorState';\nimport { addMultiValueQuery, removeMultiValueQuery } from 'pages/costModels/components/filterLogic';\nimport { WarningIcon } from 'pages/costModels/components/warningIcon';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { sourcesActions, sourcesSelectors } from 'store/sourceSettings';\nimport { AssignSourcesToolbar } from './assignSourcesModalToolbar';\nclass AddSourcesStep extends React.Component {\n    render() {\n        const { costModel } = this.props;\n        if (this.props.isLoadingSources) {\n            return React.createElement(LoadingState, null);\n        }\n        if (this.props.fetchingSourcesError) {\n            return React.createElement(SourcesModalErrorState, null);\n        }\n        const onSelect = (_evt, isSelected, rowId) => {\n            if (rowId === -1) {\n                const newState = this.props.providers.reduce((acc, cur) => {\n                    const selected = this.props.checked[cur.uuid] ? this.props.checked[cur.uuid].selected : false;\n                    const disabled = cur.cost_models.length > 0;\n                    return Object.assign(Object.assign({}, acc), { [cur.uuid]: { selected: disabled ? selected : isSelected, meta: cur } });\n                }, {});\n                this.props.setState(newState);\n                return;\n            }\n            this.props.setState(Object.assign(Object.assign({}, this.props.checked), { [this.props.providers[rowId].uuid]: {\n                    selected: isSelected,\n                    meta: this.props.providers[rowId],\n                } }));\n        };\n        const sources = this.props.providers.map(providerData => {\n            const isSelected = this.props.checked[providerData.uuid] ? this.props.checked[providerData.uuid].selected : false;\n            const provCostModels = providerData.cost_models === undefined\n                ? this.props.t('cost_models_wizard.source_table.default_cost_model')\n                : providerData.cost_models.map(cm => cm.name).join(',');\n            const warningIcon = providerData.cost_models.length &&\n                providerData.cost_models.find(cm => cm.name === costModel.name) === undefined ? (React.createElement(WarningIcon, { key: providerData.uuid, text: this.props.t('cost_models_wizard.warning_source', {\n                    cost_model: provCostModels,\n                }) })) : null;\n            const cellName = (React.createElement(\"div\", { key: providerData.uuid },\n                providerData.name,\n                \" \",\n                warningIcon));\n            return {\n                cells: [cellName, provCostModels || ''],\n                selected: isSelected,\n                disableSelection: providerData.cost_models.length > 0,\n            };\n        });\n        const sourceTypeMap = {\n            'OpenShift Container Platform': 'OCP',\n            'Microsoft Azure': 'AZURE',\n            'Amazon Web Services': 'AWS',\n        };\n        const source_type = sourceTypeMap[costModel.source_type];\n        return (React.createElement(React.Fragment, null,\n            React.createElement(AssignSourcesToolbar, { filter: {\n                    onClearAll: () => this.props.fetch(`source_type=${source_type}&limit=${this.props.pagination.perPage}`),\n                    onRemove: (category, chip) => {\n                        const newQuery = removeMultiValueQuery({\n                            name: this.props.query.name ? this.props.query.name.split(',') : [],\n                        })(category, chip);\n                        this.props.fetch(`source_type=${source_type}${newQuery.name ? `&name=${newQuery.name.join(',')}` : ''}&offset=0&limit=${this.props.pagination.perPage}`);\n                    },\n                    query: {\n                        name: this.props.query.name ? this.props.query.name.split(',') : [],\n                    },\n                }, filterInputProps: {\n                    id: 'assign-sources-modal-toolbar',\n                    onChange: value => this.props.updateFilter({\n                        currentFilterType: 'name',\n                        currentFilterValue: value,\n                    }),\n                    value: this.props.currentFilter.value,\n                    onSearch: () => {\n                        const curQuery = this.props.query.name ? this.props.query.name.split(',') : [];\n                        const newQuery = addMultiValueQuery({ name: curQuery })('name', this.props.currentFilter.value);\n                        this.props.fetch(`source_type=${source_type}&name=${newQuery.name.join(',')}&limit=${this.props.pagination.perPage}&offset=0`);\n                    },\n                }, paginationProps: {\n                    isCompact: true,\n                    itemCount: this.props.pagination.count,\n                    perPage: this.props.pagination.perPage,\n                    page: this.props.pagination.page,\n                    onPerPageSelect: (_evt, newPerPage) => {\n                        this.props.fetch(`source_type=${source_type}&limit=${newPerPage}&offset=0&${this.props.query.name ? `name=${this.props.query.name}` : ''}`);\n                    },\n                    onSetPage: (_evt, newPage) => {\n                        this.props.fetch(`source_type=${source_type}&limit=${this.props.pagination.perPage}&offset=${this.props.pagination.perPage * (newPage - 1)}&${this.props.query.name ? `name=${this.props.query.name}` : ''}`);\n                    },\n                } }),\n            sources.length > 0 && (React.createElement(Table, { \"aria-label\": this.props.t('cost_models_details.add_source'), cells: [this.props.t('name'), this.props.t('cost_models_wizard.source_table.column_cost_model')], rows: sources, onSelect: onSelect },\n                React.createElement(TableHeader, null),\n                React.createElement(TableBody, null))),\n            sources.length === 0 && React.createElement(EmptyFilterState, { subTitle: this.props.t('no_match_found_state.desc') }),\n            React.createElement(Toolbar, { id: \"costmodels_details.sources_pagination_datatoolbar\" },\n                React.createElement(ToolbarContent, { style: { flexDirection: 'row-reverse' }, \"aria-label\": this.props.t('cost_models_details.sources_pagination_bottom') },\n                    React.createElement(ToolbarItem, { variant: \"pagination\" },\n                        React.createElement(Pagination, { itemCount: this.props.pagination.count, isDisabled: this.props.isLoadingSources, perPage: this.props.pagination.perPage, page: this.props.pagination.page, onPerPageSelect: (_evt, newPerPage) => {\n                                this.props.fetch(`limit=${newPerPage}&offset=0&${this.props.query.name ? `name=${this.props.query.name}` : ''}`);\n                            }, onSetPage: (_evt, newPage) => {\n                                this.props.fetch(`limit=${this.props.pagination.perPage}&offset=${this.props.pagination.perPage * (newPage - 1)}&${this.props.query.name ? `name=${this.props.query.name}` : ''}`);\n                            } }))))));\n    }\n}\nexport default connect(createMapStateToProps(state => {\n    return {\n        currentFilter: {\n            name: sourcesSelectors.currentFilterType(state),\n            value: sourcesSelectors.currentFilterValue(state),\n        },\n    };\n}), {\n    updateFilter: sourcesActions.updateFilterToolbar,\n})(withTranslation()(AddSourcesStep));\n","import { Alert, Button, Grid, GridItem, Modal, Stack, StackItem, Text, TextContent, TextVariants, } from '@patternfly/react-core';\nimport { parseApiError } from 'pages/costModels/createCostModelWizard/parseError';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsSelectors } from 'store/costModels';\nimport { sourcesActions, sourcesSelectors } from 'store/sourceSettings';\nimport AddSourceStep from './addSourceStep';\nconst sourceTypeMap = {\n    'OpenShift Container Platform': 'OCP',\n    'Microsoft Azure': 'AZURE',\n    'Amazon Web Services': 'AWS',\n};\nclass AddSourceWizardBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = { checked: {} };\n    }\n    componentDidMount() {\n        const { costModel: { source_type }, fetch, } = this.props;\n        const sourceType = sourceTypeMap[source_type];\n        fetch(`type=${sourceType}&limit=10&offset=0`);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.isLoadingSources === true && this.props.isLoadingSources === false) {\n            const initChecked = this.props.providers.reduce((acc, curr) => {\n                return Object.assign(Object.assign({}, acc), { [curr.uuid]: {\n                        selected: this.props.costModel.sources.some(p => p.uuid === curr.uuid),\n                        meta: curr,\n                    } });\n            }, {});\n            this.setState({ checked: initChecked });\n        }\n    }\n    render() {\n        const { isUpdateInProgress, onClose, isOpen, onSave, t, costModel, updateApiError } = this.props;\n        return (React.createElement(Modal, { isOpen: isOpen, title: t('cost_models_details.assign_sources'), onClose: onClose, variant: \"large\", actions: [\n                React.createElement(Button, { key: \"save\", isDisabled: isUpdateInProgress || this.props.isLoadingSources || this.props.fetchingSourcesError !== null, onClick: () => {\n                        onSave(Object.keys(this.state.checked).filter(uuid => this.state.checked[uuid].selected));\n                    } }, t('cost_models_details.action_assign')),\n                React.createElement(Button, { key: \"cancel\", variant: \"link\", isDisabled: isUpdateInProgress, onClick: onClose }, t('cost_models_wizard.cancel_button')),\n            ] },\n            React.createElement(Stack, null,\n                React.createElement(StackItem, null, Boolean(updateApiError) && React.createElement(Alert, { variant: \"danger\", title: `${updateApiError}` })),\n                React.createElement(StackItem, null,\n                    React.createElement(Grid, null,\n                        React.createElement(GridItem, { span: 2 },\n                            React.createElement(TextContent, null,\n                                React.createElement(Text, { component: TextVariants.h6 }, t('name')))),\n                        React.createElement(GridItem, { span: 10 },\n                            React.createElement(TextContent, null,\n                                React.createElement(Text, { component: TextVariants.p }, this.props.costModel.name))),\n                        React.createElement(GridItem, { span: 2 },\n                            React.createElement(TextContent, null,\n                                React.createElement(Text, { component: TextVariants.h6 }, t('cost_models_wizard.general_info.source_type_label')))),\n                        React.createElement(GridItem, { span: 10 },\n                            React.createElement(TextContent, null,\n                                React.createElement(Text, { component: TextVariants.p }, this.props.costModel.source_type))))),\n                React.createElement(StackItem, null,\n                    React.createElement(AddSourceStep, { fetch: this.props.fetch, fetchingSourcesError: this.props.fetchingSourcesError, isLoadingSources: this.props.isLoadingSources, providers: this.props.providers, pagination: this.props.pagination, query: this.props.query, costModel: costModel, checked: this.state.checked, setState: newState => {\n                            this.setState({ checked: newState });\n                        } })))));\n    }\n}\nexport default connect(createMapStateToProps(state => {\n    return {\n        pagination: sourcesSelectors.pagination(state),\n        query: sourcesSelectors.query(state),\n        providers: sourcesSelectors.sources(state),\n        isLoadingSources: sourcesSelectors.status(state) === 1 /* inProgress */,\n        isUpdateInProgress: costModelsSelectors.updateProcessing(state),\n        updateApiError: costModelsSelectors.updateError(state),\n        fetchingSourcesError: sourcesSelectors.error(state) ? parseApiError(sourcesSelectors.error(state)) : null,\n    };\n}), {\n    fetch: sourcesActions.fetchSources,\n})(withTranslation()(AddSourceWizardBase));\n","import { TableTemplate } from 'pages/costModels/components/tableTemplate';\nimport { connect } from 'react-redux';\nimport { costModelsSelectors } from 'store/costModels';\nimport { rbacSelectors } from 'store/rbac';\nconst genActions = (canWrite, showDeleteDialog) => {\n    if (canWrite) {\n        return [\n            {\n                title: 'cost_models_details.action_unassign',\n                onClick: (_evt, rowIndex) => showDeleteDialog(rowIndex),\n            },\n        ];\n    }\n    return [\n        {\n            style: { pointerEvents: 'auto' },\n            tooltip: 'cost_models.read_only_tooltip',\n            isDisabled: true,\n            title: 'cost_models_details.action_unassign',\n        },\n    ];\n};\nconst SourcesTable = connect((state) => {\n    return {\n        canWrite: rbacSelectors.isCostModelWritePermission(state),\n        costModels: costModelsSelectors.costModels(state),\n    };\n}, undefined, (stateProps, _, ownProps) => {\n    const actions = genActions(stateProps.canWrite, ownProps.showDeleteDialog);\n    const rows = stateProps.costModels.length > 0 ? stateProps.costModels[0].sources.map(source => [source.name]) : [];\n    return {\n        'aria-label': 'sources-table',\n        cells: ['name'],\n        rows,\n        actions,\n    };\n})(TableTemplate);\nexport default SourcesTable;\n","import { Button, InputGroup, InputGroupText, Pagination, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarItem, } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport { ReadOnlyTooltip } from 'pages/costModels/components/readOnlyTooltip';\nimport React from 'react';\nconst FilterInput = ({ id, placeholder = '', value, onChange, onSearch }) => {\n    return (React.createElement(InputGroup, null,\n        React.createElement(TextInput, { value: value, placeholder: placeholder, id: id, onChange: onChange, onKeyPress: (evt) => {\n                if (evt.key !== 'Enter' || value === '') {\n                    return;\n                }\n                onSearch(evt);\n            } }),\n        React.createElement(InputGroupText, { style: { borderLeft: '0' } },\n            React.createElement(SearchIcon, null))));\n};\nexport const SourcesToolbar = ({ filterInputProps, paginationProps, filter, actionButtonProps, }) => {\n    return (React.createElement(Toolbar, { id: \"assign-sources-toolbar\", clearAllFilters: filter.onClearAll },\n        React.createElement(ToolbarContent, null,\n            React.createElement(ToolbarItem, { variant: \"search-filter\" },\n                React.createElement(ToolbarFilter, { deleteChip: filter.onRemove, chips: filter.query.name, categoryName: filter.categoryNames.name },\n                    React.createElement(FilterInput, Object.assign({}, filterInputProps)))),\n            React.createElement(ToolbarItem, null,\n                React.createElement(ReadOnlyTooltip, { isDisabled: actionButtonProps.isDisabled },\n                    React.createElement(Button, Object.assign({}, actionButtonProps)))),\n            React.createElement(ToolbarItem, { variant: \"pagination\" },\n                React.createElement(Pagination, { isCompact: paginationProps.isCompact, itemCount: paginationProps.itemCount, page: paginationProps.page, perPage: paginationProps.perPage, onSetPage: paginationProps.onSetPage, onPerPageSelect: paginationProps.onPerPageSelect })))));\n};\n","export const styles = {\n    emptyState: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n    },\n};\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, Title } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons/dist/js/icons/dollar-sign-icon';\nimport { EmptyFilterState } from 'components/state/emptyFilterState/emptyFilterState';\nimport { addMultiValueQuery, removeMultiValueQuery } from 'pages/costModels/components/filterLogic';\nimport { PaginationToolbarTemplate } from 'pages/costModels/components/paginationToolbarTemplate';\nimport SourcesTable from 'pages/costModels/costModel/sourcesTable';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { rbacSelectors } from 'store/rbac';\nimport { SourcesToolbar } from './sourcesToolbar';\nimport { styles } from './table.styles';\nclass TableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            query: { name: [] },\n            currentFilter: '',\n            pagination: { page: 1, perPage: 10 },\n        };\n    }\n    render() {\n        const { pagination: { page, perPage }, } = this.state;\n        const { onAdd, t, rows, isWritePermission } = this.props;\n        const filteredRows = rows\n            .filter(uuid => {\n            if (!this.state.query.name) {\n                return true;\n            }\n            return this.state.query.name.every(fName => uuid.includes(fName));\n        })\n            .map(uuid => [uuid]);\n        const res = filteredRows.slice((page - 1) * perPage, page * perPage);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(SourcesToolbar, { actionButtonProps: {\n                    isDisabled: !isWritePermission,\n                    onClick: onAdd,\n                    children: t('toolbar.sources.assign_sources'),\n                }, filter: {\n                    onClearAll: () => this.setState({\n                        pagination: Object.assign(Object.assign({}, this.state.pagination), { page: 1 }),\n                        query: { name: [] },\n                    }),\n                    onRemove: (_category, chip) => {\n                        this.setState({\n                            pagination: Object.assign(Object.assign({}, this.state.pagination), { page: 1 }),\n                            query: removeMultiValueQuery(this.state.query)('name', chip),\n                        });\n                    },\n                    query: this.state.query,\n                    categoryNames: { name: t('name') },\n                }, paginationProps: {\n                    isCompact: true,\n                    itemCount: filteredRows.length,\n                    perPage,\n                    page,\n                    onSetPage: (_evt, newPage) => this.setState({\n                        pagination: Object.assign(Object.assign({}, this.state.pagination), { page: newPage }),\n                    }),\n                    onPerPageSelect: (_evt, newPerPage) => this.setState({\n                        pagination: { page: 1, perPage: newPerPage },\n                    }),\n                }, filterInputProps: {\n                    id: 'sources-tab-toolbar',\n                    onChange: (value) => this.setState({\n                        currentFilter: value,\n                    }),\n                    onSearch: () => {\n                        this.setState({\n                            query: addMultiValueQuery(this.state.query)('name', this.state.currentFilter),\n                            currentFilter: '',\n                            pagination: Object.assign(Object.assign({}, this.state.pagination), { page: 1 }),\n                        });\n                    },\n                    value: this.state.currentFilter,\n                    placeholder: t('toolbar.sources.filter_placeholder'),\n                } }),\n            res.length > 0 && (React.createElement(SourcesTable, { showDeleteDialog: (rowId) => {\n                    this.props.onDelete(res[rowId]);\n                } })),\n            rows.length === 0 && (React.createElement(\"div\", { style: styles.emptyState },\n                React.createElement(EmptyState, null,\n                    React.createElement(EmptyStateIcon, { icon: DollarSignIcon }),\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('cost_models_details.empty_state_source.title')),\n                    React.createElement(EmptyStateBody, null, t('cost_models_details.empty_state_source.description'))))),\n            filteredRows.length === 0 && rows.length > 0 && (React.createElement(EmptyFilterState, { filter: this.state.currentFilter, subTitle: t('no_match_found_state.desc') })),\n            React.createElement(PaginationToolbarTemplate, { id: \"costmodels_details_filter_datatoolbar\", \"aria-label\": \"cost_models_details.sources_filter_controller\", variant: \"bottom\", itemCount: filteredRows.length, perPage: perPage, page: page, onSetPage: (_evt, newPage) => this.setState({\n                    pagination: Object.assign(Object.assign({}, this.state.pagination), { page: newPage }),\n                }), onPerPageSelect: (_evt, newPerPage) => this.setState({\n                    pagination: { page: 1, perPage: newPerPage },\n                }) })));\n    }\n}\nexport default connect(createMapStateToProps(state => ({\n    isWritePermission: rbacSelectors.isCostModelWritePermission(state),\n})))(withTranslation()(TableBase));\n","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport AddSourceWizard from './addSourceWizard';\nimport Dialog from './dialog';\nimport Table from './table';\nclass SourceTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = { dialogSource: null };\n    }\n    render() {\n        const { setDialogOpen, isLoading, sources, costModel, t, isDialogOpen } = this.props;\n        return (React.createElement(React.Fragment, null,\n            isDialogOpen.addSource && (React.createElement(AddSourceWizard, { costModel: costModel, isOpen: true, onClose: () => setDialogOpen({ name: 'addSource', isOpen: false }), onSave: (source_uuids) => {\n                    this.props.updateCostModel(costModel.uuid, Object.assign(Object.assign({}, costModel), { source_type: costModel.source_type === 'OpenShift Container Platform' ? 'OCP' : 'AWS', source_uuids }), 'addSource');\n                } })),\n            React.createElement(Dialog, { isSmall: true, isOpen: isDialogOpen.deleteSource, title: t('dialog.delete_source_from_cost_model_title', {\n                    source: this.state.dialogSource,\n                    cost_model: costModel.name,\n                }), onClose: () => {\n                    setDialogOpen({ name: 'deleteSource', isOpen: false });\n                    this.setState({ dialogSource: null });\n                }, isProcessing: isLoading, onProceed: () => {\n                    const newState = Object.assign(Object.assign({}, costModel), { source_type: costModel.source_type === 'OpenShift Container Platform' ? 'OCP' : 'AWS', source_uuids: sources\n                            .filter(provider => provider.name !== this.state.dialogSource)\n                            .map(provider => provider.uuid) });\n                    this.props.updateCostModel(costModel.uuid, newState, 'deleteSource');\n                }, body: t('dialog.delete_source_from_cost_model_body', {\n                    source: this.state.dialogSource,\n                    cost_model: costModel.name,\n                }), actionText: t('dialog.deleteSource') }),\n            React.createElement(Table, { onDeleteText: t('cost_models_details.action_unassign'), onDelete: item => {\n                    this.setState({ dialogSource: item[0] });\n                    setDialogOpen({ name: 'deleteSource', isOpen: true });\n                }, onAdd: () => setDialogOpen({ name: 'addSource', isOpen: true }), rows: sources.map(p => p.name) })));\n    }\n}\nexport default connect(createMapStateToProps(state => ({\n    isLoading: costModelsSelectors.updateProcessing(state),\n    isDialogOpen: costModelsSelectors.isDialogOpen(state)('sources'),\n})), {\n    setDialogOpen: costModelsActions.setCostModelDialog,\n    updateCostModel: costModelsActions.updateCostModel,\n})(withTranslation()(SourceTableBase));\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    headerDescription: {\n        width: '97%',\n        wordWrap: 'break-word',\n    },\n    content: {\n        paddingTop: global_spacer_lg.value,\n        height: '182vh',\n    },\n    costmodelsContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    headerCostModel: {\n        padding: global_spacer_lg.var,\n        paddingBottom: 0,\n        backgroundColor: global_BackgroundColor_light_100.value,\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    headerDescription: {\n        width: '97%',\n        wordWrap: 'break-word',\n    },\n    content: {\n        paddingTop: global_spacer_lg.value,\n        height: '182vh',\n    },\n    costmodelsContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n        paddingLeft: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    paginationContainer: {\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n        paddingLeft: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n        marginBottom: global_spacer_lg.value,\n        backgroundColor: global_BackgroundColor_light_100.value,\n    },\n    toolbarContainer: {\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n        backgroundColor: global_BackgroundColor_light_100.value,\n    },\n    header: {\n        padding: global_spacer_lg.var,\n        backgroundColor: global_BackgroundColor_light_100.var,\n    },\n    headerCostModel: {\n        padding: global_spacer_lg.value,\n        paddingBottom: 0,\n        backgroundColor: global_BackgroundColor_light_100.var,\n    },\n    breadcrumb: {\n        paddingBottom: global_spacer_md.var,\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n    sourceTypeTitle: {\n        paddingBottom: global_spacer_md.var,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Alert, Button, Form, FormGroup, Modal, TextArea, TextInput } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nclass UpdateCostModelBase extends React.Component {\n    constructor(props) {\n        super(props);\n        const current = this.props.costModel[0];\n        this.state = {\n            name: current.name,\n            description: current.description,\n        };\n    }\n    render() {\n        const { updateCostModel, updateError, costModel, isProcessing, setDialogOpen, t } = this.props;\n        const current = costModel[0];\n        return (React.createElement(Modal, { title: t('cost_models_details.edit_cost_model'), isOpen: true, onClose: () => setDialogOpen({ name: 'updateCostModel', isOpen: false }), variant: \"small\", actions: [\n                React.createElement(Button, { key: \"proceed\", variant: \"primary\", onClick: () => {\n                        const { uuid, sources } = current, previous = __rest(current, [\"uuid\", \"sources\"]);\n                        updateCostModel(uuid, Object.assign(Object.assign({}, previous), { source_uuids: sources.map(provider => provider.uuid), name: this.state.name, description: this.state.description, source_type: current.source_type === 'OpenShift Container Platform' ? 'OCP' : 'AWS' }), 'updateCostModel');\n                    }, isDisabled: isProcessing || (this.state.name === current.name && this.state.description === current.description) }, t('cost_models_details.save_button')),\n                React.createElement(Button, { key: \"cancel\", variant: \"secondary\", onClick: () => setDialogOpen({ name: 'updateCostModel', isOpen: false }), isDisabled: isProcessing }, t('dialog.cancel')),\n            ] },\n            React.createElement(React.Fragment, null,\n                updateError && React.createElement(Alert, { variant: \"danger\", title: `${updateError}` }),\n                React.createElement(Form, null,\n                    React.createElement(FormGroup, { label: t('name'), isRequired: true, fieldId: \"name\" },\n                        React.createElement(TextInput, { isRequired: true, type: \"text\", id: \"name\", name: \"name\", value: this.state.name, onChange: value => this.setState({ name: value }) })),\n                    React.createElement(FormGroup, { label: t('description'), fieldId: \"description\" },\n                        React.createElement(TextArea, { type: \"text\", id: \"description\", name: \"description\", value: this.state.description, onChange: value => this.setState({ description: value }) }))))));\n    }\n}\nconst UpdateCostModelModal = withTranslation()(connect(createMapStateToProps(state => ({\n    costModel: costModelsSelectors.costModels(state),\n    isProcessing: costModelsSelectors.updateProcessing(state),\n    updateError: costModelsSelectors.updateError(state),\n})), {\n    setDialogOpen: costModelsActions.setCostModelDialog,\n    updateCostModel: costModelsActions.updateCostModel,\n})(UpdateCostModelBase));\nexport default UpdateCostModelModal;\n","import { Breadcrumb, BreadcrumbItem, Dropdown, DropdownItem, KebabToggle, List, ListItem, Split, SplitItem, Tab, Tabs, TabTitleText, Title, } from '@patternfly/react-core';\nimport { ReadOnlyTooltip } from 'pages/costModels/components/readOnlyTooltip';\nimport { styles } from 'pages/costModels/costModel/costModelsDetails.styles';\nimport Dialog from 'pages/costModels/costModel/dialog';\nimport UpdateCostModelModal from 'pages/costModels/costModel/updateCostModel';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { paths } from 'routes';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { rbacSelectors } from 'store/rbac';\nimport { getBaseName } from 'utils/getBaseName';\nconst Header = ({ t, tabRefs, tabIndex, onSelectTab, setDialogOpen, isDialogOpen, deleteError, isDeleteProcessing, deleteCostModel, current, isWritePermission, historyObject, }) => {\n    const [dropdownIsOpen, setDropdownIsOpen] = React.useState(false);\n    const baseName = getBaseName(window.location.pathname);\n    return (React.createElement(React.Fragment, null,\n        isDialogOpen.updateCostModel && React.createElement(UpdateCostModelModal, null),\n        React.createElement(Dialog, { isSmall: true, isOpen: isDialogOpen.deleteCostModel, title: t('dialog.delete_cost_model_title'), onClose: () => setDialogOpen({ name: 'deleteCostModel', isOpen: false }), error: deleteError, isProcessing: isDeleteProcessing, onProceed: () => {\n                deleteCostModel(current.uuid, 'deleteCostModel', historyObject);\n            }, body: React.createElement(React.Fragment, null,\n                current.sources.length === 0 &&\n                    t('dialog.delete_cost_model_body_green', {\n                        cost_model: current.name,\n                    }),\n                current.sources.length > 0 && (React.createElement(React.Fragment, null,\n                    t('dialog.delete_cost_model_body_red', {\n                        cost_model: current.name,\n                    }),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"br\", null),\n                    t('dialog.delete_cost_model_body_red_costmodel_delete'),\n                    React.createElement(\"br\", null),\n                    React.createElement(List, null, current.sources.map(provider => (React.createElement(ListItem, { key: `${provider.uuid}` }, provider.name))))))), actionText: current.sources.length === 0 ? t('dialog.deleteCostModel') : '' }),\n        React.createElement(\"header\", { style: styles.headerCostModel },\n            React.createElement(Breadcrumb, { style: styles.breadcrumb },\n                React.createElement(BreadcrumbItem, { to: `${baseName}${paths.costModels}` }, t('cost_models_details.cost_model.cost_models')),\n                React.createElement(BreadcrumbItem, { isActive: true }, current.name)),\n            React.createElement(Split, null,\n                React.createElement(SplitItem, { style: styles.headerDescription },\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"2xl\" }, current.name),\n                    current.description && (React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"md\" }, current.description)),\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.sourceTypeTitle, size: \"md\" },\n                        t('cost_models_details.cost_model.source_type'),\n                        \": \",\n                        current.source_type),\n                    current.source_type === 'OpenShift Container Platform' ? (React.createElement(Tabs, { activeKey: tabIndex, onSelect: (_evt, index) => onSelectTab(index) },\n                        React.createElement(Tab, { eventKey: 0, title: React.createElement(TabTitleText, null, \"Price list\"), tabContentId: \"refPriceList\", tabContentRef: tabRefs[0] }),\n                        React.createElement(Tab, { eventKey: 1, title: React.createElement(TabTitleText, null, \"Markup\"), tabContentId: \"refMarkup\", tabContentRef: tabRefs[1] }),\n                        React.createElement(Tab, { eventKey: 2, title: React.createElement(TabTitleText, null, \"Sources\"), tabContentId: \"refSources\", tabContentRef: tabRefs[2] }))) : (React.createElement(Tabs, { activeKey: tabIndex, onSelect: (_evt, index) => onSelectTab(index) },\n                        React.createElement(Tab, { eventKey: 0, title: React.createElement(TabTitleText, null, \"Markup\"), tabContentId: \"refMarkup\", tabContentRef: tabRefs[0] }),\n                        React.createElement(Tab, { eventKey: 1, title: React.createElement(TabTitleText, null, \"Sources\"), tabContentId: \"refSources\", tabContentRef: tabRefs[1] })))),\n                React.createElement(SplitItem, null,\n                    React.createElement(Dropdown, { toggle: React.createElement(KebabToggle, { onToggle: setDropdownIsOpen }), isOpen: dropdownIsOpen, onSelect: () => setDropdownIsOpen(false), isPlain: true, position: \"right\", dropdownItems: [\n                            React.createElement(ReadOnlyTooltip, { key: \"edit\", isDisabled: !isWritePermission },\n                                React.createElement(DropdownItem, { isDisabled: !isWritePermission, onClick: () => setDialogOpen({\n                                        isOpen: true,\n                                        name: 'updateCostModel',\n                                    }) }, t('cost_models_details.action_edit'))),\n                            React.createElement(ReadOnlyTooltip, { key: \"delete\", isDisabled: !isWritePermission },\n                                React.createElement(DropdownItem, { isDisabled: !isWritePermission, onClick: () => setDialogOpen({\n                                        isOpen: true,\n                                        name: 'deleteCostModel',\n                                    }) }, t('cost_models_details.action_delete'))),\n                        ] }))))));\n};\nexport default connect(createMapStateToProps(state => ({\n    isDialogOpen: costModelsSelectors.isDialogOpen(state)('costmodel'),\n    isDeleteProcessing: costModelsSelectors.deleteProcessing(state),\n    deleteError: costModelsSelectors.deleteError(state),\n    isWritePermission: rbacSelectors.isCostModelWritePermission(state),\n})), {\n    setDialogOpen: costModelsActions.setCostModelDialog,\n    deleteCostModel: costModelsActions.deleteCostModel,\n})(withTranslation()(Header));\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, TabContent, Title } from '@patternfly/react-core';\nimport { ErrorCircleOIcon } from '@patternfly/react-icons/dist/js/icons/error-circle-o-icon';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport MarkupCard from 'pages/costModels/costModel/markup';\nimport PriceListTable from 'pages/costModels/costModel/priceListTable';\nimport SourceTable from 'pages/costModels/costModel/sourceTable';\nimport { parseApiError } from 'pages/costModels/createCostModelWizard/parseError';\nimport Loading from 'pages/state/loading';\nimport NotAvailable from 'pages/state/notAvailable';\nimport React from 'react';\nimport { Translation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { metricsActions, metricsSelectors } from 'store/metrics';\nimport { rbacActions, rbacSelectors } from 'store/rbac';\nimport { styles } from './costModelInfo.styles';\nimport Header from './header';\nclass CostModelInformation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.tabRefs = [React.createRef(), React.createRef(), React.createRef()];\n        this.state = { tabIndex: 0 };\n    }\n    componentDidMount() {\n        this.props.fetchRbac();\n        this.props.fetchMetrics();\n        this.props.fetchCostModels(`uuid=${this.props.match.params.uuid}`);\n    }\n    render() {\n        const { costModels, metricsStatus, rbacStatus, costModelStatus, rbacError, costModelError, metricsError, } = this.props;\n        if (metricsStatus !== 2 /* complete */ ||\n            rbacStatus !== 2 /* complete */ ||\n            costModelStatus !== 2 /* complete */) {\n            return React.createElement(Translation, null, t => React.createElement(Loading, { title: t('cost_models_details.header.title') }));\n        }\n        const fetchError = metricsError || rbacError || costModelError;\n        if (fetchError) {\n            if (costModelError !== null) {\n                const costModelErrMessage = parseApiError(costModelError);\n                if (costModelErrMessage === 'detail: Invalid provider uuid') {\n                    return (React.createElement(Translation, null, t => {\n                        return (React.createElement(React.Fragment, null,\n                            React.createElement(PageHeader, null,\n                                React.createElement(PageHeaderTitle, { title: t('cost_models_details.header.title') })),\n                            React.createElement(Main, null,\n                                React.createElement(EmptyState, null,\n                                    React.createElement(EmptyStateIcon, { icon: ErrorCircleOIcon }),\n                                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('cost_models_details.empty_state_bad_uuid.title')),\n                                    React.createElement(EmptyStateBody, null, t('cost_models_details.empty_state_bad_uuid.description', {\n                                        uuid: this.props.match.params.uuid,\n                                    }))))));\n                    }));\n                }\n            }\n            return React.createElement(Translation, null, t => React.createElement(NotAvailable, { title: t('cost_models_details.header.title') }));\n        }\n        const current = costModels[0];\n        const sources = current.sources;\n        return (React.createElement(\"div\", null,\n            React.createElement(Header, { historyObject: this.props.history, current: current, tabRefs: this.tabRefs, tabIndex: this.state.tabIndex, onSelectTab: tabIndex => this.setState({ tabIndex }) }),\n            React.createElement(\"div\", { style: styles.content }, current.source_type === 'OpenShift Container Platform' ? (React.createElement(React.Fragment, null,\n                React.createElement(TabContent, { eventKey: 0, id: \"refPriceList\", ref: this.tabRefs[0], hidden: this.state.tabIndex !== 0 },\n                    React.createElement(\"div\", { style: styles.costmodelsContainer },\n                        React.createElement(PriceListTable, { costModel: current.name, assignees: sources.map(p => p.name), current: current }))),\n                React.createElement(TabContent, { eventKey: 1, id: \"refMarkup\", ref: this.tabRefs[1], hidden: this.state.tabIndex !== 1 },\n                    React.createElement(MarkupCard, { current: current })),\n                React.createElement(TabContent, { eventKey: 2, id: \"refSources\", ref: this.tabRefs[2], hidden: this.state.tabIndex !== 2 },\n                    React.createElement(\"div\", { style: styles.costmodelsContainer },\n                        React.createElement(SourceTable, { costModel: current, sources: sources }))))) : (React.createElement(React.Fragment, null,\n                React.createElement(TabContent, { eventKey: 0, id: \"refMarkup\", ref: this.tabRefs[0], hidden: this.state.tabIndex !== 0 },\n                    React.createElement(MarkupCard, { current: current })),\n                React.createElement(TabContent, { eventKey: 1, id: \"refSources\", ref: this.tabRefs[1], hidden: this.state.tabIndex !== 1 },\n                    React.createElement(\"div\", { style: styles.costmodelsContainer },\n                        React.createElement(SourceTable, { costModel: current, sources: sources }))))))));\n    }\n}\nexport default connect(createMapStateToProps(store => {\n    return {\n        costModels: costModelsSelectors.costModels(store),\n        costModelError: costModelsSelectors.error(store),\n        costModelStatus: costModelsSelectors.status(store),\n        metricsHash: metricsSelectors.metrics(store),\n        maxRate: metricsSelectors.maxRate(store),\n        costTypes: metricsSelectors.costTypes(store),\n        metricsError: metricsSelectors.metricsState(store).error,\n        metricsStatus: metricsSelectors.status(store),\n        rbacError: rbacSelectors.selectRbacState(store).error,\n        rbacStatus: rbacSelectors.selectRbacState(store).status,\n    };\n}), {\n    fetchMetrics: metricsActions.fetchMetrics,\n    fetchRbac: rbacActions.fetchRbac,\n    fetchCostModels: costModelsActions.fetchCostModels,\n})(CostModelInformation);\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nconst Loading = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(LoadingState, null))));\n};\nexport default withRouter(Loading);\n","import Loading from './loading';\nexport default Loading;\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Unavailable from '@redhat-cloud-services/frontend-components/Unavailable';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nconst NotAvailable = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(Unavailable, null))));\n};\nexport default withRouter(NotAvailable);\n","import NotAvailable from './notAvailable';\nexport default NotAvailable;\n"],"sourceRoot":""}