{"version":3,"file":"3e4efbb4e52af0b7b767.bundle.js","mappings":"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","sources":["webpack://koku-ui/./src/api/api.ts","webpack://koku-ui/./src/api/costModels.ts","webpack://koku-ui/./src/api/providers.ts","webpack://koku-ui/./src/api/queries/awsQuery.ts","webpack://koku-ui/./src/api/queries/azureQuery.ts","webpack://koku-ui/./src/api/queries/gcpQuery.ts","webpack://koku-ui/./src/api/queries/ibmQuery.ts","webpack://koku-ui/./src/api/queries/ociQuery.ts","webpack://koku-ui/./src/api/queries/ocpCloudQuery.ts","webpack://koku-ui/./src/api/queries/ocpQuery.ts","webpack://koku-ui/./src/api/queries/query.ts","webpack://koku-ui/./src/api/reports/awsOcpReports.ts","webpack://koku-ui/./src/api/reports/awsReports.ts","webpack://koku-ui/./src/api/reports/azureOcpReports.ts","webpack://koku-ui/./src/api/reports/azureReports.ts","webpack://koku-ui/./src/api/reports/gcpOcpReports.ts","webpack://koku-ui/./src/api/reports/gcpReports.ts","webpack://koku-ui/./src/api/reports/ibmReports.ts","webpack://koku-ui/./src/api/reports/ociReports.ts","webpack://koku-ui/./src/api/reports/ocpCloudReports.ts","webpack://koku-ui/./src/api/reports/ocpReports.ts","webpack://koku-ui/./src/api/resources/awsOcpResource.ts","webpack://koku-ui/./src/api/resources/awsResource.ts","webpack://koku-ui/./src/api/resources/azureOcpResource.ts","webpack://koku-ui/./src/api/resources/azureResource.ts","webpack://koku-ui/./src/api/resources/gcpOcpResource.ts","webpack://koku-ui/./src/api/resources/gcpResource.ts","webpack://koku-ui/./src/api/resources/ibmResource.ts","webpack://koku-ui/./src/api/resources/ocpResource.ts","webpack://koku-ui/./src/api/resources/resourceUtils.ts","webpack://koku-ui/./src/components/featureFlags/featureFlags.tsx","webpack://koku-ui/./src/routes/state/maintenance/maintenanceState.tsx","webpack://koku-ui/./src/routes/state/maintenance/index.ts","webpack://koku-ui/./src/routes/state/maintenance/maintenance.tsx","webpack://koku-ui/./src/app.tsx","webpack://koku-ui/./src/components/async/asyncComponent.tsx","webpack://koku-ui/./src/components/exports/exports.styles.ts","webpack://koku-ui/./src/components/exports/exportsLink.tsx","webpack://koku-ui/./src/components/i18n/intl.ts","webpack://koku-ui/./src/locales/messages.ts","webpack://koku-ui/./src/components/userAccess/userAccess.tsx","webpack://koku-ui/./src/routes.tsx","webpack://koku-ui/./src/routes/costModels/createCostModelWizard/parseError.ts","webpack://koku-ui/./src/store/accountSettings/accountSettingsCommon.ts","webpack://koku-ui/./src/store/accountSettings/accountSettingsActions.ts","webpack://koku-ui/./src/api/accountSettings.ts","webpack://koku-ui/./src/store/accountSettings/accountSettingsReducer.ts","webpack://koku-ui/./src/store/accountSettings/accountSettingsSelectors.ts","webpack://koku-ui/./src/store/breakdown/costOverview/awsCostOverview/awsCostOverviewCommon.ts","webpack://koku-ui/./src/store/breakdown/costOverview/awsCostOverview/awsCostOverviewWidgets.ts","webpack://koku-ui/./src/store/breakdown/costOverview/awsCostOverview/awsCostOverviewReducer.ts","webpack://koku-ui/./src/store/breakdown/costOverview/awsCostOverview/awsCostOverviewSelectors.ts","webpack://koku-ui/./src/store/breakdown/costOverview/azureCostOverview/azureCostOverviewCommon.ts","webpack://koku-ui/./src/store/breakdown/costOverview/azureCostOverview/azureCostOverviewWidgets.ts","webpack://koku-ui/./src/store/breakdown/costOverview/azureCostOverview/azureCostOverviewReducer.ts","webpack://koku-ui/./src/store/breakdown/costOverview/azureCostOverview/azureCostOverviewSelectors.ts","webpack://koku-ui/./src/store/breakdown/costOverview/gcpCostOverview/gcpCostOverviewCommon.ts","webpack://koku-ui/./src/store/breakdown/costOverview/gcpCostOverview/gcpCostOverviewWidgets.ts","webpack://koku-ui/./src/store/breakdown/costOverview/gcpCostOverview/gcpCostOverviewReducer.ts","webpack://koku-ui/./src/store/breakdown/costOverview/gcpCostOverview/gcpCostOverviewSelectors.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ibmCostOverview/ibmCostOverviewCommon.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ibmCostOverview/ibmCostOverviewWidgets.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ibmCostOverview/ibmCostOverviewReducer.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ibmCostOverview/ibmCostOverviewSelectors.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ociCostOverview/ociCostOverviewCommon.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ociCostOverview/ociCostOverviewWidgets.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ociCostOverview/ociCostOverviewReducer.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ociCostOverview/ociCostOverviewSelectors.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ocpCostOverview/ocpCostOverviewCommon.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ocpCostOverview/ocpCostOverviewWidgets.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ocpCostOverview/ocpCostOverviewReducer.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ocpCostOverview/ocpCostOverviewSelectors.ts","webpack://koku-ui/./src/store/breakdown/historicalData/awsHistoricalData/awsHistoricalDataCommon.ts","webpack://koku-ui/./src/store/breakdown/historicalData/awsHistoricalData/awsHistoricalDataWidgets.ts","webpack://koku-ui/./src/store/breakdown/historicalData/awsHistoricalData/awsHistoricalDataReducer.ts","webpack://koku-ui/./src/store/breakdown/historicalData/awsHistoricalData/awsHistoricalDataSelectors.ts","webpack://koku-ui/./src/store/breakdown/historicalData/azureHistoricalData/azureHistoricalDataCommon.ts","webpack://koku-ui/./src/store/breakdown/historicalData/azureHistoricalData/azureHistoricalDataWidgets.ts","webpack://koku-ui/./src/store/breakdown/historicalData/azureHistoricalData/azureHistoricalDataReducer.ts","webpack://koku-ui/./src/store/breakdown/historicalData/azureHistoricalData/azureHistoricalDataSelectors.ts","webpack://koku-ui/./src/store/breakdown/historicalData/gcpHistoricalData/gcpHistoricalDataCommon.ts","webpack://koku-ui/./src/store/breakdown/historicalData/gcpHistoricalData/gcpHistoricalDataWidgets.ts","webpack://koku-ui/./src/store/breakdown/historicalData/gcpHistoricalData/gcpHistoricalDataReducer.ts","webpack://koku-ui/./src/store/breakdown/historicalData/gcpHistoricalData/gcpHistoricalDataSelectors.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ibmHistoricalData/ibmHistoricalDataCommon.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ibmHistoricalData/ibmHistoricalDataWidgets.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ibmHistoricalData/ibmHistoricalDataReducer.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ibmHistoricalData/ibmHistoricalDataSelectors.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ociHistoricalData/ociHistoricalDataCommon.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ociHistoricalData/ociHistoricalDataWidgets.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ociHistoricalData/ociHistoricalDataReducer.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ociHistoricalData/ociHistoricalDataSelectors.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ocpHistoricalData/ocpHistoricalDataCommon.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ocpHistoricalData/ocpHistoricalDataWidgets.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ocpHistoricalData/ocpHistoricalDataReducer.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ocpHistoricalData/ocpHistoricalDataSelectors.ts","webpack://koku-ui/./src/store/common.ts","webpack://koku-ui/./src/store/costModels/actions.ts","webpack://koku-ui/./src/store/costModels/reducer.ts","webpack://koku-ui/./src/store/costModels/selectors.ts","webpack://koku-ui/./src/store/dashboard/awsDashboard/awsDashboardCommon.ts","webpack://koku-ui/./src/store/dashboard/awsDashboard/awsDashboardSelectors.ts","webpack://koku-ui/./src/store/dashboard/awsDashboard/awsDashboardActions.ts","webpack://koku-ui/./src/store/dashboard/awsDashboard/awsDashboardWidgets.ts","webpack://koku-ui/./src/store/dashboard/awsDashboard/awsDashboardReducer.ts","webpack://koku-ui/./src/store/dashboard/awsOcpDashboard/awsOcpDashboardCommon.ts","webpack://koku-ui/./src/store/dashboard/awsOcpDashboard/awsOcpDashboardSelectors.ts","webpack://koku-ui/./src/store/dashboard/awsOcpDashboard/awsOcpDashboardActions.ts","webpack://koku-ui/./src/store/dashboard/awsOcpDashboard/awsOcpDashboardWidgets.ts","webpack://koku-ui/./src/store/dashboard/awsOcpDashboard/awsOcpDashboardReducer.ts","webpack://koku-ui/./src/store/dashboard/azureDashboard/azureDashboardCommon.ts","webpack://koku-ui/./src/store/dashboard/azureDashboard/azureDashboardSelectors.ts","webpack://koku-ui/./src/store/dashboard/azureDashboard/azureDashboardActions.ts","webpack://koku-ui/./src/store/dashboard/azureDashboard/azureDashboardWidgets.ts","webpack://koku-ui/./src/store/dashboard/azureDashboard/azureDashboardReducer.ts","webpack://koku-ui/./src/store/dashboard/azureOcpDashboard/azureOcpDashboardCommon.ts","webpack://koku-ui/./src/store/dashboard/azureOcpDashboard/azureOcpDashboardSelectors.ts","webpack://koku-ui/./src/store/dashboard/azureOcpDashboard/azureOcpDashboardActions.ts","webpack://koku-ui/./src/store/dashboard/azureOcpDashboard/azureOcpDashboardWidgets.ts","webpack://koku-ui/./src/store/dashboard/azureOcpDashboard/azureOcpDashboardReducer.ts","webpack://koku-ui/./src/store/dashboard/gcpDashboard/gcpDashboardCommon.ts","webpack://koku-ui/./src/store/dashboard/gcpDashboard/gcpDashboardSelectors.ts","webpack://koku-ui/./src/store/dashboard/gcpDashboard/gcpDashboardActions.ts","webpack://koku-ui/./src/store/dashboard/gcpDashboard/gcpDashboardWidgets.ts","webpack://koku-ui/./src/store/dashboard/gcpDashboard/gcpDashboardReducer.ts","webpack://koku-ui/./src/store/dashboard/gcpOcpDashboard/gcpOcpDashboardCommon.ts","webpack://koku-ui/./src/store/dashboard/gcpOcpDashboard/gcpOcpDashboardSelectors.ts","webpack://koku-ui/./src/store/dashboard/gcpOcpDashboard/gcpOcpDashboardActions.ts","webpack://koku-ui/./src/store/dashboard/gcpOcpDashboard/gcpOcpDashboardWidgets.ts","webpack://koku-ui/./src/store/dashboard/gcpOcpDashboard/gcpOcpDashboardReducer.ts","webpack://koku-ui/./src/store/dashboard/ibmDashboard/ibmDashboardCommon.ts","webpack://koku-ui/./src/store/dashboard/ibmDashboard/ibmDashboardSelectors.ts","webpack://koku-ui/./src/store/dashboard/ibmDashboard/ibmDashboardActions.ts","webpack://koku-ui/./src/store/dashboard/ibmDashboard/ibmDashboardWidgets.ts","webpack://koku-ui/./src/store/dashboard/ibmDashboard/ibmDashboardReducer.ts","webpack://koku-ui/./src/store/dashboard/ociDashboard/ociDashboardCommon.ts","webpack://koku-ui/./src/store/dashboard/ociDashboard/ociDashboardSelectors.ts","webpack://koku-ui/./src/store/dashboard/ociDashboard/ociDashboardActions.ts","webpack://koku-ui/./src/store/dashboard/ociDashboard/ociDashboardWidgets.ts","webpack://koku-ui/./src/store/dashboard/ociDashboard/ociDashboardReducer.ts","webpack://koku-ui/./src/store/dashboard/ocpCloudDashboard/ocpCloudDashboardCommon.ts","webpack://koku-ui/./src/store/dashboard/ocpCloudDashboard/ocpCloudDashboardSelectors.ts","webpack://koku-ui/./src/store/dashboard/ocpCloudDashboard/ocpCloudDashboardActions.ts","webpack://koku-ui/./src/store/dashboard/ocpCloudDashboard/ocpCloudDashboardWidgets.ts","webpack://koku-ui/./src/store/dashboard/ocpCloudDashboard/ocpCloudDashboardReducer.ts","webpack://koku-ui/./src/store/dashboard/ocpDashboard/ocpDashboardCommon.ts","webpack://koku-ui/./src/store/dashboard/ocpDashboard/ocpDashboardSelectors.ts","webpack://koku-ui/./src/store/dashboard/ocpDashboard/ocpDashboardActions.ts","webpack://koku-ui/./src/store/dashboard/ocpDashboard/ocpDashboardWidgets.ts","webpack://koku-ui/./src/store/dashboard/ocpDashboard/ocpDashboardReducer.ts","webpack://koku-ui/./src/store/djangoUtils/pagination.ts","webpack://koku-ui/./src/store/djangoUtils/query.ts","webpack://koku-ui/./src/store/export/exportCommon.ts","webpack://koku-ui/./src/store/export/exportSelectors.ts","webpack://koku-ui/./src/store/export/exportActions.tsx","webpack://koku-ui/./src/api/export/exportUtils.ts","webpack://koku-ui/./src/api/export/awsExport.ts","webpack://koku-ui/./src/api/export/awsOcpExport.ts","webpack://koku-ui/./src/api/export/azureExport.ts","webpack://koku-ui/./src/api/export/ociExport.ts","webpack://koku-ui/./src/api/export/azureOcpExport.ts","webpack://koku-ui/./src/api/export/gcpExport.ts","webpack://koku-ui/./src/api/export/gcpOcpExport.ts","webpack://koku-ui/./src/api/export/ibmExport.ts","webpack://koku-ui/./src/api/export/ocpCloudExport.ts","webpack://koku-ui/./src/api/export/ocpExport.ts","webpack://koku-ui/./src/store/export/exportReducer.ts","webpack://koku-ui/./src/store/featureFlags/featureFlagsActions.ts","webpack://koku-ui/./src/store/featureFlags/featureFlagsReducer.ts","webpack://koku-ui/./src/store/featureFlags/featureFlagsSelectors.ts","webpack://koku-ui/./src/api/forecasts/awsForecast.ts","webpack://koku-ui/./src/api/forecasts/awsOcpForecast.ts","webpack://koku-ui/./src/api/forecasts/azureForecast.ts","webpack://koku-ui/./src/api/forecasts/azureOcpForecast.ts","webpack://koku-ui/./src/api/forecasts/gcpForecast.ts","webpack://koku-ui/./src/api/forecasts/gcpOcpForecast.ts","webpack://koku-ui/./src/api/forecasts/ibmForecast.ts","webpack://koku-ui/./src/api/forecasts/ociForecast.ts","webpack://koku-ui/./src/api/forecasts/ocpCloudForecast.ts","webpack://koku-ui/./src/api/forecasts/ocpForecast.ts","webpack://koku-ui/./src/store/forecasts/forecastCommon.ts","webpack://koku-ui/./src/store/forecasts/forecastSelectors.ts","webpack://koku-ui/./src/store/forecasts/forecastActions.ts","webpack://koku-ui/./src/api/forecasts/forecastUtils.ts","webpack://koku-ui/./src/store/forecasts/forecastReducer.ts","webpack://koku-ui/./src/store/priceList/reducer.ts","webpack://koku-ui/./src/store/priceList/actions.ts","webpack://koku-ui/./src/store/rootReducer.ts","webpack://koku-ui/./src/store/store.ts","webpack://koku-ui/./src/store/metrics/actions.ts","webpack://koku-ui/./src/api/metrics.ts","webpack://koku-ui/./src/store/metrics/reducer.ts","webpack://koku-ui/./src/store/metrics/selectors.ts","webpack://koku-ui/./src/api/orgs/awsOrgs.ts","webpack://koku-ui/./src/store/orgs/orgCommon.ts","webpack://koku-ui/./src/store/orgs/orgSelectors.ts","webpack://koku-ui/./src/store/orgs/orgActions.ts","webpack://koku-ui/./src/api/orgs/orgUtils.ts","webpack://koku-ui/./src/store/orgs/orgReducer.ts","webpack://koku-ui/./src/store/providers/providersCommon.ts","webpack://koku-ui/./src/store/providers/providersActions.ts","webpack://koku-ui/./src/store/providers/providersReducer.ts","webpack://koku-ui/./src/store/providers/providersSelectors.ts","webpack://koku-ui/./src/store/rbac/actions.ts","webpack://koku-ui/./src/api/rbac.ts","webpack://koku-ui/./src/store/rbac/reducer.ts","webpack://koku-ui/./src/store/rbac/selectors.ts","webpack://koku-ui/./src/api/reports/ocpUsageReports.ts","webpack://koku-ui/./src/store/reports/reportCommon.ts","webpack://koku-ui/./src/store/reports/reportSelectors.ts","webpack://koku-ui/./src/store/reports/reportActions.ts","webpack://koku-ui/./src/api/reports/reportUtils.ts","webpack://koku-ui/./src/store/reports/reportReducer.ts","webpack://koku-ui/./src/store/resources/resourceCommon.ts","webpack://koku-ui/./src/store/resources/resourceSelectors.ts","webpack://koku-ui/./src/store/resources/resourceActions.ts","webpack://koku-ui/./src/store/resources/resourceReducer.ts","webpack://koku-ui/./src/store/sourceSettings/actions.ts","webpack://koku-ui/./src/store/sourceSettings/reducer.ts","webpack://koku-ui/./src/store/sourceSettings/selectors.ts","webpack://koku-ui/./src/api/tags/awsOcpTags.ts","webpack://koku-ui/./src/api/tags/awsTags.ts","webpack://koku-ui/./src/api/tags/azureOcpTags.ts","webpack://koku-ui/./src/api/tags/azureTags.ts","webpack://koku-ui/./src/api/tags/gcpOcpTags.ts","webpack://koku-ui/./src/api/tags/gcpTags.ts","webpack://koku-ui/./src/api/tags/ibmTags.ts","webpack://koku-ui/./src/api/tags/ociTags.ts","webpack://koku-ui/./src/api/tags/ocpCloudTags.ts","webpack://koku-ui/./src/api/tags/ocpTags.ts","webpack://koku-ui/./src/store/tags/tagCommon.ts","webpack://koku-ui/./src/store/tags/tagSelectors.ts","webpack://koku-ui/./src/store/tags/tagActions.ts","webpack://koku-ui/./src/api/tags/tagUtils.ts","webpack://koku-ui/./src/store/tags/tagReducer.ts","webpack://koku-ui/./src/store/ui/uiReducer.ts","webpack://koku-ui/./src/store/ui/uiSelectors.ts","webpack://koku-ui/./src/store/ui/uiActions.ts","webpack://koku-ui/./src/store/userAccess/userAccessCommon.ts","webpack://koku-ui/./src/store/userAccess/userAccessActions.ts","webpack://koku-ui/./src/api/userAccess.ts","webpack://koku-ui/./src/store/userAccess/userAccessReducer.ts","webpack://koku-ui/./src/store/userAccess/userAccessSelectors.ts","webpack://koku-ui/./src/utils/costType.ts","webpack://koku-ui/./src/utils/format.ts","webpack://koku-ui/./src/utils/cookie.ts","webpack://koku-ui/./src/utils/localStorage.ts","webpack://koku-ui/./src/utils/paths.ts"],"sourcesContent":["import { authInterceptor as insightsAuthInterceptor } from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport axios from 'axios';\nexport function initApi({ version }) {\n    axios.defaults.baseURL = `/api/cost-management/${version}/`;\n    axios.interceptors.request.use(authInterceptor);\n    axios.interceptors.request.use(insightsAuthInterceptor);\n}\nexport function authInterceptor(reqConfig) {\n    return Object.assign(Object.assign({}, reqConfig), { headers: Object.assign({}, reqConfig.headers) });\n}\n","import axios from 'axios';\nexport function fetchCostModels(query = '') {\n    return axios.get(`cost-models/${query && '?'}${query}`);\n}\nexport function fetchCostModel(uuid) {\n    return axios.get(`cost-models/${uuid}/`);\n}\nexport function addCostModel(request) {\n    return axios.post('cost-models/', request);\n}\nexport function updateCostModel(uuid, request) {\n    return axios.put(`cost-models/${uuid}/`, request);\n}\nexport function deleteCostModel(uuid) {\n    return axios.delete(`cost-models/${uuid}/`);\n}\n","import axios from 'axios';\nexport function fetchProviders(query) {\n    const insights = window.insights;\n    const queryString = query ? `?${query}` : '';\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`sources/${queryString}`);\n        });\n    }\n    else {\n        return axios.get(`sources/${queryString}`);\n    }\n}\n","import * as utils from './query';\n// filter_by props are converted and returned with logical OR/AND prefix\nexport function getQuery(query) {\n    return utils.getQuery(query);\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return utils.getQueryRoute(query);\n}\nexport function parseQuery(query) {\n    return utils.parseQuery(query);\n}\n","import * as utils from './query';\n// filter_by props are converted and returned with logical OR/AND prefix\nexport function getQuery(query) {\n    return utils.getQuery(query);\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return utils.getQueryRoute(query);\n}\nexport function parseQuery(query) {\n    return utils.parseQuery(query);\n}\n","import * as utils from './query';\n// filter_by props are converted and returned with logical OR/AND prefix\nexport function getQuery(query) {\n    return utils.getQuery(query);\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return utils.getQueryRoute(query);\n}\nexport function parseQuery(query) {\n    return utils.parseQuery(query);\n}\n","import * as utils from './query';\n// filter_by props are converted and returned with logical OR/AND prefix\nexport function getQuery(query) {\n    return utils.getQuery(query);\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return utils.getQueryRoute(query);\n}\nexport function parseQuery(query) {\n    return utils.parseQuery(query);\n}\n","import * as utils from './query';\n// filter_by props are converted and returned with logical OR/AND prefix\nexport function getQuery(query) {\n    return utils.getQuery(query);\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return utils.getQueryRoute(query);\n}\nexport function parseQuery(query) {\n    return utils.parseQuery(query);\n}\n","import * as utils from './query';\n// filter_by props are converted and returned with logical OR/AND prefix\nexport function getQuery(query) {\n    return utils.getQuery(query);\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return utils.getQueryRoute(query);\n}\nexport function parseQuery(query) {\n    return utils.parseQuery(query);\n}\n","import * as utils from './query';\n// filter_by props are converted and returned with logical OR/AND prefix\nexport function getQuery(query) {\n    return utils.getQuery(query);\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return utils.getQueryRoute(query);\n}\nexport function parseQuery(query) {\n    return utils.parseQuery(query);\n}\n","import { parse, stringify } from 'qs';\nexport const logicalOrPrefix = 'or:'; // logical OR prefix for group_by\nexport const logicalAndPrefix = 'and:'; // logical AND prefix for group_by\nexport const tagPrefix = 'tag:'; // Tag prefix for group_by\nexport const breakdownDescKey = 'breakdown_desc'; // Used to display a description in the breakdown header\nexport const breakdownGroupByKey = 'breakdown_group_by'; // Used to display a breadcrumb in the breakdown header\nexport const breakdownTitleKey = 'breakdown_title'; // Used to display a title in the breakdown header\nexport const orgUnitIdKey = 'org_unit_id'; // Org unit ID for group_by\nexport const orgUnitNameKey = 'org_unit_name'; // Org unit name for group_by\nexport const tagKey = 'tag'; // Tag key for group_by\n// Converts filter_by props to filter props\nexport function convertFilterBy(query) {\n    if (!(query && query.filter_by)) {\n        return query;\n    }\n    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { filter_by: undefined });\n    for (const key of Object.keys(query.filter_by)) {\n        if (!newQuery.filter) {\n            newQuery.filter = {};\n        }\n        if (newQuery.filter[key]) {\n            if (!Array.isArray(newQuery.filter[key])) {\n                newQuery.filter[key] = newQuery.filter[key] !== '*' ? [newQuery.filter[key]] : [];\n            }\n            newQuery.filter[key].push(query.filter_by[key]);\n        }\n        else {\n            newQuery.filter[key] = query.filter_by[key];\n        }\n    }\n    return newQuery;\n}\n// filter_by props are converted\nexport function getQuery(query) {\n    return stringify(convertFilterBy(query), { encode: false, indices: false });\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return stringify(query, { encode: false, indices: false });\n}\n// Returns given key without logical OR/AND prefix\nfunction parseKey(val) {\n    let key = val;\n    let index = val.indexOf(logicalOrPrefix);\n    if (index !== -1) {\n        key = val.substring(index + logicalOrPrefix.length);\n    }\n    else {\n        index = val.indexOf(logicalAndPrefix);\n        if (index !== -1) {\n            key = val.substring(index + logicalAndPrefix.length);\n        }\n    }\n    return key;\n}\n// Returns query without filter_by prefix\nexport function parseFilterByPrefix(query) {\n    if (!(query && query.filter_by)) {\n        return query;\n    }\n    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { filter_by: {} });\n    for (const key of Object.keys(query.filter_by)) {\n        const filterByKey = parseKey(key);\n        newQuery.filter_by[filterByKey] = query.filter_by[key];\n    }\n    return newQuery;\n}\n// Returns query without group_by prefix -- https://github.com/project-koku/koku-ui/issues/704\nexport function parseGroupByPrefix(query) {\n    if (!(query && query.group_by)) {\n        return query;\n    }\n    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { group_by: {} });\n    for (const key of Object.keys(query.group_by)) {\n        const groupByKey = parseKey(key);\n        newQuery.group_by[groupByKey] = query.group_by[key];\n    }\n    return newQuery;\n}\nexport function parseQuery(query) {\n    const newQuery = parse(query, { ignoreQueryPrefix: true });\n    return parseFilterByPrefix(parseGroupByPrefix(newQuery));\n}\n","import axios from 'axios';\nexport const ReportTypePaths = {\n    [\"cost\" /* ReportType.cost */]: 'reports/openshift/infrastructures/aws/costs/',\n    [\"database\" /* ReportType.database */]: 'reports/openshift/infrastructures/aws/costs/',\n    [\"network\" /* ReportType.network */]: 'reports/openshift/infrastructures/aws/costs/',\n    [\"storage\" /* ReportType.storage */]: 'reports/openshift/infrastructures/aws/storage/',\n    [\"instance_type\" /* ReportType.instanceType */]: 'reports/openshift/infrastructures/aws/instance-types/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const ReportTypePaths = {\n    [\"cost\" /* ReportType.cost */]: 'reports/aws/costs/',\n    [\"database\" /* ReportType.database */]: 'reports/aws/costs/',\n    [\"network\" /* ReportType.network */]: 'reports/aws/costs/',\n    [\"storage\" /* ReportType.storage */]: 'reports/aws/storage/',\n    [\"instance_type\" /* ReportType.instanceType */]: 'reports/aws/instance-types/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const ReportTypePaths = {\n    [\"cost\" /* ReportType.cost */]: 'reports/openshift/infrastructures/azure/costs/',\n    [\"database\" /* ReportType.database */]: 'reports/openshift/infrastructures/azure/costs/',\n    [\"network\" /* ReportType.network */]: 'reports/openshift/infrastructures/azure/costs/',\n    [\"storage\" /* ReportType.storage */]: 'reports/openshift/infrastructures/azure/storage/',\n    [\"instance_type\" /* ReportType.instanceType */]: 'reports/openshift/infrastructures/azure/instance-types/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const ReportTypePaths = {\n    [\"cost\" /* ReportType.cost */]: 'reports/azure/costs/',\n    [\"database\" /* ReportType.database */]: 'reports/azure/costs/',\n    [\"network\" /* ReportType.network */]: 'reports/azure/costs/',\n    [\"storage\" /* ReportType.storage */]: 'reports/azure/storage/',\n    [\"instance_type\" /* ReportType.instanceType */]: 'reports/azure/instance-types/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const ReportTypePaths = {\n    [\"cost\" /* ReportType.cost */]: 'reports/openshift/infrastructures/gcp/costs/',\n    [\"database\" /* ReportType.database */]: 'reports/openshift/infrastructures/gcp/costs/',\n    [\"network\" /* ReportType.network */]: 'reports/openshift/infrastructures/gcp/costs/',\n    [\"storage\" /* ReportType.storage */]: 'reports/openshift/infrastructures/gcp/storage/',\n    [\"instance_type\" /* ReportType.instanceType */]: 'reports/openshift/infrastructures/gcp/instance-types/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const ReportTypePaths = {\n    [\"cost\" /* ReportType.cost */]: 'reports/gcp/costs/',\n    [\"database\" /* ReportType.database */]: 'reports/gcp/costs/',\n    [\"network\" /* ReportType.network */]: 'reports/gcp/costs/',\n    [\"storage\" /* ReportType.storage */]: 'reports/gcp/storage/',\n    [\"instance_type\" /* ReportType.instanceType */]: 'reports/gcp/instance-types/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\n// Todo: update to use ibm backend apis when they become available\nexport const ReportTypePaths = {\n    [\"cost\" /* ReportType.cost */]: 'reports/gcp/costs/',\n    [\"database\" /* ReportType.database */]: 'reports/gcp/costs/',\n    [\"network\" /* ReportType.network */]: 'reports/gcp/costs/',\n    [\"storage\" /* ReportType.storage */]: 'reports/gcp/storage/',\n    [\"instance_type\" /* ReportType.instanceType */]: 'reports/gcp/instance-types/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const ReportTypePaths = {\n    [\"cost\" /* ReportType.cost */]: 'reports/oci/costs/',\n    [\"database\" /* ReportType.database */]: 'reports/oci/costs/',\n    [\"network\" /* ReportType.network */]: 'reports/oci/costs/',\n    [\"storage\" /* ReportType.storage */]: 'reports/oci/storage/',\n    [\"instance_type\" /* ReportType.instanceType */]: 'reports/oci/instance-types/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const ReportTypePaths = {\n    [\"cost\" /* ReportType.cost */]: 'reports/openshift/infrastructures/all/costs/',\n    [\"cpu\" /* ReportType.cpu */]: 'reports/openshift/compute/',\n    [\"database\" /* ReportType.database */]: 'reports/openshift/infrastructures/all/costs/',\n    [\"instance_type\" /* ReportType.instanceType */]: 'reports/openshift/infrastructures/all/instance-types/',\n    [\"memory\" /* ReportType.memory */]: 'reports/openshift/memory/',\n    [\"network\" /* ReportType.network */]: 'reports/openshift/infrastructures/all/costs/',\n    [\"storage\" /* ReportType.storage */]: 'reports/openshift/infrastructures/all/storage/',\n    [\"volume\" /* ReportType.volume */]: 'reports/openshift/volumes/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const ReportTypePaths = {\n    [\"cost\" /* ReportType.cost */]: 'reports/openshift/costs/',\n    [\"cpu\" /* ReportType.cpu */]: 'reports/openshift/compute/',\n    [\"memory\" /* ReportType.memory */]: 'reports/openshift/memory/',\n    [\"volume\" /* ReportType.volume */]: 'reports/openshift/volumes/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const ResourceTypePaths = {\n    [\"account\" /* ResourceType.account */]: 'resource-types/aws-accounts/',\n    [\"region\" /* ResourceType.region */]: 'resource-types/aws-regions/',\n    [\"service\" /* ResourceType.service */]: 'resource-types/aws-services/',\n};\nexport function runResource(resourceType, query) {\n    const insights = window.insights;\n    const path = ResourceTypePaths[resourceType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?openshift=true&${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?openshift=true&${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ResourceTypePaths = {\n    [\"account\" /* ResourceType.account */]: 'resource-types/aws-accounts/',\n    [\"region\" /* ResourceType.region */]: 'resource-types/aws-regions/',\n    [\"service\" /* ResourceType.service */]: 'resource-types/aws-services/',\n};\nexport function runResource(resourceType, query) {\n    const insights = window.insights;\n    const path = ResourceTypePaths[resourceType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ResourceTypePaths = {\n    [\"resource_location\" /* ResourceType.resourceLocation */]: 'resource-types/azure-regions/',\n    [\"subscription_guid\" /* ResourceType.subscriptionGuid */]: 'resource-types/azure-subscription-guids/',\n    [\"service_name\" /* ResourceType.serviceName */]: 'resource-types/azure-services/',\n};\nexport function runResource(resourceType, query) {\n    const insights = window.insights;\n    const path = ResourceTypePaths[resourceType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?openshift=true&${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?openshift=true&${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ResourceTypePaths = {\n    [\"resource_location\" /* ResourceType.resourceLocation */]: 'resource-types/azure-regions/',\n    [\"subscription_guid\" /* ResourceType.subscriptionGuid */]: 'resource-types/azure-subscription-guids/',\n    [\"service_name\" /* ResourceType.serviceName */]: 'resource-types/azure-services/',\n};\nexport function runResource(resourceType, query) {\n    const insights = window.insights;\n    const path = ResourceTypePaths[resourceType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ResourceTypePaths = {\n    [\"account\" /* ResourceType.account */]: 'resource-types/gcp-accounts/',\n    [\"gcp_project\" /* ResourceType.gcpProject */]: 'resource-types/gcp-projects/',\n    [\"region\" /* ResourceType.region */]: 'resource-types/gcp-regions/',\n    [\"service\" /* ResourceType.service */]: 'resource-types/gcp-services/',\n};\nexport function runResource(resourceType, query) {\n    const insights = window.insights;\n    const path = ResourceTypePaths[resourceType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?openshift=true&${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?openshift=true&${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ResourceTypePaths = {\n    [\"account\" /* ResourceType.account */]: 'resource-types/gcp-accounts/',\n    [\"gcp_project\" /* ResourceType.gcpProject */]: 'resource-types/gcp-projects/',\n    [\"region\" /* ResourceType.region */]: 'resource-types/gcp-regions/',\n    [\"service\" /* ResourceType.service */]: 'resource-types/gcp-services/',\n};\nexport function runResource(resourceType, query) {\n    const insights = window.insights;\n    const path = ResourceTypePaths[resourceType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ResourceTypePaths = {\n    [\"account\" /* ResourceType.account */]: 'resource-types/gcp-accounts/',\n    [\"project\" /* ResourceType.project */]: 'resource-types/gcp-projects/',\n    [\"region\" /* ResourceType.region */]: 'resource-types/gcp-regions/',\n    [\"service\" /* ResourceType.service */]: 'resource-types/gcp-services/',\n};\nexport function runResource(resourceType, query) {\n    const insights = window.insights;\n    const path = ResourceTypePaths[resourceType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ResourceTypePaths = {\n    [\"cluster\" /* ResourceType.cluster */]: 'resource-types/openshift-clusters/',\n    [\"node\" /* ResourceType.node */]: 'resource-types/openshift-nodes/',\n    [\"project\" /* ResourceType.project */]: 'resource-types/openshift-projects/',\n};\nexport function runResource(resourceType, query) {\n    const insights = window.insights;\n    const path = ResourceTypePaths[resourceType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import { runResource as runAwsOcpResource } from './awsOcpResource';\nimport { runResource as runAwsResource } from './awsResource';\nimport { runResource as runAzureOcpResource } from './azureOcpResource';\nimport { runResource as runAzureResource } from './azureResource';\nimport { runResource as runGcpOcpResource } from './gcpOcpResource';\nimport { runResource as runGcpResource } from './gcpResource';\nimport { runResource as runIbmResource } from './ibmResource';\nimport { runResource as runOcpResource } from './ocpResource';\n// Temporary check until typeahead is implemented for all filters\nexport function isResourceTypeValid(resourcePathsType, resourceType) {\n    let result = false;\n    if (resourcePathsType === \"aws\" /* ResourcePathsType.aws */ ||\n        resourcePathsType === \"aws_ocp\" /* ResourcePathsType.awsOcp */ ||\n        resourcePathsType === \"azure\" /* ResourcePathsType.azure */ ||\n        resourcePathsType === \"azure_ocp\" /* ResourcePathsType.azureOcp */ ||\n        resourcePathsType === \"gcp\" /* ResourcePathsType.gcp */ ||\n        resourcePathsType === \"gcp_ocp\" /* ResourcePathsType.gcpOcp */ ||\n        resourcePathsType === \"ibm\" /* ResourcePathsType.ibm */ ||\n        resourcePathsType === \"ibm_ocp\" /* ResourcePathsType.ibmOcp */ ||\n        resourcePathsType === \"ocp\" /* ResourcePathsType.ocp */ ||\n        resourcePathsType === \"ocp_cloud\" /* ResourcePathsType.ocpCloud */) {\n        switch (resourceType) {\n            case \"account\" /* ResourceType.account */:\n            case \"cluster\" /* ResourceType.cluster */:\n            case \"gcp_project\" /* ResourceType.gcpProject */:\n            case \"node\" /* ResourceType.node */:\n            case \"project\" /* ResourceType.project */:\n            case \"region\" /* ResourceType.region */:\n            case \"resource_location\" /* ResourceType.resourceLocation */:\n            case \"service\" /* ResourceType.service */:\n            case \"service_name\" /* ResourceType.serviceName */:\n            case \"subscription_guid\" /* ResourceType.subscriptionGuid */:\n                result = true;\n                break;\n        }\n    }\n    return result;\n}\nexport function runResource(resourcePathsType, resourceType, query) {\n    let forecast;\n    switch (resourcePathsType) {\n        case \"aws\" /* ResourcePathsType.aws */:\n            forecast = runAwsResource(resourceType, query);\n            break;\n        case \"aws_ocp\" /* ResourcePathsType.awsOcp */:\n            forecast = runAwsOcpResource(resourceType, query);\n            break;\n        case \"azure\" /* ResourcePathsType.azure */:\n            forecast = runAzureResource(resourceType, query);\n            break;\n        case \"azure_ocp\" /* ResourcePathsType.azureOcp */:\n            forecast = runAzureOcpResource(resourceType, query);\n            break;\n        case \"gcp\" /* ResourcePathsType.gcp */:\n            forecast = runGcpResource(resourceType, query);\n            break;\n        case \"gcp_ocp\" /* ResourcePathsType.gcpOcp */:\n            forecast = runGcpOcpResource(resourceType, query);\n            break;\n        case \"ibm\" /* ResourcePathsType.ibm */:\n            forecast = runIbmResource(resourceType, query);\n            break;\n        case \"ocp\" /* ResourcePathsType.ocp */:\n        case \"ocp_cloud\" /* ResourcePathsType.ocpCloud */:\n            forecast = runOcpResource(resourceType, query);\n            break;\n    }\n    return forecast;\n}\n","import { useFlag } from '@unleash/proxy-client-react';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { featureFlagsActions } from 'store/featureFlags';\nconst FeatureFlagsBase = ({ children = null }) => {\n    const dispatch = useDispatch();\n    const isCurrencyFeatureEnabled = useFlag(\"cost-management.ui.currency\" /* FeatureToggle.currency */);\n    const isExportsFeatureEnabled = useFlag(\"cost-management.ui.exports\" /* FeatureToggle.exports */);\n    const isIbmFeatureEnabled = useFlag(\"cost-management.ui.ibm\" /* FeatureToggle.ibm */);\n    const isOciFeatureEnabled = useFlag(\"cost-management.ui.oci\" /* FeatureToggle.oci */);\n    useEffect(() => {\n        dispatch(featureFlagsActions.setFeatureFlags({\n            isCurrencyFeatureEnabled,\n            isExportsFeatureEnabled,\n            isIbmFeatureEnabled,\n            isOciFeatureEnabled,\n        }));\n    }, []);\n    return React.createElement(React.Fragment, null, children);\n};\nconst FeatureFlags = withRouter(FeatureFlagsBase);\nexport { FeatureFlags };\n","import { Stack, StackItem } from '@patternfly/react-core';\nimport Maintenance from '@redhat-cloud-services/frontend-components/Maintenance';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nclass MaintenanceStateBase extends React.Component {\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(Maintenance, { description: React.createElement(Stack, null,\n                React.createElement(StackItem, null, intl.formatMessage(messages.maintenanceEmptyStateDesc)),\n                React.createElement(StackItem, null, intl.formatMessage(messages.maintenanceEmptyStateInfo, {\n                    url: (React.createElement(\"a\", { href: intl.formatMessage(messages.redHatStatusUrl), rel: \"noreferrer\", target: \"_blank\" }, \"\\\"status page\\\"\")),\n                })),\n                React.createElement(StackItem, null, intl.formatMessage(messages.maintenanceEmptyStateThanks))) }));\n    }\n}\nconst MaintenanceState = injectIntl(MaintenanceStateBase);\nexport { MaintenanceState };\n","import Maintenance from './maintenance';\nexport default Maintenance;\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { MaintenanceState } from './maintenanceState';\nconst Maintenance = () => {\n    return (React.createElement(Main, null,\n        React.createElement(MaintenanceState, null)));\n};\nexport default withRouter(Maintenance);\n","import { FeatureFlags } from 'components/featureFlags';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport Maintenance from 'routes/state/maintenance';\nimport { createMapStateToProps } from 'store/common';\nimport { Routes, routes } from './routes';\nexport class App extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Todo: Will Insights provide a flag to enable maintenance mode?\n        // https://docs.google.com/document/d/1VLs7vFczWUzyIpH6EUsTEpJugDsjeuh4a_azs6IJbC0/edit#\n        this.state = { maintenanceMode: false };\n    }\n    componentDidMount() {\n        const { history, location } = this.props;\n        insights.chrome.init();\n        insights.chrome.identifyApp('cost-management');\n        if (location && location.pathname) {\n            insights.chrome.appAction(location.pathname);\n        }\n        this.appNav = insights.chrome.on('APP_NAVIGATION', event => {\n            var _a, _b;\n            let currRoute = routes.find(({ path }) => path.includes(event.navId));\n            /**\n             * Condition is required until new nav changes are propagated to each environment.\n             * Eventually will be avaiable as a hook value to replace event listening.\n             */\n            if (!currRoute && typeof ((_a = event === null || event === void 0 ? void 0 : event.domEvent) === null || _a === void 0 ? void 0 : _a.href) === 'string') {\n                const appPathname = (_b = event === null || event === void 0 ? void 0 : event.domEvent) === null || _b === void 0 ? void 0 : _b.href.replace(this.props.basename.replace(/^\\/beta\\//, '/'), '/');\n                currRoute = routes.find(({ path }) => path.includes(appPathname));\n            }\n            if (event.domEvent && currRoute) {\n                history.push(currRoute.path);\n            }\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { location } = this.props;\n        if (location && location.pathname !== prevProps.location.pathname) {\n            window.scrollTo(0, 0);\n            insights.chrome.appAction(location.pathname);\n        }\n    }\n    componentWillUnmount() {\n        this.appNav();\n        insights.chrome.appAction(undefined);\n    }\n    render() {\n        const { maintenanceMode } = this.state;\n        const route = maintenanceMode ? React.createElement(Maintenance, null) : React.createElement(Routes, null);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(FeatureFlags, null),\n            route));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = { history };\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(App);\n","import React from 'react';\nexport function asyncComponent(loader) {\n    let LoadedComponent = null;\n    class Async extends React.Component {\n        constructor() {\n            super(...arguments);\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            this._isMounted = false;\n            this.state = {\n                isLoading: !LoadedComponent,\n            };\n        }\n        componentDidMount() {\n            this._isMounted = true;\n            if (!this.state.isLoading) {\n                return;\n            }\n            loader().then(Comp => {\n                LoadedComponent = Comp.default ? Comp.default : Comp;\n                if (this._isMounted) {\n                    this.setState({ isLoading: false });\n                }\n            });\n        }\n        componentWillUnmount() {\n            this._isMounted = false;\n        }\n        render() {\n            const { isLoading } = this.state;\n            return isLoading ? null : React.createElement(LoadedComponent, Object.assign({}, this.props));\n        }\n    }\n    return Async;\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    exportsIcon: {\n        marginLeft: global_spacer_md.value,\n        marginRight: global_spacer_sm.value,\n    },\n    exportsLink: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n};\n","import { AlertActionLink, Button } from '@patternfly/react-core';\nimport { AngleDoubleLeftIcon } from '@patternfly/react-icons/dist/esm/icons/angle-double-left-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { uiSelectors } from 'store/ui';\nimport { uiActions } from 'store/ui';\nimport { styles } from './exports.styles';\nclass ExportsLinkBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleToggle = event => {\n            const { closeExportDrawer, isOpen, onClick, openExportDrawer } = this.props;\n            if (isOpen) {\n                closeExportDrawer();\n            }\n            else {\n                openExportDrawer();\n            }\n            event.preventDefault();\n            if (onClick) {\n                onClick(isOpen);\n            }\n            return false;\n        };\n    }\n    render() {\n        const { intl, isActionLink } = this.props;\n        // @redhat-cloud-services/frontend-components-notifications does not expose PatternFly's actionLinks prop\n        if (isActionLink) {\n            return (React.createElement(\"div\", { className: \"pf-c-alert__action-group\" },\n                React.createElement(AlertActionLink, { onClick: this.handleToggle }, intl.formatMessage(messages.exportsTitle))));\n        }\n        return (React.createElement(\"div\", { style: styles.exportsLink },\n            React.createElement(Button, { variant: \"link\", onClick: this.handleToggle },\n                React.createElement(\"span\", { style: styles.exportsIcon },\n                    React.createElement(AngleDoubleLeftIcon, null)),\n                intl.formatMessage(messages.exportsTitle))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    const isOpen = uiSelectors.selectIsExportsDrawerOpen(state);\n    return {\n        isOpen,\n    };\n});\nconst mapDispatchToProps = {\n    closeExportDrawer: uiActions.closeExportsDrawer,\n    openExportDrawer: uiActions.openExportsDrawer,\n};\nconst ExportsLink = injectIntl(connect(mapStateToProps, mapDispatchToProps)(ExportsLinkBase));\nexport { ExportsLink };\n","import { createIntl, createIntlCache } from 'react-intl';\n// eslint-disable-next-line no-restricted-imports\nimport messages from '../../../locales/data.json';\nconst locale = navigator.language.split(/[-_]/)[0] || 'en';\nexport const getLocale = () => {\n    return locale;\n};\nconst cache = createIntlCache();\nexport const intl = createIntl({\n    defaultLocale: 'en',\n    locale,\n    // eslint-disable-next-line no-console\n    onError: console.log,\n    messages: messages[locale],\n}, cache);\n","/* eslint-disable max-len */\nimport { defineMessages } from 'react-intl';\nexport default defineMessages({\n    aws: {\n        defaultMessage: 'Amazon Web Services',\n        description: 'Amazon Web Services',\n        id: 'aws',\n    },\n    awsComputeTitle: {\n        defaultMessage: 'Compute (EC2) instances usage',\n        description: 'Compute (EC2) instances usage',\n        id: 'awsComputeTitle',\n    },\n    awsCostTrendTitle: {\n        defaultMessage: 'Amazon Web Services cumulative cost comparison ({units})',\n        description: 'Amazon Web Services cumulative cost comparison ({units})',\n        id: 'awsCostTrendTitle',\n    },\n    awsDailyCostTrendTitle: {\n        defaultMessage: 'Amazon Web Services daily cost comparison ({units})',\n        description: 'Amazon Web Services daily cost comparison ({units})',\n        id: 'awsDailyCostTrendTitle',\n    },\n    awsDashboardCostTitle: {\n        defaultMessage: 'Amazon Web Services cost',\n        description: 'Amazon Web Services cost',\n        id: 'awsDashboardCostTitle',\n    },\n    awsDesc: {\n        defaultMessage: 'Raw cost from Amazon Web Services infrastructure.',\n        description: 'Raw cost from Amazon Web Services infrastructure.',\n        id: 'awsDesc',\n    },\n    awsDetailsTableAriaLabel: {\n        defaultMessage: 'Amazon Web Services details table',\n        description: 'Amazon Web Services details table',\n        id: 'awsDetailsTable',\n    },\n    awsDetailsTitle: {\n        defaultMessage: 'Amazon Web Services Details',\n        description: 'Amazon Web Services Details',\n        id: 'awsDetailsTitle',\n    },\n    awsOcpDashboardCostTitle: {\n        defaultMessage: 'Amazon Web Services filtered by OpenShift cost',\n        description: 'Amazon Web Services filtered by OpenShift cost',\n        id: 'awsOcpDashboardCostTitle',\n    },\n    azure: {\n        defaultMessage: 'Microsoft Azure',\n        description: 'Microsoft Azure',\n        id: 'azure',\n    },\n    azureComputeTitle: {\n        defaultMessage: 'Virtual machines usage',\n        description: 'Virtual machines usage',\n        id: 'azureComputeTitle',\n    },\n    azureCostTrendTitle: {\n        defaultMessage: 'Microsoft Azure cumulative cost comparison ({units})',\n        description: 'Microsoft Azure cumulative cost comparison ({units})',\n        id: 'azureCostTrendTitle',\n    },\n    azureDailyCostTrendTitle: {\n        defaultMessage: 'Microsoft Azure daily cost comparison ({units})',\n        description: 'Microsoft Azure daily cost comparison ({units})',\n        id: 'azureDailyCostTrendTitle',\n    },\n    azureDashboardCostTitle: {\n        defaultMessage: 'Microsoft Azure cost',\n        description: 'Microsoft Azure cost',\n        id: 'azureDashboardCostTitle',\n    },\n    azureDesc: {\n        defaultMessage: 'Raw cost from Azure infrastructure.',\n        description: 'Raw cost from Azure infrastructure.',\n        id: 'azureDesc',\n    },\n    azureDetailsTableAriaLabel: {\n        defaultMessage: 'Microsoft Azure details table',\n        description: 'Microsoft Azure details table',\n        id: 'azureDetailsTable',\n    },\n    azureDetailsTitle: {\n        defaultMessage: 'Microsoft Azure details',\n        description: 'Microsoft Azure details',\n        id: 'azureDetailsTitle',\n    },\n    azureOcpDashboardCostTitle: {\n        defaultMessage: 'Microsoft Azure filtered by OpenShift cost',\n        description: 'Microsoft Azure filtered by OpenShift cost',\n        id: 'azureOcpDashboardCostTitle',\n    },\n    back: {\n        defaultMessage: 'Back',\n        description: 'Back',\n        id: 'back',\n    },\n    breakdownBackToDetails: {\n        defaultMessage: '{groupBy, select, ' +\n            'account {Back to {value} account details} ' +\n            'cluster {Back to {value} cluster details} ' +\n            'gcp_project {Back to {value} GCP project details} ' +\n            'node {Back to {value} node details} ' +\n            'org_unit_id {Back to {value} organizational unit details} ' +\n            'payer_tenant_id {Back to {value} account details} ' +\n            'product_service {Back to {value} service details} ' +\n            'project {Back to {value} project details} ' +\n            'region {Back to {value} region details} ' +\n            'resource_location {Back to {value} region details} ' +\n            'service {Back to {value} service details} ' +\n            'service_name {Back to {value} service details} ' +\n            'subscription_guid {Back to {value} account details} ' +\n            'tag {Back to {value} tag details} ' +\n            'other {}}',\n        description: 'Back to {value} {groupBy} details',\n        id: 'breakdownBackToDetails',\n    },\n    breakdownBackToDetailsAriaLabel: {\n        defaultMessage: 'Back to details',\n        description: 'Back to details',\n        id: 'breakdownBackToDetailsAriaLabel',\n    },\n    breakdownBackToTitles: {\n        defaultMessage: '{value, select, ' +\n            'aws {Amazon Web Services} ' +\n            'azure {Microsoft Azure} ' +\n            'oci {Oracle Cloud Infrastructure} ' +\n            'gcp {Google Cloud Platform} ' +\n            'ibm {IBM Cloud - Top 5 Costliest} ' +\n            'ocp {OpenShift} ' +\n            'other {}}',\n        description: 'Breakdown back to page titles',\n        id: 'breakdownBackToTitles',\n    },\n    breakdownCostBreakdownAriaLabel: {\n        defaultMessage: 'A description of markup, raw cost and usage cost',\n        description: 'A description of markup, raw cost and usage cost',\n        id: 'breakdownCostBreakdownAriaLabel',\n    },\n    breakdownCostBreakdownTitle: {\n        defaultMessage: 'Cost breakdown',\n        description: 'A description of markup, raw cost and usage cost',\n        id: 'breakdownCostBreakdownTitle',\n    },\n    breakdownCostChartAriaDesc: {\n        defaultMessage: 'Breakdown of markup, raw, and usage costs',\n        description: 'Breakdown of markup, raw, and usage costs',\n        id: 'breakdownCostChartAriaDesc',\n    },\n    breakdownCostChartTooltip: {\n        defaultMessage: '{name}: {value}',\n        description: '{name}: {value}',\n        id: 'breakdownCostChartTooltip',\n    },\n    breakdownCostOverviewTitle: {\n        defaultMessage: 'Cost overview',\n        description: 'Cost overview',\n        id: 'breakdownCostOverviewTitle',\n    },\n    breakdownHistoricalDataTitle: {\n        defaultMessage: 'Historical data',\n        description: 'Historical data',\n        id: 'breakdownHistoricalDataTitle',\n    },\n    breakdownSummaryTitle: {\n        defaultMessage: '{value, select, ' +\n            'account {Cost by accounts} ' +\n            'cluster {Cost by clusters} ' +\n            'gcp_project {Cost by GCP projects} ' +\n            'node {Cost by Node} ' +\n            'org_unit_id {Cost by organizational units} ' +\n            'payer_tenant_id {Cost by accounts} ' +\n            'product_service {Cost by services} ' +\n            'project {Cost by projects} ' +\n            'region {Cost by regions} ' +\n            'resource_location {Cost by regions} ' +\n            'service {Cost by services} ' +\n            'service_name {Cost by services} ' +\n            'subscription_guid {Cost by accounts} ' +\n            'tag {Cost by tags} ' +\n            'other {}}',\n        description: 'Cost by {value}',\n        id: 'breakdownSummaryTitle',\n    },\n    breakdownTitle: {\n        defaultMessage: '{value}',\n        description: 'Breakdown title',\n        id: 'breakdownTitle',\n    },\n    breakdownTotalCostDate: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {{value} total cost (January {startDate})} other {{value} total cost (January {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {{value} total cost (February {startDate})} other {{value} total cost (February {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {{value} total cost (March {startDate})} other {{value} total cost (March {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {{value} total cost (April {startDate})} other {{value} total cost (April {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {{value} total cost (May {startDate})} other {{value} total cost (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {{value} total cost (June {startDate})} other {{value} total cost (June {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {{value} total cost (July {startDate})} other {{value} total cost (July {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {{value} total cost (August {startDate})} other {{value} total cost (August {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {{value} total cost (September {startDate})} other {{value} total cost (September {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {{value} total cost (October {startDate})} other {{value} total cost (October {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {{value} total cost (November {startDate})} other {{value} total cost (November {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {{value} total cost (December {startDate})} other {{value} total cost (December {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Break down total cost by date',\n        id: 'breakdownTotalCostDate',\n    },\n    calculationType: {\n        defaultMessage: 'Calculation type',\n        description: 'Calculation type',\n        id: 'calculationType',\n    },\n    cancel: {\n        defaultMessage: 'Cancel',\n        description: 'Cancel',\n        id: 'cancel',\n    },\n    chartCostForecastConeLegendLabel: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Cost confidence (Jan {startDate})} other {Cost confidence (Jan {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {Cost confidence (Feb {startDate})} other {Cost confidence (Feb {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {Cost confidence (Mar {startDate})} other {Cost confidence (Mar {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {Cost confidence (Apr {startDate})} other {Cost confidence (Apr {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {Cost confidence (May {startDate})} other {Cost confidence (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {Cost confidence (Jun {startDate})} other {Cost confidence (Jun {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {Cost confidence (Jul {startDate})} other {Cost confidence (Jul {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {Cost confidence (Aug {startDate})} other {Cost confidence (Aug {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {Cost confidence (Sep {startDate})} other {Cost confidence (Sep {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {Cost confidence (Oct {startDate})} other {Cost confidence (Oct {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {Cost confidence (Nov {startDate})} other {Cost confidence (Nov {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {Cost confidence (Dec {startDate})} other {Cost confidence (Dec {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Cost forecast cone date label',\n        id: 'chartCostForecastConeLegendLabel',\n    },\n    chartCostForecastConeLegendNoDataLabel: {\n        defaultMessage: 'Cost confidence (no data)',\n        description: 'Cost confidence (no data)',\n        id: 'chartCostForecastConeLegendNoDataLabel',\n    },\n    chartCostForecastConeLegendTooltip: {\n        defaultMessage: '{month, select, ' +\n            '0 {Cost confidence (Jan)} ' +\n            '1 {Cost confidence (Feb)} ' +\n            '2 {Cost confidence (Mar)} ' +\n            '3 {Cost confidence (Apr)} ' +\n            '4 {Cost confidence (May)} ' +\n            '5 {Cost confidence (Jun)} ' +\n            '6 {Cost confidence (Jul)} ' +\n            '7 {Cost confidence (Aug)} ' +\n            '8 {Cost confidence (Sep)} ' +\n            '9 {Cost confidence (Oct)} ' +\n            '10 {Cost confidence (Nov)} ' +\n            '11 {Cost confidence (Dec)} ' +\n            'other {}}',\n        description: 'Cost forecast confidence date label tooltip',\n        id: 'chartCostForecastConeLegendTooltip',\n    },\n    chartCostForecastConeTooltip: {\n        defaultMessage: '{value0} - {value1}',\n        description: 'Cost forecast confidence min/max tooltip',\n        id: 'chartCostForecastConeTooltip',\n    },\n    chartCostForecastLegendLabel: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Cost forecast (Jan {startDate})} other {Cost forecast (Jan {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {Cost forecast (Feb {startDate})} other {Cost forecast (Feb {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {Cost forecast (Mar {startDate})} other {Cost forecast (Mar {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {Cost forecast (Apr {startDate})} other {Cost forecast (Apr {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {Cost forecast (May {startDate})} other {Cost forecast (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {Cost forecast (Jun {startDate})} other {Cost forecast (Jun {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {Cost forecast (Jul {startDate})} other {Cost forecast (Jul {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {Cost forecast (Aug {startDate})} other {Cost forecast (Aug {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {Cost forecast (Sep {startDate})} other {Cost forecast (Sep {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {Cost forecast (Oct {startDate})} other {Cost forecast (Oct {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {Cost forecast (Nov {startDate})} other {Cost forecast (Nov {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {Cost forecast (Dec {startDate})} other {Cost forecast (Dec {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Cost forecast date label',\n        id: 'chartCostForecastLegendLabel',\n    },\n    chartCostForecastLegendNoDataLabel: {\n        defaultMessage: 'Cost forecast (no data)',\n        description: 'Cost forecast (no data)',\n        id: 'chartCostForecastLegendNoDataLabel',\n    },\n    chartCostForecastLegendTooltip: {\n        defaultMessage: '{month, select, ' +\n            '0 {Cost forecast (Jan)} ' +\n            '1 {Cost forecast (Feb)} ' +\n            '2 {Cost forecast (Mar)} ' +\n            '3 {Cost forecast (Apr)} ' +\n            '4 {Cost forecast (May)} ' +\n            '5 {Cost forecast (Jun)} ' +\n            '6 {Cost forecast (Jul)} ' +\n            '7 {Cost forecast (Aug)} ' +\n            '8 {Cost forecast (Sep)} ' +\n            '9 {Cost forecast (Oct)} ' +\n            '10 {Cost forecast (Nov)} ' +\n            '11 {Cost forecast (Dec)} ' +\n            'other {}}',\n        description: 'Cost forecast date label tooltip',\n        id: 'chartCostForecastLegendTooltip',\n    },\n    chartCostInfrastructureForecastConeLegendLabel: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Infrastructure confidence (Jan {startDate})} other {Infrastructure confidence (Jan {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {Infrastructure confidence (Feb {startDate})} other {Infrastructure confidence (Feb {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {Infrastructure confidence (Mar {startDate})} other {Infrastructure confidence (Mar {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {Infrastructure confidence (Apr {startDate})} other {Infrastructure confidence (Apr {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {Infrastructure confidence (May {startDate})} other {Infrastructure confidence (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {Infrastructure confidence (Jun {startDate})} other {Infrastructure confidence (Jun {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {Infrastructure confidence (Jul {startDate})} other {Infrastructure confidence (Jul {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {Infrastructure confidence (Aug {startDate})} other {Infrastructure confidence (Aug {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {Infrastructure confidence (Sep {startDate})} other {Infrastructure confidence (Sep {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {Infrastructure confidence (Oct {startDate})} other {Infrastructure confidence (Oct {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {Infrastructure confidence (Nov {startDate})} other {Infrastructure confidence (Nov {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {Infrastructure confidence (Dec {startDate})} other {Infrastructure confidence (Dec {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Infrastructure date label',\n        id: 'chartCostInfrastructureForecastConeLegendLabel',\n    },\n    chartCostInfrastructureForecastConeLegendNoDataLabel: {\n        defaultMessage: 'Infrastructure confidence (no data)',\n        description: 'Infrastructure confidence (no data)',\n        id: 'chartCostInfrastructureForecastConeLegendNoDataLabel',\n    },\n    chartCostInfrastructureForecastConeLegendTooltip: {\n        defaultMessage: '{month, select, ' +\n            '0 {Infrastructure confidence (Jan)} ' +\n            '1 {Infrastructure confidence (Feb)} ' +\n            '2 {Infrastructure confidence (Mar)} ' +\n            '3 {Infrastructure confidence (Apr)} ' +\n            '4 {Infrastructure confidence (May)} ' +\n            '5 {Infrastructure confidence (Jun)} ' +\n            '6 {Infrastructure confidence (Jul)} ' +\n            '7 {Infrastructure confidence (Aug)} ' +\n            '8 {Infrastructure confidence (Sep)} ' +\n            '9 {Infrastructure confidence (Oct)} ' +\n            '10 {Infrastructure confidence (Nov)} ' +\n            '11 {Infrastructure confidence (Dec)} ' +\n            'other {}}',\n        description: 'Infrastructure date label tooltip',\n        id: 'chartCostInfrastructureForecastConeLegendTooltip',\n    },\n    chartCostInfrastructureForecastLegendLabel: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Infrastructure forecast (Jan {startDate})} other {Infrastructure forecast (Jan {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {Infrastructure forecast (Feb {startDate})} other {Infrastructure forecast (Feb {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {Infrastructure forecast (Mar {startDate})} other {Infrastructure forecast (Mar {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {Infrastructure forecast (Apr {startDate})} other {Infrastructure forecast (Apr {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {Infrastructure forecast (May {startDate})} other {Infrastructure forecast (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {Infrastructure forecast (Jun {startDate})} other {Infrastructure forecast (Jun {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {Infrastructure forecast (Jul {startDate})} other {Infrastructure forecast (Jul {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {Infrastructure forecast (Aug {startDate})} other {Infrastructure forecast (Aug {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {Infrastructure forecast (Sep {startDate})} other {Infrastructure forecast (Sep {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {Infrastructure forecast (Oct {startDate})} other {Infrastructure forecast (Oct {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {Infrastructure forecast (Nov {startDate})} other {Infrastructure forecast (Nov {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {Infrastructure forecast (Dec {startDate})} other {Infrastructure forecast (Dec {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Infrastructure date label',\n        id: 'chartCostInfrastructureForecastLegendLabel',\n    },\n    chartCostInfrastructureForecastLegendNoDataLabel: {\n        defaultMessage: 'Infrastructure forecast (no data)',\n        description: 'Infrastructure forecast (no data)',\n        id: 'chartCostInfrastructureForecastLegendNoDataLabel',\n    },\n    chartCostInfrastructureForecastLegendTooltip: {\n        defaultMessage: '{month, select, ' +\n            '0 {Infrastructure forecast (Jan)} ' +\n            '1 {Infrastructure forecast (Feb)} ' +\n            '2 {Infrastructure forecast (Mar)} ' +\n            '3 {Infrastructure forecast (Apr)} ' +\n            '4 {Infrastructure forecast (May)} ' +\n            '5 {Infrastructure forecast (Jun)} ' +\n            '6 {Infrastructure forecast (Jul)} ' +\n            '7 {Infrastructure forecast (Aug)} ' +\n            '8 {Infrastructure forecast (Sep)} ' +\n            '9 {Infrastructure forecast (Oct)} ' +\n            '10 {Infrastructure forecast (Nov)} ' +\n            '11 {Infrastructure forecast (Dec)} ' +\n            'other {}}',\n        description: 'Infrastructure date label tooltip',\n        id: 'chartCostInfrastructureForecastLegendTooltip',\n    },\n    chartCostInfrastructureLegendLabel: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Infrastructure cost (Jan {startDate})} other {Infrastructure cost (Jan {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {Infrastructure cost (Feb {startDate})} other {Infrastructure cost (Feb {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {Infrastructure cost (Mar {startDate})} other {Infrastructure cost (Mar {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {Infrastructure cost (Apr {startDate})} other {Infrastructure cost (Apr {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {Infrastructure cost (May {startDate})} other {Infrastructure cost (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {Infrastructure cost (Jun {startDate})} other {Infrastructure cost (Jun {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {Infrastructure cost (Jul {startDate})} other {Infrastructure cost (Jul {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {Infrastructure cost (Aug {startDate})} other {Infrastructure cost (Aug {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {Infrastructure cost (Sep {startDate})} other {Infrastructure cost (Sep {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {Infrastructure cost (Oct {startDate})} other {Infrastructure cost (Oct {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {Infrastructure cost (Nov {startDate})} other {Infrastructure cost (Nov {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {Infrastructure cost (Dec {startDate})} other {Infrastructure cost (Dec {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Infrastructure cost label',\n        id: 'chartCostInfrastructureLegendLabel',\n    },\n    chartCostInfrastructureLegendNoDataLabel: {\n        defaultMessage: 'Infrastructure cost (no data)',\n        description: 'Infrastructure cost (no data)',\n        id: 'chartCostInfrastructureLegendNoDataLabel',\n    },\n    chartCostInfrastructureLegendTooltip: {\n        defaultMessage: '{month, select, ' +\n            '0 {Infrastructure cost (Jan)} ' +\n            '1 {Infrastructure cost (Feb)} ' +\n            '2 {Infrastructure cost (Mar)} ' +\n            '3 {Infrastructure cost (Apr)} ' +\n            '4 {Infrastructure cost (May)} ' +\n            '5 {Infrastructure cost (Jun)} ' +\n            '6 {Infrastructure cost (Jul)} ' +\n            '7 {Infrastructure cost (Aug)} ' +\n            '8 {Infrastructure cost (Sep)} ' +\n            '9 {Infrastructure cost (Oct)} ' +\n            '10 {Infrastructure cost (Nov)} ' +\n            '11 {Infrastructure cost (Dec)} ' +\n            'other {}}',\n        description: 'Infrastructure cost label tooltip',\n        id: 'chartCostInfrastructureLegendTooltip',\n    },\n    chartCostLegendLabel: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Cost (Jan {startDate})} other {Cost (Jan {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {Cost (Feb {startDate})} other {Cost (Feb {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {Cost (Mar {startDate})} other {Cost (Mar {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {Cost (Apr {startDate})} other {Cost (Apr {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {Cost (May {startDate})} other {Cost (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {Cost (Jun {startDate})} other {Cost (Jun {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {Cost (Jul {startDate})} other {Cost (Jul {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {Cost (Aug {startDate})} other {Cost (Aug {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {Cost (Sep {startDate})} other {Cost (Sep {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {Cost (Oct {startDate})} other {Cost (Oct {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {Cost (Nov {startDate})} other {Cost (Nov {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {Cost (Dec {startDate})} other {Cost (Dec {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Cost date label',\n        id: 'chartCostLegendLabel',\n    },\n    chartCostLegendNoDataLabel: {\n        defaultMessage: 'Cost (no data)',\n        description: 'Cost (no data)',\n        id: 'chartCostLegendNoDataLabel',\n    },\n    chartCostLegendTooltip: {\n        defaultMessage: '{month, select, ' +\n            '0 {Cost (Jan)} ' +\n            '1 {Cost (Feb)} ' +\n            '2 {Cost (Mar)} ' +\n            '3 {Cost (Apr)} ' +\n            '4 {Cost (May)} ' +\n            '5 {Cost (Jun)} ' +\n            '6 {Cost (Jul)} ' +\n            '7 {Cost (Aug)} ' +\n            '8 {Cost (Sep)} ' +\n            '9 {Cost (Oct)} ' +\n            '10 {Cost (Nov)} ' +\n            '11 {Cost (Dec)} ' +\n            'other {}}',\n        description: 'Cost (month)',\n        id: 'chartCostLegendTooltip',\n    },\n    chartCostSupplementaryLegendLabel: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Supplementary cost (Jan {startDate})} other {Supplementary cost (Jan {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {Supplementary cost (Feb {startDate})} other {Supplementary cost (Feb {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {Supplementary cost (Mar {startDate})} other {Supplementary cost (Mar {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {Supplementary cost (Apr {startDate})} other {Supplementary cost (Apr {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {Supplementary cost (May {startDate})} other {Supplementary cost (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {Supplementary cost (Jun {startDate})} other {Supplementary cost (Jun {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {Supplementary cost (Jul {startDate})} other {Supplementary cost (Jul {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {Supplementary cost (Aug {startDate})} other {Supplementary cost (Aug {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {Supplementary cost (Sep {startDate})} other {Supplementary cost (Sep {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {Supplementary cost (Oct {startDate})} other {Supplementary cost (Oct {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {Supplementary cost (Nov {startDate})} other {Supplementary cost (Nov {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {Supplementary cost (Dec {startDate})} other {Supplementary cost (Dec {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Supplementary cost date label',\n        id: 'chartCostSupplementaryLegendLabel',\n    },\n    chartCostSupplementaryLegendNoDataLabel: {\n        defaultMessage: 'Supplementary cost (no data)',\n        description: 'Supplementary cost (no data)',\n        id: 'chartCostSupplementaryLegendNoDataLabel',\n    },\n    chartCostSupplementaryLegendTooltip: {\n        defaultMessage: '{month, select, ' +\n            '0 {Supplementary cost (Jan)} ' +\n            '1 {Supplementary cost (Feb)} ' +\n            '2 {Supplementary cost (Mar)} ' +\n            '3 {Supplementary cost (Apr)} ' +\n            '4 {Supplementary cost (May)} ' +\n            '5 {Supplementary cost (Jun)} ' +\n            '6 {Supplementary cost (Jul)} ' +\n            '7 {Supplementary cost (Aug)} ' +\n            '8 {Supplementary cost (Sep)} ' +\n            '9 {Supplementary cost (Oct)} ' +\n            '10 {Supplementary cost (Nov)} ' +\n            '11 {Supplementary cost (Dec)} ' +\n            'other {}}',\n        description: 'Supplementary cost (month)',\n        id: 'chartCostSupplementaryLegendTooltip',\n    },\n    chartDateRange: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Jan {startDate} {year}} other {{startDate}-{endDate} Jan {year}}}} ' +\n            '1 {{count, plural, one {Feb {startDate} {year}} other {{startDate}-{endDate} Feb {year}}}} ' +\n            '2 {{count, plural, one {Mar {startDate} {year}} other {{startDate}-{endDate} Mar {year}}}} ' +\n            '3 {{count, plural, one {Apr {startDate} {year}} other {{startDate}-{endDate} Apr {year}}}} ' +\n            '4 {{count, plural, one {May {startDate} {year}} other {{startDate}-{endDate} May {year}}}} ' +\n            '5 {{count, plural, one {Jun {startDate} {year}} other {{startDate}-{endDate} Jun {year}}}} ' +\n            '6 {{count, plural, one {Jul {startDate} {year}} other {{startDate}-{endDate} Jul {year}}}} ' +\n            '7 {{count, plural, one {Aug {startDate} {year}} other {{startDate}-{endDate} Aug {year}}}} ' +\n            '8 {{count, plural, one {Sep {startDate} {year}} other {{startDate}-{endDate} Sep {year}}}} ' +\n            '9 {{count, plural, one {Oct {startDate} {year}} other {{startDate}-{endDate} Oct {year}}}} ' +\n            '10 {{count, plural, one {Nov {startDate} {year}} other {{startDate}-{endDate} Nov {year}}}} ' +\n            '11 {{count, plural, one {Dec {startDate} {year}} other {{startDate}-{endDate} Dec {year}}}} ' +\n            'other {}}',\n        description: 'Date range that handles singular and plural',\n        id: 'chartDateRange',\n    },\n    chartDayOfTheMonth: {\n        defaultMessage: 'Day {day}',\n        description: 'The day of the month',\n        id: 'chartDayOfTheMonth',\n    },\n    chartLimitLegendLabel: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Limit (Jan {startDate})} other {Limit (Jan {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {Limit (Feb {startDate})} other {Limit (Feb {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {Limit (Mar {startDate})} other {Limit (Mar {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {Limit (Apr {startDate})} other {Limit (Apr {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {Limit (May {startDate})} other {Limit (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {Limit (Jun {startDate})} other {Limit (Jun {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {Limit (Jul {startDate})} other {Limit (Jul {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {Limit (Aug {startDate})} other {Limit (Aug {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {Limit (Sep {startDate})} other {Limit (Sep {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {Limit (Oct {startDate})} other {Limit (Oct {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {Limit (Nov {startDate})} other {Limit (Nov {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {Limit (Dec {startDate})} other {Limit (Dec {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Limit date label',\n        id: 'chartLimitLegendLabel',\n    },\n    chartLimitLegendNoDataLabel: {\n        defaultMessage: 'Limit (no data)',\n        description: 'Limit (no data)',\n        id: 'chartLimitLegendNoDataLabel',\n    },\n    chartLimitLegendTooltip: {\n        defaultMessage: '{month, select, ' +\n            '0 {Limit (Jan)} ' +\n            '1 {Limit (Feb)} ' +\n            '2 {Limit (Mar)} ' +\n            '3 {Limit (Apr)} ' +\n            '4 {Limit (May)} ' +\n            '5 {Limit (Jun)} ' +\n            '6 {Limit (Jul)} ' +\n            '7 {Limit (Aug)} ' +\n            '8 {Limit (Sep)} ' +\n            '9 {Limit (Oct)} ' +\n            '10 {Limit (Nov)} ' +\n            '11 {Limit (Dec)} ' +\n            'other {}}',\n        description: 'Limit (month)',\n        id: 'chartLimitLegendTooltip',\n    },\n    chartNoData: {\n        defaultMessage: 'no data',\n        description: 'no data',\n        id: 'chartNoData',\n    },\n    chartOthers: {\n        defaultMessage: '{count, plural, one {{count} Other} other {{count} Others}}',\n        description: 'Others category for top costliest',\n        id: 'chartOthers',\n    },\n    chartRequestsLegendLabel: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Requests (Jan {startDate})} other {Requests (Jan {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {Requests (Feb {startDate})} other {Requests (Feb {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {Requests (Mar {startDate})} other {Requests (Mar {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {Requests (Apr {startDate})} other {Requests (Apr {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {Requests (May {startDate})} other {Requests (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {Requests (Jun {startDate})} other {Requests (Jun {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {Requests (Jul {startDate})} other {Requests (Jul {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {Requests (Aug {startDate})} other {Requests (Aug {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {Requests (Sep {startDate})} other {Requests (Sep {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {Requests (Oct {startDate})} other {Requests (Oct {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {Requests (Nov {startDate})} other {Requests (Nov {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {Requests (Dec {startDate})} other {Requests (Dec {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Requests date label',\n        id: 'chartRequestLegendLabel',\n    },\n    chartRequestsLegendNoDataLabel: {\n        defaultMessage: 'Requests (no data)',\n        description: 'Requests (no data)',\n        id: 'chartRequestsLegendNoDataLabel',\n    },\n    chartRequestsLegendTooltip: {\n        defaultMessage: '{month, select, ' +\n            '0 {Requests (Jan)} ' +\n            '1 {Requests (Feb)} ' +\n            '2 {Requests (Mar)} ' +\n            '3 {Requests (Apr)} ' +\n            '4 {Requests (May)} ' +\n            '5 {Requests (Jun)} ' +\n            '6 {Requests (Jul)} ' +\n            '7 {Requests (Aug)} ' +\n            '8 {Requests (Sep)} ' +\n            '9 {Requests (Oct)} ' +\n            '10 {Requests (Nov)} ' +\n            '11 {Requests (Dec)} ' +\n            'other {}}',\n        description: 'Requests (month)',\n        id: 'chartRequestLegendTooltip',\n    },\n    chartUsageLegendLabel: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Usage (Jan {startDate})} other {Usage (Jan {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {Usage (Feb {startDate})} other {Usage (Feb {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {Usage (Mar {startDate})} other {Usage (Mar {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {Usage (Apr {startDate})} other {Usage (Apr {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {Usage (May {startDate})} other {Usage (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {Usage (Jun {startDate})} other {Usage (Jun {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {Usage (Jul {startDate})} other {Usage (Jul {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {Usage (Aug {startDate})} other {Usage (Aug {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {Usage (Sep {startDate})} other {Usage (Sep {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {Usage (Oct {startDate})} other {Usage (Oct {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {Usage (Nov {startDate})} other {Usage (Nov {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {Usage (Dec {startDate})} other {Usage (Dec {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Usage (month {startDate})',\n        id: 'chartUsageLegendLabel',\n    },\n    chartUsageLegendNoDataLabel: {\n        defaultMessage: 'Usage (no data)',\n        description: 'Usage (no data)',\n        id: 'chartUsageLegendNoDataLabel',\n    },\n    chartUsageLegendTooltip: {\n        defaultMessage: '{month, select, ' +\n            '0 {Usage (Jan)} ' +\n            '1 {Usage (Feb)} ' +\n            '2 {Usage (Mar)} ' +\n            '3 {Usage (Apr)} ' +\n            '4 {Usage (May)} ' +\n            '5 {Usage (Jun)} ' +\n            '6 {Usage (Jul)} ' +\n            '7 {Usage (Aug)} ' +\n            '8 {Usage (Sep)} ' +\n            '9 {Usage (Oct)} ' +\n            '10 {Usage (Nov)} ' +\n            '11 {Usage (Dec)} ' +\n            'other {}}',\n        description: 'Usage (month)',\n        id: 'chartUsageLegendTooltip',\n    },\n    close: {\n        defaultMessage: 'Close',\n        description: 'Close',\n        id: 'close',\n    },\n    clusters: {\n        defaultMessage: 'Clusters',\n        description: 'Clusters',\n        id: 'clusters',\n    },\n    cost: {\n        defaultMessage: 'Cost',\n        description: 'Cost',\n        id: 'cost',\n    },\n    costCalculations: {\n        defaultMessage: 'Cost calculations',\n        description: 'Cost calculations',\n        id: 'costCalculations',\n    },\n    costManagement: {\n        defaultMessage: 'Cost Management',\n        description: 'Cost Management',\n        id: 'costManagement',\n    },\n    costModels: {\n        defaultMessage: 'Cost Models',\n        description: 'Cost Models',\n        id: 'costModels',\n    },\n    costModelsAddTagValues: {\n        defaultMessage: 'Add more tag values',\n        description: 'Add more tag values',\n        id: 'costModelsAddTagValues',\n    },\n    costModelsAssignSources: {\n        defaultMessage: '{count, plural, one {Assign source} other {Assign sources}}',\n        description: 'Assign sources -- plural or singular',\n        id: 'costModelsAssignSources',\n    },\n    costModelsAssignSourcesErrorDescription: {\n        defaultMessage: 'You cannot assign a source at this time. Try refreshing this page. If the problem persists, contact your organization administrator or visit our {url} for known outages.',\n        description: 'You cannot assign a source at this time',\n        id: 'costModelsAssignSourcesErrorDescription',\n    },\n    costModelsAssignSourcesErrorTitle: {\n        defaultMessage: 'This action is temporarily unavailable',\n        description: 'This action is temporarily unavailable',\n        id: 'costModelsAssignSourcesErrorTitle',\n    },\n    costModelsAssignSourcesParen: {\n        defaultMessage: 'Assign source(s)',\n        description: 'Assign source(s)',\n        id: 'costModelsAssignSourcesParen',\n    },\n    costModelsAssignedSources: {\n        defaultMessage: 'Assigned sources',\n        description: 'Assigned sourcess',\n        id: 'costModelsAssignedSources',\n    },\n    costModelsAvailableSources: {\n        defaultMessage: 'The following sources are assigned to my production cost model:',\n        description: 'The following sources are assigned to my production cost model:',\n        id: 'costModelsAvailableSources',\n    },\n    costModelsCanDelete: {\n        defaultMessage: 'This action will delete {name} cost model from the system. This action cannot be undone',\n        description: 'This action will delete {name} cost model from the system. This action cannot be undone',\n        id: 'costModelsCanDelete',\n    },\n    costModelsCanNotDelete: {\n        defaultMessage: 'The following sources are assigned to {name} cost model:',\n        description: 'The following sources are assigned to {name} cost model:',\n        id: 'costModelsCanNotDelete',\n    },\n    costModelsDelete: {\n        defaultMessage: 'Delete cost model',\n        description: 'Delete cost model',\n        id: 'costModelsDelete',\n    },\n    costModelsDeleteDesc: {\n        defaultMessage: 'This action will delete {costModel} cost model from the system. This action cannot be undone.',\n        description: 'This action will delete {costModel} cost model from the system. This action cannot be undone.',\n        id: 'costModelsDeleteDesc',\n    },\n    costModelsDeleteSource: {\n        defaultMessage: 'You must unassign any sources before you can delete this cost model.',\n        description: 'You must unassign any sources before you can delete this cost model.',\n        id: 'costModelsDeleteSource',\n    },\n    costModelsDescTooLong: {\n        defaultMessage: 'Should not exceed 500 characters',\n        description: 'Should not exceed 500 characters',\n        id: 'costModelsDescTooLong',\n    },\n    costModelsDetailsAssignSourcesTitle: {\n        defaultMessage: 'Assign sources',\n        description: 'Assign sources',\n        id: 'costModelsDetailsAssignSourcesTitle',\n    },\n    costModelsDistributionDesc: {\n        defaultMessage: 'The following is the type of metric that is set to be used when distributing costs to the project level breakdowns.',\n        description: 'The following is the type of metric that is set to be used when distributing costs to the project level breakdowns.',\n        id: 'costModelsDistributionDesc',\n    },\n    costModelsDistributionEdit: {\n        defaultMessage: 'Edit distribution',\n        description: 'Edit distribution',\n        id: 'costModelsDistributionEdit',\n    },\n    costModelsEmptyState: {\n        defaultMessage: 'What is your hybrid cloud costing you?',\n        description: 'What is your hybrid cloud costing you?',\n        id: 'costModelsEmptyState',\n    },\n    costModelsEmptyStateDesc: {\n        defaultMessage: 'Create a cost model to start calculating your hybrid cloud costs using custom price lists, markups, or both. Click on the button below to begin the journey.',\n        description: 'Create a cost model to start calculating your hybrid cloud costs using custom price lists, markups, or both. Click on the button below to begin the journey.',\n        id: 'costModelsEmptyStateDesc',\n    },\n    costModelsEmptyStateLearnMore: {\n        defaultMessage: 'Read about setting up a cost model',\n        description: 'Read about setting up a cost model',\n        id: 'costModelsEmptyStateLearnMore',\n    },\n    costModelsEnterTagDescription: {\n        defaultMessage: 'Enter a tag description',\n        description: 'Enter a tag description',\n        id: 'costModelsEnterTagDescription',\n    },\n    costModelsEnterTagKey: {\n        defaultMessage: 'Enter a tag key',\n        description: 'Enter a tag key',\n        id: 'costModelsEnterTagKey',\n    },\n    costModelsEnterTagRate: {\n        defaultMessage: 'Enter rate by tag',\n        description: 'Enter rate by tag',\n        id: 'costModelsEnterTagRate',\n    },\n    costModelsEnterTagValue: {\n        defaultMessage: 'Enter a tag value',\n        description: 'Enter a tag value',\n        id: 'costModelsEnterTagValue',\n    },\n    costModelsExamplesDoubleMarkup: {\n        defaultMessage: 'A markup rate of (+) 100% doubles the base costs of your source(s).',\n        description: 'A markup rate of (+) 100% doubles the base costs of your source(s).',\n        id: 'costModelsExamplesDoubleMarkup',\n    },\n    costModelsExamplesNoAdjust: {\n        defaultMessage: 'A markup or discount rate of (+/-) 0% (the default) makes no adjustments to the base costs of your source(s).',\n        description: 'A markup or discount rate of (+/-) 0% (the default) makes no adjustments to the base costs of your source(s).',\n        id: 'costModelsExamplesNoAdjust',\n    },\n    costModelsExamplesReduceSeventyfive: {\n        defaultMessage: 'A discount rate of (-) 25% reduces the base costs of your source(s) to 75% of the original value.',\n        description: 'A discount rate of (-) 25% reduces the base costs of your source(s) to 75% of the original value.',\n        id: 'costModelsExamplesReduceSeventyfive',\n    },\n    costModelsExamplesReduceZero: {\n        defaultMessage: 'A discount rate of (-) 100% reduces the base costs of your source(s) to 0.',\n        description: 'A discount rate of (-) 100% reduces the base costs of your source(s) to 0.',\n        id: 'costModelsExamplesReduceZero',\n    },\n    costModelsFilterPlaceholder: {\n        defaultMessage: 'Filter by name...',\n        description: 'Filter by name',\n        id: 'costModelsFilterPlaceholder',\n    },\n    costModelsFilterTagKey: {\n        defaultMessage: 'Filter by tag key',\n        description: 'Filter by tag key',\n        id: 'costModelsFilterTagKey',\n    },\n    costModelsInfoTooLong: {\n        defaultMessage: 'Should not exceed 100 characters',\n        description: 'Should not exceed 100 characters',\n        id: 'costModelsInfoTooLong',\n    },\n    costModelsLastChange: {\n        defaultMessage: 'Last change',\n        description: 'Last change',\n        id: 'costModelsLastChange',\n    },\n    costModelsPopover: {\n        defaultMessage: 'A cost model allows you to associate a price to metrics provided by your sources to charge for utilization of resources. {learnMore}',\n        description: 'A cost model allows you to associate a price to metrics provided by your sources to charge for utilization of resources. {learnMore}',\n        id: 'costModelsPopover',\n    },\n    costModelsPopoverAriaLabel: {\n        defaultMessage: 'Cost model info popover',\n        description: 'Cost model info popover',\n        id: 'costModelsPopoverAriaLabel',\n    },\n    costModelsRateTooLong: {\n        defaultMessage: 'Should not exceed 10 decimals',\n        description: 'Should not exceed 10 decimals',\n        id: 'costModelsRateTooLong',\n    },\n    costModelsReadOnly: {\n        defaultMessage: 'You have read only permissions',\n        description: 'You have read only permissions',\n        id: 'costModelsReadOnly',\n    },\n    costModelsRefreshDialog: {\n        defaultMessage: 'Refresh this dialog',\n        description: 'Refresh this dialog',\n        id: 'costModelsRefreshDialog',\n    },\n    costModelsRemoveTagLabel: {\n        defaultMessage: 'Remove tag value',\n        description: 'Remove tag value',\n        id: 'costModelsRemoveTagLabel',\n    },\n    costModelsRequiredField: {\n        defaultMessage: 'This field is required',\n        description: 'This field is required',\n        id: 'costModelsRequiredField',\n    },\n    costModelsRouterErrorTitle: {\n        defaultMessage: 'Fail routing to cost model',\n        description: 'Cost models router error title',\n        id: 'costModelsRouterErrorTitle',\n    },\n    costModelsRouterServerError: {\n        defaultMessage: 'Server error: could not get the cost model.',\n        description: 'Server error: could not get the cost model.',\n        id: 'costModelsRouterServerError',\n    },\n    costModelsSelectMeasurement: {\n        defaultMessage: 'Select Measurement',\n        description: 'Select Measurement',\n        id: 'costModelsSelectMeasurement',\n    },\n    costModelsSelectMetric: {\n        defaultMessage: 'Select Metric',\n        description: 'Select Metric',\n        id: 'costModelsSelectMetric',\n    },\n    costModelsSourceDelete: {\n        defaultMessage: 'Unassign',\n        description: 'Unassign',\n        id: 'costModelsSourceDelete',\n    },\n    costModelsSourceDeleteSource: {\n        defaultMessage: 'Unassign source',\n        description: 'Unassign source',\n        id: 'costModelsSourceDeleteSource',\n    },\n    costModelsSourceDeleteSourceDesc: {\n        defaultMessage: 'This will remove the assignment of {source} from the {costModel} cost model. You can then assign the cost model to a new source.',\n        description: 'This will remove the assignment of {source} from the {costModel} cost model. You can then assign the cost model to a new source.',\n        id: 'costModelsSourceDeleteSourceDesc',\n    },\n    costModelsSourceEmptyStateDesc: {\n        defaultMessage: 'Select the source(s) you want to apply this cost model to.',\n        description: 'Select the source(s) you want to apply this cost model to.',\n        id: 'costModelsSourceEmptyStateDesc',\n    },\n    costModelsSourceEmptyStateTitle: {\n        defaultMessage: 'No sources are assigned',\n        description: 'No sources are assigned',\n        id: 'costModelsSourceEmptyStateTitle',\n    },\n    costModelsSourceTableAriaLabel: {\n        defaultMessage: 'Sources table',\n        description: 'Sources table',\n        id: 'costModelsSourcesTableAriaLabel',\n    },\n    costModelsSourceTablePaginationAriaLabel: {\n        defaultMessage: 'Sources table pagination controls',\n        description: 'Sources table pagination controls',\n        id: 'costModelsSourceTablePaginationAriaLabel',\n    },\n    costModelsSourceType: {\n        defaultMessage: 'Source type',\n        description: 'Source type',\n        id: 'costModelsSourceType',\n    },\n    costModelsTableAriaLabel: {\n        defaultMessage: 'Cost models table',\n        description: 'Cost models table',\n        id: 'costModelsTableAriaLabel',\n    },\n    costModelsTagRateTableAriaLabel: {\n        defaultMessage: 'Tag rates',\n        description: 'Tag rates',\n        id: 'costModelsTagRateTableAriaLabel',\n    },\n    costModelsTagRateTableDefault: {\n        defaultMessage: 'Default',\n        description: 'Default',\n        id: 'costModelsTagRateTableDefault',\n    },\n    costModelsTagRateTableKey: {\n        defaultMessage: 'Tag key',\n        description: 'Tag key',\n        id: 'costModelsTagRateTableKey',\n    },\n    costModelsTagRateTableRate: {\n        defaultMessage: 'Rate',\n        description: 'Rate',\n        id: 'costModelsTagRateTableRate',\n    },\n    costModelsTagRateTableValue: {\n        defaultMessage: 'Tag value',\n        description: 'Tag value',\n        id: 'costModelsTagRateTableValue',\n    },\n    costModelsUUIDEmptyState: {\n        defaultMessage: 'Cost model can not be found',\n        description: 'Cost model can not be found',\n        id: 'costModelsUUIDEmptyState',\n    },\n    costModelsUUIDEmptyStateDesc: {\n        defaultMessage: 'Cost model with uuid: {uuid} does not exist.',\n        description: 'Cost model with uuid: {uuid} does not exist.',\n        id: 'costModelsUUIDEmptyStateDesc',\n    },\n    costModelsWizardCreateCostModel: {\n        defaultMessage: 'Create cost model',\n        description: 'Create cost model',\n        id: 'costModelsWizardCreateCostModel',\n    },\n    costModelsWizardCreatePriceList: {\n        defaultMessage: 'Create a price list',\n        description: 'Create a price list',\n        id: 'costModelsWizardCreatePriceList',\n    },\n    costModelsWizardCurrencyToggleLabel: {\n        defaultMessage: 'Select currency',\n        description: 'Select currency',\n        id: 'costModelsWizardCurrencyToggleLabel',\n    },\n    costModelsWizardEmptySourceTypeLabel: {\n        defaultMessage: 'Select source type',\n        description: 'Select source type',\n        id: 'costModelsWizardEmptySourceTypeLabel',\n    },\n    costModelsWizardEmptyStateCreate: {\n        defaultMessage: 'To create a price list, begin by clicking the {value} button.',\n        description: 'To create a price list, begin by clicking the {Create rate} button.',\n        id: 'costModelsWizardEmptyStateCreate',\n    },\n    costModelsWizardEmptyStateOtherTime: {\n        defaultMessage: 'You can create a price list or modify one at a later time.',\n        description: 'You can create a price list or modify one at a later time.',\n        id: 'costModelsWizardEmptyStateOtherTime',\n    },\n    costModelsWizardEmptyStateSkipStep: {\n        defaultMessage: 'To skip this step, click the {value} button.',\n        description: 'To skip this step, click the {next} button.',\n        id: 'costModelsWizardEmptyStateSkipStep',\n    },\n    costModelsWizardEmptyStateTitle: {\n        defaultMessage: 'A price list has not been created.',\n        description: 'A price list has not been created.',\n        id: 'costModelsWizardEmptyStateTitle',\n    },\n    costModelsWizardGeneralInfoTitle: {\n        defaultMessage: 'Enter general information',\n        description: 'Enter general information',\n        id: 'costModelsWizardGeneralInfoTitle',\n    },\n    costModelsWizardNoRatesAdded: {\n        defaultMessage: 'No rates were added to the price list',\n        description: 'No rates were added to the price list',\n        id: 'costModelsWizardNoRatesAdded',\n    },\n    costModelsWizardOnboardAws: {\n        defaultMessage: 'Amazon Web Services (AWS)',\n        description: 'Amazon Web Services (AWS)',\n        id: 'costModelsWizardOnboardAws',\n    },\n    costModelsWizardOnboardOcp: {\n        defaultMessage: 'Red Hat OpenShift Container Platform',\n        description: 'Red Hat OpenShift Container Platform',\n        id: 'costModelsWizardOnboardOcp',\n    },\n    costModelsWizardPriceListMetric: {\n        defaultMessage: 'Select the metric you want to assign a price to, and specify a measurement unit and rate. You can optionally set multiple rates for particular tags.',\n        description: 'Select the metric you want to assign a price to, and specify a measurement unit and rate. You can optionally set multiple rates for particular tags.',\n        id: 'costModelsWizardPriceListMetric',\n    },\n    costModelsWizardRateAriaLabel: {\n        defaultMessage: 'Assign rate',\n        description: 'Assign rate',\n        id: 'costModelsWizardRateAriaLabel',\n    },\n    costModelsWizardReviewMarkDiscount: {\n        defaultMessage: 'Markup/Discount',\n        description: 'No Markup/Discount',\n        id: 'costModelsWizardReviewMarkDiscount',\n    },\n    costModelsWizardReviewStatusSubDetails: {\n        defaultMessage: 'Review and confirm your cost model configuration and assignments. Click {create} to create the cost model, or {back} to revise.',\n        description: 'Review and confirm your cost model configuration and assignments. Click {Create} to create the cost model, or {Back} to revise.',\n        id: 'costModelsWizardReviewStatusSubDetails',\n    },\n    costModelsWizardReviewStatusSubTitle: {\n        defaultMessage: 'Costs for resources connected to the assigned sources will now be calculated using the newly created {value} cost model.',\n        description: 'Costs for resources connected to the assigned sources will now be calculated using the newly created {value} cost model.',\n        id: 'costModelsWizardReviewStatusSubTitle',\n    },\n    costModelsWizardReviewStatusTitle: {\n        defaultMessage: 'Creation successful',\n        description: 'Creation successful',\n        id: 'costModelsWizardReviewStatusTitle',\n    },\n    costModelsWizardSourceCaption: {\n        defaultMessage: '{value, select, ' +\n            'aws {Select from the following Amazon Web Services sources:} ' +\n            'azure {Select from the following Microsoft Azure sources:} ' +\n            'oci {Select from the following Oracle Cloud Infrastructure sources:} ' +\n            'gcp {Select from the following Google Cloud Platform sources:} ' +\n            'ocp {Select from the following Red Hat OpenShift sources:} ' +\n            'other {}}',\n        description: 'Select from the following {value} sources:',\n        id: 'costModelsWizardSourceCaption',\n    },\n    costModelsWizardSourceErrorDescription: {\n        defaultMessage: 'Try refreshing this step or you can skip this step (as it is optional) and assign the source to the cost model at a later time. If the problem persists, contact your organization administrator or visit our {url} for known outages.',\n        description: 'This step is temporarily unavailable',\n        id: 'costModelsWizardSourceErrorDescription',\n    },\n    costModelsWizardSourceErrorTitle: {\n        defaultMessage: 'This step is temporarily unavailable',\n        description: 'This step is temporarily unavailable',\n        id: 'costModelsWizardSourceErrorTitle',\n    },\n    costModelsWizardSourceSubtitle: {\n        defaultMessage: 'Select one or more sources to this cost model. You can skip this step and assign the cost model to a source at a later time. A source will be unavailable for selection if a cost model is already assigned to it.',\n        description: 'Select one or more sources to this cost model. You can skip this step and assign the cost model to a source at a later time. A source will be unavailable for selection if a cost model is already assigned to it.',\n        id: 'costModelsWizardSourceSubtitle',\n    },\n    costModelsWizardSourceTableAriaLabel: {\n        defaultMessage: 'Assign sources to cost model table',\n        description: 'Assign sources to cost model table',\n        id: 'costModelsWizardSourceTableAriaLabel',\n    },\n    costModelsWizardSourceTableCostModel: {\n        defaultMessage: 'Cost model assigned',\n        description: 'Cost model assigned',\n        id: 'costModelsWizardSourceTableCostModel',\n    },\n    costModelsWizardSourceTableDefaultCostModel: {\n        defaultMessage: 'Default cost model',\n        description: 'Default cost model',\n        id: 'costModelsWizardSourceTableDefaultCostModel',\n    },\n    costModelsWizardSourceTitle: {\n        defaultMessage: 'Assign sources to the cost model (optional)',\n        description: 'Assign sources to the cost model (optional)',\n        id: 'costModelsWizardSourceTitle',\n    },\n    costModelsWizardSourceWarning: {\n        defaultMessage: 'This source is assigned to {costModel} cost model. You will have to unassigned it first',\n        description: 'This source is assigned to {costModel} cost model. You will have to unassigned it first',\n        id: 'costModelsWizardSourceWarning',\n    },\n    costModelsWizardStepsGenInfo: {\n        defaultMessage: 'Enter information',\n        description: 'Enter information',\n        id: 'costModelsWizardStepsGenInfo',\n    },\n    costModelsWizardStepsPriceList: {\n        defaultMessage: 'Price list',\n        description: 'Price list',\n        id: 'costModelsWizardStepsPriceList',\n    },\n    costModelsWizardStepsReview: {\n        defaultMessage: 'Review details',\n        description: 'Review details',\n        id: 'costModelsWizardStepsReview',\n    },\n    costModelsWizardStepsSources: {\n        defaultMessage: 'Assign a source to the cost model',\n        description: 'Assign a source to the cost model',\n        id: 'costModelsWizardStepsSources',\n    },\n    costModelsWizardSubTitleTable: {\n        defaultMessage: 'The following is a list of rates you have set so far for this price list.',\n        description: 'The following is a list of rates you have set so far for this price list.',\n        id: 'costModelsWizardSubTitleTable',\n    },\n    costModelsWizardWarningSources: {\n        defaultMessage: 'Cannot assign cost model to a source that is already assigned to another one',\n        description: 'No Cannot assign cost model to a source that is already assigned to another one',\n        id: 'costModelsWizardWarningSources',\n    },\n    costTypeAmortized: {\n        defaultMessage: 'Amortized',\n        description: 'Amortized cost type',\n        id: 'costTypeAmortized',\n    },\n    costTypeAmortizedDesc: {\n        defaultMessage: 'Recurring and/or upfront costs are distributed evenly across the month',\n        description: 'Recurring and/or upfront costs are distributed evenly across the month',\n        id: 'costTypeAmortizedDesc',\n    },\n    costTypeBlended: {\n        defaultMessage: 'Blended',\n        description: 'Blended cost type',\n        id: 'costTypeBlended',\n    },\n    costTypeBlendedDesc: {\n        defaultMessage: 'Using a blended rate to calcuate cost usage',\n        description: 'Using a blended rate to calcuate cost usage',\n        id: 'costTypeBlendedDesc',\n    },\n    costTypeLabel: {\n        defaultMessage: 'Show cost as',\n        description: 'Show cost as',\n        id: 'costTypeLabel',\n    },\n    costTypeUnblended: {\n        defaultMessage: 'Unblended',\n        description: 'Unblended cost type',\n        id: 'costTypeUnblended',\n    },\n    costTypeUnblendedDesc: {\n        defaultMessage: 'Usage cost on the day you are charged',\n        description: 'Usage cost on the day you are charged',\n        id: 'costTypeUnblendedDesc',\n    },\n    cpuTitle: {\n        defaultMessage: 'CPU',\n        description: 'CPU',\n        id: 'cpuTitle',\n    },\n    create: {\n        defaultMessage: 'Create',\n        description: 'Create',\n        id: 'create',\n    },\n    createCostModelConfirmMsg: {\n        defaultMessage: 'Are you sure you want to stop creating a cost model? All settings will be discarded.',\n        description: 'Are you sure you want to stop creating a cost model? All settings will be discarded.',\n        id: 'createCostModelConfirmMsg',\n    },\n    createCostModelDesc: {\n        defaultMessage: 'A cost model allows you to associate a price to metrics provided by your sources to charge for utilization of resources.',\n        description: 'A cost model allows you to associate a price to metrics provided by your sources to charge for utilization of resources.',\n        id: 'createCostModelDesc',\n    },\n    createCostModelExit: {\n        defaultMessage: 'Exit cost model creation',\n        description: 'Exit cost model creation',\n        id: 'createCostModelExit',\n    },\n    createCostModelExitYes: {\n        defaultMessage: 'Yes, I want to exit',\n        description: 'Yes, I want to exit',\n        id: 'createCostModelExitYes',\n    },\n    createCostModelNoContinue: {\n        defaultMessage: 'No, I want to continue',\n        description: 'No, I want to continue',\n        id: 'createCostModelNoContinue',\n    },\n    createCostModelTitle: {\n        defaultMessage: 'Create a cost model',\n        description: 'Create a cost model',\n        id: 'createCostModelTitle',\n    },\n    createRate: {\n        defaultMessage: 'Create rate',\n        description: 'Create rate',\n        id: 'createRate',\n    },\n    currency: {\n        defaultMessage: 'Currency',\n        description: 'Currency',\n        id: 'currency',\n    },\n    currencyAbbreviations: {\n        defaultMessage: '{symbol, select, ' +\n            'billion {{value} B} ' +\n            'million {{value} M} ' +\n            'quadrillion {{value} q} ' +\n            'thousand {{value} K} ' +\n            'trillion {{value} t} ' +\n            'other {}}',\n        description: 'str.match(/([\\\\D]*)([\\\\d.,]+)([\\\\D]*)/)',\n        id: 'currencyAbbreviations',\n    },\n    // See https://www.localeplanet.com/icu/currency.html\n    currencyOptions: {\n        defaultMessage: '{units, select, ' +\n            'AUD {AUD (A$) - Australian Dollar}' +\n            'CAD {CAD (CA$) - Canadian Dollar}' +\n            'CHF {CHF (CHF) - Swiss Franc}' +\n            'CNY {CNY (CN¥) - Chinese Yuan}' +\n            'DKK {DKK (DKK) - Danish Krone}' +\n            'EUR {EUR (€) - Euro}' +\n            'GBP {GBP (£) - British Pound}' +\n            'HKD {HKD (HK$) - Hong Kong Dollar}' +\n            'JPY {JPY (¥) - Japanese Yen}' +\n            'NOK {NOK (NOK) - Norwegian Krone}' +\n            'NZD {NZD (NZ$) - New Zealand Dollar}' +\n            'SEK {SEK (SEK) - Swedish Krona}' +\n            'SGD {SGD (SGD) - Singapore Dollar}' +\n            'USD {USD ($) - United States Dollar} ' +\n            'ZAR {ZAR (ZAR) - South African Rand}' +\n            'other {}}',\n        description: 'return the proper unit label based on key: \"units\"',\n        id: 'currencyOptions',\n    },\n    // See https://www.localeplanet.com/icu/currency.html\n    currencyUnits: {\n        defaultMessage: '{units, select, ' +\n            'AUD {A$}' +\n            'CAD {CA$}' +\n            'CHF {CHF}' +\n            'CNY {CN¥}' +\n            'DKK {DKK}' +\n            'EUR {€}' +\n            'GBP {£}' +\n            'HKD {HK$}' +\n            'JPY {¥}' +\n            'NOK {NOK}' +\n            'NZD {NZ$}' +\n            'SEK {SEK}' +\n            'SGD {SGD}' +\n            'USD {$} ' +\n            'ZAR {ZAR}' +\n            'other {}}',\n        description: 'return the proper unit label based on key: \"units\"',\n        id: 'currencyUnits',\n    },\n    dashboardCumulativeCostComparison: {\n        defaultMessage: 'Cumulative cost comparison ({units})',\n        description: 'Cumulative cost comparison ({units})',\n        id: 'dashboardCumulativeCostComparison',\n    },\n    dashboardDailyUsageComparison: {\n        defaultMessage: 'Daily usage comparison ({units})',\n        description: 'Daily usage comparison ({units})',\n        id: 'dashboardDailyUsageComparison',\n    },\n    dashboardDatabaseTitle: {\n        defaultMessage: 'Database services cost',\n        description: 'Database services cost',\n        id: 'dashboardDatabaseTitle',\n    },\n    dashboardNetworkTitle: {\n        defaultMessage: 'Network services cost',\n        description: 'Network services cost',\n        id: 'dashboardNetworkTitle',\n    },\n    dashboardStorageTitle: {\n        defaultMessage: 'Storage services usage',\n        description: 'Storage services usage',\n        id: 'dashboardStorageTitle',\n    },\n    dashboardTotalCostTooltip: {\n        defaultMessage: 'This total cost is the sum of the infrastructure cost {infrastructureCost} and supplementary cost {supplementaryCost}',\n        description: 'total cost is the sum of the infrastructure cost and supplementary cost',\n        id: 'dashboardTotalCostTooltip',\n    },\n    delete: {\n        defaultMessage: 'Delete',\n        description: 'Delete',\n        id: 'delete',\n    },\n    description: {\n        defaultMessage: 'Description',\n        description: 'Description',\n        id: 'description',\n    },\n    detailsActionsExport: {\n        defaultMessage: 'Export data',\n        description: 'Export data',\n        id: 'detailsActionsExport',\n    },\n    detailsActionsPriceList: {\n        defaultMessage: 'View all price lists',\n        description: 'View all price lists',\n        id: 'detailsActionsPriceList',\n    },\n    detailsClustersModalTitle: {\n        defaultMessage: '{groupBy, select, ' +\n            'account {account {name} clusters} ' +\n            'cluster {cluster {name} clusters} ' +\n            'gcp_project {GCP project {name} clusters} ' +\n            'node {node {name} clusters} ' +\n            'org_unit_id {organizational unit {name} clusters} ' +\n            'payer_tenant_id {account {name} clusters} ' +\n            'product_service {service {name} clusters} ' +\n            'project {project {name} clusters} ' +\n            'region {region {name} clusters} ' +\n            'resource_location {region {name} clusters} ' +\n            'service {service {name} clusters} ' +\n            'service_name {service {name} clusters} ' +\n            'subscription_guid {account {name} clusters} ' +\n            'tag {tags {name} clusters} ' +\n            'other {}}',\n        description: '{groupBy} {name} clusters',\n        id: 'detailsClustersModalTitle',\n    },\n    detailsColumnManagementTitle: {\n        defaultMessage: 'Manage columns',\n        description: 'Manage columns',\n        id: 'detailsColumnManagementTitle',\n    },\n    detailsCostValue: {\n        defaultMessage: 'Cost: {value}',\n        description: 'Cost value',\n        id: 'detailsCostValue',\n    },\n    detailsEmptyState: {\n        defaultMessage: 'Processing data to generate a list of all services that sums to a total cost...',\n        description: 'Processing data to generate a list of all services that sums to a total cost...',\n        id: 'detailsEmptyState',\n    },\n    detailsMoreClusters: {\n        defaultMessage: ', {value} more...',\n        description: ', {value} more...',\n        id: 'detailsMoreClusters',\n    },\n    detailsResourceNames: {\n        defaultMessage: '{value, select, ' +\n            'account {Account names} ' +\n            'cluster {Cluster names} ' +\n            'gcp_project {GCP project names} ' +\n            'node {Node names} ' +\n            'org_unit_id {Organizational unit names} ' +\n            'payer_tenant_id {Account names} ' +\n            'product_service {Service names} ' +\n            'project {Project names} ' +\n            'region {Region names} ' +\n            'resource_location {Region names} ' +\n            'service {Service names} ' +\n            'service_name {Service names} ' +\n            'subscription_guid {Account names} ' +\n            'tag {Tag names} ' +\n            'other {}}',\n        description: 'Details table resource names',\n        id: 'detailsResourceNames',\n    },\n    detailsSummaryModalTitle: {\n        defaultMessage: '{groupBy, select, ' +\n            'account {{name} accounts} ' +\n            'cluster {{name} clusters} ' +\n            'gcp_project {{name} GCP projects} ' +\n            'node {{name} nodes} ' +\n            'org_unit_id {{name} organizational units} ' +\n            'payer_tenant_id {{name} accounts} ' +\n            'product_service {{name} services} ' +\n            'project {{name} projects} ' +\n            'region {{name} regions} ' +\n            'resource_location {{name} regions} ' +\n            'service {{name} services} ' +\n            'service_name {{name} services} ' +\n            'subscription_guid {{name} accounts} ' +\n            'tag {{name} tags} ' +\n            'other {}}',\n        description: ', {value} more...',\n        id: 'detailsSummaryModalTitle',\n    },\n    detailsUnusedRequestsLabel: {\n        defaultMessage: 'Unrequested capacity',\n        description: 'Unrequested capacity',\n        id: 'detailsUnusedRequestsLabel',\n    },\n    detailsUnusedUnits: {\n        defaultMessage: '{units} ({percentage}% of capacity)',\n        description: '{units} ({percentage}% of capacity)',\n        id: 'detailsUnusedUsageUnits',\n    },\n    detailsUnusedUsageLabel: {\n        defaultMessage: 'Unused capacity',\n        description: 'Unused capacity',\n        id: 'detailsUnusedUsageLabel',\n    },\n    detailsUsageCapacity: {\n        defaultMessage: 'Capacity - {value} {units}',\n        description: 'Capacity - {value} {units}',\n        id: 'detailsUsageCapacity',\n    },\n    detailsUsageLimit: {\n        defaultMessage: 'Limit - {value} {units}',\n        description: 'Limit - {value} {units}',\n        id: 'detailsUsageLimit',\n    },\n    detailsUsageRequests: {\n        defaultMessage: 'Requests - {value} {units}',\n        description: 'Requests - {value} {units}',\n        id: 'detailsUsageRequests',\n    },\n    detailsUsageUsage: {\n        defaultMessage: 'Usage - {value} {units}',\n        description: 'Usage - {value} {units}',\n        id: 'detailsUsageUsage',\n    },\n    detailsViewAll: {\n        defaultMessage: '{value, select, ' +\n            'account {View all accounts} ' +\n            'cluster {View all clusters} ' +\n            'gcp_project {View all GCP projects} ' +\n            'node {View all nodes} ' +\n            'org_unit_id {View all organizational units} ' +\n            'payer_tenant_id {View all accounts} ' +\n            'product_service {View all services} ' +\n            'project {View all projects} ' +\n            'region {View all regions} ' +\n            'resource_location {View all regions} ' +\n            'service {View all Services} ' +\n            'service_name {View all services} ' +\n            'subscription_guid {View all accounts} ' +\n            'tag {View all tags} ' +\n            'other {}}',\n        description: 'View all {value}',\n        id: 'detailsViewAll',\n    },\n    discountMinus: {\n        defaultMessage: 'Discount (-)',\n        description: 'Discount (-)',\n        id: 'discountMinus',\n    },\n    distributionModelDesc: {\n        defaultMessage: 'This choice is for users to direct how their raw costs are distributed either by CPU or Memory on the project level breakdowns.',\n        description: 'This choice is for users to direct how their raw costs are distributed either by CPU or Memory on the project level breakdowns.',\n        id: 'distributionModelDesc',\n    },\n    distributionType: {\n        defaultMessage: 'Distribution type',\n        description: 'Distribution type',\n        id: 'distributionType',\n    },\n    docsAddOcpSources: {\n        defaultMessage: 'https://access.redhat.com/documentation/en-us/cost_management_service/2022/html-single/adding_an_openshift_container_platform_source_to_cost_management',\n        description: 'https://access.redhat.com/documentation/en-us/cost_management_service/2022/html-single/adding_an_openshift_container_platform_source_to_cost_management',\n        id: 'docsAddOcpSources',\n    },\n    docsConfigCostModels: {\n        defaultMessage: 'https://access.redhat.com/documentation/en-us/cost_management_service/2022/html-single/using_cost_models/index#assembly-setting-up-cost-models',\n        description: 'https://access.redhat.com/documentation/en-us/cost_management_service/2022/html-single/using_cost_models/index#assembly-setting-up-cost-models',\n        id: 'docsConfigCostModels',\n    },\n    docsCostModelTerminology: {\n        defaultMessage: 'https://access.redhat.com/documentation/en-us/cost_management_service/2022/html-single/using_cost_models/index#cost-model-terminology',\n        description: 'https://access.redhat.com/documentation/en-us/cost_management_service/2022/html-single/using_cost_models/index#cost-model-terminology',\n        id: 'docsCostModelTerminology',\n    },\n    docsUsingCostModels: {\n        defaultMessage: 'https://access.redhat.com/documentation/en-us/cost_management_service/2022/html-single/using_cost_models/index',\n        description: 'https://access.redhat.com/documentation/en-us/cost_management_service/2022/html-single/using_cost_models/index',\n        id: 'docsUsingCostModels',\n    },\n    download: {\n        defaultMessage: 'Download',\n        description: 'Download',\n        id: 'download',\n    },\n    edit: {\n        defaultMessage: 'Edit',\n        description: 'Edit',\n        id: 'edit',\n    },\n    editCostModel: {\n        defaultMessage: 'Edit cost model',\n        description: 'Edit cost model',\n        id: 'editCostModel',\n    },\n    editMarkup: {\n        defaultMessage: 'Edit markup',\n        description: 'Edit markup',\n        id: 'editMarkup',\n    },\n    editMarkupOrDiscount: {\n        defaultMessage: 'Edit markup or discount',\n        description: 'Edit markup or discount',\n        id: 'editMarkupOrDiscount',\n    },\n    emptyFilterSourceStateSubtitle: {\n        defaultMessage: 'Sorry, no source with the given filter was found.',\n        description: 'Sorry, no source with the given filter was found.',\n        id: 'emptyFilterSourceStateSubtitle',\n    },\n    emptyFilterStateSubtitle: {\n        defaultMessage: 'Sorry, no data with the given filter was found.',\n        description: 'Sorry, no data with the given filter was found.',\n        id: 'emptyFilterStateSubtitle',\n    },\n    emptyFilterStateTitle: {\n        defaultMessage: 'No match found',\n        description: 'No match found',\n        id: 'emptyFilterStateTitle',\n    },\n    equalsSymbol: {\n        defaultMessage: '=',\n        description: 'Equals symbol',\n        id: 'equalsSymbol',\n    },\n    errorStateNotAuthorizedDesc: {\n        defaultMessage: 'Contact the cost management administrator to provide access to this application',\n        description: 'Contact the cost management administrator to provide access to this application',\n        id: 'errorStateNotAuthorizedDesc',\n    },\n    errorStateNotAuthorizedTitle: {\n        defaultMessage: \"You don't have access to the Cost management application\",\n        description: \"You don't have access to the Cost management application\",\n        id: 'errorStateNotAuthorizedTitle',\n    },\n    errorStateUnexpectedDesc: {\n        defaultMessage: 'We encountered an unexpected error. Contact your administrator.',\n        description: 'We encountered an unexpected error. Contact your administrator.',\n        id: 'errorStateUnexpectedDesc',\n    },\n    errorStateUnexpectedTitle: {\n        defaultMessage: 'Oops!',\n        description: 'Oops!',\n        id: 'errorStateUnexpectedTitle',\n    },\n    examplesTitle: {\n        defaultMessage: 'Examples',\n        description: 'Examples',\n        id: 'ExamplesTitle',\n    },\n    expiresOn: {\n        defaultMessage: 'Expires on',\n        description: 'Expires on',\n        id: 'expiresOn',\n    },\n    explorerChartDate: {\n        defaultMessage: '{month, select, ' +\n            '0 {Jan {date}} ' +\n            '1 {Feb {date}} ' +\n            '2 {Mar {date}} ' +\n            '3 {Apr {date}} ' +\n            '4 {May {date}} ' +\n            '5 {Jun {date}} ' +\n            '6 {Jul {date}} ' +\n            '7 {Aug {date}} ' +\n            '8 {Sep {date}} ' +\n            '9 {Oct {date}} ' +\n            '10 {Nov {date}} ' +\n            '11 {Dec {date}} ' +\n            'other {}}',\n        description: 'Month {date}',\n        id: 'explorerDateColumn',\n    },\n    explorerChartTitle: {\n        defaultMessage: '{value, select, ' +\n            'aws {Amazon Web Services - Top 5 Costliest} ' +\n            'aws_ocp {Amazon Web Services filtered by OpenShift - Top 5 Costliest} ' +\n            'azure {Microsoft Azure - Top 5 Costliest} ' +\n            'oci {Oracle Cloud Infrastructure - Top 5 Costliest} ' +\n            'azure_ocp {Microsoft Azure filtered by OpenShift - Top 5 Costliest} ' +\n            'gcp {Google Cloud Platform - Top 5 Costliest} ' +\n            'gcp_ocp {Google Cloud Platform filtered by OpenShift - Top 5 Costliest} ' +\n            'ibm {IBM Cloud - Top 5 Costliest} ' +\n            'ibm_ocp {IBM Cloud filtered by OpenShift - Top 5 Costliest} ' +\n            'ocp {All OpenShift - Top 5 Costliest} ' +\n            'ocp_cloud {All cloud filtered by OpenShift - Top 5 Costliest} ' +\n            'other {}}',\n        description: 'Explorer chart title',\n        id: 'explorerChartTitle',\n    },\n    explorerDateRange: {\n        defaultMessage: '{value, select, ' +\n            'current_month_to_date {Month to date} ' +\n            'last_ninety_days {Last 90 days} ' +\n            'last_sixty_days {Last 60 days} ' +\n            'last_thirty_days {Last 30 days} ' +\n            'previous_month_to_date {Previous month and month to date} ' +\n            'other {}}',\n        description: 'Date range based on {value}',\n        id: 'explorerDateRange',\n    },\n    explorerMonthDate: {\n        defaultMessage: '{month} {date}',\n        description: 'Cost {month} {date}',\n        id: 'explorerMonthDate',\n    },\n    explorerTableAriaLabel: {\n        defaultMessage: 'Cost Explorer table',\n        description: 'Cost Explorer table',\n        id: 'explorerTableAriaLabel',\n    },\n    explorerTitle: {\n        defaultMessage: 'Cost Explorer',\n        description: 'Cost Explorer title',\n        id: 'explorerTitle',\n    },\n    exportAggregateType: {\n        defaultMessage: 'Aggregate type',\n        description: 'Aggregate type',\n        id: 'exportAggregateType',\n    },\n    exportAll: {\n        defaultMessage: 'Export all',\n        description: 'Export all',\n        id: 'exportAll',\n    },\n    exportDesc: {\n        defaultMessage: 'The active selections from the table plus the values here will be used to generate an export file. When the file is available, download it from the {value} view.',\n        description: 'Export description',\n        id: 'exportDesc',\n    },\n    exportError: {\n        defaultMessage: 'Something went wrong, please try fewer selections',\n        description: 'Export error',\n        id: 'exportError',\n    },\n    exportFileName: {\n        defaultMessage: '{groupBy, select, ' +\n            'account {{resolution, select, daily {{provider}_accounts_daily_{startDate}_{endDate}} monthly {{provider}_accounts_monthly_{startDate}_{endDate}} other {}}} ' +\n            'cluster {{resolution, select, daily {{provider}_clusters_daily_{startDate}_{endDate}} monthly {{provider}_clusters_monthly_{startDate}_{endDate}} other {}}} ' +\n            'gcp_project {{resolution, select, daily {{provider}_gcp-projects_daily_{startDate}_{endDate}} monthly {{provider}_gcp-projects_monthly_{startDate}_{endDate}} other {}}} ' +\n            'node {{resolution, select, daily {{provider}_node_daily_{startDate}_{endDate}} monthly {{provider}_node_monthly_{startDate}_{endDate}} other {}}} ' +\n            'org_unit_id {{resolution, select, daily {{provider}_orgs_daily_{startDate}_{endDate}} monthly {{provider}_orgs_monthly_{startDate}_{endDate}} other {}}} ' +\n            'payer_tenant_id {{resolution, select, daily {{provider}_accounts_daily_{startDate}_{endDate}} monthly {{provider}_accounts_monthly_{startDate}_{endDate}} other {}}} ' +\n            'product_service {{resolution, select, daily {{provider}_services_daily_{startDate}_{endDate}} monthly {{provider}_services_monthly_{startDate}_{endDate}} other {}}} ' +\n            'project {{resolution, select, daily {{provider}_projects_daily_{startDate}_{endDate}} monthly {{provider}_projects_monthly_{startDate}_{endDate}} other {}}} ' +\n            'region {{resolution, select, daily {{provider}_regions_daily_{startDate}_{endDate}} monthly {{provider}_regions_monthly_{startDate}_{endDate}} other {}}} ' +\n            'resource_location {{resolution, select, daily {{provider}_regions_daily_{startDate}_{endDate}} monthly {{provider}_regions_monthly_{startDate}_{endDate}} other {}}} ' +\n            'service {{resolution, select, daily {{provider}_services_daily_{startDate}_{endDate}} monthly {{provider}_services_monthly_{startDate}_{endDate}} other {}}} ' +\n            'service_name {{resolution, select, daily {{provider}_services_daily_{startDate}_{endDate}} monthly {{provider}_services_monthly_{startDate}_{endDate}} other {}}} ' +\n            'subscription_guid {{resolution, select, daily {{provider}_accounts_daily_{startDate}_{endDate}} monthly {{provider}_accounts_monthly_{startDate}_{endDate}} other {}}} ' +\n            'tag {{resolution, select, daily {{provider}_tags_daily_{startDate}_{endDate}} monthly {{provider}_tags_monthly_{startDate}_{endDate}} other {}}} ' +\n            'other {}}',\n        description: 'Export file name',\n        id: 'exportFileName',\n    },\n    exportFormatType: {\n        defaultMessage: '{value, select, csv {CSV} json {JSON} other {}}',\n        description: 'Export format type',\n        id: 'exportFormatType',\n    },\n    exportFormatTypeTitle: {\n        defaultMessage: 'Format type',\n        description: 'Format type',\n        id: 'exportFormatTypeTitle',\n    },\n    exportGenerate: {\n        defaultMessage: 'Generate export',\n        description: 'Export export',\n        id: 'exportGenerate',\n    },\n    exportHeading: {\n        defaultMessage: '{groupBy, select, ' +\n            'account {Aggregates of the following accounts will be exported to a .csv file.} ' +\n            'cluster {Aggregates of the following clusters will be exported to a .csv file.} ' +\n            'gcp_project {Aggregates of the following GCP projects will be exported to a .csv file.} ' +\n            'node {Aggregates of the following nodes will be exported to a .csv file.} ' +\n            'org_unit_id {Aggregates of the following organizational units will be exported to a .csv file.} ' +\n            'payer_tenant_id {Aggregates of the following accounts will be exported to a .csv file.} ' +\n            'product_service {Aggregates of the following services will be exported to a .csv file.} ' +\n            'project {Aggregates of the following projects will be exported to a .csv file.} ' +\n            'region {Aggregates of the following regions will be exported to a .csv file.} ' +\n            'resource_location {Aggregates of the regions will be exported to a .csv file.} ' +\n            'service {Aggregates of the following services will be exported to a .csv file.} ' +\n            'service_name {Aggregates of the following services will be exported to a .csv file.} ' +\n            'subscription_guid {Aggregates of the following accounts will be exported to a .csv file.} ' +\n            'tag {Aggregates of the following tags will be exported to a .csv file.} ' +\n            'other {}}',\n        description: 'Export heading',\n        id: 'exportHeading',\n    },\n    exportName: {\n        defaultMessage: '{groupBy, select, ' +\n            'account {{provider, select, aws {Amazon Web Services grouped by Account} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Account} azure {Microsoft Azure grouped by Account} oci {Oracle Cloud Infrastructure grouped by Account} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Account} gcp {Google Cloud Platform grouped by Account} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Account} ibm {IBM Cloud grouped by Account} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Account} ocp {OpenShift grouped by Account} ocp_cloud {All cloud filtered by OpenShift grouped by Account} other {}}} ' +\n            'cluster {{provider, select, aws {Amazon Web Services grouped by Cluster} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Cluster} azure {Microsoft Azure grouped by Cluster} oci {Oracle Cloud Infrastructure grouped by Cluster} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Cluster} gcp {Google Cloud Platform grouped by Cluster} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Cluster} ibm {IBM Cloud grouped by Cluster} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Cluster} ocp {OpenShift grouped by Cluster} ocp_cloud {All cloud filtered by OpenShift grouped by Cluster} other {}}} ' +\n            'gcp_project {{provider, select, aws {Amazon Web Services grouped by GCP Project} aws_ocp {Amazon Web Services filtered by OpenShift grouped by GCP Project} azure {Microsoft Azure grouped by GCP Project} oci {Oracle Cloud Infrastructure grouped by GCP Project} azure_ocp {Microsoft Azure filtered by OpenShift grouped by GCP Project} gcp {Google Cloud Platform grouped by GCP Project} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by GCP Project} ibm {IBM Cloud grouped by GCP Project} ibm_ocp {IBM Cloud filtered by OpenShift grouped by GCP Project} ocp {OpenShift grouped by GCP Project} ocp_cloud {All cloud filtered by OpenShift grouped by GCP Project} other {}}} ' +\n            'node {{provider, select, aws {Amazon Web Services grouped by Node} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Node} azure {Microsoft Azure grouped by Node} oci {Oracle Cloud Infrastructure grouped by Node} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Node} gcp {Google Cloud Platform grouped by Node} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Node} ibm {IBM Cloud grouped by Node} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Node} ocp {OpenShift grouped by Node} ocp_cloud {All cloud filtered by OpenShift grouped by Node} other {}}} ' +\n            'org_unit_id {{provider, select, aws {Amazon Web Services grouped by Organizational unit} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Organizational unit} azure {Microsoft Azure grouped by Organizational unit} oci {Oracle Cloud Infrastructure grouped by Organizational unit} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Organizational unit} gcp {Google Cloud Platform grouped by Organizational unit} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Organizational unit} ibm {IBM Cloud grouped by Organizational unit} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Organizational unit} ocp {OpenShift grouped by Organizational unit} ocp_cloud {All cloud filtered by OpenShift grouped by Organizational unit} other {}}} ' +\n            'payer_tenant_id {{provider, select, oci {Oracle Cloud Infrastructure grouped by Account} other {}}}' +\n            'product_service {{provider, select, oci {Oracle Cloud Infrastructure grouped by Service} other {}}}' +\n            'project {{provider, select, aws {Amazon Web Services grouped by Project} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Project} azure {Microsoft Azure grouped by Project} oci {Oracle Cloud Infrastructure grouped by Project} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Project} gcp {Google Cloud Platform grouped by Project} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Project} ibm {IBM Cloud grouped by Project} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Project} ocp {OpenShift grouped by Project} ocp_cloud {All cloud filtered by OpenShift grouped by Project} other {}}} ' +\n            'region {{provider, select, aws {Amazon Web Services grouped by Region} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Region} azure {Microsoft Azure grouped by Region} oci {Oracle Cloud Infrastructure grouped by Region} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Region} gcp {Google Cloud Platform grouped by Region} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Region} ibm {IBM Cloud grouped by Region} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Region} ocp {OpenShift grouped by Region} ocp_cloud {All cloud filtered by OpenShift grouped by Region} other {}}} ' +\n            'resource_location {{provider, select, aws {Amazon Web Services grouped by Region} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Region} azure {Microsoft Azure grouped by Region} oci {Oracle Cloud Infrastructure grouped by Region} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Region} gcp {Google Cloud Platform grouped by Region} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Region} ibm {IBM Cloud grouped by Region} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Region} ocp {OpenShift grouped by Region} ocp_cloud {All cloud filtered by OpenShift grouped by Region} other {}}} ' +\n            'service {{provider, select, aws {Amazon Web Services grouped by Service} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Service} azure {Microsoft Azure grouped by Service} oci {Oracle Cloud Infrastructure grouped by Service} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Service} gcp {Google Cloud Platform grouped by Service} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Service} ibm {IBM Cloud grouped by Service} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Service} ocp {OpenShift grouped by Service} ocp_cloud {All cloud filtered by OpenShift grouped by Service} other {}}} ' +\n            'service_name {{provider, select, aws {Amazon Web Services grouped by Service} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Service} azure {Microsoft Azure grouped by Service} oci {Oracle Cloud Infrastructure grouped by Service} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Service} gcp {Google Cloud Platform grouped by Service} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Service} ibm {IBM Cloud grouped by Service} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Service} ocp {OpenShift grouped by Service} ocp_cloud {All cloud filtered by OpenShift grouped by Service} other {}}} ' +\n            'subscription_guid {{provider, select, aws {Amazon Web Services grouped by Account} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Account} azure {Microsoft Azure grouped by Account} oci {Oracle Cloud Infrastructure grouped by Account} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Account} gcp {Google Cloud Platform grouped by Account} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Account} ibm {IBM Cloud grouped by Account} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Account} ocp {OpenShift grouped by Account} ocp_cloud {All cloud filtered by OpenShift grouped by Account} other {}}} ' +\n            'tag {{provider, select, aws {Amazon Web Services grouped by Tag} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Tag} azure {Microsoft Azure grouped by Tag} oci {Oracle Cloud Infrastructure grouped by Tag} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Tag} gcp {Google Cloud Platform grouped by Tag} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Tag} ibm {IBM Cloud grouped by Tag} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Tag} ocp {OpenShift grouped by Tag} ocp_cloud {All cloud filtered by OpenShift grouped by Tag} other {}}} ' +\n            'other {}}',\n        description: 'Export name',\n        id: 'exportName',\n    },\n    exportNameRequired: {\n        defaultMessage: 'Please enter a name for the export',\n        description: 'Please enter a name for the export',\n        id: 'exportNameRequired',\n    },\n    exportNameTooLong: {\n        defaultMessage: 'Should not exceed 50 characters',\n        description: 'Should not exceed 50 characters',\n        id: 'exportNameTooLong',\n    },\n    exportResolution: {\n        defaultMessage: '{value, select, daily {Daily} monthly {Monthly} other {}}',\n        description: 'Export file name',\n        id: 'exportResolution',\n    },\n    exportSelected: {\n        defaultMessage: '{groupBy, select, ' +\n            'account {Selected accounts ({count})} ' +\n            'cluster {Selected clusters ({count})} ' +\n            'gcp_project {Selected GCP projects ({count})} ' +\n            'node {Selected nodes ({count})} ' +\n            'org_unit_id {Selected organizational units ({count})} ' +\n            'payer_tenant_id {Selected accounts ({count})} ' +\n            'product_service {Selected services ({count})} ' +\n            'project {Selected projects ({count})} ' +\n            'region {Selected regions ({count})} ' +\n            'resource_location {Selected regions ({count})} ' +\n            'service {Selected services ({count})} ' +\n            'service_name {Selected services ({count})} ' +\n            'subscription_guid {Selected accounts ({count})} ' +\n            'tag {Selected tags ({count})} ' +\n            'other {}}',\n        description: 'Selected items for export',\n        id: 'exportSelected',\n    },\n    exportTimeScope: {\n        defaultMessage: '{value, select, current {Current ({date})} previous {Previous ({date})} other {}}',\n        description: 'Export time scope',\n        id: 'exportTimeScope',\n    },\n    exportTimeScopeTitle: {\n        defaultMessage: 'Month',\n        description: 'Month',\n        id: 'exportTimeScopeTitle',\n    },\n    exportTitle: {\n        defaultMessage: 'Export',\n        description: 'Export title',\n        id: 'exportTitle',\n    },\n    exportsDesc: {\n        defaultMessage: 'Exports are available for download from the time that they are generated up to 7 days later. After 7 days, the export file will be removed.',\n        description: 'Exports are available for download from the time that they are generated up to 7 days later. After 7 days, the export file will be removed.',\n        id: 'exportsDesc',\n    },\n    exportsEmptyState: {\n        defaultMessage: 'To get started, close this view and select rows in the table you want to export and click the export button to start the journey.',\n        description: 'To get started, close this view and select rows in the table you want to export and click the export button to start the journey.',\n        id: 'exportsEmptyState',\n    },\n    exportsFailed: {\n        defaultMessage: 'Could not create export file',\n        description: 'Export failed',\n        id: 'exportsFailed',\n    },\n    exportsFailedDesc: {\n        defaultMessage: 'Something went wrong with the generation of this export file. Try exporting again.',\n        description: 'Export failed description',\n        id: 'exportsFailedDesc',\n    },\n    exportsSuccess: {\n        defaultMessage: 'Export preparing for download',\n        description: 'Export success',\n        id: 'exportsSuccess',\n    },\n    exportsSuccessDesc: {\n        defaultMessage: 'The export is preparing for download. It will be accessible from {value} view. {link}',\n        description: 'Export success description',\n        id: 'exportsSuccessDesc',\n    },\n    exportsTableAriaLabel: {\n        defaultMessage: 'Available exports table',\n        description: 'Available exports table',\n        id: 'exportsTableAriaLabel',\n    },\n    exportsTitle: {\n        defaultMessage: 'All exports',\n        description: 'All exports',\n        id: 'exportsTitle',\n    },\n    exportsUnavailable: {\n        defaultMessage: 'Export cannot be generated',\n        description: 'Export cannot be generated',\n        id: 'exportsUnavailable',\n    },\n    filterByButtonAriaLabel: {\n        defaultMessage: '{value, select, ' +\n            'account {Filter button for account name} ' +\n            'cluster {Filter button for cluster name} ' +\n            'gcp_project {Filter button for GCP project name} ' +\n            'name {Filter button for name name} ' +\n            'node {Filter button for node name} ' +\n            'org_unit_id {Filter button for organizational unit name} ' +\n            'payer_tenant_id {Filter button for account name} ' +\n            'product_service {Filter button for service name} ' +\n            'project {Filter button for project name} ' +\n            'region {Filter button for region name} ' +\n            'resource_location {Filter button for region name} ' +\n            'service {Filter button for service name} ' +\n            'service_name {Filter button for service_name name} ' +\n            'subscription_guid {Filter button for account name} ' +\n            'tag {Filter button for tag name} ' +\n            'other {}}',\n        description: 'Filter button for \"value\" name',\n        id: 'filterByButtonAriaLabel',\n    },\n    filterByInputAriaLabel: {\n        defaultMessage: '{value, select, ' +\n            'account {Input for account name} ' +\n            'cluster {Input for cluster name} ' +\n            'gcp_project {Input for GCP project name} ' +\n            'name {Input for name name} ' +\n            'node {Input for node name} ' +\n            'org_unit_id {Input for organizational unit name} ' +\n            'payer_tenant_id {Input for account name} ' +\n            'product_service {Input for service_name name} ' +\n            'project {Input for project name} ' +\n            'region {Input for region name} ' +\n            'resource_location {Input for region name} ' +\n            'service {Input for service name} ' +\n            'service_name {Input for service_name name} ' +\n            'subscription_guid {Input for account name} ' +\n            'tag {Input for tag name} ' +\n            'other {}}',\n        description: 'Input for {value} name',\n        id: 'filterByInputAriaLabel',\n    },\n    filterByOrgUnitAriaLabel: {\n        defaultMessage: 'Organizational units',\n        description: 'Organizational units',\n        id: 'filterByOrgUnitAriaLabel',\n    },\n    filterByOrgUnitPlaceholder: {\n        defaultMessage: 'Choose unit',\n        description: 'Choose unit',\n        id: 'filterByOrgUnitPlaceholder',\n    },\n    filterByPlaceholder: {\n        defaultMessage: '{value, select, ' +\n            'account {Filter by account} ' +\n            'cluster {Filter by cluster} ' +\n            'description {Filter by description} ' +\n            'gcp_project {Filter by GCP project} ' +\n            'name {Filter by name} ' +\n            'node {Filter by node} ' +\n            'org_unit_id {Filter by organizational unit} ' +\n            'payer_tenant_id {Filter by account} ' +\n            'product_service {Filter by service} ' +\n            'project {Filter by project} ' +\n            'region {Filter by region} ' +\n            'resource_location {Filter by region} ' +\n            'service {Filter by service} ' +\n            'service_name {Filter by service} ' +\n            'source_type {Filter by source type} ' +\n            'subscription_guid {Filter by account} ' +\n            'tag {Filter by tag} ' +\n            'other {}}',\n        description: 'Filter by \"value\"',\n        id: 'filterByPlaceholder',\n    },\n    filterByTagKeyAriaLabel: {\n        defaultMessage: 'Tag keys',\n        description: 'Tag keys',\n        id: 'filterByTagKeyAriaLabel',\n    },\n    filterByTagKeyPlaceholder: {\n        defaultMessage: 'Choose key',\n        description: 'Choose key',\n        id: 'filterByTagKeyPlaceholder',\n    },\n    filterByTagValueAriaLabel: {\n        defaultMessage: 'Tag values',\n        description: 'Tag values',\n        id: 'filterByTagValueAriaLabel',\n    },\n    filterByTagValueButtonAriaLabel: {\n        defaultMessage: 'Filter button for tag value',\n        description: 'Filter button for tag value',\n        id: 'filterByTagValueButtonAriaLabel',\n    },\n    filterByTagValueInputPlaceholder: {\n        defaultMessage: 'Filter by value',\n        description: 'Filter by value',\n        id: 'filterByTagValueInputPlaceholder',\n    },\n    filterByTagValuePlaceholder: {\n        defaultMessage: 'Choose value',\n        description: 'Choose value',\n        id: 'filterByTagValuePlaceholder',\n    },\n    filterByValues: {\n        defaultMessage: '{value, select, ' +\n            'account {Account} ' +\n            'cluster {Cluster} ' +\n            'gcp_project {GCP project} ' +\n            'name {Name} ' +\n            'node {Node} ' +\n            'org_unit_id {Organizational unit} ' +\n            'payer_tenant_id {Account} ' +\n            'product_service {Service} ' +\n            'project {Project} ' +\n            'region {Region} ' +\n            'resource_location {Region} ' +\n            'service {Service} ' +\n            'service_name {Service} ' +\n            'subscription_guid {Account} ' +\n            'tag {Tag} ' +\n            'other {}}',\n        description: 'Filter by values',\n        id: 'filterByValues',\n    },\n    forDate: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {{value} for January {startDate}} other {{value} for January {startDate}-{endDate}}}} ' +\n            '1 {{count, plural, one {{value} for February {startDate}} other {{value} for February {startDate}-{endDate}}}} ' +\n            '2 {{count, plural, one {{value} for March {startDate}} other {{value} for March {startDate}-{endDate}}}} ' +\n            '3 {{count, plural, one {{value} for April {startDate}} other {{value} for April {startDate}-{endDate}}}} ' +\n            '4 {{count, plural, one {{value} for May {startDate}} other {{value} for May {startDate}-{endDate}}}} ' +\n            '5 {{count, plural, one {{value} for June {startDate}} other {{value} for June {startDate}-{endDate}}}} ' +\n            '6 {{count, plural, one {{value} for July {startDate}} other {{value} for July {startDate}-{endDate}}}} ' +\n            '7 {{count, plural, one {{value} for August {startDate}} other {{value} for August {startDate}-{endDate}}}} ' +\n            '8 {{count, plural, one {{value} for September {startDate}} other {{value} for September {startDate}-{endDate}}}} ' +\n            '9 {{count, plural, one {{value} for October {startDate}} other {{value} for October {startDate}-{endDate}}}} ' +\n            '10 {{count, plural, one {{value} for November {startDate}} other {{value} for November {startDate}-{endDate}}}} ' +\n            '11 {{count, plural, one {{value} for December {startDate}} other {{value} for December {startDate}-{endDate}}}} ' +\n            'other {}}',\n        description: '{value} for date range',\n        id: 'forDate',\n    },\n    gcp: {\n        defaultMessage: 'Google Cloud Platform',\n        description: 'Google Cloud Platform',\n        id: 'gcp',\n    },\n    gcpComputeTitle: {\n        defaultMessage: 'Compute instances usage',\n        description: 'Compute instances usage',\n        id: 'gcpComputeTitle',\n    },\n    gcpCostTitle: {\n        defaultMessage: 'Google Cloud Platform Services cost',\n        description: 'Google Cloud Platform Services cost',\n        id: 'gcpCostTitle',\n    },\n    gcpCostTrendTitle: {\n        defaultMessage: 'Google Cloud Platform Services cumulative cost comparison ({units})',\n        description: 'Google Cloud Platform Services cumulative cost comparison ({units})',\n        id: 'gcpCostTrendTitle',\n    },\n    gcpDailyCostTrendTitle: {\n        defaultMessage: 'Google Cloud Platform Services daily cost comparison ({units})',\n        description: 'Google Cloud Platform Services daily cost comparison ({units})',\n        id: 'gcpDailyCostTrendTitle',\n    },\n    gcpDesc: {\n        defaultMessage: 'Raw cost from Google Cloud Platform infrastructure.',\n        description: 'Raw cost from Google Cloud Platform infrastructure.',\n        id: 'gcpDesc',\n    },\n    gcpDetailsTableAriaLabel: {\n        defaultMessage: 'Google Cloud Platform details table',\n        description: 'Google Cloud Platform details table',\n        id: 'gcpDetailsTable',\n    },\n    gcpDetailsTitle: {\n        defaultMessage: 'Google Cloud Platform Details',\n        description: 'Google Cloud Platform Details',\n        id: 'gcpDetailsTitle',\n    },\n    groupByAll: {\n        defaultMessage: '{value, select, ' +\n            'account {{count, plural, one {All account} other {All accounts}}} ' +\n            'cluster {{count, plural, one {All cluster} other {All clusters}}} ' +\n            'gcp_project {{count, plural, one {All GCP project} other {All GCP projects}}} ' +\n            'node {{count, plural, one {All node} other {All nodes}}} ' +\n            'org_unit_id {{count, plural, one {All organizational unit} other {All organizational units}}} ' +\n            'payer_tenant_id {{count, plural, one {All account} other {All accounts}}} ' +\n            'product_service {{count, plural, one {All service} other {All services}}} ' +\n            'project {{count, plural, one {All project} other {All projects}}} ' +\n            'region {{count, plural, one {All region} other {All regions}}} ' +\n            'resource_location {{count, plural, one {All region} other {All regions}}} ' +\n            'service {{count, plural, one {All service} other {All services}}} ' +\n            'service_name {{count, plural, one {All service} other {All services}}} ' +\n            'subscription_guid {{count, plural, one {All account} other {All accounts}}} ' +\n            'tag {{count, plural, one {All tag} other {All tags}}} ' +\n            'other {}}',\n        description: 'All group by value',\n        id: 'groupByAll',\n    },\n    groupByLabel: {\n        defaultMessage: 'Group by',\n        description: 'group by label',\n        id: 'groupByLabel',\n    },\n    groupByTop: {\n        defaultMessage: '{value, select, ' +\n            'account {{count, plural, one {Top account} other {Top accounts}}} ' +\n            'cluster {{count, plural, one {Top cluster} other {Top clusters}}} ' +\n            'gcp_project {{count, plural, one {Top GCP project} other {Top GCP projects}}} ' +\n            'node {{count, plural, one {Top node} other {Top node}}} ' +\n            'org_unit_id {{count, plural, one {Top organizational unit} other {Top organizational units}}} ' +\n            'payer_tenant_id {{count, plural, one {Top account} other {Top accounts}}} ' +\n            'product_service {{count, plural, one {Top service} other {Top services}}} ' +\n            'project {{count, plural, one {Top project} other {Top projects}}} ' +\n            'region {{count, plural, one {Top region} other {Top regions}}} ' +\n            'resource_location {{count, plural, one {Top region} other {Top regions}}} ' +\n            'service {{count, plural, one {Top service} other {Top services}}} ' +\n            'service_name {{count, plural, one {Top service} other {Top services}}} ' +\n            'subscription_guid {{count, plural, one {Top account} other {Top accounts}}} ' +\n            'tag {{count, plural, one {Top tag} other {Top tags}}} ' +\n            'other {}}',\n        description: 'Top group by value',\n        id: 'groupByTop',\n    },\n    groupByValueNames: {\n        defaultMessage: '{groupBy, select, ' +\n            'account {Account names} ' +\n            'cluster {Cluster names} ' +\n            'gcp_project {GCP project names} ' +\n            'node {Node names} ' +\n            'org_unit_id {Organizational unit names} ' +\n            'payer_tenant_id {Account names} ' +\n            'product_service {Service names} ' +\n            'project {Project names} ' +\n            'region {Region names} ' +\n            'resource_location {Region names} ' +\n            'service {Service names} ' +\n            'service_name {Service names} ' +\n            'subscription_guid {Account names} ' +\n            'tag {Tag names} ' +\n            'other {}}',\n        description: 'Selected items for export',\n        id: 'groupByValueNames',\n    },\n    groupByValues: {\n        defaultMessage: '{value, select, ' +\n            'account {{count, plural, one {account} other {accounts}}} ' +\n            'cluster {{count, plural, one {cluster} other {clusters}}} ' +\n            'gcp_project {{count, plural, one {GCP project} other {GCP projects}}} ' +\n            'node {{count, plural, one {node} other {node}}} ' +\n            'org_unit_id {{count, plural, one {organizational unit} other {organizational units}}} ' +\n            'payer_tenant_id {{count, plural, one {account} other {accounts}}} ' +\n            'product_service {{count, plural, one {service} other {services}}} ' +\n            'project {{count, plural, one {project} other {projects}}} ' +\n            'region {{count, plural, one {region} other {regions}}} ' +\n            'resource_location {{count, plural, one {region} other {regions}}} ' +\n            'service {{count, plural, one {service} other {services}}} ' +\n            'service_name {{count, plural, one {service} other {services}}} ' +\n            'subscription_guid {{count, plural, one {account} other {accounts}}} ' +\n            'tag {{count, plural, one {tag} other {tags}}} ' +\n            'other {}}',\n        description: 'Group by values',\n        id: 'groupByValues',\n    },\n    groupByValuesTitleCase: {\n        defaultMessage: '{value, select, ' +\n            'account {{count, plural, one {Account} other {Accounts}}} ' +\n            'cluster {{count, plural, one {Cluster} other {Clusters}}} ' +\n            'gcp_project {{count, plural, one {GCP project} other {GCP projects}}} ' +\n            'node {{count, plural, one {Node} other {Node}}} ' +\n            'org_unit_id {{count, plural, one {Organizational unit} other {Organizational units}}} ' +\n            'payer_tenant_id {{count, plural, one {Account} other {Accounts}}} ' +\n            'product_service {{count, plural, one {Service} other {Services}}} ' +\n            'project {{count, plural, one {Project} other {Projects}}} ' +\n            'region {{count, plural, one {Region} other {Regions}}} ' +\n            'resource_location {{count, plural, one {Region} other {Regions}}} ' +\n            'service {{count, plural, one {Service} other {Services}}} ' +\n            'service_name {{count, plural, one {Service} other {Services}}} ' +\n            'subscription_guid {{count, plural, one {Account} other {Accounts}}} ' +\n            'tag {{count, plural, one {Tag} other {Tags}}} ' +\n            'other {}}',\n        description: 'Group by values',\n        id: 'groupByValuesTitleCase',\n    },\n    historicalChartCostLabel: {\n        defaultMessage: 'Cost ({units})',\n        description: 'Cost ({units})',\n        id: 'historicalChartCostLabel',\n    },\n    historicalChartDayOfMonthLabel: {\n        defaultMessage: 'Day of Month',\n        description: 'Day of Month',\n        id: 'historicalChartDayOfMonthLabel',\n    },\n    historicalChartTitle: {\n        defaultMessage: '{value, select, ' +\n            'cost {Cost comparison} ' +\n            'cpu {CPU usage, request, and limit comparison} ' +\n            'memory {Memory usage, request, and limit comparison} ' +\n            'modal {{name} daily usage comparison} ' +\n            'storage {Storage usage comparison} ' +\n            'other {}}',\n        description: 'Historical chart titles',\n        id: 'historicalChartTitle',\n    },\n    historicalChartUsageLabel: {\n        defaultMessage: '{value, select, instance_type {hrs} storage {gb-mo} other {}}',\n        description: 'Historical chart usage labels',\n        id: 'historicalChartUsageLabel',\n    },\n    ibm: {\n        defaultMessage: 'IBM Cloud',\n        description: 'IBM Cloud',\n        id: 'ibm',\n    },\n    ibmComputeTitle: {\n        defaultMessage: 'Compute instances usage',\n        description: 'Compute instances usage',\n        id: 'ibmComputeTitle',\n    },\n    ibmCostTitle: {\n        defaultMessage: 'IBM Cloud Services cost',\n        description: 'IBM Cloud Services cost',\n        id: 'ibmCostTitle',\n    },\n    ibmCostTrendTitle: {\n        defaultMessage: 'IBM Cloud Services cumulative cost comparison ({units})',\n        description: 'IBM Cloud Services cumulative cost comparison ({units})',\n        id: 'ibmCostTrendTitle',\n    },\n    ibmDailyCostTrendTitle: {\n        defaultMessage: 'IBM Cloud Services daily cost comparison ({units})',\n        description: 'IBM Cloud Services daily cost comparison ({units})',\n        id: 'ibmDailyCostTrendTitle',\n    },\n    ibmDesc: {\n        defaultMessage: 'Raw cost from IBM Cloud infrastructure.',\n        description: 'Raw cost from IBM Cloud infrastructure.',\n        id: 'ibmDesc',\n    },\n    ibmDetailsTableAriaLabel: {\n        defaultMessage: 'IBM Cloud details table',\n        description: 'IBM Cloud details table',\n        id: 'ibmDetailsTable',\n    },\n    ibmDetailsTitle: {\n        defaultMessage: 'IBM Cloud Details',\n        description: 'IBM details title',\n        id: 'ibmDetailsTitle',\n    },\n    inactiveSourcesGoTo: {\n        defaultMessage: 'Go to Sources for more information',\n        description: 'Go to Sources for more information',\n        id: 'inactiveSourcesGoTo',\n    },\n    inactiveSourcesTitle: {\n        defaultMessage: 'A problem was detected with {value}',\n        description: 'A problem was detected with {value}',\n        id: 'inactiveSourcesGoTitle',\n    },\n    inactiveSourcesTitleMultiplier: {\n        defaultMessage: 'A problem was detected with the following sources',\n        description: 'A problem was detected with the following sources',\n        id: 'inactiveSourcesTitleMultiplier',\n    },\n    infrastructure: {\n        defaultMessage: 'Infrastructure',\n        description: 'Infrastructure',\n        id: 'infrastructure',\n    },\n    learnMore: {\n        defaultMessage: 'Learn more',\n        description: 'Learn more',\n        id: 'learnMore',\n    },\n    loadingStateDesc: {\n        defaultMessage: 'Searching for your sources. Do not refresh the browser',\n        description: 'Searching for your sources. Do not refresh the browser',\n        id: 'loadingStateDesc',\n    },\n    loadingStateTitle: {\n        defaultMessage: 'Looking for sources...',\n        description: 'Looking for sources',\n        id: 'loadingStateTitle',\n    },\n    maintenanceEmptyStateDesc: {\n        defaultMessage: 'Cost Management is currently undergoing scheduled maintenance and will be unavailable from 13:00 - 19:00 UTC (09:00 AM - 03:00 PM EDT).',\n        description: 'Cost Management is currently undergoing scheduled maintenance',\n        id: 'maintenanceEmptyStateDesc',\n    },\n    maintenanceEmptyStateInfo: {\n        defaultMessage: 'For more information visit {url}',\n        description: 'more information url',\n        id: 'maintenanceEmptyStateInfo',\n    },\n    maintenanceEmptyStateThanks: {\n        defaultMessage: 'We will be back soon. Thank you for your patience!',\n        description: 'thanks you for your patience',\n        id: 'maintenanceEmptyStateThanks',\n    },\n    manageColumnsAriaLabel: {\n        defaultMessage: 'Table column management',\n        description: 'Table column management',\n        id: 'manageColumnsAriaLabel',\n    },\n    manageColumnsDesc: {\n        defaultMessage: 'Selected categories will be displayed in the table',\n        description: 'Selected categories will be displayed in the table',\n        id: 'manageColumnsDesc',\n    },\n    manageColumnsTitle: {\n        defaultMessage: 'Manage columns',\n        description: 'Manage columns',\n        id: 'manageColumnsTitle',\n    },\n    markupDescription: {\n        defaultMessage: 'The portion of cost calculated by applying markup or discount to infrastructure raw cost in the cost management application',\n        description: 'The portion of cost calculated by applying markup or discount to infrastructure raw cost in the cost management application',\n        id: 'markupDescription',\n    },\n    markupOrDiscount: {\n        defaultMessage: 'Markup or Discount',\n        description: 'Markup or Discount',\n        id: 'markupOrDiscount',\n    },\n    markupOrDiscountDesc: {\n        defaultMessage: 'This Percentage is applied to raw cost calculations by multiplying the cost with this percentage. Costs calculated from price list rates will not be effected.',\n        description: 'This Percentage is applied to raw cost calculations by multiplying the cost with this percentage. Costs calculated from price list rates will not be effected.',\n        id: 'markupOrDiscountDesc',\n    },\n    markupOrDiscountModalDesc: {\n        defaultMessage: 'Use markup/discount to manipulate how the raw costs are being calculated for your sources. Note, costs calculated from price list rates will not be affected by this.',\n        description: 'Use markup/discount to manipulate how the raw costs are being calculated for your sources. Note, costs calculated from price list rates will not be affected by this.',\n        id: 'markupOrDiscountModalDesc',\n    },\n    markupOrDiscountNumber: {\n        defaultMessage: 'Markup or discount must be a number',\n        description: 'Markup or discount must be a number',\n        id: 'markupOrDiscountNumber',\n    },\n    markupOrDiscountTooLong: {\n        defaultMessage: 'Should not exceed 10 decimals',\n        description: 'Should not exceed 10 decimals',\n        id: 'markupOrDiscountTooLong',\n    },\n    markupPlus: {\n        defaultMessage: 'Markup (+)',\n        description: 'Markup (+)',\n        id: 'markupPlus',\n    },\n    markupTitle: {\n        defaultMessage: 'Markup',\n        description: 'Markup',\n        id: 'markupTitle',\n    },\n    measurement: {\n        defaultMessage: 'Measurement',\n        description: 'Measurement',\n        id: 'measurement',\n    },\n    measurementPlaceholder: {\n        defaultMessage: 'Filter by measurements',\n        description: 'Filter by measurements',\n        id: 'measurementPlaceholder',\n    },\n    measurementValues: {\n        defaultMessage: '{value, select, ' +\n            'count {{count, plural, one {Count} other {Count ({units})}}} ' +\n            'effective_usage {{count, plural, one {Request} other {Effective-usage ({units})}}} ' +\n            'request {{count, plural, one {Request} other {Request ({units})}}} ' +\n            'usage {{count, plural, one {Usage} other {Usage ({units})}}} ' +\n            'other {}}',\n        description: 'Measurement values',\n        id: 'measurementValues',\n    },\n    measurementValuesDesc: {\n        defaultMessage: '{value, select, ' +\n            'count {{units, select, ' +\n            'node_month {The distinct number of nodes identified during the month} ' +\n            'pvc_month {The distinct number of volume claims identified during the month} ' +\n            'cluster_month {The distinct number of clusters identified during the month} ' +\n            'other {}}} ' +\n            'effective_usage {The greater of usage and request each hour} ' +\n            'request {The pod resources requested, as reported by OpenShift} ' +\n            'usage {The pod resources used, as reported by OpenShift} ' +\n            'other {}}',\n        description: 'Measurement descriptions',\n        id: 'measurementValuesDesc',\n    },\n    memoryTitle: {\n        defaultMessage: 'Memory',\n        description: 'Memory',\n        id: 'memoryTitle',\n    },\n    metric: {\n        defaultMessage: 'Metric',\n        description: 'Metric',\n        id: 'metric',\n    },\n    metricPlaceholder: {\n        defaultMessage: 'Filter by metrics',\n        description: 'Filter by metrics',\n        id: 'metricPlaceholder',\n    },\n    metricValues: {\n        defaultMessage: '{value, select, ' +\n            'cpu {CPU} ' +\n            'cluster {Cluster} ' +\n            'memory {Memory} ' +\n            'node {Node} ' +\n            'persistent_volume_claims {Persistent volume claims} ' +\n            'storage {Storage} ' +\n            'other {}}',\n        description: 'Metric values',\n        id: 'metricValues',\n    },\n    monthOverMonthChange: {\n        defaultMessage: 'Month over month change',\n        description: 'Month over month change',\n        id: 'monthOverMonthChange',\n    },\n    names: {\n        defaultMessage: '{count, plural, one {Name} other {Names}}',\n        description: 'Name plural or singular',\n        id: 'names',\n    },\n    next: {\n        defaultMessage: 'next',\n        description: 'next',\n        id: 'next',\n    },\n    no: {\n        defaultMessage: 'No',\n        description: 'No',\n        id: 'no',\n    },\n    noDataForDate: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {No data available for Jan {startDate}} other {No data available for Jan {startDate}-{endDate}}}} ' +\n            '1 {{count, plural, one {No data available for Feb {startDate}} other {No data available for Feb {startDate}-{endDate}}}} ' +\n            '2 {{count, plural, one {No data available for Mar {startDate}} other {No data available for Mar {startDate}-{endDate}}}} ' +\n            '3 {{count, plural, one {No data available for Apr {startDate}} other {No data available for Apr {startDate}-{endDate}}}} ' +\n            '4 {{count, plural, one {No data available for May {startDate}} other {No data available for May {startDate}-{endDate}}}} ' +\n            '5 {{count, plural, one {No data available for Jun {startDate}} other {No data available for Jun {startDate}-{endDate}}}} ' +\n            '6 {{count, plural, one {No data available for Jul {startDate}} other {No data available for Jul {startDate}-{endDate}}}} ' +\n            '7 {{count, plural, one {No data available for Aug {startDate}} other {No data available for Aug {startDate}-{endDate}}}} ' +\n            '8 {{count, plural, one {No data available for Sep {startDate}} other {No data available for Sep {startDate}-{endDate}}}} ' +\n            '9 {{count, plural, one {No data available for Oct {startDate}} other {No data available for Oct {startDate}-{endDate}}}} ' +\n            '10 {{count, plural, one {No data available for Nov {startDate}} other {No data available for Nov {startDate}-{endDate}}}} ' +\n            '11 {{count, plural, one {No data available for Dec {startDate}} other {No data available for Dec {startDate}-{endDate}}}} ' +\n            'other {}}',\n        description: 'No data available for date range',\n        id: 'noDataForDate',\n    },\n    noDataStateDesc: {\n        defaultMessage: 'We have detected a source, but we are not done processing the incoming data. The time to process could take up to 24 hours. Try refreshing the page at a later time.',\n        description: 'still processing request, 24 hour message',\n        id: 'noDataStateDesc',\n    },\n    noDataStateRefresh: {\n        defaultMessage: 'Refresh this page',\n        description: 'Refresh this page',\n        id: 'noDataStateRefresh',\n    },\n    noDataStateTitle: {\n        defaultMessage: 'Still processing the data',\n        description: 'Still processing the data',\n        id: 'noDataStateTitle',\n    },\n    noExportsStateTitle: {\n        defaultMessage: 'There are no export files available',\n        description: 'There are no export files available',\n        id: 'NoExportsStateTitle',\n    },\n    noProvidersStateAwsDesc: {\n        defaultMessage: 'Add an Amazon Web Services account to see a total cost breakdown of your spend by accounts, organizational units, services, regions, or tags.',\n        description: 'Add an Amazon Web Services account to see a total cost breakdown of your spend by accounts, organizational units, services, regions, or tags.',\n        id: 'noProvidersStateAwsDesc',\n    },\n    noProvidersStateAwsTitle: {\n        defaultMessage: 'Track your Amazon Web Services spending!',\n        description: 'Track your Amazon Web Services spending!',\n        id: 'noProvidersStateAwsTitle',\n    },\n    noProvidersStateAzureDesc: {\n        defaultMessage: 'Add a Microsoft Azure account to see a total cost breakdown of your spend by accounts, services, regions, or tags.',\n        description: 'Add a Microsoft Azure account to see a total cost breakdown of your spend by accounts, services, regions, or tags.',\n        id: 'noProvidersStateAzureDesc',\n    },\n    noProvidersStateAzureTitle: {\n        defaultMessage: 'Track your Microsoft Azure spending!',\n        description: 'Track your Microsoft Azure spending!',\n        id: 'noProvidersStateAzureTitle',\n    },\n    noProvidersStateGcpDesc: {\n        defaultMessage: 'Add a Google Cloud Platform account to see a total cost breakdown of your spend by accounts, services, regions, or tags.',\n        description: 'Add a Google Cloud Platform account to see a total cost breakdown of your spend by accounts, services, regions, or tags.',\n        id: 'noProvidersStateGcpDesc',\n    },\n    noProvidersStateGcpTitle: {\n        defaultMessage: 'Track your Google Cloud Platform spending!',\n        description: 'Track your Google Cloud Platform spending!',\n        id: 'noProvidersStateGcpTitle',\n    },\n    noProvidersStateGetStarted: {\n        defaultMessage: 'Get started with Sources',\n        description: 'Get started with Sources',\n        id: 'noProvidersStateGetStarted',\n    },\n    noProvidersStateIbmDesc: {\n        defaultMessage: 'Add an IBM Cloud account to see a total cost breakdown of your spend by accounts, services, regions, or tags.',\n        description: 'Add an IBM Cloud account to see a total cost breakdown of your spend by accounts, services, regions, or tags.',\n        id: 'noProvidersStateIbmDesc',\n    },\n    noProvidersStateIbmTitle: {\n        defaultMessage: 'Track your IBM Cloud spending!',\n        description: 'Track your IBM Cloud spending!',\n        id: 'noProvidersStateIbmTitle',\n    },\n    noProvidersStateOciDesc: {\n        defaultMessage: 'Add an Oracle Cloud Infrastructure account to see a total cost breakdown of your spend by accounts, services, regions, or tags.',\n        description: 'Add an Oracle Cloud Infrastructure account to see a total cost breakdown of your spend by accounts, services, regions, or tags.',\n        id: 'noProvidersStateOciDesc',\n    },\n    noProvidersStateOciTitle: {\n        defaultMessage: 'Track your Oracle Cloud Infrastructure spending!',\n        description: 'Track your Oracle Cloud Infrastructure spending!',\n        id: 'noProvidersStateOciTitle',\n    },\n    noProvidersStateOcpAddSources: {\n        defaultMessage: 'Add an OpenShift cluster to Cost Management',\n        description: 'Add an OpenShift cluster to Cost Management',\n        id: 'noProvidersStateOcpAddSources',\n    },\n    noProvidersStateOcpDesc: {\n        defaultMessage: 'Add an OpenShift Container Platform cluster to see a total cost breakdown of your pods by cluster, node, project, or labels.',\n        description: 'Add an OpenShift Container Platform cluster to see a total cost breakdown of your pods by cluster, node, project, or labels.',\n        id: 'noProvidersStateOcpDesc',\n    },\n    noProvidersStateOcpTitle: {\n        defaultMessage: 'Track your OpenShift spending!',\n        description: 'Track your OpenShift spending!',\n        id: 'noProvidersStateOcpTitle',\n    },\n    noProvidersStateOverviewDesc: {\n        defaultMessage: 'Add a source, like an OpenShift Container Platform cluster or a cloud services account, to see a total cost breakdown as well as usage information like instance counts and storage.',\n        description: 'Add a source, like an OpenShift Container Platform cluster or a cloud services account, to see a total cost breakdown as well as usage information like instance counts and storage.',\n        id: 'noProvidersStateOverviewDesc',\n    },\n    noProvidersStateOverviewTitle: {\n        defaultMessage: 'Track your spending!',\n        description: 'Track your spending!',\n        id: 'noProvidersStateOverviewTitle',\n    },\n    noResultsFound: {\n        defaultMessage: 'No results found',\n        description: 'No results found',\n        id: 'noResultsFound',\n    },\n    notAuthorizedStateAws: {\n        defaultMessage: 'Amazon Web Services in Cost Management',\n        description: 'Amazon Web Services in Cost Management',\n        id: 'noAuthorizedStateAws',\n    },\n    notAuthorizedStateAzure: {\n        defaultMessage: 'Microsoft Azure in Cost Management',\n        description: 'Microsoft Azure in Cost Management',\n        id: 'notAuthorizedStateAzure',\n    },\n    notAuthorizedStateCostModels: {\n        defaultMessage: 'Cost Models in Cost Management',\n        description: 'Cost Models in Cost Management',\n        id: 'notAuthorizedStateCostModels',\n    },\n    notAuthorizedStateGcp: {\n        defaultMessage: 'Google Cloud Platform in Cost Management',\n        description: 'Google Cloud Platform in Cost Management',\n        id: 'notAuthorizedStateGcp',\n    },\n    notAuthorizedStateIbm: {\n        defaultMessage: 'IBM Cloud in Cost Management',\n        description: 'IBM Cloud in Cost Management',\n        id: 'notAuthorizedStateIbm',\n    },\n    notAuthorizedStateOci: {\n        defaultMessage: 'Oracle Cloud Infrastructure in Cost Management',\n        description: 'Oracle Cloud Infrastructure in Cost Management',\n        id: 'notAuthorizedStateOci',\n    },\n    notAuthorizedStateOcp: {\n        defaultMessage: 'OpenShift in Cost Management',\n        description: 'OpenShift in Cost Management',\n        id: 'notAuthorizedStateOcp',\n    },\n    oci: {\n        defaultMessage: 'Oracle Cloud Infrastructure',\n        description: 'Oracle Cloud Infrastructure',\n        id: 'oci',\n    },\n    ociComputeTitle: {\n        defaultMessage: 'Virtual machines usage',\n        description: 'Virtual machines usage',\n        id: 'ociComputeTitle',\n    },\n    ociCostTrendTitle: {\n        defaultMessage: 'Oracle Cloud Infrastructure cumulative cost comparison ({units})',\n        description: 'Oracle Cloud Infrastructure cumulative cost comparison ({units})',\n        id: 'ociCostTrendTitle',\n    },\n    ociDailyCostTrendTitle: {\n        defaultMessage: 'Oracle Cloud Infrastructure daily cost comparison ({units})',\n        description: 'Oracle Cloud Infrastructure daily cost comparison ({units})',\n        id: 'ociDailyCostTrendTitle',\n    },\n    ociDashboardCostTitle: {\n        defaultMessage: 'Oracle Cloud Infrastructure cost',\n        description: 'Oracle Cloud Infrastructure cost',\n        id: 'ociDashboardCostTitle',\n    },\n    ociDesc: {\n        defaultMessage: 'Raw cost from Oracle Cloud Infrastructure.',\n        description: 'Raw cost from Oracle Cloud Infrastructure.',\n        id: 'ociDesc',\n    },\n    ociDetailsTableAriaLabel: {\n        defaultMessage: 'Oracle Cloud Infrastructure details table',\n        description: 'Oracle Cloud Infrastructure details table',\n        id: 'ociDetailsTable',\n    },\n    ociDetailsTitle: {\n        defaultMessage: 'Oracle Cloud Infrastructure details',\n        description: 'Oracle Cloud Infrastructure details',\n        id: 'ociDetailsTitle',\n    },\n    ocpCloudDashboardComputeTitle: {\n        defaultMessage: 'Compute services usage',\n        description: 'Compute services usage',\n        id: 'ocpCloudDashboardComputeTitle',\n    },\n    ocpCloudDashboardCostTitle: {\n        defaultMessage: 'All cloud filtered by OpenShift cost',\n        description: 'All cloud filtered by OpenShift cost',\n        id: 'ocpCloudDashboardCostTitle',\n    },\n    ocpCloudDashboardCostTrendTitle: {\n        defaultMessage: 'All cloud filtered by OpenShift cumulative cost comparison ({units})',\n        description: 'All cloud filtered by OpenShift cumulative cost comparison ({units})',\n        id: 'ocpCloudDashboardCostTrendTitle',\n    },\n    ocpCloudDashboardDailyCostTrendTitle: {\n        defaultMessage: 'All cloud filtered by OpenShift daily cost comparison ({units})',\n        description: 'All cloud filtered by OpenShift daily cost comparison ({units})',\n        id: 'ocpCloudDashboardDailyCostTrendTitle',\n    },\n    ocpCpuUsageAndRequests: {\n        defaultMessage: 'CPU usage and requests',\n        description: 'CPU usage and requests',\n        id: 'ocpCpuUsageAndRequests',\n    },\n    ocpDailyUsageAndRequestComparison: {\n        defaultMessage: 'Daily usage and requests comparison ({units})',\n        description: 'Daily usage and requests comparison',\n        id: 'ocpDailyUsageAndRequestComparison',\n    },\n    ocpDashboardCPUUsageAndRequests: {\n        defaultMessage: 'OpenShift CPU usage and requests',\n        description: 'OpenShift CPU usage and requests',\n        id: 'ocpDashboardCPUUsageAndRequests',\n    },\n    ocpDashboardCostTitle: {\n        defaultMessage: 'All OpenShift cost',\n        description: 'All OpenShift cost',\n        id: 'ocpDashboardCostTitle',\n    },\n    ocpDashboardCostTrendTitle: {\n        defaultMessage: 'All OpenShift cumulative cost comparison ({units})',\n        description: 'All OpenShift cumulative cost comparison in units',\n        id: 'ocpDashboardCostTrendTitle',\n    },\n    ocpDashboardDailyCostTitle: {\n        defaultMessage: 'All OpenShift daily cost comparison ({units})',\n        description: 'All OpenShift daily cost comparison in units',\n        id: 'ocpDashboardDailyCostTitle',\n    },\n    ocpDashboardMemoryUsageAndRequests: {\n        defaultMessage: 'OpenShift Memory usage and requests',\n        description: 'OpenShift Memory usage and requests',\n        id: 'ocpDashboardMemoryUsageAndRequests',\n    },\n    ocpDashboardVolumeUsageAndRequests: {\n        defaultMessage: 'OpenShift Volume usage and requests',\n        description: 'OpenShift Volume usage and requests',\n        id: 'ocpUsageAndRequests',\n    },\n    ocpDetailsInfrastructureCost: {\n        defaultMessage: 'Infrastructure cost',\n        description: 'Infrastructure cost',\n        id: 'ocpDetailsInfrastructureCost',\n    },\n    ocpDetailsInfrastructureCostDesc: {\n        defaultMessage: 'The cost based on raw usage data from the underlying infrastructure.',\n        description: 'The cost based on raw usage data from the underlying infrastructure.',\n        id: 'ocpDetailsInfrastructureCostDesc',\n    },\n    ocpDetailsSupplementaryCost: {\n        defaultMessage: 'Supplementary cost',\n        description: 'Supplementary cost',\n        id: 'ocpDetailsSupplementaryCost',\n    },\n    ocpDetailsSupplementaryCostDesc: {\n        defaultMessage: 'All costs not directly attributed to the infrastructure. These costs are determined by applying a price list within a cost model to OpenShift cluster metrics.',\n        description: 'All costs not directly attributed to the infrastructure. These costs are determined by applying a price list within a cost model to OpenShift cluster metrics.',\n        id: 'ocpDetailsSupplementaryCostDesc',\n    },\n    ocpDetailsTableAriaLabel: {\n        defaultMessage: 'OpenShift details table',\n        description: 'OpenShift details table',\n        id: 'ocpDetailsTable',\n    },\n    ocpDetailsTitle: {\n        defaultMessage: 'OpenShift details',\n        description: 'OpenShift details title',\n        id: 'ocpDetailsTitle',\n    },\n    ocpInfrastructureCostTitle: {\n        defaultMessage: 'OpenShift infrastructure cost',\n        description: 'OpenShift infrastructure cost',\n        id: 'ocpInfrastructureCostTitle',\n    },\n    ocpInfrastructureCostTrendTitle: {\n        defaultMessage: 'OpenShift cumulative infrastructure cost comparison ({units})',\n        description: 'OpenShift cumulative infrastructure cost comparison with units',\n        id: 'ocpInfrastructureCostTrendTitle',\n    },\n    ocpInfrastructureDailyCostTrendTitle: {\n        defaultMessage: 'OpenShift daily infrastructure cost comparison ({units})',\n        description: 'OpenShift daily infrastructure cost comparison with units',\n        id: 'ocpInfrastructureDailyCostTrendTitle',\n    },\n    ocpMemoryUsageAndRequests: {\n        defaultMessage: 'Memory usage and requests',\n        description: 'Memory usage and requests',\n        id: 'ocpMemoryUsageAndRequests',\n    },\n    ocpSupplementaryCostTitle: {\n        defaultMessage: 'OpenShift supplementary cost',\n        description: 'OpenShift supplementary cost',\n        id: 'ocpSupplementaryCostTitle',\n    },\n    ocpSupplementaryCostTrendTitle: {\n        defaultMessage: 'OpenShift cumulative supplementary cost comparison ({units})',\n        description: 'OpenShift cumulative supplementary cost comparison with units',\n        id: 'ocpSupplementaryCostTrendTitle',\n    },\n    ocpSupplementaryDailyCostTrendTitle: {\n        defaultMessage: 'OpenShift daily supplementary cost comparison ({units})',\n        description: 'OpenShift daily supplementary cost comparison with units',\n        id: 'ocpSupplementaryDailyCostTrendTitle',\n    },\n    ocpUsageCostTitle: {\n        defaultMessage: 'OpenShift usage cost',\n        description: 'OpenShift usage cost',\n        id: 'ocpUsageCostTitle',\n    },\n    ocpUsageDashboardCPUTitle: {\n        defaultMessage: 'OpenShift CPU usage and requests',\n        description: 'OpenShift CPU usage and requests',\n        id: 'ocpUsageDashboardCPUTitle',\n    },\n    ocpUsageDashboardCostTrendTitle: {\n        defaultMessage: 'Metering cumulative cost comparison ({units})',\n        description: 'Metering cumulative cost comparison with units',\n        id: 'ocpUsageDashboardCostTrendTitle',\n    },\n    ocpVolumeUsageAndRequests: {\n        defaultMessage: 'Volume usage and requests',\n        description: 'Volume usage and requests',\n        id: 'ocpVolumeUsageAndRequests',\n    },\n    openShift: {\n        defaultMessage: 'OpenShift',\n        description: 'OpenShift',\n        id: 'openShift',\n    },\n    openShiftCloudInfrastructure: {\n        defaultMessage: 'OpenShift cloud infrastructure',\n        description: 'OpenShift cloud infrastructure',\n        id: 'openShiftCloudInfrastructure',\n    },\n    openShiftCloudInfrastructureDesc: {\n        defaultMessage: 'Infrastructure cost attributed to OpenShift Container Platform, based on a subset of cloud cost data.',\n        description: 'Infrastructure cost attributed to OpenShift Container Platform, based on a subset of cloud cost data.',\n        id: 'openShiftCloudInfrastructureDesc',\n    },\n    openShiftDesc: {\n        defaultMessage: 'Total cost for OpenShift Container Platform, comprising the infrastructure cost and cost calculated from metrics.',\n        description: 'Total cost for OpenShift Container Platform, comprising the infrastructure cost and cost calculated from metrics.',\n        id: 'openShiftDesc',\n    },\n    overviewInfoArialLabel: {\n        defaultMessage: 'A description of perspectives',\n        description: 'A description of perspectives',\n        id: 'overviewInfoArialLabel',\n    },\n    overviewTitle: {\n        defaultMessage: 'Cost Management Overview',\n        description: 'Cost Management Overview',\n        id: 'overviewTitle',\n    },\n    pageTitleAws: {\n        defaultMessage: 'Amazon Web Services - Cost Management | Red Hat OpenShift Cluster Manager',\n        description: 'Amazon Web Services - Cost Management | Red Hat OpenShift Cluster Manager',\n        id: 'pageTitleAws',\n    },\n    pageTitleAzure: {\n        defaultMessage: 'Microsoft Azure - Cost Management | Red Hat OpenShift Cluster Manager',\n        description: 'Microsoft Azure - Cost Management | Red Hat OpenShift Cluster Manager',\n        id: 'pageTitleAzure',\n    },\n    pageTitleCostModels: {\n        defaultMessage: 'Cost Models - Cost Management | Red Hat OpenShift Cluster Manager',\n        description: 'Cost Models - Cost Management | Red Hat OpenShift Cluster Manager',\n        id: 'pageTitleCostModels',\n    },\n    pageTitleDefault: {\n        defaultMessage: 'Cost Management | Red Hat OpenShift Cluster Manager',\n        description: 'Cost Management | Red Hat OpenShift Cluster Manager',\n        id: 'pageTitleDefault',\n    },\n    pageTitleExplorer: {\n        defaultMessage: 'Cost Explorer - Cost Management | Red Hat OpenShift Cluster Manager',\n        description: 'Cost Explorer - Cost Management | Red Hat OpenShift Cluster Manager',\n        id: 'pageTitleExplorer',\n    },\n    pageTitleGcp: {\n        defaultMessage: 'Google Cloud Platform - Cost Management | Red Hat OpenShift Cluster Manager',\n        description: 'Google Cloud Platform - Cost Management | Red Hat OpenShift Cluster Manager',\n        id: 'pageTitleGcp',\n    },\n    pageTitleIbm: {\n        defaultMessage: 'IBM Cloud - Cost Management | Red Hat OpenShift Cluster Manager',\n        description: 'IBM Cloud - Cost Management | Red Hat OpenShift Cluster Manager',\n        id: 'pageTitleIbm',\n    },\n    pageTitleOci: {\n        defaultMessage: 'Oracle Cloud Infrastructure - Cost Management | Red Hat OpenShift Cluster Manager',\n        description: 'Oracle Cloud Infrastructure - Cost Management | Red Hat OpenShift Cluster Manager',\n        id: 'pageTitleOci',\n    },\n    pageTitleOcp: {\n        defaultMessage: 'OpenShift - Cost Management | Red Hat OpenShift Cluster Manager',\n        description: 'OpenShift - Cost Management | Red Hat OpenShift Cluster Manager',\n        id: 'pageTitleOcp',\n    },\n    pageTitleOverview: {\n        defaultMessage: 'Overview - Cost Management | Red Hat OpenShift Cluster Manager',\n        description: 'Overview - Cost Management | Red Hat OpenShift Cluster Manager',\n        id: 'pageTitleOverview',\n    },\n    percent: {\n        defaultMessage: '{value} %',\n        description: 'Percent value',\n        id: 'percent',\n    },\n    percentOfCost: {\n        defaultMessage: '{value} % of cost',\n        description: '{value} % of cost',\n        id: 'percentOfCost',\n    },\n    percentSymbol: {\n        defaultMessage: '%',\n        description: 'Percent symbol',\n        id: 'percentSymbol',\n    },\n    percentTotalCost: {\n        defaultMessage: '{value} {units} ({percent} %)',\n        description: '{value} {units} ({percent} %)',\n        id: 'percentTotalCost',\n    },\n    perspective: {\n        defaultMessage: 'Perspective',\n        description: 'Perspective dropdown label',\n        id: 'perspective',\n    },\n    perspectiveValues: {\n        defaultMessage: '{value, select, ' +\n            'aws {Amazon Web Services} ' +\n            'aws_ocp {Amazon Web Services filtered by OpenShift} ' +\n            'azure {Microsoft Azure} ' +\n            'oci {Oracle Cloud Infrastructure} ' +\n            'azure_ocp {Microsoft Azure filtered by OpenShift} ' +\n            'gcp {Google Cloud Platform} ' +\n            'gcp_ocp {Google Cloud Platform filtered by OpenShift} ' +\n            'ibm {IBM Cloud} ' +\n            'ibm_ocp {IBM filtered by OpenShift} ' +\n            'ocp {All OpenShift} ' +\n            'ocp_cloud {All cloud filtered by OpenShift} ' +\n            'other {}}',\n        description: 'Perspective values',\n        id: 'perspectiveValues',\n    },\n    priceList: {\n        defaultMessage: 'Price list',\n        description: 'Price list',\n        id: 'priceList',\n    },\n    priceListAddRate: {\n        defaultMessage: 'Add rate',\n        description: 'Add rate',\n        id: 'priceListAddRate',\n    },\n    priceListDeleteRate: {\n        defaultMessage: 'Delete rate',\n        description: 'Delete rate',\n        id: 'priceListDeleteRate',\n    },\n    priceListDeleteRateDesc: {\n        defaultMessage: '{count, plural, one {This action will remove {metric} rate from {costModel}} other {This action will remove {metric} rate from {costModel}, which is assigned to the following sources:}}',\n        description: 'This action will remove {metric} rate from {costModel}, which is assigned to the following sources:',\n        id: 'priceListDesc',\n    },\n    priceListDuplicate: {\n        defaultMessage: 'This tag key is already in use',\n        description: 'This tag key is already in use',\n        id: 'priceListDuplicate',\n    },\n    priceListEditRate: {\n        defaultMessage: 'Edit rate',\n        description: 'Edit rate',\n        id: 'priceListEditRate',\n    },\n    priceListEmptyRate: {\n        defaultMessage: 'No rates are set',\n        description: 'No rates are set',\n        id: 'priceListEmptyRate',\n    },\n    priceListEmptyRateDesc: {\n        defaultMessage: 'To add rates to the price list, click on the \"Add\" rate button above.',\n        description: 'To add rates to the price list, click on the \"Add\" rate button above.',\n        id: 'priceListEmptyRateDesc',\n    },\n    priceListNumberRate: {\n        defaultMessage: 'Rate must be a number',\n        description: 'Rate must be a number',\n        id: 'priceListNumberRate',\n    },\n    priceListPosNumberRate: {\n        defaultMessage: 'Rate must be a positive number',\n        description: 'Rate must be a positive number',\n        id: 'PriceListPosNumberRate',\n    },\n    rate: {\n        defaultMessage: 'Rate',\n        description: 'Rate',\n        id: 'rate',\n    },\n    rawCostDescription: {\n        defaultMessage: 'The costs reported by a cloud provider without any cost model calculations applied.',\n        description: 'The costs reported by a cloud provider without any cost model calculations applied.',\n        id: 'rawCostDescription',\n    },\n    rawCostTitle: {\n        defaultMessage: 'Raw cost',\n        description: 'Raw cost',\n        id: 'rawCostTitle',\n    },\n    rbacErrorDescription: {\n        defaultMessage: 'There was a problem receiving user permissions. Refreshing this page may fix it. If it does not, please contact your admin.',\n        description: 'rbac error description',\n        id: 'rbacErrorDescription',\n    },\n    rbacErrorTitle: {\n        defaultMessage: 'Failed to get RBAC information',\n        description: 'RBAC error title',\n        id: 'rbacErrorTitle',\n    },\n    redHatStatusUrl: {\n        defaultMessage: 'https://status.redhat.com',\n        description: 'Red Hat status url for cloud services',\n        id: 'redHatStatusUrl',\n    },\n    requests: {\n        defaultMessage: 'Requests',\n        description: 'Requests',\n        id: 'requests',\n    },\n    save: {\n        defaultMessage: 'Save',\n        description: 'Save',\n        id: 'save',\n    },\n    select: {\n        defaultMessage: 'Select...',\n        description: 'Select...',\n        id: 'select',\n    },\n    selectAll: {\n        defaultMessage: 'Select all',\n        description: 'Select all',\n        id: 'selectAll',\n    },\n    selected: {\n        defaultMessage: '{value} selected',\n        description: '{value} selected',\n        id: 'selected',\n    },\n    sinceDate: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {January {startDate}} other {January {startDate}-{endDate}}}} ' +\n            '1 {{count, plural, one {February {startDate}} other {February {startDate}-{endDate}}}} ' +\n            '2 {{count, plural, one {March {startDate}} other {March {startDate}-{endDate}}}} ' +\n            '3 {{count, plural, one {April {startDate}} other {April {startDate}-{endDate}}}} ' +\n            '4 {{count, plural, one {May {startDate}} other {May {startDate}-{endDate}}}} ' +\n            '5 {{count, plural, one {June {startDate}} other {June {startDate}-{endDate}}}} ' +\n            '6 {{count, plural, one {July {startDate}} other {July {startDate}-{endDate}}}} ' +\n            '7 {{count, plural, one {August {startDate}} other {August {startDate}-{endDate}}}} ' +\n            '8 {{count, plural, one {September {startDate}} other {September {startDate}-{endDate}}}} ' +\n            '9 {{count, plural, one {October {startDate}} other {October {startDate}-{endDate}}}} ' +\n            '10 {{count, plural, one {November {startDate}} other {November {startDate}-{endDate}}}} ' +\n            '11 {{count, plural, one {December {startDate}} other {December {startDate}-{endDate}}}} ' +\n            'other {}}',\n        description: 'Monthly date range',\n        id: 'sinceDate',\n    },\n    sources: {\n        defaultMessage: 'Sources',\n        description: 'Sources',\n        id: 'sources',\n    },\n    status: {\n        defaultMessage: '{value, select, ' + 'pending {Pending} ' + 'running {Running} ' + 'failed {Failed} ' + 'other {}}',\n        description: 'Status',\n        id: 'status',\n    },\n    statusActions: {\n        defaultMessage: 'Status/Actions',\n        description: 'Status/Actions',\n        id: 'statusActions',\n    },\n    suggestions: {\n        defaultMessage: 'Suggestions',\n        description: 'Suggestions',\n        id: 'suggestions',\n    },\n    supplementary: {\n        defaultMessage: 'Supplementary',\n        description: 'Supplementary',\n        id: 'supplementary',\n    },\n    tagHeadingKey: {\n        defaultMessage: 'Key',\n        description: 'Key',\n        id: 'tagHeadingKey',\n    },\n    tagHeadingTitle: {\n        defaultMessage: 'Tags ({value})',\n        description: 'Tags ({value})',\n        id: 'tagHeadingTitle',\n    },\n    tagHeadingValue: {\n        defaultMessage: 'Value',\n        description: 'Value',\n        id: 'tagHeadingValue',\n    },\n    tagNames: {\n        defaultMessage: 'Tag names',\n        description: 'Tag Names',\n        id: 'tagNames',\n    },\n    timeOfExport: {\n        defaultMessage: 'Time of export',\n        description: 'Time of export',\n        id: 'timeOfExport',\n    },\n    toolBarBulkSelectAll: {\n        defaultMessage: 'Select all ({value} items)',\n        description: 'Select all ({value} items)',\n        id: 'toolBarBulkSelectAll',\n    },\n    toolBarBulkSelectAriaDeselect: {\n        defaultMessage: 'Deselect all items',\n        description: 'Deselect all items',\n        id: 'toolBarBulkSelectAriaDeselect',\n    },\n    toolBarBulkSelectAriaSelect: {\n        defaultMessage: 'Select all items',\n        description: 'Select all items',\n        id: 'toolBarBulkSelectAriaSelect',\n    },\n    toolBarBulkSelectNone: {\n        defaultMessage: 'Select none (0 items)',\n        description: 'Select none (0 items)',\n        id: 'toolBarBulkSelectNone',\n    },\n    toolBarBulkSelectPage: {\n        defaultMessage: 'Select page ({value} items)',\n        description: 'Select page ({value} items)',\n        id: 'toolBarBulkSelectPage',\n    },\n    toolBarPriceListMeasurementPlaceHolder: {\n        defaultMessage: 'Filter by measurements',\n        description: 'Filter by measurements',\n        id: 'toolBarPriceListMeasurementPlaceHolder',\n    },\n    toolBarPriceListMetricPlaceHolder: {\n        defaultMessage: 'Filter by metrics',\n        description: 'Filter by metrics',\n        id: 'toolBarPriceListMetricPlaceHolder',\n    },\n    unitTooltips: {\n        defaultMessage: '{units, select, ' +\n            'core_hours {{value} core-hours} ' +\n            'gb {{value} GB} ' +\n            'gb_hours {{value} GB-hours} ' +\n            'gb_mo {{value} GB-month} ' +\n            'gibibyte_month {{value} GiB-month} ' +\n            'hour {{value} hours} ' +\n            'hrs {{value} hours} ' +\n            'vm_hours {{value} VM-hours} ' +\n            'other {{value}}}',\n        description: 'return value and unit based on key: \"units\"',\n        id: 'unitTooltips',\n    },\n    units: {\n        defaultMessage: '{units, select, ' +\n            'core_hours {core-hours} ' +\n            'gb {GB} ' +\n            'gb_hours {GB-hours} ' +\n            'gb_mo {GB-month} ' +\n            'gibibyte_month {GiB-month} ' +\n            'hour {hours} ' +\n            'hrs {hours} ' +\n            'vm_hours {VM-hours} ' +\n            'other {}}',\n        description: 'return the proper unit label based on key: \"units\"',\n        id: 'units',\n    },\n    usage: {\n        defaultMessage: 'Usage',\n        description: 'Usage',\n        id: 'usage',\n    },\n    usageCostDescription: {\n        defaultMessage: 'The portion of cost calculated by applying hourly and/or monthly price list rates to metrics.',\n        description: 'The portion of cost calculated by applying hourly and/or monthly price list rates to metrics.',\n        id: 'usageCostDescription',\n    },\n    usageCostTitle: {\n        defaultMessage: 'Usage cost',\n        description: 'Usage cost',\n        id: 'usageCostTitle',\n    },\n    various: {\n        defaultMessage: 'Various',\n        description: 'Various',\n        id: 'various',\n    },\n    volumeTitle: {\n        defaultMessage: 'Volume',\n        description: 'Volume',\n        id: 'volumeTitle',\n    },\n    yes: {\n        defaultMessage: 'Yes',\n        description: 'Yes',\n        id: 'yes',\n    },\n});\n","import { asyncComponent } from 'components/async';\nimport React from 'react';\nconst PermissionsWrapper = asyncComponent(() => import(/* webpackChunkName: \"permissionsWrapper\" */ './permissionsWrapper'));\n// Permissions component wrapper\nexport function userAccess(Component) {\n    const PermissionsComponent = props => {\n        return (React.createElement(PermissionsWrapper, null,\n            React.createElement(Component, Object.assign({}, props))));\n    };\n    return PermissionsComponent;\n}\n","import { asyncComponent } from 'components/async';\nimport { userAccess } from 'components/userAccess';\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nconst NotFound = asyncComponent(() => import(/* webpackChunkName: \"notFound\" */ 'routes/state/notFound'));\nconst AwsBreakdown = asyncComponent(() => import(/* webpackChunkName: \"aws\" */ 'routes/views/details/awsBreakdown'));\nconst AwsDetails = asyncComponent(() => import(/* webpackChunkName: \"aws\" */ 'routes/views/details/awsDetails'));\nconst AzureBreakdown = asyncComponent(() => import(/* webpackChunkName: \"azure\" */ 'routes/views/details/azureBreakdown'));\nconst OciBreakdown = asyncComponent(() => import(/* webpackChunkName: \"oci\" */ 'routes/views/details/ociBreakdown'));\nconst AzureDetails = asyncComponent(() => import(/* webpackChunkName: \"azure\" */ 'routes/views/details/azureDetails'));\nconst OciDetails = asyncComponent(() => import(/* webpackChunkName: \"oci\" */ 'routes/views/details/ociDetails'));\nconst Explorer = asyncComponent(() => import(/* webpackChunkName: \"explorer\" */ 'routes/views/explorer'));\nconst GcpBreakdown = asyncComponent(() => import(/* webpackChunkName: \"gcp\" */ 'routes/views/details/gcpBreakdown'));\nconst GcpDetails = asyncComponent(() => import(/* webpackChunkName: \"gcp\" */ 'routes/views/details/gcpDetails'));\nconst IbmBreakdown = asyncComponent(() => import(/* webpackChunkName: \"ibm\" */ 'routes/views/details/ibmBreakdown'));\nconst IbmDetails = asyncComponent(() => import(/* webpackChunkName: \"ibm\" */ 'routes/views/details/ibmDetails'));\nconst OcpDetails = asyncComponent(() => import(/* webpackChunkName: \"ocp\" */ 'routes/views/details/ocpDetails'));\nconst OcpBreakdown = asyncComponent(() => import(/* webpackChunkName: \"ocp\" */ 'routes/views/details/ocpBreakdown'));\nconst Overview = asyncComponent(() => import(/* webpackChunkName: \"overview\" */ 'routes/views/overview'));\nconst CostModelsDetails = asyncComponent(() => import(/* webpackChunkName: \"costModels\" */ 'routes/costModels/costModelsDetails'));\n// import(/* webpackChunkName: \"costModels\" */ './routes/costModels/costModelList')\nconst CostModel = asyncComponent(() => import(/* webpackChunkName: \"costModel\" */ 'routes/costModels/costModel'));\n// For syncing with permissions\nconst paths = {\n    awsDetails: '/aws',\n    awsDetailsBreakdown: '/aws/breakdown',\n    azureDetails: '/azure',\n    azureDetailsBreakdown: '/azure/breakdown',\n    costModels: '/cost-models',\n    explorer: '/explorer',\n    gcpDetails: '/gcp',\n    gcpDetailsBreakdown: '/gcp/breakdown',\n    ibmDetails: '/ibm',\n    ibmDetailsBreakdown: '/ibm/breakdown',\n    ociDetails: '/oci',\n    ociDetailsBreakdown: '/oci/breakdown',\n    ocpDetails: '/ocp',\n    ocpDetailsBreakdown: '/ocp/breakdown',\n    overview: '/',\n};\nconst routes = [\n    {\n        path: paths.overview,\n        labelKey: 'cost_management_overview',\n        component: userAccess(Overview),\n        exact: true,\n    },\n    {\n        path: paths.costModels,\n        labelKey: 'navigation.cost_models',\n        component: userAccess(CostModelsDetails),\n        exact: true,\n    },\n    {\n        path: `${paths.costModels}/:uuid`,\n        labelKey: 'navigation.cost_models',\n        component: userAccess(CostModel),\n        exact: true,\n    },\n    {\n        path: paths.awsDetails,\n        labelKey: 'navigation.aws_details',\n        component: userAccess(AwsDetails),\n        exact: true,\n    },\n    {\n        path: paths.awsDetailsBreakdown,\n        labelKey: 'navigation.aws_details_breakdown',\n        component: userAccess(AwsBreakdown),\n        exact: true,\n    },\n    {\n        path: paths.azureDetails,\n        labelKey: 'navigation.azure_details',\n        component: userAccess(AzureDetails),\n        exact: true,\n    },\n    {\n        path: paths.azureDetailsBreakdown,\n        labelKey: 'navigation.azure_details_breakdown',\n        component: userAccess(AzureBreakdown),\n        exact: true,\n    },\n    {\n        path: paths.ociDetails,\n        labelKey: 'navigation.oci_details',\n        component: userAccess(OciDetails),\n        exact: true,\n    },\n    {\n        path: paths.ociDetailsBreakdown,\n        labelKey: 'navigation.oci_details_breakdown',\n        component: userAccess(OciBreakdown),\n        exact: true,\n    },\n    {\n        path: paths.explorer,\n        labelKey: 'navigation.explorer',\n        component: userAccess(Explorer),\n        exact: true,\n    },\n    {\n        path: paths.gcpDetails,\n        labelKey: 'navigation.gcp_details',\n        component: userAccess(GcpDetails),\n        exact: true,\n    },\n    {\n        path: paths.gcpDetailsBreakdown,\n        labelKey: 'navigation.gcp_details_breakdown',\n        component: userAccess(GcpBreakdown),\n        exact: true,\n    },\n    {\n        path: paths.ibmDetails,\n        labelKey: 'navigation.ibm_details',\n        component: userAccess(IbmDetails),\n        exact: true,\n    },\n    {\n        path: paths.ibmDetailsBreakdown,\n        labelKey: 'navigation.ibm_details_breakdown',\n        component: userAccess(IbmBreakdown),\n        exact: true,\n    },\n    {\n        path: paths.ocpDetails,\n        labelKey: 'navigation.ocp_details',\n        component: userAccess(OcpDetails),\n        exact: true,\n    },\n    {\n        path: paths.ocpDetailsBreakdown,\n        labelKey: 'navigation.ocp_details_breakdown',\n        component: userAccess(OcpBreakdown),\n        exact: true,\n    },\n];\nconst Routes = () => (React.createElement(Switch, null,\n    routes.map(route => (React.createElement(Route, Object.assign({ key: route.path }, route)))),\n    React.createElement(Route, { component: NotFound })));\nexport { paths, Routes, routes };\n","export const parseApiError = error => {\n    if (error.response && error.response.data) {\n        if (error.response.data.Error) {\n            return error.response.data.Error;\n        }\n        if (error.response.data.errors) {\n            return error.response.data.errors.map(er => `${er.source}: ${er.detail}`).join(', ');\n        }\n    }\n    else if (error.message) {\n        return error.message;\n    }\n    return 'unknown';\n};\n","export const stateKey = 'accountSettings';\nexport const accountSettingsKey = 'accountSettings';\nexport function getReportId() {\n    return `accountSettings`;\n}\n","import { fetchAccountSettings as apiGetAccountSettings } from 'api/accountSettings';\nimport { createAction } from 'typesafe-actions';\nimport { getReportId } from './accountSettingsCommon';\nexport const fetchAccountSettingsRequest = createAction('accountSettings/fetch/request')();\nexport const fetchAccountSettingsSuccess = createAction('accountSettings/fetch/success')();\nexport const fetchAccountSettingsFailure = createAction('accountSettings/fetch/failure')();\nexport function fetchAccountSettings() {\n    return dispatch => {\n        const meta = {\n            reportId: getReportId(),\n        };\n        dispatch(fetchAccountSettingsRequest(meta));\n        return apiGetAccountSettings()\n            .then(res => {\n            dispatch(fetchAccountSettingsSuccess(res.data, meta));\n        })\n            .catch(err => {\n            dispatch(fetchAccountSettingsFailure(err, meta));\n        });\n    };\n}\n","import axios from 'axios';\nexport function fetchAccountSettings() {\n    const insights = window.insights;\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`account-settings/`);\n        });\n    }\n    else {\n        return axios.get(`account-settings/`);\n    }\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { invalidateSession, isCostTypeAvailable, isCurrencyAvailable, setAccountCurrency, setCostType, setCurrency, } from 'utils/localStorage';\nimport { fetchAccountSettingsFailure, fetchAccountSettingsRequest, fetchAccountSettingsSuccess, } from './accountSettingsActions';\nexport const defaultState = {\n    byId: new Map(),\n    errors: new Map(),\n    fetchStatus: new Map(),\n};\nexport function accountSettingsReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchAccountSettingsRequest):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.payload.reportId, 1 /* FetchStatus.inProgress */) });\n        case getType(fetchAccountSettingsSuccess):\n            initCostType(action.payload.data.cost_type);\n            initCurrency(action.payload.data.currency);\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* FetchStatus.complete */), byId: new Map(state.byId).set(action.meta.reportId, Object.assign({}, action.payload)), errors: new Map(state.errors).set(action.meta.reportId, null) });\n        case getType(fetchAccountSettingsFailure):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* FetchStatus.complete */), errors: new Map(state.errors).set(action.meta.reportId, action.payload) });\n        default:\n            return state;\n    }\n}\n// Initialize cost type in local storage\nfunction initCostType(value) {\n    // Clear local storage value if current session is not valid\n    invalidateSession();\n    if (!isCostTypeAvailable()) {\n        setCostType(value);\n    }\n}\n// Initialize currency in local storage\nfunction initCurrency(value) {\n    // Clear local storage value if current session is not valid\n    invalidateSession();\n    if (!isCurrencyAvailable()) {\n        setCurrency(value);\n    }\n    setAccountCurrency(value);\n}\n","import { getReportId, stateKey } from './accountSettingsCommon';\nexport const selectAccountSettingsState = (state) => state[stateKey];\n// Fetch account settings\nexport const selectAccountSettings = (state) => selectAccountSettingsState(state).byId.get(getReportId());\nexport const selectAccountSettingsFetchStatus = (state) => selectAccountSettingsState(state).fetchStatus.get(getReportId());\nexport const selectAccountSettingsError = (state) => selectAccountSettingsState(state).errors.get(getReportId());\n","export const awsCostOverviewStateKey = 'awsCostOverview';\n","import { tagPrefix } from 'api/queries/query';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"ocp\" /* ReportPathsType.ocp */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"cost\" /* CostOverviewWidgetType.cost */,\n};\nexport const accountSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'account',\n        showWidgetOnGroupBy: ['region', 'service', tagPrefix],\n    },\n    reportPathsType: \"aws\" /* ReportPathsType.aws */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"summary\" /* CostOverviewWidgetType.reportSummary */,\n};\nexport const regionSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'region',\n        showWidgetOnGroupBy: ['account', 'service', tagPrefix],\n    },\n    reportPathsType: \"aws\" /* ReportPathsType.aws */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"summary\" /* CostOverviewWidgetType.reportSummary */,\n};\nexport const serviceSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'service',\n        showWidgetOnGroupBy: ['region', 'account', tagPrefix],\n    },\n    reportPathsType: \"aws\" /* ReportPathsType.aws */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"summary\" /* CostOverviewWidgetType.reportSummary */,\n};\n","import { accountSummaryWidget, costWidget, regionSummaryWidget, serviceSummaryWidget } from './awsCostOverviewWidgets';\nexport const defaultState = {\n    currentWidgets: [costWidget.id, accountSummaryWidget.id, serviceSummaryWidget.id, regionSummaryWidget.id],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [accountSummaryWidget.id]: accountSummaryWidget,\n        [serviceSummaryWidget.id]: serviceSummaryWidget,\n        [regionSummaryWidget.id]: regionSummaryWidget,\n    },\n};\nexport function awsCostOverviewReducer(state = defaultState) {\n    return state;\n}\n","import { awsCostOverviewStateKey } from './awsCostOverviewCommon';\nexport const selectAwsCostOverviewState = (state) => state[awsCostOverviewStateKey];\nexport const selectWidgets = (state) => selectAwsCostOverviewState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectAwsCostOverviewState(state).currentWidgets;\n","export const azureCostOverviewStateKey = 'azureCostOverview';\n","import { tagPrefix } from 'api/queries/query';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"ocp\" /* ReportPathsType.ocp */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"cost\" /* CostOverviewWidgetType.cost */,\n};\nexport const accountSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'subscription_guid',\n        showWidgetOnGroupBy: ['resource_location', 'service_name', tagPrefix],\n    },\n    reportPathsType: \"azure\" /* ReportPathsType.azure */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"summary\" /* CostOverviewWidgetType.reportSummary */,\n};\nexport const regionSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'resource_location',\n        showWidgetOnGroupBy: ['subscription_guid', 'service_name', tagPrefix],\n    },\n    reportPathsType: \"azure\" /* ReportPathsType.azure */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"summary\" /* CostOverviewWidgetType.reportSummary */,\n};\nexport const serviceSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'service_name',\n        showWidgetOnGroupBy: ['resource_location', 'subscription_guid', tagPrefix],\n    },\n    reportPathsType: \"azure\" /* ReportPathsType.azure */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"summary\" /* CostOverviewWidgetType.reportSummary */,\n};\n","import { accountSummaryWidget, costWidget, regionSummaryWidget, serviceSummaryWidget, } from './azureCostOverviewWidgets';\nexport const defaultState = {\n    currentWidgets: [costWidget.id, accountSummaryWidget.id, serviceSummaryWidget.id, regionSummaryWidget.id],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [accountSummaryWidget.id]: accountSummaryWidget,\n        [serviceSummaryWidget.id]: serviceSummaryWidget,\n        [regionSummaryWidget.id]: regionSummaryWidget,\n    },\n};\nexport function azureCostOverviewReducer(state = defaultState) {\n    return state;\n}\n","import { azureCostOverviewStateKey } from './azureCostOverviewCommon';\nexport const selectAzureCostOverviewState = (state) => state[azureCostOverviewStateKey];\nexport const selectWidgets = (state) => selectAzureCostOverviewState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectAzureCostOverviewState(state).currentWidgets;\n","export const gcpCostOverviewStateKey = 'gcpCostOverview';\n","import { tagPrefix } from 'api/queries/query';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"ocp\" /* ReportPathsType.ocp */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"cost\" /* CostOverviewWidgetType.cost */,\n};\nexport const accountSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'account',\n        showWidgetOnGroupBy: ['gcp_project', 'region', 'service', tagPrefix],\n    },\n    reportPathsType: \"gcp\" /* ReportPathsType.gcp */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"summary\" /* CostOverviewWidgetType.reportSummary */,\n};\nexport const projectSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'gcp_project',\n        showWidgetOnGroupBy: ['account', 'region', 'service', tagPrefix],\n    },\n    reportPathsType: \"gcp\" /* ReportPathsType.gcp */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"summary\" /* CostOverviewWidgetType.reportSummary */,\n};\nexport const regionSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'region',\n        showWidgetOnGroupBy: ['account', 'gcp_project', 'service', tagPrefix],\n    },\n    reportPathsType: \"gcp\" /* ReportPathsType.gcp */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"summary\" /* CostOverviewWidgetType.reportSummary */,\n};\nexport const serviceSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'service',\n        showWidgetOnGroupBy: ['gcp_project', 'region', 'account', tagPrefix],\n    },\n    reportPathsType: \"gcp\" /* ReportPathsType.gcp */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"summary\" /* CostOverviewWidgetType.reportSummary */,\n};\n","import { accountSummaryWidget, costWidget, projectSummaryWidget, regionSummaryWidget, serviceSummaryWidget, } from './gcpCostOverviewWidgets';\nexport const defaultState = {\n    currentWidgets: [\n        costWidget.id,\n        accountSummaryWidget.id,\n        projectSummaryWidget.id,\n        serviceSummaryWidget.id,\n        regionSummaryWidget.id,\n    ],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [accountSummaryWidget.id]: accountSummaryWidget,\n        [projectSummaryWidget.id]: projectSummaryWidget,\n        [serviceSummaryWidget.id]: serviceSummaryWidget,\n        [regionSummaryWidget.id]: regionSummaryWidget,\n    },\n};\nexport function gcpCostOverviewReducer(state = defaultState) {\n    return state;\n}\n","import { gcpCostOverviewStateKey } from './gcpCostOverviewCommon';\nexport const selectGcpCostOverviewState = (state) => state[gcpCostOverviewStateKey];\nexport const selectWidgets = (state) => selectGcpCostOverviewState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectGcpCostOverviewState(state).currentWidgets;\n","export const ibmCostOverviewStateKey = 'ibmCostOverview';\n","import { tagPrefix } from 'api/queries/query';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"ocp\" /* ReportPathsType.ocp */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"cost\" /* CostOverviewWidgetType.cost */,\n};\nexport const accountSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'account',\n        showWidgetOnGroupBy: ['project', 'region', 'service', tagPrefix],\n    },\n    reportPathsType: \"gcp\" /* ReportPathsType.ibm */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"summary\" /* CostOverviewWidgetType.reportSummary */,\n};\nexport const projectSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'project',\n        showWidgetOnGroupBy: ['account', 'region', 'service', tagPrefix],\n    },\n    reportPathsType: \"gcp\" /* ReportPathsType.ibm */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"summary\" /* CostOverviewWidgetType.reportSummary */,\n};\nexport const regionSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'region',\n        showWidgetOnGroupBy: ['account', 'project', 'service', tagPrefix],\n    },\n    reportPathsType: \"gcp\" /* ReportPathsType.ibm */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"summary\" /* CostOverviewWidgetType.reportSummary */,\n};\nexport const serviceSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'service',\n        showWidgetOnGroupBy: ['project', 'region', 'account', tagPrefix],\n    },\n    reportPathsType: \"gcp\" /* ReportPathsType.ibm */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"summary\" /* CostOverviewWidgetType.reportSummary */,\n};\n","import { accountSummaryWidget, costWidget, projectSummaryWidget, regionSummaryWidget, serviceSummaryWidget, } from './ibmCostOverviewWidgets';\nexport const defaultState = {\n    currentWidgets: [\n        costWidget.id,\n        accountSummaryWidget.id,\n        projectSummaryWidget.id,\n        serviceSummaryWidget.id,\n        regionSummaryWidget.id,\n    ],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [accountSummaryWidget.id]: accountSummaryWidget,\n        [projectSummaryWidget.id]: projectSummaryWidget,\n        [serviceSummaryWidget.id]: serviceSummaryWidget,\n        [regionSummaryWidget.id]: regionSummaryWidget,\n    },\n};\nexport function ibmCostOverviewReducer(state = defaultState) {\n    return state;\n}\n","import { ibmCostOverviewStateKey } from './ibmCostOverviewCommon';\nexport const selectIbmCostOverviewState = (state) => state[ibmCostOverviewStateKey];\nexport const selectWidgets = (state) => selectIbmCostOverviewState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectIbmCostOverviewState(state).currentWidgets;\n","export const ociCostOverviewStateKey = 'ociCostOverview';\n","import { tagPrefix } from 'api/queries/query';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"ocp\" /* ReportPathsType.ocp */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"cost\" /* CostOverviewWidgetType.cost */,\n};\nexport const accountSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'payer_tenant_id',\n        showWidgetOnGroupBy: ['region', 'product_service', tagPrefix],\n    },\n    reportPathsType: \"oci\" /* ReportPathsType.oci */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"summary\" /* CostOverviewWidgetType.reportSummary */,\n};\nexport const regionSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'region',\n        showWidgetOnGroupBy: ['payer_tenant_id', 'product_service', tagPrefix],\n    },\n    reportPathsType: \"oci\" /* ReportPathsType.oci */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"summary\" /* CostOverviewWidgetType.reportSummary */,\n};\nexport const serviceSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'product_service',\n        showWidgetOnGroupBy: ['region', 'payer_tenant_id', tagPrefix],\n    },\n    reportPathsType: \"oci\" /* ReportPathsType.oci */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"summary\" /* CostOverviewWidgetType.reportSummary */,\n};\n","import { accountSummaryWidget, costWidget, regionSummaryWidget, serviceSummaryWidget } from './ociCostOverviewWidgets';\nexport const defaultState = {\n    currentWidgets: [costWidget.id, accountSummaryWidget.id, serviceSummaryWidget.id, regionSummaryWidget.id],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [accountSummaryWidget.id]: accountSummaryWidget,\n        [serviceSummaryWidget.id]: serviceSummaryWidget,\n        [regionSummaryWidget.id]: regionSummaryWidget,\n    },\n};\nexport function ociCostOverviewReducer(state = defaultState) {\n    return state;\n}\n","import { ociCostOverviewStateKey } from './ociCostOverviewCommon';\nexport const selectOciCostOverviewState = (state) => state[ociCostOverviewStateKey];\nexport const selectWidgets = (state) => selectOciCostOverviewState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectOciCostOverviewState(state).currentWidgets;\n","export const ocpCostOverviewStateKey = 'ocpCostOverview';\n","let currrentId = 0;\nconst getId = () => currrentId++;\nexport const clusterWidget = {\n    id: getId(),\n    cluster: {\n        reportGroupBy: 'project',\n        showWidgetOnGroupBy: ['project'],\n    },\n    reportPathsType: \"ocp\" /* ReportPathsType.ocp */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"cluster\" /* CostOverviewWidgetType.cluster */,\n};\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"ocp\" /* ReportPathsType.ocp */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"cost\" /* CostOverviewWidgetType.cost */,\n};\nexport const cpuUsageWidget = {\n    id: getId(),\n    usage: {\n        showCapacityOnGroupBy: ['cluster'],\n    },\n    reportPathsType: \"ocp\" /* ReportPathsType.ocp */,\n    reportType: \"cpu\" /* ReportType.cpu */,\n    type: \"cpuUsage\" /* CostOverviewWidgetType.cpuUsage */,\n};\nexport const memoryUsageWidget = {\n    id: getId(),\n    usage: {\n        showCapacityOnGroupBy: ['cluster'],\n    },\n    reportPathsType: \"ocp\" /* ReportPathsType.ocp */,\n    reportType: \"memory\" /* ReportType.memory */,\n    type: \"memoryUsage\" /* CostOverviewWidgetType.memoryUsage */,\n};\nexport const projectSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'project',\n        showWidgetOnGroupBy: ['cluster'],\n        usePlaceholder: true,\n    },\n    reportType: \"cost\" /* ReportType.cost */,\n    reportPathsType: \"ocp\" /* ReportPathsType.ocp */,\n    type: \"summary\" /* CostOverviewWidgetType.reportSummary */,\n};\nexport const volumeUsageWidget = {\n    id: getId(),\n    reportPathsType: \"ocp\" /* ReportPathsType.ocp */,\n    reportType: \"volume\" /* ReportType.volume */,\n    type: \"volumeUsage\" /* CostOverviewWidgetType.volumeUsage */,\n};\n","import { clusterWidget, costWidget, cpuUsageWidget, memoryUsageWidget, projectSummaryWidget, volumeUsageWidget, } from './ocpCostOverviewWidgets';\nexport const defaultState = {\n    currentWidgets: [\n        costWidget.id,\n        clusterWidget.id,\n        projectSummaryWidget.id,\n        cpuUsageWidget.id,\n        memoryUsageWidget.id,\n        volumeUsageWidget.id,\n    ],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [clusterWidget.id]: clusterWidget,\n        [projectSummaryWidget.id]: projectSummaryWidget,\n        [cpuUsageWidget.id]: cpuUsageWidget,\n        [memoryUsageWidget.id]: memoryUsageWidget,\n        [volumeUsageWidget.id]: volumeUsageWidget,\n    },\n};\nexport function ocpCostOverviewReducer(state = defaultState) {\n    return state;\n}\n","import { ocpCostOverviewStateKey } from './ocpCostOverviewCommon';\nexport const selectOcpCostOverviewState = (state) => state[ocpCostOverviewStateKey];\nexport const selectWidgets = (state) => selectOcpCostOverviewState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectOcpCostOverviewState(state).currentWidgets;\n","export const awsHistoricalDataStateKey = 'awsHistoricalData';\n","let currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"aws\" /* ReportPathsType.aws */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"trend\" /* HistoricalDataWidgetType.trend */,\n};\nexport const computeUsageWidget = {\n    id: getId(),\n    reportPathsType: \"aws\" /* ReportPathsType.aws */,\n    reportType: \"instance_type\" /* ReportType.instanceType */,\n    type: \"usage\" /* HistoricalDataWidgetType.usage */,\n};\nexport const storageUsageWidget = {\n    id: getId(),\n    reportPathsType: \"aws\" /* ReportPathsType.aws */,\n    reportType: \"storage\" /* ReportType.storage */,\n    type: \"usage\" /* HistoricalDataWidgetType.usage */,\n};\n","import { computeUsageWidget, costWidget, storageUsageWidget } from './awsHistoricalDataWidgets';\nexport const defaultState = {\n    currentWidgets: [costWidget.id, computeUsageWidget.id, storageUsageWidget.id],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [computeUsageWidget.id]: computeUsageWidget,\n        [storageUsageWidget.id]: storageUsageWidget,\n    },\n};\nexport function awsHistoricalDataReducer(state = defaultState) {\n    return state;\n}\n","import { awsHistoricalDataStateKey } from './awsHistoricalDataCommon';\nexport const selectAwsHistoricalDataState = (state) => state[awsHistoricalDataStateKey];\nexport const selectWidgets = (state) => selectAwsHistoricalDataState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectAwsHistoricalDataState(state).currentWidgets;\n","export const azureHistoricalDataStateKey = 'azureHistoricalData';\n","let currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"azure\" /* ReportPathsType.azure */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"trend\" /* HistoricalDataWidgetType.trend */,\n};\nexport const computeUsageWidget = {\n    id: getId(),\n    reportPathsType: \"azure\" /* ReportPathsType.azure */,\n    reportType: \"instance_type\" /* ReportType.instanceType */,\n    type: \"usage\" /* HistoricalDataWidgetType.usage */,\n};\nexport const storageUsageWidget = {\n    id: getId(),\n    reportPathsType: \"azure\" /* ReportPathsType.azure */,\n    reportType: \"storage\" /* ReportType.storage */,\n    type: \"usage\" /* HistoricalDataWidgetType.usage */,\n};\n","import { computeUsageWidget, costWidget, storageUsageWidget } from './azureHistoricalDataWidgets';\nexport const defaultState = {\n    currentWidgets: [costWidget.id, computeUsageWidget.id, storageUsageWidget.id],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [computeUsageWidget.id]: computeUsageWidget,\n        [storageUsageWidget.id]: storageUsageWidget,\n    },\n};\nexport function azureHistoricalDataReducer(state = defaultState) {\n    return state;\n}\n","import { azureHistoricalDataStateKey } from './azureHistoricalDataCommon';\nexport const selectAzureHistoricalDataState = (state) => state[azureHistoricalDataStateKey];\nexport const selectWidgets = (state) => selectAzureHistoricalDataState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectAzureHistoricalDataState(state).currentWidgets;\n","export const gcpHistoricalDataStateKey = 'gcpHistoricalData';\n","let currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"gcp\" /* ReportPathsType.gcp */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"trend\" /* HistoricalDataWidgetType.trend */,\n};\nexport const computeUsageWidget = {\n    id: getId(),\n    reportPathsType: \"gcp\" /* ReportPathsType.gcp */,\n    reportType: \"instance_type\" /* ReportType.instanceType */,\n    type: \"trend\" /* HistoricalDataWidgetType.trend */,\n};\nexport const storageUsageWidget = {\n    id: getId(),\n    reportPathsType: \"gcp\" /* ReportPathsType.gcp */,\n    reportType: \"storage\" /* ReportType.storage */,\n    type: \"trend\" /* HistoricalDataWidgetType.trend */,\n};\n","import { computeUsageWidget, costWidget, storageUsageWidget } from './gcpHistoricalDataWidgets';\nexport const defaultState = {\n    currentWidgets: [costWidget.id, computeUsageWidget.id, storageUsageWidget.id],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [computeUsageWidget.id]: computeUsageWidget,\n        [storageUsageWidget.id]: storageUsageWidget,\n    },\n};\nexport function gcpHistoricalDataReducer(state = defaultState) {\n    return state;\n}\n","import { gcpHistoricalDataStateKey } from './gcpHistoricalDataCommon';\nexport const selectGcpHistoricalDataState = (state) => state[gcpHistoricalDataStateKey];\nexport const selectWidgets = (state) => selectGcpHistoricalDataState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectGcpHistoricalDataState(state).currentWidgets;\n","export const ibmHistoricalDataStateKey = 'ibmHistoricalData';\n","let currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"gcp\" /* ReportPathsType.ibm */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"trend\" /* HistoricalDataWidgetType.trend */,\n};\nexport const computeUsageWidget = {\n    id: getId(),\n    reportPathsType: \"gcp\" /* ReportPathsType.ibm */,\n    reportType: \"instance_type\" /* ReportType.instanceType */,\n    type: \"trend\" /* HistoricalDataWidgetType.trend */,\n};\nexport const storageUsageWidget = {\n    id: getId(),\n    reportPathsType: \"gcp\" /* ReportPathsType.ibm */,\n    reportType: \"storage\" /* ReportType.storage */,\n    type: \"trend\" /* HistoricalDataWidgetType.trend */,\n};\n","import { computeUsageWidget, costWidget, storageUsageWidget } from './ibmHistoricalDataWidgets';\nexport const defaultState = {\n    currentWidgets: [costWidget.id, computeUsageWidget.id, storageUsageWidget.id],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [computeUsageWidget.id]: computeUsageWidget,\n        [storageUsageWidget.id]: storageUsageWidget,\n    },\n};\nexport function ibmHistoricalDataReducer(state = defaultState) {\n    return state;\n}\n","import { ibmHistoricalDataStateKey } from './ibmHistoricalDataCommon';\nexport const selectIbmHistoricalDataState = (state) => state[ibmHistoricalDataStateKey];\nexport const selectWidgets = (state) => selectIbmHistoricalDataState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectIbmHistoricalDataState(state).currentWidgets;\n","export const ociHistoricalDataStateKey = 'ociHistoricalData';\n","let currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"oci\" /* ReportPathsType.oci */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"trend\" /* HistoricalDataWidgetType.trend */,\n};\nexport const computeUsageWidget = {\n    id: getId(),\n    reportPathsType: \"oci\" /* ReportPathsType.oci */,\n    reportType: \"instance_type\" /* ReportType.instanceType */,\n    type: \"usage\" /* HistoricalDataWidgetType.usage */,\n};\nexport const storageUsageWidget = {\n    id: getId(),\n    reportPathsType: \"oci\" /* ReportPathsType.oci */,\n    reportType: \"storage\" /* ReportType.storage */,\n    type: \"usage\" /* HistoricalDataWidgetType.usage */,\n};\n","import { computeUsageWidget, costWidget, storageUsageWidget } from './ociHistoricalDataWidgets';\nexport const defaultState = {\n    currentWidgets: [costWidget.id, computeUsageWidget.id, storageUsageWidget.id],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [computeUsageWidget.id]: computeUsageWidget,\n        [storageUsageWidget.id]: storageUsageWidget,\n    },\n};\nexport function ociHistoricalDataReducer(state = defaultState) {\n    return state;\n}\n","import { ociHistoricalDataStateKey } from './ociHistoricalDataCommon';\nexport const selectOciHistoricalDataState = (state) => state[ociHistoricalDataStateKey];\nexport const selectWidgets = (state) => selectOciHistoricalDataState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectOciHistoricalDataState(state).currentWidgets;\n","export const ocpHistoricalDataStateKey = 'ocpHistoricalData';\n","let currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"ocp\" /* ReportPathsType.ocp */,\n    reportType: \"cost\" /* ReportType.cost */,\n    type: \"cost\" /* HistoricalDataWidgetType.cost */,\n};\nexport const cpuUsageWidget = {\n    id: getId(),\n    reportPathsType: \"ocp\" /* ReportPathsType.ocp */,\n    reportType: \"cpu\" /* ReportType.cpu */,\n    type: \"usage\" /* HistoricalDataWidgetType.usage */,\n};\nexport const memoryUsageWidget = {\n    id: getId(),\n    reportPathsType: \"ocp\" /* ReportPathsType.ocp */,\n    reportType: \"memory\" /* ReportType.memory */,\n    type: \"usage\" /* HistoricalDataWidgetType.usage */,\n};\n","import { costWidget, cpuUsageWidget, memoryUsageWidget } from './ocpHistoricalDataWidgets';\nexport const defaultState = {\n    currentWidgets: [costWidget.id, cpuUsageWidget.id, memoryUsageWidget.id],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [cpuUsageWidget.id]: cpuUsageWidget,\n        [memoryUsageWidget.id]: memoryUsageWidget,\n    },\n};\nexport function ocpHistoricalDataReducer(state = defaultState) {\n    return state;\n}\n","import { ocpHistoricalDataStateKey } from './ocpHistoricalDataCommon';\nexport const selectOcpHistoricalDataState = (state) => state[ocpHistoricalDataStateKey];\nexport const selectWidgets = (state) => selectOcpHistoricalDataState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectOcpHistoricalDataState(state).currentWidgets;\n","export const expirationMS = 30 * 60 * 1000; // 30 minutes\nexport function createMapStateToProps(mapStateToProps) {\n    return mapStateToProps;\n}\nexport function createMapDispatchToProps(mapDispatchToProps) {\n    return mapDispatchToProps;\n}\n","import { AlertVariant } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { deleteCostModel as apiDeleteCostModel, fetchCostModels as apiGetCostModels, updateCostModel as apiUpdateCostModel, } from 'api/costModels';\nimport { intl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport { createAction, createAsyncAction } from 'typesafe-actions';\nexport const updateFilterToolbar = createAction('fetch/costModels/filter')();\nexport const selectCostModel = createAction('select/costModels')();\nexport const resetCostModel = createAction('reset/costModels')();\nexport const setCostModelDialog = createAction('display/costModels/dialog')();\nexport const { request: fetchCostModelsRequest, success: fetchCostModelsSuccess, failure: fetchCostModelsFailure, } = createAsyncAction('fetch/costModels/request', 'fetch/costModels/success', 'fetch/costModels/failure')();\nexport const fetchCostModels = (query = '') => {\n    return (dispatch) => {\n        dispatch(fetchCostModelsRequest());\n        return apiGetCostModels(query)\n            .then(res => {\n            dispatch(fetchCostModelsSuccess(res));\n        })\n            .catch(err => {\n            dispatch(fetchCostModelsFailure(err));\n        });\n    };\n};\nexport const { request: updateCostModelsRequest, success: updateCostModelsSuccess, failure: updateCostModelsFailure, } = createAsyncAction('update/costModels/request', 'update/costModels/success', 'update/costModels/failure')();\nexport const updateCostModel = (uuid, request, dialog = null) => {\n    return (dispatch) => {\n        dispatch(updateCostModelsRequest());\n        return apiUpdateCostModel(uuid, request)\n            .then((res) => {\n            dispatch(updateCostModelsSuccess(res));\n            if (dialog !== null) {\n                fetchCostModels(`uuid=${uuid}`)(dispatch);\n                dispatch(setCostModelDialog({ name: dialog, isOpen: false }));\n            }\n        })\n            .catch(err => {\n            dispatch(updateCostModelsFailure(err));\n        });\n    };\n};\nexport const { request: deleteCostModelsRequest, success: deleteCostModelsSuccess, failure: deleteCostModelsFailure, } = createAsyncAction('delete/costModels/request', 'delete/costModels/success', 'delete/costModels/failure')();\nexport const deleteCostModel = (uuid, dialog = '', history = null) => {\n    return (dispatch) => {\n        dispatch(deleteCostModelsRequest());\n        return apiDeleteCostModel(uuid)\n            .then(() => {\n            dispatch(deleteCostModelsSuccess());\n            dispatch(resetCostModel());\n            fetchCostModels()(dispatch);\n            if (dialog !== null) {\n                if (dialog === 'deleteCostModel' && history) {\n                    history.push('/cost-models');\n                }\n                dispatch(setCostModelDialog({ name: dialog, isOpen: false }));\n            }\n        })\n            .catch(err => {\n            dispatch(deleteCostModelsFailure(err));\n        });\n    };\n};\nexport const redirectToCostModelFromSourceUuid = (source_uuid, history) => {\n    return (dispatch) => {\n        return apiGetCostModels(`source_uuid=${source_uuid}`)\n            .then(res => {\n            const uuid = res.data.data[0].uuid;\n            history.push(`/cost-models/${uuid}`);\n        })\n            .catch(() => {\n            dispatch(addNotification({\n                title: intl.formatMessage(messages.costModelsRouterErrorTitle),\n                description: intl.formatMessage(messages.costModelsRouterServerError),\n                variant: AlertVariant.danger,\n                dismissable: true,\n            }));\n        });\n    };\n};\n","import { getType } from 'typesafe-actions';\nimport { deleteCostModelsFailure, deleteCostModelsRequest, deleteCostModelsSuccess, fetchCostModelsFailure, fetchCostModelsRequest, fetchCostModelsSuccess, resetCostModel, selectCostModel, setCostModelDialog, updateCostModelsFailure, updateCostModelsRequest, updateCostModelsSuccess, updateFilterToolbar, } from './actions';\nexport const stateKey = 'costModels';\nexport const defaultState = {\n    costModels: null,\n    error: null,\n    status: 0 /* FetchStatus.none */,\n    currentFilterType: 'name',\n    currentFilterValue: '',\n    isDialogOpen: {\n        deleteRate: false,\n        deleteSource: false,\n        addSource: false,\n        addRate: false,\n        updateRate: false,\n        deleteCostModel: false,\n        updateCostModel: false,\n        deleteMarkup: false,\n        updateMarkup: false,\n        deleteDistribution: false,\n        updateDistribution: false,\n        createWizard: false,\n    },\n    dialogData: null,\n    update: {\n        error: null,\n        status: 0 /* FetchStatus.none */,\n        current: null,\n    },\n    delete: {\n        error: null,\n        status: 0 /* FetchStatus.none */,\n    },\n};\nexport const reducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case getType(resetCostModel):\n            return Object.assign(Object.assign({}, state), { update: Object.assign(Object.assign({}, state.update), { current: null }) });\n        case getType(selectCostModel):\n            return Object.assign(Object.assign({}, state), { update: Object.assign(Object.assign({}, state.update), { current: action.payload }) });\n        case getType(updateCostModelsRequest):\n            return Object.assign(Object.assign({}, state), { update: Object.assign(Object.assign({}, state.update), { status: 1 /* FetchStatus.inProgress */ }) });\n        case getType(updateCostModelsSuccess):\n            return Object.assign(Object.assign({}, state), { update: {\n                    error: null,\n                    status: 2 /* FetchStatus.complete */,\n                    current: action.payload.data,\n                } });\n        case getType(updateCostModelsFailure):\n            return Object.assign(Object.assign({}, state), { update: Object.assign(Object.assign({}, state.update), { status: 2 /* FetchStatus.complete */, error: action.payload }) });\n        case getType(fetchCostModelsRequest):\n            return Object.assign(Object.assign({}, state), { status: 1 /* FetchStatus.inProgress */ });\n        case getType(fetchCostModelsSuccess):\n            return Object.assign(Object.assign({}, state), { currentFilterValue: '', status: 2 /* FetchStatus.complete */, error: null, costModels: action.payload.data });\n        case getType(fetchCostModelsFailure):\n            return Object.assign(Object.assign({}, state), { status: 2 /* FetchStatus.complete */, error: action.payload });\n        case getType(deleteCostModelsRequest):\n            return Object.assign(Object.assign({}, state), { delete: Object.assign(Object.assign({}, state.delete), { status: 1 /* FetchStatus.inProgress */ }) });\n        case getType(deleteCostModelsSuccess):\n            return Object.assign(Object.assign({}, state), { delete: {\n                    error: null,\n                    status: 2 /* FetchStatus.complete */,\n                } });\n        case getType(deleteCostModelsFailure):\n            return Object.assign(Object.assign({}, state), { delete: {\n                    status: 2 /* FetchStatus.complete */,\n                    error: action.payload,\n                } });\n        case getType(updateFilterToolbar):\n            return Object.assign(Object.assign({}, state), action.payload);\n        case getType(setCostModelDialog):\n            return Object.assign(Object.assign({}, state), { isDialogOpen: Object.assign(Object.assign({}, state.isDialogOpen), { [action.payload.name]: action.payload.isOpen }), dialogData: action.payload.meta });\n        default:\n            return state;\n    }\n};\n","import { parseApiError } from 'routes/costModels/createCostModelWizard/parseError';\nimport { selectPagination } from 'store/djangoUtils/pagination';\nimport { selectQuery } from 'store/djangoUtils/query';\nimport { stateKey } from './reducer';\nexport const costModelsState = (state) => state[stateKey];\nexport const costModels = (state) => {\n    const cms = costModelsState(state).costModels;\n    if (cms) {\n        return cms.data;\n    }\n    return [];\n};\nexport const isDialogOpen = (state) => {\n    const dialogs = costModelsState(state).isDialogOpen;\n    return (type) => {\n        switch (type) {\n            case 'markup': {\n                const { deleteMarkup, updateMarkup } = dialogs;\n                return { deleteMarkup, updateMarkup };\n            }\n            case 'distribution': {\n                const { deleteDistribution, updateDistribution } = dialogs;\n                return { deleteDistribution, updateDistribution };\n            }\n            case 'costmodel': {\n                const { deleteCostModel, updateCostModel, createWizard } = dialogs;\n                return { deleteCostModel, updateCostModel, createWizard };\n            }\n            case 'sources': {\n                const { deleteSource, addSource } = dialogs;\n                return { deleteSource, addSource };\n            }\n            case 'rate': {\n                const { addRate, updateRate, deleteRate } = dialogs;\n                return { addRate, updateRate, deleteRate };\n            }\n            default:\n                return costModelsState(state).isDialogOpen;\n        }\n    };\n};\nexport const status = (state) => costModelsState(state).status;\nexport const error = (state) => costModelsState(state).error;\nexport const stateName = (state) => {\n    const costStatus = status(state);\n    const costError = error(state);\n    const costData = costModels(state);\n    const costQuery = query(state);\n    if (costStatus !== 2 /* FetchStatus.complete */) {\n        return 'loading';\n    }\n    if (costError !== null) {\n        return 'failure';\n    }\n    if (costData.length > 0) {\n        return 'success';\n    }\n    const hasNoFilters = Object.keys(costQuery).every(key => {\n        switch (key) {\n            case 'currency':\n            case 'description':\n            case 'name':\n            case 'source_type':\n                return costQuery[key] === null;\n            default:\n                return true;\n        }\n    });\n    if (hasNoFilters) {\n        return 'empty';\n    }\n    return 'no-match';\n};\nexport const currentFilterValue = (state) => costModelsState(state).currentFilterValue;\nexport const currentFilterType = (state) => costModelsState(state).currentFilterType;\nexport const query = selectQuery((state) => costModelsState(state).costModels, ['ordering', 'name', 'source_type', 'currency', 'description', 'offset', 'limit']);\nexport const pagination = selectPagination((state) => costModelsState(state).costModels);\nexport const dialogData = (state) => costModelsState(state).dialogData;\nexport const updateProcessing = (state) => costModelsState(state).update.status === 1 /* FetchStatus.inProgress */;\nexport const updateError = (state) => {\n    const updateErr = costModelsState(state).update.error;\n    if (updateErr === null) {\n        return '';\n    }\n    return parseApiError(updateErr);\n};\nexport const selected = (state) => {\n    return costModelsState(state).update.current;\n};\nexport const deleteProcessing = (state) => costModelsState(state).delete.status === 1 /* FetchStatus.inProgress */;\nexport const deleteError = (state) => {\n    const err = costModelsState(state).delete.error;\n    if (err === null) {\n        return '';\n    }\n    return parseApiError(err);\n};\n","import { getQuery } from 'api/queries/awsQuery';\nimport { getCostType } from 'utils/costType';\nexport const awsDashboardStateKey = 'awsDashboard';\nexport const awsDashboardDefaultFilters = {\n    time_scope_units: 'month',\n    time_scope_value: -1,\n    resolution: 'daily',\n};\nexport const awsDashboardTabFilters = Object.assign(Object.assign({}, awsDashboardDefaultFilters), { limit: 3 });\nexport function getGroupByForTab(widget) {\n    switch (widget.currentTab) {\n        case \"services\" /* AwsDashboardTab.services */:\n            // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n            return {\n                service: widget.tabsFilter && widget.tabsFilter.service ? widget.tabsFilter.service : '*',\n            };\n        case \"accounts\" /* AwsDashboardTab.accounts */:\n            return { account: '*' };\n        case \"regions\" /* AwsDashboardTab.regions */:\n            return { region: '*' };\n        default:\n            return {};\n    }\n}\nexport function getQueryForWidget(widget, filter = awsDashboardDefaultFilters, props) {\n    const query = Object.assign(Object.assign({ filter }, (widget.savingsPlan && { cost_type: getCostType() })), (props ? props : {}));\n    return getQuery(query);\n}\nexport function getQueryForWidgetTabs(widget, filter = awsDashboardDefaultFilters, props) {\n    const group_by = getGroupByForTab(widget);\n    const newFilter = Object.assign({}, JSON.parse(JSON.stringify(filter)));\n    // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n    if (widget.currentTab === \"services\" /* AwsDashboardTab.services */ && widget.tabsFilter && widget.tabsFilter.service) {\n        newFilter.service = undefined;\n    }\n    const query = Object.assign(Object.assign(Object.assign({}, (widget.savingsPlan && { cost_type: getCostType() })), { filter: newFilter, group_by }), (props ? props : {}));\n    return getQuery(query);\n}\n","import { awsDashboardDefaultFilters, awsDashboardStateKey, awsDashboardTabFilters, getQueryForWidget, getQueryForWidgetTabs, } from './awsDashboardCommon';\nexport const selectAwsDashboardState = (state) => state[awsDashboardStateKey];\nexport const selectWidgets = (state) => selectAwsDashboardState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectAwsDashboardState(state).currentWidgets;\nexport const selectWidgetQueries = (state, id) => {\n    const widget = selectWidget(state, id);\n    const filter = Object.assign(Object.assign({}, awsDashboardDefaultFilters), (widget.filter ? widget.filter : {}));\n    const tabsFilter = Object.assign(Object.assign({}, awsDashboardTabFilters), (widget.tabsFilter ? widget.tabsFilter : {}));\n    return {\n        previous: getQueryForWidget(widget, Object.assign(Object.assign({}, filter), { time_scope_value: -2 })),\n        current: getQueryForWidget(widget, filter),\n        forecast: getQueryForWidget(widget, {}),\n        tabs: getQueryForWidgetTabs(widget, Object.assign(Object.assign({}, tabsFilter), { resolution: 'monthly' })),\n    };\n};\n","import { forecastActions } from 'store/forecasts';\nimport { reportActions } from 'store/reports';\nimport { createAction } from 'typesafe-actions';\nimport { selectWidget, selectWidgetQueries } from './awsDashboardSelectors';\nexport const fetchWidgetForecasts = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        if (widget.forecastPathsType && widget.forecastType) {\n            const { forecast } = selectWidgetQueries(state, id);\n            dispatch(forecastActions.fetchForecast(widget.forecastPathsType, widget.forecastType, forecast));\n        }\n    };\n};\nexport const fetchWidgetReports = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        const { previous, current, tabs } = selectWidgetQueries(state, id);\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, current));\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, previous));\n        if (widget.availableTabs) {\n            dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, tabs));\n        }\n    };\n};\nexport const setWidgetTab = createAction('awsDashboard/widget/tab')();\nexport const changeWidgetTab = (id, tab) => {\n    return dispatch => {\n        dispatch(setWidgetTab({ id, tab }));\n        dispatch(fetchWidgetReports(id));\n    };\n};\n","import messages from 'locales/messages';\nimport { paths } from 'routes';\nimport { formatCurrency, formatUnits } from 'utils/format';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const computeWidget = {\n    id: getId(),\n    titleKey: messages.awsComputeTitle,\n    reportPathsType: \"aws\" /* ReportPathsType.aws */,\n    reportType: \"instance_type\" /* ReportType.instanceType */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    filter: {\n        service: 'AmazonEC2',\n    },\n    tabsFilter: {\n        service: 'AmazonEC2',\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const costSummaryWidget = {\n    id: getId(),\n    titleKey: messages.awsDashboardCostTitle,\n    forecastPathsType: \"aws\" /* ForecastPathsType.aws */,\n    forecastType: \"cost\" /* ForecastType.cost */,\n    reportPathsType: \"aws\" /* ReportPathsType.aws */,\n    reportType: \"cost\" /* ReportType.cost */,\n    details: {\n        adjustContainerHeight: true,\n        costKey: messages.cost,\n        showHorizontal: true,\n        viewAllPath: paths.awsDetails,\n    },\n    tabsFilter: {\n        limit: 3,\n    },\n    trend: {\n        computedForecastItem: \"cost\" /* ComputedForecastItemType.cost */,\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        dailyTitleKey: messages.awsDailyCostTrendTitle,\n        titleKey: messages.awsCostTrendTitle,\n        type: 0 /* ChartType.rolling */,\n    },\n    availableTabs: [\"services\" /* AwsDashboardTab.services */, \"accounts\" /* AwsDashboardTab.accounts */, \"regions\" /* AwsDashboardTab.regions */],\n    chartFormatter: formatCurrency,\n    chartType: \"dailyTrend\" /* DashboardChartType.dailyTrend */,\n    currentTab: \"services\" /* AwsDashboardTab.services */,\n    savingsPlan: true,\n};\nexport const databaseWidget = {\n    id: getId(),\n    titleKey: messages.dashboardDatabaseTitle,\n    reportPathsType: \"aws\" /* ReportPathsType.aws */,\n    reportType: \"database\" /* ReportType.database */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: 'AmazonRDS,AmazonDynamoDB,AmazonElastiCache,AmazonNeptune,AmazonRedshift,AmazonDocumentDB',\n    },\n    tabsFilter: {\n        service: 'AmazonRDS,AmazonDynamoDB,AmazonElastiCache,AmazonNeptune,AmazonRedshift,AmazonDocumentDB',\n    },\n    trend: {\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* ChartType.rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n    savingsPlan: true,\n};\nexport const networkWidget = {\n    id: getId(),\n    titleKey: messages.dashboardNetworkTitle,\n    reportPathsType: \"aws\" /* ReportPathsType.aws */,\n    reportType: \"network\" /* ReportType.network */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: 'AmazonVPC,AmazonCloudFront,AmazonRoute53,AmazonAPIGateway',\n    },\n    tabsFilter: {\n        service: 'AmazonVPC,AmazonCloudFront,AmazonRoute53,AmazonAPIGateway',\n    },\n    trend: {\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* ChartType.rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n    savingsPlan: true,\n};\nexport const storageWidget = {\n    id: getId(),\n    titleKey: messages.dashboardStorageTitle,\n    reportPathsType: \"aws\" /* ReportPathsType.aws */,\n    reportType: \"storage\" /* ReportType.storage */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\n","import { getType } from 'typesafe-actions';\nimport { setWidgetTab } from './awsDashboardActions';\nimport { computeWidget, costSummaryWidget, databaseWidget, networkWidget, storageWidget } from './awsDashboardWidgets';\nexport const defaultState = {\n    currentWidgets: [costSummaryWidget.id, computeWidget.id, storageWidget.id, networkWidget.id, databaseWidget.id],\n    widgets: {\n        [costSummaryWidget.id]: costSummaryWidget,\n        [computeWidget.id]: computeWidget,\n        [databaseWidget.id]: databaseWidget,\n        [networkWidget.id]: networkWidget,\n        [storageWidget.id]: storageWidget,\n    },\n};\nexport function awsDashboardReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(setWidgetTab):\n            return Object.assign(Object.assign({}, state), { widgets: Object.assign(Object.assign({}, state.widgets), { [action.payload.id]: Object.assign(Object.assign({}, state.widgets[action.payload.id]), { currentTab: action.payload.tab }) }) });\n        default:\n            return state;\n    }\n}\n","import { getQuery } from 'api/queries/awsQuery';\nexport const awsOcpDashboardStateKey = 'awsOcpDashboard';\nexport const awsOcpDashboardDefaultFilters = {\n    time_scope_units: 'month',\n    time_scope_value: -1,\n    resolution: 'daily',\n};\nexport const awsOcpDashboardTabFilters = Object.assign(Object.assign({}, awsOcpDashboardDefaultFilters), { limit: 3 });\nexport function getGroupByForTab(widget) {\n    switch (widget.currentTab) {\n        case \"services\" /* AwsOcpDashboardTab.services */:\n            // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n            return {\n                service: widget.tabsFilter && widget.tabsFilter.service ? widget.tabsFilter.service : '*',\n            };\n        case \"accounts\" /* AwsOcpDashboardTab.accounts */:\n            return { account: '*' };\n        case \"regions\" /* AwsOcpDashboardTab.regions */:\n            return { region: '*' };\n        default:\n            return {};\n    }\n}\nexport function getQueryForWidget(filter = awsOcpDashboardDefaultFilters, props) {\n    const query = Object.assign({ filter }, (props ? props : {}));\n    return getQuery(query);\n}\nexport function getQueryForWidgetTabs(widget, filter = awsOcpDashboardDefaultFilters) {\n    const group_by = getGroupByForTab(widget);\n    const newFilter = Object.assign({}, JSON.parse(JSON.stringify(filter)));\n    // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n    if (widget.currentTab === \"services\" /* AwsOcpDashboardTab.services */ && widget.tabsFilter && widget.tabsFilter.service) {\n        newFilter.service = undefined;\n    }\n    const query = {\n        filter: newFilter,\n        group_by,\n    };\n    return getQuery(query);\n}\n","import { awsOcpDashboardDefaultFilters, awsOcpDashboardStateKey, awsOcpDashboardTabFilters, getQueryForWidget, getQueryForWidgetTabs, } from './awsOcpDashboardCommon';\nexport const selectAwsOcpDashboardState = (state) => state[awsOcpDashboardStateKey];\nexport const selectWidgets = (state) => selectAwsOcpDashboardState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectAwsOcpDashboardState(state).currentWidgets;\nexport const selectWidgetQueries = (state, id) => {\n    const widget = selectWidget(state, id);\n    const filter = Object.assign(Object.assign({}, awsOcpDashboardDefaultFilters), (widget.filter ? widget.filter : {}));\n    const tabsFilter = Object.assign(Object.assign({}, awsOcpDashboardTabFilters), (widget.tabsFilter ? widget.tabsFilter : {}));\n    return {\n        previous: getQueryForWidget(Object.assign(Object.assign({}, filter), { time_scope_value: -2 })),\n        current: getQueryForWidget(filter),\n        forecast: getQueryForWidget({}, { limit: 31 }),\n        tabs: getQueryForWidgetTabs(widget, Object.assign(Object.assign({}, tabsFilter), { resolution: 'monthly' })),\n    };\n};\n","import { forecastActions } from 'store/forecasts';\nimport { reportActions } from 'store/reports';\nimport { createAction } from 'typesafe-actions';\nimport { selectWidget, selectWidgetQueries } from './awsOcpDashboardSelectors';\nexport const fetchWidgetForecasts = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        if (widget.forecastPathsType && widget.forecastType) {\n            const { forecast } = selectWidgetQueries(state, id);\n            dispatch(forecastActions.fetchForecast(widget.forecastPathsType, widget.forecastType, forecast));\n        }\n    };\n};\nexport const fetchWidgetReports = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        const { previous, current, tabs } = selectWidgetQueries(state, id);\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, current));\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, previous));\n        if (widget.availableTabs) {\n            dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, tabs));\n        }\n    };\n};\nexport const setWidgetTab = createAction('awsOcpDashboard/widget/tab')();\nexport const changeWidgetTab = (id, tab) => {\n    return dispatch => {\n        dispatch(setWidgetTab({ id, tab }));\n        dispatch(fetchWidgetReports(id));\n    };\n};\n","import messages from 'locales/messages';\nimport { awsDashboardWidgets } from 'store/dashboard/awsDashboard';\nimport { formatCurrency, formatUnits } from 'utils/format';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const computeWidget = {\n    id: getId(),\n    titleKey: messages.awsComputeTitle,\n    reportPathsType: \"aws_ocp\" /* ReportPathsType.awsOcp */,\n    reportType: \"instance_type\" /* ReportType.instanceType */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    filter: {\n        service: 'AmazonEC2',\n    },\n    tabsFilter: {\n        service: 'AmazonEC2',\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const costSummaryWidget = {\n    id: getId(),\n    titleKey: messages.awsOcpDashboardCostTitle,\n    forecastPathsType: \"aws_ocp\" /* ForecastPathsType.awsOcp */,\n    forecastType: \"cost\" /* ForecastType.cost */,\n    reportPathsType: \"aws_ocp\" /* ReportPathsType.awsOcp */,\n    reportType: \"cost\" /* ReportType.cost */,\n    details: {\n        costKey: messages.cost,\n        showHorizontal: true,\n    },\n    tabsFilter: {\n        limit: 3,\n    },\n    trend: {\n        computedForecastItem: \"cost\" /* ComputedForecastItemType.cost */,\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        dailyTitleKey: messages.awsDailyCostTrendTitle,\n        titleKey: messages.awsCostTrendTitle,\n        type: 0 /* ChartType.rolling */,\n    },\n    availableTabs: [\"services\" /* AwsOcpDashboardTab.services */, \"accounts\" /* AwsOcpDashboardTab.accounts */, \"regions\" /* AwsOcpDashboardTab.regions */],\n    chartFormatter: formatCurrency,\n    chartType: \"dailyTrend\" /* DashboardChartType.dailyTrend */,\n    currentTab: \"services\" /* AwsOcpDashboardTab.services */,\n};\nexport const databaseWidget = {\n    id: getId(),\n    titleKey: messages.dashboardDatabaseTitle,\n    reportPathsType: \"aws_ocp\" /* ReportPathsType.awsOcp */,\n    reportType: \"database\" /* ReportType.database */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: awsDashboardWidgets.databaseWidget.filter.service,\n    },\n    tabsFilter: {\n        service: awsDashboardWidgets.databaseWidget.tabsFilter.service,\n    },\n    trend: {\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* ChartType.rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const networkWidget = {\n    id: getId(),\n    titleKey: messages.dashboardNetworkTitle,\n    reportPathsType: \"aws_ocp\" /* ReportPathsType.awsOcp */,\n    reportType: \"network\" /* ReportType.network */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: awsDashboardWidgets.networkWidget.filter.service,\n    },\n    tabsFilter: {\n        service: awsDashboardWidgets.networkWidget.tabsFilter.service,\n    },\n    trend: {\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* ChartType.rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const storageWidget = {\n    id: getId(),\n    titleKey: messages.dashboardStorageTitle,\n    reportPathsType: \"aws_ocp\" /* ReportPathsType.awsOcp */,\n    reportType: \"storage\" /* ReportType.storage */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\n","import { getType } from 'typesafe-actions';\nimport { setWidgetTab } from './awsOcpDashboardActions';\nimport { computeWidget, costSummaryWidget, databaseWidget, networkWidget, storageWidget, } from './awsOcpDashboardWidgets';\nexport const defaultState = {\n    currentWidgets: [costSummaryWidget.id, computeWidget.id, storageWidget.id, networkWidget.id, databaseWidget.id],\n    widgets: {\n        [costSummaryWidget.id]: costSummaryWidget,\n        [computeWidget.id]: computeWidget,\n        [databaseWidget.id]: databaseWidget,\n        [networkWidget.id]: networkWidget,\n        [storageWidget.id]: storageWidget,\n    },\n};\nexport function awsOcpDashboardReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(setWidgetTab):\n            return Object.assign(Object.assign({}, state), { widgets: Object.assign(Object.assign({}, state.widgets), { [action.payload.id]: Object.assign(Object.assign({}, state.widgets[action.payload.id]), { currentTab: action.payload.tab }) }) });\n        default:\n            return state;\n    }\n}\n","import { getQuery } from 'api/queries/azureQuery';\nexport const azureDashboardStateKey = 'azureDashboard';\nexport const azureDashboardDefaultFilters = {\n    time_scope_units: 'month',\n    time_scope_value: -1,\n    resolution: 'daily',\n};\nexport const azureDashboardTabFilters = Object.assign(Object.assign({}, azureDashboardDefaultFilters), { limit: 3 });\nexport function getGroupByForTab(widget) {\n    switch (widget.currentTab) {\n        case \"service_names\" /* AzureDashboardTab.service_names */:\n            // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n            return {\n                service_name: widget.tabsFilter && widget.tabsFilter.service_name ? widget.tabsFilter.service_name : '*',\n            };\n        case \"subscription_guids\" /* AzureDashboardTab.subscription_guids */:\n            return { subscription_guid: '*' };\n        case \"resource_locations\" /* AzureDashboardTab.resource_locations */:\n            return { resource_location: '*' };\n        default:\n            return {};\n    }\n}\nexport function getQueryForWidget(filter = azureDashboardDefaultFilters, props) {\n    const query = Object.assign({ filter }, (props ? props : {}));\n    return getQuery(query);\n}\nexport function getQueryForWidgetTabs(widget, filter = azureDashboardDefaultFilters) {\n    const group_by = getGroupByForTab(widget);\n    const newFilter = Object.assign({}, JSON.parse(JSON.stringify(filter)));\n    // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n    if (widget.currentTab === \"service_names\" /* AzureDashboardTab.service_names */ && widget.tabsFilter && widget.tabsFilter.service_name) {\n        newFilter.service = undefined;\n    }\n    const query = {\n        filter: newFilter,\n        group_by,\n    };\n    return getQuery(query);\n}\n","import { azureDashboardDefaultFilters, azureDashboardStateKey, azureDashboardTabFilters, getQueryForWidget, getQueryForWidgetTabs, } from './azureDashboardCommon';\nexport const selectAzureDashboardState = (state) => state[azureDashboardStateKey];\nexport const selectWidgets = (state) => selectAzureDashboardState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectAzureDashboardState(state).currentWidgets;\nexport const selectWidgetQueries = (state, id) => {\n    const widget = selectWidget(state, id);\n    const filter = Object.assign(Object.assign({}, azureDashboardDefaultFilters), (widget.filter ? widget.filter : {}));\n    const tabsFilter = Object.assign(Object.assign({}, azureDashboardTabFilters), (widget.tabsFilter ? widget.tabsFilter : {}));\n    return {\n        previous: getQueryForWidget(Object.assign(Object.assign({}, filter), { time_scope_value: -2 })),\n        current: getQueryForWidget(filter),\n        forecast: getQueryForWidget({}, { limit: 31 }),\n        tabs: getQueryForWidgetTabs(widget, Object.assign(Object.assign({}, tabsFilter), { resolution: 'monthly' })),\n    };\n};\n","import { forecastActions } from 'store/forecasts';\nimport { reportActions } from 'store/reports';\nimport { createAction } from 'typesafe-actions';\nimport { selectWidget, selectWidgetQueries } from './azureDashboardSelectors';\nexport const fetchWidgetForecasts = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        if (widget.forecastPathsType && widget.forecastType) {\n            const { forecast } = selectWidgetQueries(state, id);\n            dispatch(forecastActions.fetchForecast(widget.forecastPathsType, widget.forecastType, forecast));\n        }\n    };\n};\nexport const fetchWidgetReports = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        const { previous, current, tabs } = selectWidgetQueries(state, id);\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, current));\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, previous));\n        if (widget.availableTabs) {\n            dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, tabs));\n        }\n    };\n};\nexport const setWidgetTab = createAction('azureDashboard/widget/tab')();\nexport const changeWidgetTab = (id, tab) => {\n    return dispatch => {\n        dispatch(setWidgetTab({ id, tab }));\n        dispatch(fetchWidgetReports(id));\n    };\n};\n","import messages from 'locales/messages';\nimport { paths } from 'routes';\nimport { formatUnits } from 'utils/format';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const costSummaryWidget = {\n    id: getId(),\n    titleKey: messages.azureDashboardCostTitle,\n    forecastPathsType: \"azure\" /* ForecastPathsType.azure */,\n    forecastType: \"cost\" /* ForecastType.cost */,\n    reportPathsType: \"azure\" /* ReportPathsType.azure */,\n    reportType: \"cost\" /* ReportType.cost */,\n    details: {\n        adjustContainerHeight: true,\n        costKey: messages.cost,\n        showHorizontal: true,\n        viewAllPath: paths.azureDetails,\n    },\n    tabsFilter: {\n        limit: 3,\n    },\n    trend: {\n        computedForecastItem: \"cost\" /* ComputedForecastItemType.cost */,\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        dailyTitleKey: messages.azureDailyCostTrendTitle,\n        titleKey: messages.azureCostTrendTitle,\n        type: 0 /* ChartType.rolling */,\n    },\n    availableTabs: [\n        \"service_names\" /* AzureDashboardTab.service_names */,\n        \"subscription_guids\" /* AzureDashboardTab.subscription_guids */,\n        \"resource_locations\" /* AzureDashboardTab.resource_locations */,\n    ],\n    chartType: \"dailyTrend\" /* DashboardChartType.dailyTrend */,\n    currentTab: \"service_names\" /* AzureDashboardTab.service_names */,\n};\nexport const databaseWidget = {\n    id: getId(),\n    titleKey: messages.dashboardDatabaseTitle,\n    reportPathsType: \"azure\" /* ReportPathsType.azure */,\n    reportType: \"database\" /* ReportType.database */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service_name: 'Database,Cosmos DB,Cache for Redis',\n    },\n    tabsFilter: {\n        service_name: 'Database,Cosmos DB,Cache for Redis',\n    },\n    trend: {\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* ChartType.rolling */,\n    },\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const networkWidget = {\n    id: getId(),\n    titleKey: messages.dashboardNetworkTitle,\n    reportPathsType: \"azure\" /* ReportPathsType.azure */,\n    reportType: \"network\" /* ReportType.network */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service_name: 'Virtual Network,VPN,DNS,Traffic Manager,ExpressRoute,Load Balancer,Application Gateway',\n    },\n    tabsFilter: {\n        service_name: 'Virtual Network,VPN,DNS,Traffic Manager,ExpressRoute,Load Balancer,Application Gateway',\n    },\n    trend: {\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* ChartType.rolling */,\n    },\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const storageWidget = {\n    id: getId(),\n    titleKey: messages.dashboardStorageTitle,\n    reportPathsType: \"azure\" /* ReportPathsType.azure */,\n    reportType: \"storage\" /* ReportType.storage */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const virtualMachineWidget = {\n    id: getId(),\n    titleKey: messages.azureComputeTitle,\n    reportPathsType: \"azure\" /* ReportPathsType.azure */,\n    reportType: \"instance_type\" /* ReportType.instanceType */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    filter: {\n        service_name: 'Virtual Machines',\n    },\n    tabsFilter: {\n        service_name: 'Virtual Machines',\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\n","import { getType } from 'typesafe-actions';\nimport { setWidgetTab } from './azureDashboardActions';\nimport { costSummaryWidget, databaseWidget, networkWidget, storageWidget, virtualMachineWidget, } from './azureDashboardWidgets';\nexport const defaultState = {\n    currentWidgets: [\n        costSummaryWidget.id,\n        virtualMachineWidget.id,\n        storageWidget.id,\n        networkWidget.id,\n        databaseWidget.id,\n    ],\n    widgets: {\n        [costSummaryWidget.id]: costSummaryWidget,\n        [virtualMachineWidget.id]: virtualMachineWidget,\n        [databaseWidget.id]: databaseWidget,\n        [networkWidget.id]: networkWidget,\n        [storageWidget.id]: storageWidget,\n    },\n};\nexport function azureDashboardReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(setWidgetTab):\n            return Object.assign(Object.assign({}, state), { widgets: Object.assign(Object.assign({}, state.widgets), { [action.payload.id]: Object.assign(Object.assign({}, state.widgets[action.payload.id]), { currentTab: action.payload.tab }) }) });\n        default:\n            return state;\n    }\n}\n","import { getQuery } from 'api/queries/azureQuery';\nexport const azureOcpDashboardStateKey = 'azureOcpDashboard';\nexport const azureOcpDashboardDefaultFilters = {\n    time_scope_units: 'month',\n    time_scope_value: -1,\n    resolution: 'daily',\n};\nexport const azureOcpDashboardTabFilters = Object.assign(Object.assign({}, azureOcpDashboardDefaultFilters), { limit: 3 });\nexport function getGroupByForTab(widget) {\n    switch (widget.currentTab) {\n        case \"service_names\" /* AzureOcpDashboardTab.service_names */:\n            // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n            return {\n                service_name: widget.tabsFilter && widget.tabsFilter.service_name ? widget.tabsFilter.service_name : '*',\n            };\n        case \"subscription_guids\" /* AzureOcpDashboardTab.subscription_guids */:\n            return { subscription_guid: '*' };\n        case \"resource_locations\" /* AzureOcpDashboardTab.resource_locations */:\n            return { resource_location: '*' };\n        default:\n            return {};\n    }\n}\nexport function getQueryForWidget(filter = azureOcpDashboardDefaultFilters, props) {\n    const query = Object.assign({ filter }, (props ? props : {}));\n    return getQuery(query);\n}\nexport function getQueryForWidgetTabs(widget, filter = azureOcpDashboardDefaultFilters) {\n    const group_by = getGroupByForTab(widget);\n    const newFilter = Object.assign({}, JSON.parse(JSON.stringify(filter)));\n    // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n    if (widget.currentTab === \"service_names\" /* AzureOcpDashboardTab.service_names */ && widget.tabsFilter && widget.tabsFilter.service_name) {\n        newFilter.service = undefined;\n    }\n    const query = {\n        filter: newFilter,\n        group_by,\n    };\n    return getQuery(query);\n}\n","import { azureOcpDashboardDefaultFilters, azureOcpDashboardStateKey, azureOcpDashboardTabFilters, getQueryForWidget, getQueryForWidgetTabs, } from './azureOcpDashboardCommon';\nexport const selectAzureOcpDashboardState = (state) => state[azureOcpDashboardStateKey];\nexport const selectWidgets = (state) => selectAzureOcpDashboardState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectAzureOcpDashboardState(state).currentWidgets;\nexport const selectWidgetQueries = (state, id) => {\n    const widget = selectWidget(state, id);\n    const filter = Object.assign(Object.assign({}, azureOcpDashboardDefaultFilters), (widget.filter ? widget.filter : {}));\n    const tabsFilter = Object.assign(Object.assign({}, azureOcpDashboardTabFilters), (widget.tabsFilter ? widget.tabsFilter : {}));\n    return {\n        previous: getQueryForWidget(Object.assign(Object.assign({}, filter), { time_scope_value: -2 })),\n        current: getQueryForWidget(filter),\n        forecast: getQueryForWidget({}, { limit: 31 }),\n        tabs: getQueryForWidgetTabs(widget, Object.assign(Object.assign({}, tabsFilter), { resolution: 'monthly' })),\n    };\n};\n","import { forecastActions } from 'store/forecasts';\nimport { reportActions } from 'store/reports';\nimport { createAction } from 'typesafe-actions';\nimport { selectWidget, selectWidgetQueries } from './azureOcpDashboardSelectors';\nexport const fetchWidgetForecasts = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        if (widget.forecastPathsType && widget.forecastType) {\n            const { forecast } = selectWidgetQueries(state, id);\n            dispatch(forecastActions.fetchForecast(widget.forecastPathsType, widget.forecastType, forecast));\n        }\n    };\n};\nexport const fetchWidgetReports = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        const { previous, current, tabs } = selectWidgetQueries(state, id);\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, current));\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, previous));\n        if (widget.availableTabs) {\n            dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, tabs));\n        }\n    };\n};\nexport const setWidgetTab = createAction('azureOcpDashboard/widget/tab')();\nexport const changeWidgetTab = (id, tab) => {\n    return dispatch => {\n        dispatch(setWidgetTab({ id, tab }));\n        dispatch(fetchWidgetReports(id));\n    };\n};\n","import messages from 'locales/messages';\nimport { azureDashboardWidgets } from 'store/dashboard/azureDashboard';\nimport { formatUnits } from 'utils/format';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const costSummaryWidget = {\n    id: getId(),\n    titleKey: messages.azureOcpDashboardCostTitle,\n    forecastPathsType: \"azure_ocp\" /* ForecastPathsType.azureOcp */,\n    forecastType: \"cost\" /* ForecastType.cost */,\n    reportPathsType: \"azure_ocp\" /* ReportPathsType.azureOcp */,\n    reportType: \"cost\" /* ReportType.cost */,\n    details: {\n        costKey: messages.cost,\n        showHorizontal: true,\n    },\n    tabsFilter: {\n        limit: 3,\n    },\n    trend: {\n        computedForecastItem: \"cost\" /* ComputedForecastItemType.cost */,\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        dailyTitleKey: messages.azureDailyCostTrendTitle,\n        titleKey: messages.azureCostTrendTitle,\n        type: 0 /* ChartType.rolling */,\n    },\n    availableTabs: [\n        \"service_names\" /* AzureOcpDashboardTab.service_names */,\n        \"subscription_guids\" /* AzureOcpDashboardTab.subscription_guids */,\n        \"resource_locations\" /* AzureOcpDashboardTab.resource_locations */,\n    ],\n    chartType: \"dailyTrend\" /* DashboardChartType.dailyTrend */,\n    currentTab: \"service_names\" /* AzureOcpDashboardTab.service_names */,\n};\nexport const databaseWidget = {\n    id: getId(),\n    titleKey: messages.dashboardDatabaseTitle,\n    reportPathsType: \"azure_ocp\" /* ReportPathsType.azureOcp */,\n    reportType: \"database\" /* ReportType.database */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service_name: azureDashboardWidgets.databaseWidget.filter.service_name,\n    },\n    tabsFilter: {\n        service_name: azureDashboardWidgets.databaseWidget.tabsFilter.service_name,\n    },\n    trend: {\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* ChartType.rolling */,\n    },\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const networkWidget = {\n    id: getId(),\n    titleKey: messages.dashboardNetworkTitle,\n    reportPathsType: \"azure_ocp\" /* ReportPathsType.azureOcp */,\n    reportType: \"network\" /* ReportType.network */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service_name: azureDashboardWidgets.networkWidget.filter.service_name,\n    },\n    tabsFilter: {\n        service_name: azureDashboardWidgets.networkWidget.tabsFilter.service_name,\n    },\n    trend: {\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* ChartType.rolling */,\n    },\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const storageWidget = {\n    id: getId(),\n    titleKey: messages.dashboardStorageTitle,\n    reportPathsType: \"azure_ocp\" /* ReportPathsType.azureOcp */,\n    reportType: \"storage\" /* ReportType.storage */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    filter: {\n        service_name: 'Storage',\n    },\n    tabsFilter: {\n        service_name: 'Storage',\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const virtualMachineWidget = {\n    id: getId(),\n    titleKey: messages.azureComputeTitle,\n    reportPathsType: \"azure_ocp\" /* ReportPathsType.azureOcp */,\n    reportType: \"instance_type\" /* ReportType.instanceType */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    filter: {\n        service_name: 'Virtual Machines',\n    },\n    tabsFilter: {\n        service_name: 'Virtual Machines',\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\n","import { getType } from 'typesafe-actions';\nimport { setWidgetTab } from './azureOcpDashboardActions';\nimport { costSummaryWidget, databaseWidget, networkWidget, storageWidget, virtualMachineWidget, } from './azureOcpDashboardWidgets';\nexport const defaultState = {\n    currentWidgets: [\n        costSummaryWidget.id,\n        virtualMachineWidget.id,\n        storageWidget.id,\n        networkWidget.id,\n        databaseWidget.id,\n    ],\n    widgets: {\n        [costSummaryWidget.id]: costSummaryWidget,\n        [virtualMachineWidget.id]: virtualMachineWidget,\n        [databaseWidget.id]: databaseWidget,\n        [networkWidget.id]: networkWidget,\n        [storageWidget.id]: storageWidget,\n    },\n};\nexport function azureOcpDashboardReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(setWidgetTab):\n            return Object.assign(Object.assign({}, state), { widgets: Object.assign(Object.assign({}, state.widgets), { [action.payload.id]: Object.assign(Object.assign({}, state.widgets[action.payload.id]), { currentTab: action.payload.tab }) }) });\n        default:\n            return state;\n    }\n}\n","import { getQuery } from 'api/queries/gcpQuery';\nexport const gcpDashboardStateKey = 'gcpDashboard';\nexport const gcpDashboardDefaultFilters = {\n    time_scope_units: 'month',\n    time_scope_value: -1,\n    resolution: 'daily',\n};\nexport const gcpDashboardTabFilters = Object.assign(Object.assign({}, gcpDashboardDefaultFilters), { limit: 3 });\nexport function getGroupByForTab(widget) {\n    switch (widget.currentTab) {\n        case \"services\" /* GcpDashboardTab.services */:\n            // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n            return {\n                service: widget.tabsFilter && widget.tabsFilter.service ? widget.tabsFilter.service : '*',\n            };\n        case \"accounts\" /* GcpDashboardTab.accounts */:\n            return { account: '*' };\n        case \"gcp_projects\" /* GcpDashboardTab.gcpProjects */:\n            return { gcp_project: '*' };\n        case \"regions\" /* GcpDashboardTab.regions */:\n            return { region: '*' };\n        default:\n            return {};\n    }\n}\nexport function getQueryForWidget(filter = gcpDashboardDefaultFilters, props) {\n    const query = Object.assign({ filter }, (props ? props : {}));\n    return getQuery(query);\n}\nexport function getQueryForWidgetTabs(widget, filter = gcpDashboardDefaultFilters) {\n    const group_by = getGroupByForTab(widget);\n    const newFilter = Object.assign({}, JSON.parse(JSON.stringify(filter)));\n    // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n    if (widget.currentTab === \"services\" /* GcpDashboardTab.services */ && widget.tabsFilter && widget.tabsFilter.service) {\n        newFilter.service = undefined;\n    }\n    const query = {\n        filter: newFilter,\n        group_by,\n    };\n    return getQuery(query);\n}\n","import { gcpDashboardDefaultFilters, gcpDashboardStateKey, gcpDashboardTabFilters, getQueryForWidget, getQueryForWidgetTabs, } from './gcpDashboardCommon';\nexport const selectGcpDashboardState = (state) => state[gcpDashboardStateKey];\nexport const selectWidgets = (state) => selectGcpDashboardState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectGcpDashboardState(state).currentWidgets;\nexport const selectWidgetQueries = (state, id) => {\n    const widget = selectWidget(state, id);\n    const filter = Object.assign(Object.assign({}, gcpDashboardDefaultFilters), (widget.filter ? widget.filter : {}));\n    const tabsFilter = Object.assign(Object.assign({}, gcpDashboardTabFilters), (widget.tabsFilter ? widget.tabsFilter : {}));\n    return {\n        previous: getQueryForWidget(Object.assign(Object.assign({}, filter), { time_scope_value: -2 })),\n        current: getQueryForWidget(filter),\n        forecast: getQueryForWidget({}, { limit: 31 }),\n        tabs: getQueryForWidgetTabs(widget, Object.assign(Object.assign({}, tabsFilter), { resolution: 'monthly' })),\n    };\n};\n","import { forecastActions } from 'store/forecasts';\nimport { reportActions } from 'store/reports';\nimport { createAction } from 'typesafe-actions';\nimport { selectWidget, selectWidgetQueries } from './gcpDashboardSelectors';\nexport const fetchWidgetForecasts = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        if (widget.forecastPathsType && widget.forecastType) {\n            const { forecast } = selectWidgetQueries(state, id);\n            dispatch(forecastActions.fetchForecast(widget.forecastPathsType, widget.forecastType, forecast));\n        }\n    };\n};\nexport const fetchWidgetReports = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        const { previous, current, tabs } = selectWidgetQueries(state, id);\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, current));\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, previous));\n        if (widget.availableTabs) {\n            dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, tabs));\n        }\n    };\n};\nexport const setWidgetTab = createAction('gcpDashboard/widget/tab')();\nexport const changeWidgetTab = (id, tab) => {\n    return dispatch => {\n        dispatch(setWidgetTab({ id, tab }));\n        dispatch(fetchWidgetReports(id));\n    };\n};\n","import messages from 'locales/messages';\nimport { paths } from 'routes';\nimport { formatCurrency, formatUnits } from 'utils/format';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const computeWidget = {\n    id: getId(),\n    titleKey: messages.gcpComputeTitle,\n    forecastPathsType: \"gcp\" /* ForecastPathsType.gcp */,\n    reportPathsType: \"gcp\" /* ReportPathsType.gcp */,\n    reportType: \"instance_type\" /* ReportType.instanceType */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    filter: {\n        service: 'Compute Engine',\n    },\n    tabsFilter: {\n        service: 'Compute Engine',\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const costSummaryWidget = {\n    id: getId(),\n    titleKey: messages.gcpCostTitle,\n    forecastPathsType: \"gcp\" /* ForecastPathsType.gcp */,\n    forecastType: \"cost\" /* ForecastType.cost */,\n    reportPathsType: \"gcp\" /* ReportPathsType.gcp */,\n    reportType: \"cost\" /* ReportType.cost */,\n    details: {\n        adjustContainerHeight: true,\n        costKey: messages.cost,\n        showHorizontal: true,\n        viewAllPath: paths.gcpDetails,\n    },\n    tabsFilter: {\n        limit: 3,\n    },\n    trend: {\n        computedForecastItem: \"cost\" /* ComputedForecastItemType.cost */,\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        dailyTitleKey: messages.gcpDailyCostTrendTitle,\n        titleKey: messages.gcpCostTrendTitle,\n        type: 0 /* ChartType.rolling */,\n    },\n    availableTabs: [\"services\" /* GcpDashboardTab.services */, \"gcp_projects\" /* GcpDashboardTab.gcpProjects */, \"regions\" /* GcpDashboardTab.regions */],\n    chartFormatter: formatCurrency,\n    chartType: \"dailyTrend\" /* DashboardChartType.dailyTrend */,\n    currentTab: \"services\" /* GcpDashboardTab.services */,\n};\nexport const databaseWidget = {\n    id: getId(),\n    titleKey: messages.dashboardDatabaseTitle,\n    reportPathsType: \"gcp\" /* ReportPathsType.gcp */,\n    reportType: \"database\" /* ReportType.database */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: 'Bigtable,Datastore,Database Migrations,Firebase,Firestore,MemoryStore,Spanner,SQL',\n    },\n    tabsFilter: {\n        service: 'Bigtable,Datastore,Database Migrations,Firebase,Firestore,MemoryStore,Spanner,SQL',\n    },\n    trend: {\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* ChartType.rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const networkWidget = {\n    id: getId(),\n    titleKey: messages.dashboardNetworkTitle,\n    reportPathsType: \"gcp\" /* ReportPathsType.gcp */,\n    reportType: \"network\" /* ReportType.network */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: 'Network,VPC,Firewall,Route,IP,DNS,CDN,NAT,Traffic Director,Service Discovery,Cloud Domains,Private Service Connect,Cloud Armor',\n    },\n    tabsFilter: {\n        service: 'Network,VPC,Firewall,Route,IP,DNS,CDN,NAT,Traffic Director,Service Discovery,Cloud Domains,Private Service Connect,Cloud Armor',\n    },\n    trend: {\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* ChartType.rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const storageWidget = {\n    id: getId(),\n    titleKey: messages.dashboardStorageTitle,\n    reportPathsType: \"gcp\" /* ReportPathsType.gcp */,\n    reportType: \"storage\" /* ReportType.storage */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\n","import { getType } from 'typesafe-actions';\nimport { setWidgetTab } from './gcpDashboardActions';\nimport { computeWidget, costSummaryWidget, databaseWidget, networkWidget, storageWidget } from './gcpDashboardWidgets';\nexport const defaultState = {\n    currentWidgets: [costSummaryWidget.id, computeWidget.id, storageWidget.id, networkWidget.id, databaseWidget.id],\n    widgets: {\n        [costSummaryWidget.id]: costSummaryWidget,\n        [computeWidget.id]: computeWidget,\n        [storageWidget.id]: storageWidget,\n        [networkWidget.id]: networkWidget,\n        [databaseWidget.id]: databaseWidget,\n    },\n};\nexport function gcpDashboardReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(setWidgetTab):\n            return Object.assign(Object.assign({}, state), { widgets: Object.assign(Object.assign({}, state.widgets), { [action.payload.id]: Object.assign(Object.assign({}, state.widgets[action.payload.id]), { currentTab: action.payload.tab }) }) });\n        default:\n            return state;\n    }\n}\n","import { getQuery } from 'api/queries/gcpQuery';\nexport const gcpOcpDashboardStateKey = 'gcpOcpDashboard';\nexport const gcpOcpDashboardDefaultFilters = {\n    time_scope_units: 'month',\n    time_scope_value: -1,\n    resolution: 'daily',\n};\nexport const gcpOcpDashboardTabFilters = Object.assign(Object.assign({}, gcpOcpDashboardDefaultFilters), { limit: 3 });\nexport function getGroupByForTab(widget) {\n    switch (widget.currentTab) {\n        case \"services\" /* GcpOcpDashboardTab.services */:\n            // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n            return {\n                service: widget.tabsFilter && widget.tabsFilter.service ? widget.tabsFilter.service : '*',\n            };\n        case \"accounts\" /* GcpOcpDashboardTab.accounts */:\n            return { account: '*' };\n        case \"gcp_projects\" /* GcpOcpDashboardTab.gcpProjects */:\n            return { gcp_project: '*' };\n        case \"regions\" /* GcpOcpDashboardTab.regions */:\n            return { region: '*' };\n        default:\n            return {};\n    }\n}\nexport function getQueryForWidget(filter = gcpOcpDashboardDefaultFilters, props) {\n    const query = Object.assign({ filter }, (props ? props : {}));\n    return getQuery(query);\n}\nexport function getQueryForWidgetTabs(widget, filter = gcpOcpDashboardDefaultFilters) {\n    const group_by = getGroupByForTab(widget);\n    const newFilter = Object.assign({}, JSON.parse(JSON.stringify(filter)));\n    // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n    if (widget.currentTab === \"services\" /* GcpOcpDashboardTab.services */ && widget.tabsFilter && widget.tabsFilter.service) {\n        newFilter.service = undefined;\n    }\n    const query = {\n        filter: newFilter,\n        group_by,\n    };\n    return getQuery(query);\n}\n","import { gcpOcpDashboardDefaultFilters, gcpOcpDashboardStateKey, gcpOcpDashboardTabFilters, getQueryForWidget, getQueryForWidgetTabs, } from './gcpOcpDashboardCommon';\nexport const selectGcpOcpDashboardState = (state) => state[gcpOcpDashboardStateKey];\nexport const selectWidgets = (state) => selectGcpOcpDashboardState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectGcpOcpDashboardState(state).currentWidgets;\nexport const selectWidgetQueries = (state, id) => {\n    const widget = selectWidget(state, id);\n    const filter = Object.assign(Object.assign({}, gcpOcpDashboardDefaultFilters), (widget.filter ? widget.filter : {}));\n    const tabsFilter = Object.assign(Object.assign({}, gcpOcpDashboardTabFilters), (widget.tabsFilter ? widget.tabsFilter : {}));\n    return {\n        previous: getQueryForWidget(Object.assign(Object.assign({}, filter), { time_scope_value: -2 })),\n        current: getQueryForWidget(filter),\n        forecast: getQueryForWidget({}, { limit: 31 }),\n        tabs: getQueryForWidgetTabs(widget, Object.assign(Object.assign({}, tabsFilter), { resolution: 'monthly' })),\n    };\n};\n","import { forecastActions } from 'store/forecasts';\nimport { reportActions } from 'store/reports';\nimport { createAction } from 'typesafe-actions';\nimport { selectWidget, selectWidgetQueries } from './gcpOcpDashboardSelectors';\nexport const fetchWidgetForecasts = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        if (widget.forecastPathsType && widget.forecastType) {\n            const { forecast } = selectWidgetQueries(state, id);\n            dispatch(forecastActions.fetchForecast(widget.forecastPathsType, widget.forecastType, forecast));\n        }\n    };\n};\nexport const fetchWidgetReports = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        const { previous, current, tabs } = selectWidgetQueries(state, id);\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, current));\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, previous));\n        if (widget.availableTabs) {\n            dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, tabs));\n        }\n    };\n};\nexport const setWidgetTab = createAction('gcpOcpDashboard/widget/tab')();\nexport const changeWidgetTab = (id, tab) => {\n    return dispatch => {\n        dispatch(setWidgetTab({ id, tab }));\n        dispatch(fetchWidgetReports(id));\n    };\n};\n","import messages from 'locales/messages';\nimport { gcpDashboardWidgets } from 'store/dashboard/gcpDashboard';\nimport { formatCurrency, formatUnits } from 'utils/format';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const computeWidget = {\n    id: getId(),\n    titleKey: messages.gcpComputeTitle,\n    forecastPathsType: \"gcp_ocp\" /* ForecastPathsType.gcpOcp */,\n    reportPathsType: \"gcp_ocp\" /* ReportPathsType.gcpOcp */,\n    reportType: \"instance_type\" /* ReportType.instanceType */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    filter: {\n        service: 'Compute Engine',\n    },\n    tabsFilter: {\n        service: 'Compute Engine',\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const costSummaryWidget = {\n    id: getId(),\n    titleKey: messages.gcpCostTitle,\n    forecastPathsType: \"gcp_ocp\" /* ForecastPathsType.gcpOcp */,\n    forecastType: \"cost\" /* ForecastType.cost */,\n    reportPathsType: \"gcp_ocp\" /* ReportPathsType.gcpOcp */,\n    reportType: \"cost\" /* ReportType.cost */,\n    details: {\n        adjustContainerHeight: true,\n        costKey: messages.cost,\n        showHorizontal: true,\n    },\n    tabsFilter: {\n        limit: 3,\n    },\n    trend: {\n        computedForecastItem: \"cost\" /* ComputedForecastItemType.cost */,\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        dailyTitleKey: messages.gcpDailyCostTrendTitle,\n        titleKey: messages.gcpCostTrendTitle,\n        type: 0 /* ChartType.rolling */,\n    },\n    availableTabs: [\"services\" /* GcpOcpDashboardTab.services */, \"gcp_projects\" /* GcpOcpDashboardTab.gcpProjects */, \"regions\" /* GcpOcpDashboardTab.regions */],\n    chartFormatter: formatCurrency,\n    chartType: \"dailyTrend\" /* DashboardChartType.dailyTrend */,\n    currentTab: \"services\" /* GcpOcpDashboardTab.services */,\n};\nexport const databaseWidget = {\n    id: getId(),\n    titleKey: messages.dashboardDatabaseTitle,\n    reportPathsType: \"gcp_ocp\" /* ReportPathsType.gcpOcp */,\n    reportType: \"database\" /* ReportType.database */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: gcpDashboardWidgets.databaseWidget.filter.service,\n    },\n    tabsFilter: {\n        service: gcpDashboardWidgets.databaseWidget.tabsFilter.service,\n    },\n    trend: {\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* ChartType.rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const networkWidget = {\n    id: getId(),\n    titleKey: messages.dashboardNetworkTitle,\n    reportPathsType: \"gcp_ocp\" /* ReportPathsType.gcpOcp */,\n    reportType: \"network\" /* ReportType.network */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: gcpDashboardWidgets.networkWidget.filter.service,\n    },\n    tabsFilter: {\n        service: gcpDashboardWidgets.networkWidget.tabsFilter.service,\n    },\n    trend: {\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* ChartType.rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const storageWidget = {\n    id: getId(),\n    titleKey: messages.dashboardStorageTitle,\n    reportPathsType: \"gcp_ocp\" /* ReportPathsType.gcpOcp */,\n    reportType: \"storage\" /* ReportType.storage */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\n","import { getType } from 'typesafe-actions';\nimport { setWidgetTab } from './gcpOcpDashboardActions';\nimport { computeWidget, costSummaryWidget, databaseWidget, networkWidget, storageWidget, } from './gcpOcpDashboardWidgets';\nexport const defaultState = {\n    currentWidgets: [costSummaryWidget.id, computeWidget.id, storageWidget.id, networkWidget.id, databaseWidget.id],\n    widgets: {\n        [costSummaryWidget.id]: costSummaryWidget,\n        [computeWidget.id]: computeWidget,\n        [storageWidget.id]: storageWidget,\n        [networkWidget.id]: networkWidget,\n        [databaseWidget.id]: databaseWidget,\n    },\n};\nexport function gcpOcpDashboardReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(setWidgetTab):\n            return Object.assign(Object.assign({}, state), { widgets: Object.assign(Object.assign({}, state.widgets), { [action.payload.id]: Object.assign(Object.assign({}, state.widgets[action.payload.id]), { currentTab: action.payload.tab }) }) });\n        default:\n            return state;\n    }\n}\n","import { getQuery } from 'api/queries/ibmQuery';\nexport const ibmDashboardStateKey = 'ibmDashboard';\nexport const ibmDashboardDefaultFilters = {\n    time_scope_units: 'month',\n    time_scope_value: -1,\n    resolution: 'daily',\n};\nexport const ibmDashboardTabFilters = Object.assign(Object.assign({}, ibmDashboardDefaultFilters), { limit: 3 });\nexport function getGroupByForTab(widget) {\n    switch (widget.currentTab) {\n        case \"services\" /* IbmDashboardTab.services */:\n            // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n            return {\n                service: widget.tabsFilter && widget.tabsFilter.service ? widget.tabsFilter.service : '*',\n            };\n        case \"accounts\" /* IbmDashboardTab.accounts */:\n            return { account: '*' };\n        case \"projects\" /* IbmDashboardTab.projects */:\n            return { project: '*' };\n        case \"regions\" /* IbmDashboardTab.regions */:\n            return { region: '*' };\n        default:\n            return {};\n    }\n}\nexport function getQueryForWidget(filter = ibmDashboardDefaultFilters, props) {\n    const query = Object.assign({ filter }, (props ? props : {}));\n    return getQuery(query);\n}\nexport function getQueryForWidgetTabs(widget, filter = ibmDashboardDefaultFilters) {\n    const group_by = getGroupByForTab(widget);\n    const newFilter = Object.assign({}, JSON.parse(JSON.stringify(filter)));\n    // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n    if (widget.currentTab === \"services\" /* IbmDashboardTab.services */ && widget.tabsFilter && widget.tabsFilter.service) {\n        newFilter.service = undefined;\n    }\n    const query = {\n        filter: newFilter,\n        group_by,\n    };\n    return getQuery(query);\n}\n","import { getQueryForWidget, getQueryForWidgetTabs, ibmDashboardDefaultFilters, ibmDashboardStateKey, ibmDashboardTabFilters, } from './ibmDashboardCommon';\nexport const selectIbmDashboardState = (state) => state[ibmDashboardStateKey];\nexport const selectWidgets = (state) => selectIbmDashboardState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectIbmDashboardState(state).currentWidgets;\nexport const selectWidgetQueries = (state, id) => {\n    const widget = selectWidget(state, id);\n    const filter = Object.assign(Object.assign({}, ibmDashboardDefaultFilters), (widget.filter ? widget.filter : {}));\n    const tabsFilter = Object.assign(Object.assign({}, ibmDashboardTabFilters), (widget.tabsFilter ? widget.tabsFilter : {}));\n    return {\n        previous: getQueryForWidget(Object.assign(Object.assign({}, filter), { time_scope_value: -2 })),\n        current: getQueryForWidget(filter),\n        forecast: getQueryForWidget({}, { limit: 31 }),\n        tabs: getQueryForWidgetTabs(widget, Object.assign(Object.assign({}, tabsFilter), { resolution: 'monthly' })),\n    };\n};\n","import { forecastActions } from 'store/forecasts';\nimport { reportActions } from 'store/reports';\nimport { createAction } from 'typesafe-actions';\nimport { selectWidget, selectWidgetQueries } from './ibmDashboardSelectors';\nexport const fetchWidgetForecasts = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        if (widget.forecastPathsType && widget.forecastType) {\n            const { forecast } = selectWidgetQueries(state, id);\n            dispatch(forecastActions.fetchForecast(widget.forecastPathsType, widget.forecastType, forecast));\n        }\n    };\n};\nexport const fetchWidgetReports = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        const { previous, current, tabs } = selectWidgetQueries(state, id);\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, current));\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, previous));\n        if (widget.availableTabs) {\n            dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, tabs));\n        }\n    };\n};\nexport const setWidgetTab = createAction('ibmDashboard/widget/tab')();\nexport const changeWidgetTab = (id, tab) => {\n    return dispatch => {\n        dispatch(setWidgetTab({ id, tab }));\n        dispatch(fetchWidgetReports(id));\n    };\n};\n","import messages from 'locales/messages';\nimport { paths } from 'routes';\nimport { formatCurrency, formatUnits } from 'utils/format';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const computeWidget = {\n    id: getId(),\n    titleKey: messages.ibmComputeTitle,\n    forecastPathsType: \"gcp\" /* ForecastPathsType.ibm */,\n    reportPathsType: \"gcp\" /* ReportPathsType.ibm */,\n    reportType: \"instance_type\" /* ReportType.instanceType */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    filter: {\n        service: 'Compute Engine',\n    },\n    tabsFilter: {\n        service: 'Compute Engine',\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const costSummaryWidget = {\n    id: getId(),\n    titleKey: messages.ibmCostTitle,\n    forecastPathsType: \"gcp\" /* ForecastPathsType.ibm */,\n    forecastType: \"cost\" /* ForecastType.cost */,\n    reportPathsType: \"gcp\" /* ReportPathsType.ibm */,\n    reportType: \"cost\" /* ReportType.cost */,\n    details: {\n        adjustContainerHeight: true,\n        costKey: messages.cost,\n        showHorizontal: true,\n        viewAllPath: paths.ibmDetails,\n    },\n    tabsFilter: {\n        limit: 3,\n    },\n    trend: {\n        computedForecastItem: \"cost\" /* ComputedForecastItemType.cost */,\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        dailyTitleKey: messages.ibmDailyCostTrendTitle,\n        titleKey: messages.ibmCostTrendTitle,\n        type: 0 /* ChartType.rolling */,\n    },\n    availableTabs: [\"services\" /* IbmDashboardTab.services */, \"projects\" /* IbmDashboardTab.projects */, \"regions\" /* IbmDashboardTab.regions */],\n    chartFormatter: formatCurrency,\n    chartType: \"dailyTrend\" /* DashboardChartType.dailyTrend */,\n    currentTab: \"services\" /* IbmDashboardTab.services */,\n};\nexport const databaseWidget = {\n    id: getId(),\n    titleKey: messages.dashboardDatabaseTitle,\n    reportPathsType: \"gcp\" /* ReportPathsType.ibm */,\n    reportType: \"database\" /* ReportType.database */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: 'Bigtable,Datastore,Database Migrations,Firestore,MemoryStore,Spanner,SQL',\n    },\n    tabsFilter: {\n        service: 'Bigtable,Datastore,Database Migrations,Firestore,MemoryStore,Spanner,SQL',\n    },\n    trend: {\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* ChartType.rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const networkWidget = {\n    id: getId(),\n    titleKey: messages.dashboardNetworkTitle,\n    reportPathsType: \"gcp\" /* ReportPathsType.ibm */,\n    reportType: \"network\" /* ReportType.network */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: 'VPC network,Network services,Hybrid Connectivity,Network Service Tiers,Network Security,Network Intelligence',\n    },\n    tabsFilter: {\n        service: 'VPC network,Network services,Hybrid Connectivity,Network Service Tiers,Network Security,Network Intelligence',\n    },\n    trend: {\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* ChartType.rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const storageWidget = {\n    id: getId(),\n    titleKey: messages.dashboardStorageTitle,\n    reportPathsType: \"gcp\" /* ReportPathsType.ibm */,\n    reportType: \"storage\" /* ReportType.storage */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\n","import { getType } from 'typesafe-actions';\nimport { setWidgetTab } from './ibmDashboardActions';\nimport { computeWidget, costSummaryWidget, databaseWidget, networkWidget, storageWidget } from './ibmDashboardWidgets';\nexport const defaultState = {\n    currentWidgets: [costSummaryWidget.id, computeWidget.id, storageWidget.id, networkWidget.id, databaseWidget.id],\n    widgets: {\n        [costSummaryWidget.id]: costSummaryWidget,\n        [computeWidget.id]: computeWidget,\n        [storageWidget.id]: storageWidget,\n        [networkWidget.id]: networkWidget,\n        [databaseWidget.id]: databaseWidget,\n    },\n};\nexport function ibmDashboardReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(setWidgetTab):\n            return Object.assign(Object.assign({}, state), { widgets: Object.assign(Object.assign({}, state.widgets), { [action.payload.id]: Object.assign(Object.assign({}, state.widgets[action.payload.id]), { currentTab: action.payload.tab }) }) });\n        default:\n            return state;\n    }\n}\n","import { getQuery } from 'api/queries/ociQuery';\nexport const ociDashboardStateKey = 'ociDashboard';\nexport const ociDashboardDefaultFilters = {\n    time_scope_units: 'month',\n    time_scope_value: -1,\n    resolution: 'daily',\n};\nexport const ociDashboardTabFilters = Object.assign(Object.assign({}, ociDashboardDefaultFilters), { limit: 3 });\nexport function getGroupByForTab(widget) {\n    switch (widget.currentTab) {\n        case \"product_services\" /* OciDashboardTab.product_services */:\n            return {\n                product_service: widget.tabsFilter && widget.tabsFilter.product_service ? widget.tabsFilter.product_service : '*',\n            };\n        case \"payer_tenant_ids\" /* OciDashboardTab.payer_tenant_ids */:\n            return { payer_tenant_id: '*' };\n        case \"regions\" /* OciDashboardTab.regions */:\n            return { region: '*' };\n        default:\n            return {};\n    }\n}\nexport function getQueryForWidget(filter = ociDashboardDefaultFilters, props) {\n    const query = Object.assign({ filter }, (props ? props : {}));\n    return getQuery(query);\n}\nexport function getQueryForWidgetTabs(widget, filter = ociDashboardDefaultFilters) {\n    const group_by = getGroupByForTab(widget);\n    const newFilter = Object.assign({}, JSON.parse(JSON.stringify(filter)));\n    if (widget.currentTab === \"product_services\" /* OciDashboardTab.product_services */ &&\n        widget.tabsFilter &&\n        widget.tabsFilter.product_service) {\n        newFilter.service = undefined;\n    }\n    const query = {\n        filter: newFilter,\n        group_by,\n    };\n    return getQuery(query);\n}\n","import { getQueryForWidget, getQueryForWidgetTabs, ociDashboardDefaultFilters, ociDashboardStateKey, ociDashboardTabFilters, } from './ociDashboardCommon';\nexport const selectOciDashboardState = (state) => state[ociDashboardStateKey];\nexport const selectWidgets = (state) => selectOciDashboardState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectOciDashboardState(state).currentWidgets;\nexport const selectWidgetQueries = (state, id) => {\n    const widget = selectWidget(state, id);\n    const filter = Object.assign(Object.assign({}, ociDashboardDefaultFilters), (widget.filter ? widget.filter : {}));\n    const tabsFilter = Object.assign(Object.assign({}, ociDashboardTabFilters), (widget.tabsFilter ? widget.tabsFilter : {}));\n    return {\n        previous: getQueryForWidget(Object.assign(Object.assign({}, filter), { time_scope_value: -2 })),\n        current: getQueryForWidget(filter),\n        forecast: getQueryForWidget({}, { limit: 31 }),\n        tabs: getQueryForWidgetTabs(widget, Object.assign(Object.assign({}, tabsFilter), { resolution: 'monthly' })),\n    };\n};\n","import { forecastActions } from 'store/forecasts';\nimport { reportActions } from 'store/reports';\nimport { createAction } from 'typesafe-actions';\nimport { selectWidget, selectWidgetQueries } from './ociDashboardSelectors';\nexport const fetchWidgetForecasts = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        if (widget.forecastPathsType && widget.forecastType) {\n            const { forecast } = selectWidgetQueries(state, id);\n            dispatch(forecastActions.fetchForecast(widget.forecastPathsType, widget.forecastType, forecast));\n        }\n    };\n};\nexport const fetchWidgetReports = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        const { previous, current, tabs } = selectWidgetQueries(state, id);\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, current));\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, previous));\n        if (widget.availableTabs) {\n            dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, tabs));\n        }\n    };\n};\nexport const setWidgetTab = createAction('ociDashboard/widget/tab')();\nexport const changeWidgetTab = (id, tab) => {\n    return dispatch => {\n        dispatch(setWidgetTab({ id, tab }));\n        dispatch(fetchWidgetReports(id));\n    };\n};\n","import messages from 'locales/messages';\nimport { paths } from 'routes';\nimport { formatUnits } from 'utils/format';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const costSummaryWidget = {\n    id: getId(),\n    titleKey: messages.ociDashboardCostTitle,\n    forecastPathsType: \"oci\" /* ForecastPathsType.oci */,\n    forecastType: \"cost\" /* ForecastType.cost */,\n    reportPathsType: \"oci\" /* ReportPathsType.oci */,\n    reportType: \"cost\" /* ReportType.cost */,\n    details: {\n        adjustContainerHeight: true,\n        costKey: messages.cost,\n        showHorizontal: true,\n        viewAllPath: paths.ociDetails,\n    },\n    tabsFilter: {\n        limit: 3,\n    },\n    trend: {\n        computedForecastItem: \"cost\" /* ComputedForecastItemType.cost */,\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        dailyTitleKey: messages.ociDailyCostTrendTitle,\n        titleKey: messages.ociCostTrendTitle,\n        type: 0 /* ChartType.rolling */,\n    },\n    availableTabs: [\"product_services\" /* OciDashboardTab.product_services */, \"payer_tenant_ids\" /* OciDashboardTab.payer_tenant_ids */, \"regions\" /* OciDashboardTab.regions */],\n    chartType: \"dailyTrend\" /* DashboardChartType.dailyTrend */,\n    currentTab: \"product_services\" /* OciDashboardTab.product_services */,\n};\nexport const databaseWidget = {\n    id: getId(),\n    titleKey: messages.dashboardDatabaseTitle,\n    reportPathsType: \"oci\" /* ReportPathsType.oci */,\n    reportType: \"database\" /* ReportType.database */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        product_service: 'Database,Autonomous Database,Autonomous Data Warehouse,Autonomous Transaction Processing,Autonomous JSON Database,Exadata Database Service,Database Cloud Service,Autonomous Database on Exadata,MySQL HeatWave,NoSQL,Search Service with OpenSearch',\n    },\n    tabsFilter: {\n        product_service: 'Database,Autonomous Database,Autonomous Data Warehouse,Autonomous Transaction Processing,Autonomous JSON Database,Exadata Database Service,Database Cloud Service,Autonomous Database on Exadata,MySQL HeatWave,NoSQL,Search Service with OpenSearch',\n    },\n    trend: {\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* ChartType.rolling */,\n    },\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const networkWidget = {\n    id: getId(),\n    titleKey: messages.dashboardNetworkTitle,\n    reportPathsType: \"oci\" /* ReportPathsType.oci */,\n    reportType: \"network\" /* ReportType.network */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        product_service: 'Network,Virtual Cloud Networks,Networking Gateways,Load Balancers,Site-to-Site VPN,Client-to-Site VPN,FastConnect,Customer-Premises Equipment,DNS Management',\n    },\n    tabsFilter: {\n        product_service: 'Network,Virtual Cloud Networks,Networking Gateways,Load Balancers,Site-to-Site VPN,Client-to-Site VPN,FastConnect,Customer-Premises Equipment,DNS Management',\n    },\n    trend: {\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* ChartType.rolling */,\n    },\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const storageWidget = {\n    id: getId(),\n    titleKey: messages.dashboardStorageTitle,\n    reportPathsType: \"oci\" /* ReportPathsType.oci */,\n    reportType: \"storage\" /* ReportType.storage */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const virtualMachineWidget = {\n    id: getId(),\n    titleKey: messages.ociComputeTitle,\n    reportPathsType: \"oci\" /* ReportPathsType.oci */,\n    reportType: \"instance_type\" /* ReportType.instanceType */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    filter: {\n        product_service: 'Compute,Virtual Machines',\n    },\n    tabsFilter: {\n        product_service: 'Compute,Virtual Machines',\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\n","import { getType } from 'typesafe-actions';\nimport { setWidgetTab } from './ociDashboardActions';\nimport { costSummaryWidget, databaseWidget, networkWidget, storageWidget, virtualMachineWidget, } from './ociDashboardWidgets';\nexport const defaultState = {\n    currentWidgets: [\n        costSummaryWidget.id,\n        virtualMachineWidget.id,\n        storageWidget.id,\n        networkWidget.id,\n        databaseWidget.id,\n    ],\n    widgets: {\n        [costSummaryWidget.id]: costSummaryWidget,\n        [virtualMachineWidget.id]: virtualMachineWidget,\n        [databaseWidget.id]: databaseWidget,\n        [networkWidget.id]: networkWidget,\n        [storageWidget.id]: storageWidget,\n    },\n};\nexport function ociDashboardReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(setWidgetTab):\n            return Object.assign(Object.assign({}, state), { widgets: Object.assign(Object.assign({}, state.widgets), { [action.payload.id]: Object.assign(Object.assign({}, state.widgets[action.payload.id]), { currentTab: action.payload.tab }) }) });\n        default:\n            return state;\n    }\n}\n","import { getQuery } from 'api/queries/ocpCloudQuery';\nexport const ocpCloudDashboardStateKey = 'ocpCloudDashboard';\nexport const ocpCloudDashboardDefaultFilters = {\n    time_scope_units: 'month',\n    time_scope_value: -1,\n    resolution: 'daily',\n};\nexport const ocpCloudDashboardTabFilters = Object.assign(Object.assign({}, ocpCloudDashboardDefaultFilters), { limit: 3 });\n// Todo: cluster, project, node\nexport function getGroupByForTab(widget) {\n    switch (widget.currentTab) {\n        case \"accounts\" /* OcpCloudDashboardTab.accounts */:\n            return { account: '*' };\n        case \"regions\" /* OcpCloudDashboardTab.regions */:\n            return { region: '*' };\n        case \"services\" /* OcpCloudDashboardTab.services */:\n            // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n            return {\n                service: widget.tabsFilter && widget.tabsFilter.service ? widget.tabsFilter.service : '*',\n            };\n        default:\n            return {};\n    }\n}\nexport function getQueryForWidget(filter = ocpCloudDashboardDefaultFilters, props) {\n    const query = Object.assign({ filter }, (props ? props : {}));\n    return getQuery(query);\n}\nexport function getQueryForWidgetTabs(widget, filter = ocpCloudDashboardDefaultFilters) {\n    const group_by = getGroupByForTab(widget);\n    const newFilter = Object.assign({}, JSON.parse(JSON.stringify(filter)));\n    // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n    if (widget.currentTab === \"services\" /* OcpCloudDashboardTab.services */ && widget.tabsFilter && widget.tabsFilter.service) {\n        newFilter.service = undefined;\n    }\n    const query = {\n        filter: newFilter,\n        group_by,\n    };\n    return getQuery(query);\n}\n","import { getQueryForWidget, getQueryForWidgetTabs, ocpCloudDashboardDefaultFilters, ocpCloudDashboardStateKey, ocpCloudDashboardTabFilters, } from './ocpCloudDashboardCommon';\nexport const selectOcpCloudDashboardState = (state) => state[ocpCloudDashboardStateKey];\nexport const selectWidgets = (state) => selectOcpCloudDashboardState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectOcpCloudDashboardState(state).currentWidgets;\nexport const selectWidgetQueries = (state, id) => {\n    const widget = selectWidget(state, id);\n    const defaultFilter = Object.assign(Object.assign({}, ocpCloudDashboardDefaultFilters), (widget.filter ? widget.filter : {}));\n    const tabsFilter = Object.assign(Object.assign({}, ocpCloudDashboardTabFilters), (widget.tabsFilter ? widget.tabsFilter : {}));\n    return {\n        previous: getQueryForWidget(Object.assign(Object.assign({}, defaultFilter), { time_scope_value: -2 })),\n        current: getQueryForWidget(defaultFilter),\n        forecast: getQueryForWidget({}, { limit: 31 }),\n        tabs: getQueryForWidgetTabs(widget, Object.assign(Object.assign({}, tabsFilter), { resolution: 'monthly' })),\n    };\n};\n","import { forecastActions } from 'store/forecasts';\nimport { reportActions } from 'store/reports';\nimport { createAction } from 'typesafe-actions';\nimport { selectWidget, selectWidgetQueries } from './ocpCloudDashboardSelectors';\nexport const fetchWidgetForecasts = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        if (widget.forecastPathsType && widget.forecastType) {\n            const { forecast } = selectWidgetQueries(state, id);\n            dispatch(forecastActions.fetchForecast(widget.forecastPathsType, widget.forecastType, forecast));\n        }\n    };\n};\nexport const fetchWidgetReports = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        const { previous, current, tabs } = selectWidgetQueries(state, id);\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, current));\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, previous));\n        if (widget.availableTabs) {\n            dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, tabs));\n        }\n    };\n};\nexport const setWidgetTab = createAction('ocpCloudDashboard/widget/tab')();\nexport const changeWidgetTab = (id, tab) => {\n    return dispatch => {\n        dispatch(setWidgetTab({ id, tab }));\n        dispatch(fetchWidgetReports(id));\n    };\n};\n","import messages from 'locales/messages';\nimport { awsDashboardWidgets } from 'store/dashboard/awsDashboard';\nimport { azureDashboardWidgets } from 'store/dashboard/azureDashboard';\nimport { gcpDashboardWidgets } from 'store/dashboard/gcpDashboard';\nimport { formatCurrency, formatUnits } from 'utils/format';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const costSummaryWidget = {\n    id: getId(),\n    titleKey: messages.ocpCloudDashboardCostTitle,\n    forecastPathsType: \"ocp_cloud\" /* ForecastPathsType.ocpCloud */,\n    forecastType: \"cost\" /* ForecastType.cost */,\n    reportPathsType: \"ocp_cloud\" /* ReportPathsType.ocpCloud */,\n    reportType: \"cost\" /* ReportType.cost */,\n    details: {\n        costKey: messages.cost,\n        showHorizontal: true,\n    },\n    tabsFilter: {\n        limit: 3,\n    },\n    trend: {\n        computedForecastItem: \"cost\" /* ComputedForecastItemType.cost */,\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        dailyTitleKey: messages.ocpCloudDashboardDailyCostTrendTitle,\n        titleKey: messages.ocpCloudDashboardCostTrendTitle,\n        type: 0 /* ChartType.rolling */,\n    },\n    availableTabs: [\"services\" /* OcpCloudDashboardTab.services */, \"accounts\" /* OcpCloudDashboardTab.accounts */, \"regions\" /* OcpCloudDashboardTab.regions */],\n    chartFormatter: formatCurrency,\n    chartType: \"dailyTrend\" /* DashboardChartType.dailyTrend */,\n    currentTab: \"services\" /* OcpCloudDashboardTab.services */,\n};\n// Cloud widgets\nexport const computeWidget = {\n    id: getId(),\n    titleKey: messages.ocpCloudDashboardComputeTitle,\n    reportPathsType: \"ocp_cloud\" /* ReportPathsType.ocpCloud */,\n    reportType: \"instance_type\" /* ReportType.instanceType */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    filter: {\n        service: 'AmazonEC2',\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const databaseWidget = {\n    id: getId(),\n    titleKey: messages.dashboardDatabaseTitle,\n    reportPathsType: \"ocp_cloud\" /* ReportPathsType.ocpCloud */,\n    reportType: \"database\" /* ReportType.database */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: awsDashboardWidgets.databaseWidget.filter.service +\n            ',' +\n            azureDashboardWidgets.databaseWidget.filter.service_name +\n            ',' +\n            gcpDashboardWidgets.databaseWidget.filter.service,\n    },\n    trend: {\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* ChartType.rolling */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const networkWidget = {\n    id: getId(),\n    titleKey: messages.dashboardNetworkTitle,\n    reportPathsType: \"ocp_cloud\" /* ReportPathsType.ocpCloud */,\n    reportType: \"network\" /* ReportType.network */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: awsDashboardWidgets.networkWidget.filter.service +\n            ',' +\n            azureDashboardWidgets.networkWidget.filter.service_name +\n            ',' +\n            gcpDashboardWidgets.networkWidget.filter.service,\n    },\n    trend: {\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* ChartType.rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\nexport const storageWidget = {\n    id: getId(),\n    titleKey: messages.dashboardStorageTitle,\n    reportPathsType: \"ocp_cloud\" /* ReportPathsType.ocpCloud */,\n    reportType: \"storage\" /* ReportType.storage */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* DashboardChartType.trend */,\n};\n","import { getType } from 'typesafe-actions';\nimport { setWidgetTab } from './ocpCloudDashboardActions';\nimport { computeWidget, costSummaryWidget, databaseWidget, networkWidget, storageWidget, } from './ocpCloudDashboardWidgets';\nexport const defaultState = {\n    currentWidgets: [costSummaryWidget.id, computeWidget.id, storageWidget.id, networkWidget.id, databaseWidget.id],\n    widgets: {\n        [costSummaryWidget.id]: costSummaryWidget,\n        [computeWidget.id]: computeWidget,\n        [databaseWidget.id]: databaseWidget,\n        [networkWidget.id]: networkWidget,\n        [storageWidget.id]: storageWidget,\n    },\n};\nexport function ocpCloudDashboardReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(setWidgetTab):\n            return Object.assign(Object.assign({}, state), { widgets: Object.assign(Object.assign({}, state.widgets), { [action.payload.id]: Object.assign(Object.assign({}, state.widgets[action.payload.id]), { currentTab: action.payload.tab }) }) });\n        default:\n            return state;\n    }\n}\n","import { getQuery } from 'api/queries/ocpQuery';\nexport const ocpDashboardStateKey = 'ocpDashboard';\nexport const ocpDashboardDefaultFilters = {\n    time_scope_units: 'month',\n    time_scope_value: -1,\n    resolution: 'daily',\n};\nexport const ocpDashboardTabFilters = Object.assign(Object.assign({}, ocpDashboardDefaultFilters), { limit: 3 });\n// Todo: cluster, project, node\nexport function getGroupByForTab(tab) {\n    switch (tab) {\n        case \"projects\" /* OcpDashboardTab.projects */:\n            return { project: '*' };\n        case \"clusters\" /* OcpDashboardTab.clusters */:\n            return { cluster: '*' };\n        case \"nodes\" /* OcpDashboardTab.nodes */:\n            return { node: '*' };\n        default:\n            return {};\n    }\n}\nexport function getQueryForWidget(filter = ocpDashboardDefaultFilters, props) {\n    const query = Object.assign({ filter }, (props ? props : {}));\n    return getQuery(query);\n}\nexport function getQueryForWidgetTabs(widget, filter = ocpDashboardDefaultFilters) {\n    const query = {\n        filter,\n        group_by: getGroupByForTab(widget.currentTab),\n    };\n    return getQuery(query);\n}\n","import { getQueryForWidget, getQueryForWidgetTabs, ocpDashboardDefaultFilters, ocpDashboardStateKey, ocpDashboardTabFilters, } from './ocpDashboardCommon';\nexport const selectOcpDashboardState = (state) => state[ocpDashboardStateKey];\nexport const selectWidgets = (state) => selectOcpDashboardState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectOcpDashboardState(state).currentWidgets;\nexport const selectWidgetQueries = (state, id) => {\n    const widget = selectWidget(state, id);\n    const defaultFilter = Object.assign(Object.assign({}, ocpDashboardDefaultFilters), (widget.filter ? widget.filter : {}));\n    const tabsFilter = Object.assign(Object.assign({}, ocpDashboardTabFilters), (widget.tabsFilter ? widget.tabsFilter : {}));\n    return {\n        previous: getQueryForWidget(Object.assign(Object.assign({}, defaultFilter), { time_scope_value: -2 })),\n        current: getQueryForWidget(defaultFilter),\n        forecast: getQueryForWidget({}, { limit: 31 }),\n        tabs: getQueryForWidgetTabs(widget, Object.assign(Object.assign({}, tabsFilter), { resolution: 'monthly' })),\n    };\n};\n","import { forecastActions } from 'store/forecasts';\nimport { reportActions } from 'store/reports';\nimport { createAction } from 'typesafe-actions';\nimport { selectWidget, selectWidgetQueries } from './ocpDashboardSelectors';\nexport const fetchWidgetForecasts = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        if (widget.forecastPathsType && widget.forecastType) {\n            const { forecast } = selectWidgetQueries(state, id);\n            dispatch(forecastActions.fetchForecast(widget.forecastPathsType, widget.forecastType, forecast));\n        }\n    };\n};\nexport const fetchWidgetReports = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        const { previous, current, tabs } = selectWidgetQueries(state, id);\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, current));\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, previous));\n        if (widget.availableTabs) {\n            dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, tabs));\n        }\n    };\n};\nexport const setWidgetTab = createAction('ocpDashboard/widget/tab')();\nexport const changeWidgetTab = (id, tab) => {\n    return dispatch => {\n        dispatch(setWidgetTab({ id, tab }));\n        dispatch(fetchWidgetReports(id));\n    };\n};\n","import messages from 'locales/messages';\nimport { paths } from 'routes';\nimport { formatCurrency, formatUnits } from 'utils/format';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const costSummaryWidget = {\n    id: getId(),\n    titleKey: messages.ocpDashboardCostTitle,\n    forecastPathsType: \"ocp\" /* ForecastPathsType.ocp */,\n    forecastType: \"cost\" /* ForecastType.cost */,\n    reportPathsType: \"ocp\" /* ReportPathsType.ocp */,\n    reportType: \"cost\" /* ReportType.cost */,\n    details: {\n        adjustContainerHeight: true,\n        costKey: messages.cost,\n        showHorizontal: true,\n        showTooltip: true,\n        viewAllPath: paths.ocpDetails,\n    },\n    trend: {\n        computedForecastItem: \"cost\" /* ComputedForecastItemType.cost */,\n        computedForecastInfrastructureItem: \"infrastructure\" /* ComputedForecastItemType.infrastructure */,\n        computedReportItem: \"cost\" /* ComputedReportItemType.cost */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        dailyTitleKey: messages.ocpDashboardDailyCostTitle,\n        titleKey: messages.ocpDashboardCostTrendTitle,\n        type: 0 /* ChartType.rolling */,\n    },\n    tabsFilter: {\n        limit: 3,\n    },\n    availableTabs: [\"projects\" /* OcpDashboardTab.projects */, \"clusters\" /* OcpDashboardTab.clusters */],\n    chartFormatter: formatCurrency,\n    chartType: \"dailyTrend\" /* DashboardChartType.dailyTrend */,\n    currentTab: \"projects\" /* OcpDashboardTab.projects */,\n};\nexport const cpuWidget = {\n    id: getId(),\n    titleKey: messages.ocpCpuUsageAndRequests,\n    reportPathsType: \"ocp\" /* ReportPathsType.ocp */,\n    reportType: \"cpu\" /* ReportType.cpu */,\n    details: {\n        requestKey: messages.requests,\n        showUnits: true,\n        showUsageFirst: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.ocpDailyUsageAndRequestComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"usage\" /* DashboardChartType.usage */,\n};\nexport const memoryWidget = {\n    id: getId(),\n    titleKey: messages.ocpMemoryUsageAndRequests,\n    reportPathsType: \"ocp\" /* ReportPathsType.ocp */,\n    reportType: \"memory\" /* ReportType.memory */,\n    details: {\n        requestKey: messages.requests,\n        showUnits: true,\n        showUsageFirst: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.ocpDailyUsageAndRequestComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"usage\" /* DashboardChartType.usage */,\n};\nexport const volumeWidget = {\n    id: getId(),\n    titleKey: messages.ocpVolumeUsageAndRequests,\n    reportPathsType: \"ocp\" /* ReportPathsType.ocp */,\n    reportType: \"volume\" /* ReportType.volume */,\n    details: {\n        requestKey: messages.requests,\n        showUnits: true,\n        showUsageFirst: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* ComputedReportItemType.usage */,\n        computedReportItemValue: \"total\" /* ComputedReportItemValueType.total */,\n        titleKey: messages.ocpDailyUsageAndRequestComparison,\n        type: 1 /* ChartType.daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"usage\" /* DashboardChartType.usage */,\n};\n","import { getType } from 'typesafe-actions';\nimport { setWidgetTab } from './ocpDashboardActions';\nimport { costSummaryWidget, cpuWidget, memoryWidget, volumeWidget } from './ocpDashboardWidgets';\nexport const defaultState = {\n    currentWidgets: [costSummaryWidget.id, cpuWidget.id, memoryWidget.id, volumeWidget.id],\n    widgets: {\n        [costSummaryWidget.id]: costSummaryWidget,\n        [cpuWidget.id]: cpuWidget,\n        [memoryWidget.id]: memoryWidget,\n        [volumeWidget.id]: volumeWidget,\n    },\n};\nexport function ocpDashboardReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(setWidgetTab):\n            return Object.assign(Object.assign({}, state), { widgets: Object.assign(Object.assign({}, state.widgets), { [action.payload.id]: Object.assign(Object.assign({}, state.widgets[action.payload.id]), { currentTab: action.payload.tab }) }) });\n        default:\n            return state;\n    }\n}\n","export const selectPagination = (stateProjector) => {\n    return (state) => {\n        return getPagination(stateProjector(state));\n    };\n};\nexport const getPagination = (payload) => {\n    if (payload === null) {\n        return {\n            page: 1,\n            perPage: 1,\n            count: 0,\n        };\n    }\n    let urlParams = null;\n    if (payload.links.next !== null) {\n        urlParams = new URLSearchParams(payload.links.next.split('?')[1]);\n        const limit = Number(urlParams.get('limit'));\n        const offset = Number(urlParams.get('offset')) - limit;\n        return {\n            page: offset / limit + 1,\n            perPage: limit,\n            count: payload.meta.count,\n        };\n    }\n    if (payload.links.previous !== null) {\n        urlParams = new URLSearchParams(payload.links.previous.split('?')[1]);\n        const limit = Number(urlParams.get('limit'));\n        const offset = Number(urlParams.get('offset')) + limit;\n        return {\n            page: offset / limit + 1,\n            perPage: limit,\n            count: payload.meta.count,\n        };\n    }\n    urlParams = new URLSearchParams(payload.links.first.split('?')[1]);\n    return {\n        page: 1,\n        perPage: Number(urlParams.get('limit')),\n        count: payload.meta.count,\n    };\n};\n","export const selectQuery = (stateProjector, keys) => {\n    return (state) => {\n        const params = getQuery(stateProjector(state));\n        return keys.reduce((acc, curr) => {\n            return Object.assign(Object.assign({}, acc), { [curr]: params.get(curr) });\n        }, {});\n    };\n};\nconst getQuery = (payload) => {\n    if (payload === null) {\n        return new URLSearchParams();\n    }\n    const [, search] = payload.links.first.split('?');\n    return new URLSearchParams(search);\n};\n","export const exportStateKey = 'export';\nexport function getExportId(reportPathsType, reportType, query) {\n    return `${reportPathsType}-${reportType}--${query}`;\n}\n","import { exportStateKey, getExportId } from './exportCommon';\nexport const selectExportState = (state) => state[exportStateKey];\nexport const selectExport = (state, reportPathsType, reportType, query) => selectExportState(state).byId.get(getExportId(reportPathsType, reportType, query));\nexport const selectExportFetchStatus = (state, reportPathsType, reportType, query) => selectExportState(state).fetchStatus.get(getExportId(reportPathsType, reportType, query));\nexport const selectExportError = (state, reportPathsType, reportType, query) => selectExportState(state).errors.get(getExportId(reportPathsType, reportType, query));\n","import { AlertVariant } from '@patternfly/react-core';\nimport { addNotification, removeNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { runExport } from 'api/export/exportUtils';\nimport { ExportsLink } from 'components/exports/exportsLink';\nimport { intl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { getExportId } from 'store/export/exportCommon';\nimport { selectExport, selectExportFetchStatus } from 'store/export/exportSelectors';\nimport { createAction } from 'typesafe-actions';\nconst expirationMS = 30 * 60 * 1000; // 30 minutes\nexport const fetchExportRequest = createAction('report/request')();\nexport const fetchExportSuccess = createAction('report/success')();\nexport const fetchExportFailure = createAction('report/failure')();\nconst exportSuccessID = 'cost_management_export_success';\nexport function exportReport(reportPathsType, reportType, query, isExportsFeatureEnabled) {\n    return (dispatch, getState) => {\n        if (!isExportExpired(getState(), reportPathsType, reportType, query)) {\n            return;\n        }\n        const meta = {\n            reportId: getExportId(reportPathsType, reportType, query),\n        };\n        dispatch(fetchExportRequest(meta));\n        runExport(reportPathsType, reportType, query)\n            .then(res => {\n            dispatch(fetchExportSuccess(res.data, meta));\n            if (isExportsFeatureEnabled) {\n                const description = intl.formatMessage(messages.exportsSuccessDesc, {\n                    link: React.createElement(ExportsLink, { isActionLink: true, onClick: () => dispatch(removeNotification(exportSuccessID)) }),\n                    value: React.createElement(\"b\", null, intl.formatMessage(messages.exportsTitle)),\n                });\n                dispatch(addNotification({\n                    description,\n                    dismissable: true,\n                    id: exportSuccessID,\n                    title: intl.formatMessage(messages.exportsSuccess),\n                    variant: AlertVariant.success,\n                }));\n            }\n        })\n            .catch(err => {\n            dispatch(fetchExportFailure(err, meta));\n            if (isExportsFeatureEnabled) {\n                dispatch(addNotification({\n                    description: intl.formatMessage(messages.exportsFailedDesc),\n                    dismissable: true,\n                    title: intl.formatMessage(messages.exportsUnavailable),\n                    variant: AlertVariant.danger,\n                }));\n            }\n        });\n    };\n}\nfunction isExportExpired(state, reportPathsType, reportType, query) {\n    const report = selectExport(state, reportPathsType, reportType, query);\n    const fetchStatus = selectExportFetchStatus(state, reportPathsType, reportType, query);\n    if (fetchStatus === 1 /* FetchStatus.inProgress */) {\n        return false;\n    }\n    if (!report) {\n        return true;\n    }\n    const now = Date.now();\n    return now > report.timeRequested + expirationMS;\n}\n","import { runExport as runAwsExport } from './awsExport';\nimport { runExport as runAwsOcpExport } from './awsOcpExport';\nimport { runExport as runAzureExport } from './azureExport';\nimport { runExport as runAzureOcpExport } from './azureOcpExport';\nimport { runExport as runGcpExport } from './gcpExport';\nimport { runExport as runGcpOcpExport } from './gcpOcpExport';\nimport { runExport as runIbmExport } from './ibmExport';\nimport { runExport as runOciExport } from './ociExport';\nimport { runExport as runOcpCloudExport } from './ocpCloudExport';\nimport { runExport as runOcpExport } from './ocpExport';\nexport function runExport(reportPathsType, reportType, query) {\n    let report;\n    switch (reportPathsType) {\n        case \"aws\" /* ReportPathsType.aws */:\n            report = runAwsExport(reportType, query);\n            break;\n        case \"aws_ocp\" /* ReportPathsType.awsOcp */:\n            report = runAwsOcpExport(reportType, query);\n            break;\n        case \"azure\" /* ReportPathsType.azure */:\n            report = runAzureExport(reportType, query);\n            break;\n        case \"oci\" /* ReportPathsType.oci */:\n            report = runOciExport(reportType, query);\n            break;\n        case \"azure_ocp\" /* ReportPathsType.azureOcp */:\n            report = runAzureOcpExport(reportType, query);\n            break;\n        case \"gcp\" /* ReportPathsType.gcp */:\n            report = runGcpExport(reportType, query);\n            break;\n        case \"gcp_ocp\" /* ReportPathsType.gcpOcp */:\n            report = runGcpOcpExport(reportType, query);\n            break;\n        case \"gcp\" /* ReportPathsType.ibm */:\n            report = runIbmExport(reportType, query);\n            break;\n        case \"ocp_cloud\" /* ReportPathsType.ocpCloud */:\n            report = runOcpCloudExport(reportType, query);\n            break;\n        case \"ocp\" /* ReportPathsType.ocp */:\n            report = runOcpExport(reportType, query);\n            break;\n    }\n    return report;\n}\n","import { ReportTypePaths } from 'api/reports/awsReports';\nimport axios from 'axios';\nexport function runExport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`, {\n        headers: {\n            Accept: 'text/csv',\n        },\n    });\n}\n","import { ReportTypePaths } from 'api/reports/awsOcpReports';\nimport axios from 'axios';\nexport function runExport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`, {\n        headers: {\n            Accept: 'text/csv',\n        },\n    });\n}\n","import { ReportTypePaths } from 'api/reports/azureReports';\nimport axios from 'axios';\nexport function runExport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`, {\n        headers: {\n            Accept: 'text/csv',\n        },\n    });\n}\n","import { ReportTypePaths } from 'api/reports/ociReports';\nimport axios from 'axios';\nexport function runExport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`, {\n        headers: {\n            Accept: 'text/csv',\n        },\n    });\n}\n","import { ReportTypePaths } from 'api/reports/azureOcpReports';\nimport axios from 'axios';\nexport function runExport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`, {\n        headers: {\n            Accept: 'text/csv',\n        },\n    });\n}\n","import { ReportTypePaths } from 'api/reports/gcpReports';\nimport axios from 'axios';\nexport function runExport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`, {\n        headers: {\n            Accept: 'text/csv',\n        },\n    });\n}\n","import { ReportTypePaths } from 'api/reports/gcpOcpReports';\nimport axios from 'axios';\nexport function runExport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`, {\n        headers: {\n            Accept: 'text/csv',\n        },\n    });\n}\n","import { ReportTypePaths } from 'api/reports/ibmReports';\nimport axios from 'axios';\nexport function runExport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`, {\n        headers: {\n            Accept: 'text/csv',\n        },\n    });\n}\n","import { ReportTypePaths } from 'api/reports/ocpCloudReports';\nimport axios from 'axios';\nexport function runExport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`, {\n        headers: {\n            Accept: 'text/csv',\n        },\n    });\n}\n","import { ReportTypePaths } from 'api/reports/ocpReports';\nimport axios from 'axios';\nexport function runExport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`, {\n        headers: {\n            Accept: 'text/csv',\n        },\n    });\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchExportFailure, fetchExportRequest, fetchExportSuccess } from './exportActions';\nconst defaultState = {\n    byId: new Map(),\n    fetchStatus: new Map(),\n    errors: new Map(),\n};\nexport function exportReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchExportRequest):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.payload.reportId, 1 /* FetchStatus.inProgress */) });\n        case getType(fetchExportSuccess):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* FetchStatus.complete */), byId: new Map(state.byId).set(action.meta.reportId, {\n                    data: action.payload,\n                    timeRequested: Date.now(),\n                }), errors: new Map(state.errors).set(action.meta.reportId, null) });\n        case getType(fetchExportFailure):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* FetchStatus.complete */), errors: new Map(state.errors).set(action.meta.reportId, action.payload) });\n        default:\n            return state;\n    }\n}\n","import { createAction } from 'typesafe-actions';\nexport const setFeatureFlags = createAction('feature/init_feature_flags')();\nexport const resetState = createAction('feature/reset_state')();\n","import { getType } from 'typesafe-actions';\nimport { resetState, setFeatureFlags } from './featureFlagsActions';\nexport const defaultState = {\n    isCurrencyFeatureEnabled: false,\n    isExportsFeatureEnabled: false,\n    isIbmFeatureEnabled: false,\n    isOciFeatureEnabled: false,\n};\nexport const stateKey = 'featureFlags';\nexport function featureFlagsReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(setFeatureFlags):\n            return Object.assign(Object.assign({}, state), { isCurrencyFeatureEnabled: action.payload.isCurrencyFeatureEnabled, isExportsFeatureEnabled: action.payload.isExportsFeatureEnabled, isIbmFeatureEnabled: action.payload.isIbmFeatureEnabled, isOciFeatureEnabled: action.payload.isOciFeatureEnabled });\n        default:\n            return state;\n    }\n}\n","import { stateKey } from './featureFlagsReducer';\nexport const selectFeatureFlagsState = (state) => state[stateKey];\nexport const selectIsCurrencyFeatureEnabled = (state) => selectFeatureFlagsState(state).isCurrencyFeatureEnabled;\nexport const selectIsExportsFeatureEnabled = (state) => selectFeatureFlagsState(state).isExportsFeatureEnabled;\nexport const selectIsIbmFeatureEnabled = (state) => selectFeatureFlagsState(state).isIbmFeatureEnabled;\nexport const selectIsOciFeatureEnabled = (state) => selectFeatureFlagsState(state).isOciFeatureEnabled;\n","import axios from 'axios';\nexport const ForecastTypePaths = {\n    [\"cost\" /* ForecastType.cost */]: 'forecasts/aws/costs/',\n};\nexport function runForecast(forecastType, query) {\n    const insights = window.insights;\n    const path = ForecastTypePaths[forecastType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ForecastTypePaths = {\n    [\"cost\" /* ForecastType.cost */]: 'forecasts/openshift/infrastructures/aws/costs/',\n};\nexport function runForecast(forecastType, query) {\n    const insights = window.insights;\n    const path = ForecastTypePaths[forecastType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ForecastTypePaths = {\n    [\"cost\" /* ForecastType.cost */]: 'forecasts/azure/costs/',\n};\nexport function runForecast(forecastType, query) {\n    const insights = window.insights;\n    const path = ForecastTypePaths[forecastType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ForecastTypePaths = {\n    [\"cost\" /* ForecastType.cost */]: 'forecasts/openshift/infrastructures/azure/costs/',\n};\nexport function runForecast(forecastType, query) {\n    const insights = window.insights;\n    const path = ForecastTypePaths[forecastType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ForecastTypePaths = {\n    [\"cost\" /* ForecastType.cost */]: 'forecasts/gcp/costs/',\n};\nexport function runForecast(forecastType, query) {\n    const insights = window.insights;\n    const path = ForecastTypePaths[forecastType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ForecastTypePaths = {\n    [\"cost\" /* ForecastType.cost */]: 'forecasts/openshift/infrastructures/gcp/costs/',\n};\nexport function runForecast(forecastType, query) {\n    const insights = window.insights;\n    const path = ForecastTypePaths[forecastType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ForecastTypePaths = {\n    [\"cost\" /* ForecastType.cost */]: 'forecasts/ibm/costs/',\n};\nexport function runForecast(forecastType, query) {\n    const insights = window.insights;\n    const path = ForecastTypePaths[forecastType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ForecastTypePaths = {\n    [\"cost\" /* ForecastType.cost */]: 'forecasts/oci/costs/',\n};\nexport function runForecast(forecastType, query) {\n    const insights = window.insights;\n    const path = ForecastTypePaths[forecastType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ForecastTypePaths = {\n    [\"cost\" /* ForecastType.cost */]: 'forecasts/openshift/infrastructures/all/costs/',\n};\nexport function runForecast(forecastType, query) {\n    const insights = window.insights;\n    const path = ForecastTypePaths[forecastType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ForecastTypePaths = {\n    [\"cost\" /* ForecastType.cost */]: 'forecasts/openshift/costs/',\n    [\"infrastructure\" /* ForecastType.infrastructure */]: 'forecasts/openshift/costs/',\n    [\"supplementary\" /* ForecastType.supplementary */]: 'forecasts/openshift/costs/',\n};\nexport function runForecast(forecastType, query) {\n    const insights = window.insights;\n    const path = ForecastTypePaths[forecastType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","export const forecastStateKey = 'forecast';\nexport function getForecastId(forecastPathsType, forecastType, query) {\n    return `${forecastPathsType}--${forecastType}--${query}`;\n}\n","import { forecastStateKey, getForecastId } from './forecastCommon';\nexport const selectForecastState = (state) => state[forecastStateKey];\nexport const selectForecast = (state, forecastPathsType, forecastType, query) => selectForecastState(state).byId.get(getForecastId(forecastPathsType, forecastType, query));\nexport const selectForecastFetchStatus = (state, forecastPathsType, forecastType, query) => selectForecastState(state).fetchStatus.get(getForecastId(forecastPathsType, forecastType, query));\nexport const selectForecastError = (state, forecastPathsType, forecastType, query) => selectForecastState(state).errors.get(getForecastId(forecastPathsType, forecastType, query));\n","import { runForecast } from 'api/forecasts/forecastUtils';\nimport { createAction } from 'typesafe-actions';\nimport { getForecastId } from './forecastCommon';\nimport { selectForecast, selectForecastFetchStatus } from './forecastSelectors';\nconst expirationMS = 30 * 60 * 1000; // 30 minutes\nexport const fetchForecastRequest = createAction('forecast/request')();\nexport const fetchForecastSuccess = createAction('forecast/success')();\nexport const fetchForecastFailure = createAction('forecast/failure')();\nexport function fetchForecast(forecastPathsType, forecastType, query) {\n    return (dispatch, getState) => {\n        if (!isForecastExpired(getState(), forecastPathsType, forecastType, query)) {\n            return;\n        }\n        const meta = {\n            forecastId: getForecastId(forecastPathsType, forecastType, query),\n        };\n        dispatch(fetchForecastRequest(meta));\n        runForecast(forecastPathsType, forecastType, query)\n            .then(res => {\n            dispatch(fetchForecastSuccess(res.data, meta));\n        })\n            .catch(err => {\n            dispatch(fetchForecastFailure(err, meta));\n        });\n    };\n}\nfunction isForecastExpired(state, forecastPathsType, forecastType, query) {\n    const forecast = selectForecast(state, forecastPathsType, forecastType, query);\n    const fetchStatus = selectForecastFetchStatus(state, forecastPathsType, forecastType, query);\n    if (fetchStatus === 1 /* FetchStatus.inProgress */) {\n        return false;\n    }\n    if (!forecast) {\n        return true;\n    }\n    const now = Date.now();\n    return now > forecast.timeRequested + expirationMS;\n}\n","import { runForecast as runAwsForecast } from './awsForecast';\nimport { runForecast as runAwsOcpForecast } from './awsOcpForecast';\nimport { runForecast as runAzureForecast } from './azureForecast';\nimport { runForecast as runAzureOcpForecast } from './azureOcpForecast';\nimport { runForecast as runGcpForecast } from './gcpForecast';\nimport { runForecast as runGcpOcpForecast } from './gcpOcpForecast';\nimport { runForecast as runIbmForecast } from './ibmForecast';\nimport { runForecast as runOciForecast } from './ociForecast';\nimport { runForecast as runOcpCloudForecast } from './ocpCloudForecast';\nimport { runForecast as runOcpForecast } from './ocpForecast';\nexport function runForecast(forecastPathsType, forecastType, query) {\n    let forecast;\n    switch (forecastPathsType) {\n        case \"aws\" /* ForecastPathsType.aws */:\n            forecast = runAwsForecast(forecastType, query);\n            break;\n        case \"aws_ocp\" /* ForecastPathsType.awsOcp */:\n            forecast = runAwsOcpForecast(forecastType, query);\n            break;\n        case \"azure\" /* ForecastPathsType.azure */:\n            forecast = runAzureForecast(forecastType, query);\n            break;\n        case \"azure_ocp\" /* ForecastPathsType.azureOcp */:\n            forecast = runAzureOcpForecast(forecastType, query);\n            break;\n        case \"gcp\" /* ForecastPathsType.gcp */:\n            forecast = runGcpForecast(forecastType, query);\n            break;\n        case \"gcp_ocp\" /* ForecastPathsType.gcpOcp */:\n            forecast = runGcpOcpForecast(forecastType, query);\n            break;\n        case \"gcp\" /* ForecastPathsType.ibm */:\n            forecast = runIbmForecast(forecastType, query);\n            break;\n        case \"oci\" /* ForecastPathsType.oci */:\n            forecast = runOciForecast(forecastType, query);\n            break;\n        case \"ocp\" /* ForecastPathsType.ocp */:\n            forecast = runOcpForecast(forecastType, query);\n            break;\n        case \"ocp_cloud\" /* ForecastPathsType.ocpCloud */:\n            forecast = runOcpCloudForecast(forecastType, query);\n            break;\n    }\n    return forecast;\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchForecastFailure, fetchForecastRequest, fetchForecastSuccess } from './forecastActions';\nconst defaultState = {\n    byId: new Map(),\n    fetchStatus: new Map(),\n    errors: new Map(),\n};\nexport function forecastReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchForecastRequest):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.payload.forecastId, 1 /* FetchStatus.inProgress */) });\n        case getType(fetchForecastSuccess):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.forecastId, 2 /* FetchStatus.complete */), byId: new Map(state.byId).set(action.meta.forecastId, Object.assign(Object.assign({}, action.payload), { timeRequested: Date.now() })), errors: new Map(state.errors).set(action.meta.forecastId, null) });\n        case getType(fetchForecastFailure):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.forecastId, 2 /* FetchStatus.complete */), errors: new Map(state.errors).set(action.meta.forecastId, action.payload) });\n        default:\n            return state;\n    }\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchPriceListFailure, fetchPriceListRequest, fetchPriceListSuccess } from './actions';\nexport const stateKey = 'priceList';\nexport const defaultState = {\n    rates: new Map(),\n    error: new Map(),\n    status: new Map(),\n};\nexport function reducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchPriceListRequest):\n            return Object.assign(Object.assign({}, state), { status: new Map(state.status).set(action.payload.providerUuid, 1 /* FetchStatus.inProgress */) });\n        case getType(fetchPriceListSuccess):\n            return Object.assign(Object.assign({}, state), { status: new Map(state.status).set(action.meta.providerUuid, 2 /* FetchStatus.complete */), rates: new Map(state.rates).set(action.meta.providerUuid, Object.assign(Object.assign({}, action.payload), { timeRequested: Date.now() })), error: new Map(state.error).set(action.meta.providerUuid, null) });\n        case getType(fetchPriceListFailure):\n            return Object.assign(Object.assign({}, state), { error: new Map(state.error).set(action.meta.providerUuid, action.payload), status: new Map(state.status).set(action.meta.providerUuid, 2 /* FetchStatus.complete */) });\n        default:\n            return state;\n    }\n}\n","import { fetchRate } from 'api/rates';\nimport { expirationMS } from 'store/common';\nimport { createAction } from 'typesafe-actions';\nimport { cachedRates, status } from './selectors';\nexport const fetchPriceListRequest = createAction('priceList/request')();\nexport const fetchPriceListSuccess = createAction('priceList/success')();\nexport const fetchPriceListFailure = createAction('priceList/failure')();\nfunction isExpired(state, meta) {\n    const cachedData = cachedRates(state, meta.providerUuid);\n    const reqStatus = status(state, meta.providerUuid);\n    if (reqStatus === 1 /* FetchStatus.inProgress */) {\n        return false;\n    }\n    if (!cachedData) {\n        return true;\n    }\n    const now = Date.now();\n    return now > cachedData.timeRequested + expirationMS;\n}\nexport function fetchPriceList(providerUuid) {\n    const meta = { providerUuid };\n    return (dispatch, getState) => {\n        if (!isExpired(getState(), meta)) {\n            return;\n        }\n        dispatch(fetchPriceListRequest(meta));\n        return fetchRate(providerUuid)\n            .then(res => {\n            dispatch(fetchPriceListSuccess(res.data, meta));\n        })\n            .catch(err => {\n            dispatch(fetchPriceListFailure(err, meta));\n        });\n    };\n}\n","import { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { combineReducers } from 'redux';\nimport { accountSettingsReducer, accountSettingsStateKey } from 'store/accountSettings';\nimport { awsCostOverviewReducer, awsCostOverviewStateKey } from 'store/breakdown/costOverview/awsCostOverview';\nimport { azureCostOverviewReducer, azureCostOverviewStateKey } from 'store/breakdown/costOverview/azureCostOverview';\nimport { gcpCostOverviewReducer, gcpCostOverviewStateKey } from 'store/breakdown/costOverview/gcpCostOverview';\nimport { ibmCostOverviewReducer, ibmCostOverviewStateKey } from 'store/breakdown/costOverview/ibmCostOverview';\nimport { ociCostOverviewReducer, ociCostOverviewStateKey } from 'store/breakdown/costOverview/ociCostOverview';\nimport { ocpCostOverviewReducer, ocpCostOverviewStateKey } from 'store/breakdown/costOverview/ocpCostOverview';\nimport { awsHistoricalDataReducer, awsHistoricalDataStateKey } from 'store/breakdown/historicalData/awsHistoricalData';\nimport { azureHistoricalDataReducer, azureHistoricalDataStateKey, } from 'store/breakdown/historicalData/azureHistoricalData';\nimport { gcpHistoricalDataReducer, gcpHistoricalDataStateKey } from 'store/breakdown/historicalData/gcpHistoricalData';\nimport { ibmHistoricalDataReducer, ibmHistoricalDataStateKey } from 'store/breakdown/historicalData/ibmHistoricalData';\nimport { ociHistoricalDataReducer, ociHistoricalDataStateKey } from 'store/breakdown/historicalData/ociHistoricalData';\nimport { ocpHistoricalDataReducer, ocpHistoricalDataStateKey } from 'store/breakdown/historicalData/ocpHistoricalData';\nimport { costModelsReducer, costModelsStateKey } from 'store/costModels';\nimport { awsDashboardReducer, awsDashboardStateKey } from 'store/dashboard/awsDashboard';\nimport { awsOcpDashboardReducer, awsOcpDashboardStateKey } from 'store/dashboard/awsOcpDashboard';\nimport { azureDashboardReducer, azureDashboardStateKey } from 'store/dashboard/azureDashboard';\nimport { azureOcpDashboardReducer, azureOcpDashboardStateKey } from 'store/dashboard/azureOcpDashboard';\nimport { gcpDashboardReducer, gcpDashboardStateKey } from 'store/dashboard/gcpDashboard';\nimport { gcpOcpDashboardReducer, gcpOcpDashboardStateKey } from 'store/dashboard/gcpOcpDashboard';\nimport { ibmDashboardReducer, ibmDashboardStateKey } from 'store/dashboard/ibmDashboard';\nimport { ociDashboardReducer, ociDashboardStateKey } from 'store/dashboard/ociDashboard';\nimport { ocpCloudDashboardReducer, ocpCloudDashboardStateKey } from 'store/dashboard/ocpCloudDashboard';\nimport { ocpDashboardReducer, ocpDashboardStateKey } from 'store/dashboard/ocpDashboard';\nimport { exportReducer, exportStateKey } from 'store/export';\nimport { forecastReducer, forecastStateKey } from 'store/forecasts';\nimport { orgReducer, orgStateKey } from 'store/orgs';\nimport { priceListReducer, priceListStateKey } from 'store/priceList';\nimport { reportReducer, reportStateKey } from 'store/reports';\nimport { resourceReducer, resourceStateKey } from 'store/resources';\nimport { sourcesReducer, sourcesStateKey } from 'store/sourceSettings';\nimport { tagReducer, tagStateKey } from 'store/tags';\nimport { featureFlagsReducer, featureFlagsStateKey } from './featureFlags';\nimport { metricsReducer, metricsStateKey } from './metrics';\nimport { providersReducer, providersStateKey } from './providers';\nimport { rbacReducer, rbacStateKey } from './rbac';\nimport { uiReducer, uiStateKey } from './ui';\nimport { userAccessReducer, userAccessStateKey } from './userAccess';\nexport const rootReducer = combineReducers({\n    [accountSettingsStateKey]: accountSettingsReducer,\n    [awsOcpDashboardStateKey]: awsOcpDashboardReducer,\n    [awsCostOverviewStateKey]: awsCostOverviewReducer,\n    [awsDashboardStateKey]: awsDashboardReducer,\n    [awsHistoricalDataStateKey]: awsHistoricalDataReducer,\n    [azureOcpDashboardStateKey]: azureOcpDashboardReducer,\n    [azureCostOverviewStateKey]: azureCostOverviewReducer,\n    [ociCostOverviewStateKey]: ociCostOverviewReducer,\n    [azureDashboardStateKey]: azureDashboardReducer,\n    [ociDashboardStateKey]: ociDashboardReducer,\n    [azureHistoricalDataStateKey]: azureHistoricalDataReducer,\n    [ociHistoricalDataStateKey]: ociHistoricalDataReducer,\n    [costModelsStateKey]: costModelsReducer,\n    [exportStateKey]: exportReducer,\n    [featureFlagsStateKey]: featureFlagsReducer,\n    [gcpCostOverviewStateKey]: gcpCostOverviewReducer,\n    [gcpDashboardStateKey]: gcpDashboardReducer,\n    [gcpOcpDashboardStateKey]: gcpOcpDashboardReducer,\n    [gcpHistoricalDataStateKey]: gcpHistoricalDataReducer,\n    [ibmCostOverviewStateKey]: ibmCostOverviewReducer,\n    [ibmDashboardStateKey]: ibmDashboardReducer,\n    [ibmHistoricalDataStateKey]: ibmHistoricalDataReducer,\n    [metricsStateKey]: metricsReducer,\n    [ocpCostOverviewStateKey]: ocpCostOverviewReducer,\n    [ocpDashboardStateKey]: ocpDashboardReducer,\n    [ocpCloudDashboardStateKey]: ocpCloudDashboardReducer,\n    [ocpHistoricalDataStateKey]: ocpHistoricalDataReducer,\n    [orgStateKey]: orgReducer,\n    [priceListStateKey]: priceListReducer,\n    [providersStateKey]: providersReducer,\n    [rbacStateKey]: rbacReducer,\n    [reportStateKey]: reportReducer,\n    [forecastStateKey]: forecastReducer,\n    [resourceStateKey]: resourceReducer,\n    [sourcesStateKey]: sourcesReducer,\n    [tagStateKey]: tagReducer,\n    [uiStateKey]: uiReducer,\n    [userAccessStateKey]: userAccessReducer,\n    notifications: notificationsReducer,\n});\n","import notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport axios from 'axios';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './rootReducer';\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ serialize: true })\n    : compose;\nexport const middlewares = [thunk, notificationsMiddleware()];\nexport function configureStore(initialState) {\n    const enhancer = composeEnhancers(applyMiddleware(...middlewares));\n    const store = createStore(rootReducer, initialState, enhancer);\n    axios.interceptors.response.use(null, error => {\n        return Promise.reject(error);\n    });\n    return store;\n}\n","import { fetchRateMetrics } from 'api/metrics';\nimport { createAsyncAction } from 'typesafe-actions';\nexport const { request: fetchMetricsRequest, success: fetchMetricsSuccess, failure: fetchMetricsFailure, } = createAsyncAction('fetch/metrics/request', 'fetch/metrics/success', 'fetch/metrics/failure')();\nexport const fetchMetrics = (source_type = '') => {\n    return (dispatch) => {\n        dispatch(fetchMetricsRequest());\n        return fetchRateMetrics(source_type)\n            .then(res => {\n            dispatch(fetchMetricsSuccess(res));\n        })\n            .catch(err => {\n            dispatch(fetchMetricsFailure(err));\n        });\n    };\n};\n","import axios from 'axios';\nexport function fetchRateMetrics(source_type = '') {\n    const query = source_type ? `&source_type=${source_type}` : '';\n    return axios.get(`metrics/?limit=20${query}`);\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchMetricsFailure, fetchMetricsRequest, fetchMetricsSuccess } from './actions';\nexport const stateKey = 'metrics';\nexport const defaultState = {\n    error: null,\n    status: 0 /* FetchStatus.none */,\n    metrics: null,\n};\nexport const reducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchMetricsSuccess):\n            return {\n                error: null,\n                status: 2 /* FetchStatus.complete */,\n                metrics: action.payload.data,\n            };\n        case getType(fetchMetricsFailure):\n            return {\n                status: 2 /* FetchStatus.complete */,\n                error: action.payload,\n                metrics: null,\n            };\n        case getType(fetchMetricsRequest):\n            return Object.assign(Object.assign({}, state), { status: 1 /* FetchStatus.inProgress */ });\n        default:\n            return state;\n    }\n};\n","import { parseApiError } from 'routes/costModels/createCostModelWizard/parseError';\nimport { stateKey } from './reducer';\nexport const metricsState = (state) => state[stateKey];\nexport const status = (state) => metricsState(state).status;\nexport const error = (state) => {\n    const err = metricsState(state).error;\n    if (err === null) {\n        return '';\n    }\n    return parseApiError(err);\n};\nexport const metrics = (state) => {\n    const metricsPayload = metricsState(state).metrics;\n    if (metricsPayload === null) {\n        return {};\n    }\n    return metricsPayload.data.reduce((acc, curr) => {\n        const prev = acc[curr.label_metric] ? Object.assign({}, acc[curr.label_metric]) : {};\n        return Object.assign(Object.assign({}, acc), { [curr.label_metric]: Object.assign(Object.assign({}, prev), { [curr.label_measurement]: curr }) });\n    }, {});\n};\nexport const maxRate = (state) => {\n    const metricsPayload = metricsState(state).metrics;\n    if (metricsPayload === null) {\n        return 0;\n    }\n    return metricsPayload.data.length;\n};\nexport const costTypes = (state) => {\n    const metricsPayload = metricsState(state).metrics;\n    if (metricsPayload === null) {\n        return [];\n    }\n    return metricsPayload.data.reduce((acc, curr) => {\n        if (acc.includes(curr.default_cost_type)) {\n            return acc;\n        }\n        return [curr.default_cost_type, ...acc];\n    }, []);\n};\n","import axios from 'axios';\nexport const OrgTypePaths = {\n    [\"org\" /* OrgType.org */]: 'organizations/aws/',\n};\nexport function runOrg(orgType, query) {\n    const path = OrgTypePaths[orgType];\n    return axios.get(`${path}?${query}`);\n}\n","export const orgStateKey = 'org';\nexport function getOrgId(orgPathsType, orgType, query) {\n    return `${orgPathsType}--${orgType}--${query}`;\n}\n","import { getOrgId, orgStateKey } from './orgCommon';\nexport const selectOrgState = (state) => state[orgStateKey];\nexport const selectOrg = (state, orgPathsType, orgType, query) => selectOrgState(state).byId.get(getOrgId(orgPathsType, orgType, query));\nexport const selectOrgFetchStatus = (state, orgPathsType, orgType, query) => selectOrgState(state).fetchStatus.get(getOrgId(orgPathsType, orgType, query));\nexport const selectOrgError = (state, orgPathsType, orgType, query) => selectOrgState(state).errors.get(getOrgId(orgPathsType, orgType, query));\n","import { runOrg } from 'api/orgs/orgUtils';\nimport { createAction } from 'typesafe-actions';\nimport { getOrgId } from './orgCommon';\nimport { selectOrg, selectOrgFetchStatus } from './orgSelectors';\nconst expirationMS = 30 * 60 * 1000; // 30 minutes\nexport const fetchOrgRequest = createAction('org/request')();\nexport const fetchOrgSuccess = createAction('org/success')();\nexport const fetchOrgFailure = createAction('org/failure')();\nexport function fetchOrg(orgPathsType, orgType, query) {\n    return (dispatch, getState) => {\n        if (!isOrgExpired(getState(), orgPathsType, orgType, query)) {\n            return;\n        }\n        const meta = {\n            orgId: getOrgId(orgPathsType, orgType, query),\n        };\n        dispatch(fetchOrgRequest(meta));\n        runOrg(orgPathsType, orgType, query)\n            .then(res => {\n            // See https://github.com/project-koku/koku-ui/pull/580\n            // const repsonseData = dropCurrentMonthData(res, query);\n            dispatch(fetchOrgSuccess(res.data, meta));\n        })\n            .catch(err => {\n            dispatch(fetchOrgFailure(err, meta));\n        });\n    };\n}\nfunction isOrgExpired(state, orgPathsType, orgType, query) {\n    const orgReport = selectOrg(state, orgPathsType, orgType, query);\n    const fetchStatus = selectOrgFetchStatus(state, orgPathsType, orgType, query);\n    if (fetchStatus === 1 /* FetchStatus.inProgress */) {\n        return false;\n    }\n    if (!orgReport) {\n        return true;\n    }\n    const now = Date.now();\n    return now > orgReport.timeRequested + expirationMS;\n}\n","import { runOrg as runAwsOrg } from './awsOrgs';\nexport function runOrg(orgPathsType, orgType, query) {\n    let orgReport;\n    switch (orgPathsType) {\n        case \"aws\" /* OrgPathsType.aws */:\n            orgReport = runAwsOrg(orgType, query);\n            break;\n    }\n    return orgReport;\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchOrgFailure, fetchOrgRequest, fetchOrgSuccess } from './orgActions';\nconst defaultState = {\n    byId: new Map(),\n    fetchStatus: new Map(),\n    errors: new Map(),\n};\nexport function orgReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchOrgRequest):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.payload.orgId, 1 /* FetchStatus.inProgress */) });\n        case getType(fetchOrgSuccess):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.orgId, 2 /* FetchStatus.complete */), byId: new Map(state.byId).set(action.meta.orgId, Object.assign(Object.assign({}, action.payload), { timeRequested: Date.now() })), errors: new Map(state.errors).set(action.meta.orgId, null) });\n        case getType(fetchOrgFailure):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.orgId, 2 /* FetchStatus.complete */), errors: new Map(state.errors).set(action.meta.orgId, action.payload) });\n        default:\n            return state;\n    }\n}\n","export const stateKey = 'providers';\nexport const addProviderKey = 'add-provider';\nexport const awsProvidersQuery = {\n    limit: 100,\n    type: 'AWS',\n};\nexport const azureProvidersQuery = {\n    limit: 100,\n    type: 'Azure',\n};\nexport const gcpProvidersQuery = {\n    limit: 100,\n    type: 'GCP',\n};\nexport const ibmProvidersQuery = {\n    limit: 100,\n    type: 'IBM',\n};\nexport const ociProvidersQuery = {\n    limit: 100,\n    type: 'OCI',\n};\nexport const ocpProvidersQuery = {\n    limit: 100,\n    type: 'OCP',\n};\n// Omitting the type param, returns all providers\nexport const providersQuery = {\n    limit: 1000,\n};\nexport function getReportId(type, query) {\n    return `${type}--${query}`;\n}\n","import { fetchProviders as apiGetProviders } from 'api/providers';\nimport { createAction } from 'typesafe-actions';\nimport { getReportId } from './providersCommon';\nexport const fetchProvidersRequest = createAction('providers/fetch/request')();\nexport const fetchProvidersSuccess = createAction('providers/fetch/success')();\nexport const fetchProvidersFailure = createAction('providers/fetch/failure')();\nexport function fetchProviders(reportType, query) {\n    return dispatch => {\n        const meta = {\n            reportId: getReportId(reportType, query),\n        };\n        dispatch(fetchProvidersRequest(meta));\n        return apiGetProviders(query)\n            .then(res => {\n            dispatch(fetchProvidersSuccess(res.data, meta));\n        })\n            .catch(err => {\n            dispatch(fetchProvidersFailure(err, meta));\n        });\n    };\n}\nexport const clearProviderFailure = createAction('providers/clear/failure');\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchProvidersFailure, fetchProvidersRequest, fetchProvidersSuccess } from './providersActions';\nexport const defaultState = {\n    byId: new Map(),\n    errors: new Map(),\n    fetchStatus: new Map(),\n};\nexport function providersReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchProvidersRequest):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.payload.reportId, 1 /* FetchStatus.inProgress */) });\n        case getType(fetchProvidersSuccess):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* FetchStatus.complete */), byId: new Map(state.byId).set(action.meta.reportId, Object.assign({}, action.payload)), errors: new Map(state.errors).set(action.meta.reportId, null) });\n        case getType(fetchProvidersFailure):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* FetchStatus.complete */), errors: new Map(state.errors).set(action.meta.reportId, action.payload) });\n        default:\n            return state;\n    }\n}\n","import { addProviderKey, getReportId, stateKey } from './providersCommon';\nexport const selectProvidersState = (state) => state[stateKey];\n// Add provider\nexport const selectAddProviderFetchStatus = (state) => selectProvidersState(state).fetchStatus.get(addProviderKey);\nexport const selectAddProviderError = (state) => selectProvidersState(state).errors.get(addProviderKey);\n// Fetch providers\nexport const selectProviders = (state, providerType, query) => selectProvidersState(state).byId.get(getReportId(providerType, query));\nexport const selectProvidersFetchStatus = (state, providerType, query) => selectProvidersState(state).fetchStatus.get(getReportId(providerType, query));\nexport const selectProvidersError = (state, providerType, query) => selectProvidersState(state).errors.get(getReportId(providerType, query));\n","import { AlertVariant } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { getRBAC } from 'api/rbac';\nimport { intl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport { createAsyncAction } from 'typesafe-actions';\nexport const { request: fetchRbacRequest, success: fetchRbacSuccess, failure: fetchRbacFailure, } = createAsyncAction('fetch/RBAC/request', 'fetch/RBAC/success', 'fetch/RBAC/failure')();\nexport const fetchRbac = () => {\n    return (dispatch) => {\n        dispatch(fetchRbacRequest());\n        return getRBAC()\n            .then(res => {\n            dispatch(fetchRbacSuccess(res));\n        })\n            .catch(err => {\n            dispatch(addNotification({\n                title: intl.formatMessage(messages.rbacErrorTitle),\n                description: intl.formatMessage(messages.rbacErrorDescription),\n                variant: AlertVariant.danger,\n                dismissable: true,\n            }));\n            dispatch(fetchRbacFailure(err));\n        });\n    };\n};\n","export async function getRBAC() {\n    const _insights = window.insights;\n    if (_insights &&\n        _insights.chrome &&\n        _insights.chrome.auth &&\n        _insights.chrome.auth.getUser &&\n        _insights.chrome.getUserPermissions) {\n        const user = await _insights.chrome.auth.getUser();\n        const permissions = await _insights.chrome.getUserPermissions();\n        return {\n            isOrgAdmin: user.identity.user.is_org_admin,\n            permissions,\n        };\n    }\n    return { isOrgAdmin: false, permissions: null };\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchRbacFailure, fetchRbacRequest, fetchRbacSuccess } from './actions';\nexport const stateKey = 'RBAC';\nexport const defaultState = {\n    isOrgAdmin: false,\n    permissions: null,\n    status: 0 /* FetchStatus.none */,\n    error: null,\n};\nexport const reducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchRbacRequest):\n            return Object.assign(Object.assign({}, state), { status: 1 /* FetchStatus.inProgress */ });\n        case getType(fetchRbacSuccess):\n            return Object.assign(Object.assign({}, action.payload), { status: 2 /* FetchStatus.complete */, error: null });\n        case getType(fetchRbacFailure):\n            return Object.assign(Object.assign({}, state), { status: 2 /* FetchStatus.complete */, error: action.payload });\n        default:\n            return state;\n    }\n};\n","import { stateKey } from './reducer';\nexport const selectRbacState = (state) => state[stateKey];\nexport const isCostModelWritePermission = (state) => {\n    const { isOrgAdmin, permissions } = selectRbacState(state);\n    if (isOrgAdmin === true) {\n        return true;\n    }\n    if (!permissions) {\n        return false;\n    }\n    const costModelPermissions = permissions.filter(item => item.permission.startsWith('cost-management'));\n    if (!costModelPermissions) {\n        return false;\n    }\n    // Check for multiple roles; cost-management:cost-model:read and cost-management:cost-model:write\n    // See https://issues.redhat.com/browse/COST-2816\n    for (const item of costModelPermissions) {\n        if (hasWritePermission(item)) {\n            return true;\n        }\n    }\n    return false;\n};\nconst hasWritePermission = costModelPermissions => {\n    const [app, resource, operation] = costModelPermissions.permission.split(':');\n    if (app === 'cost-management' &&\n        (resource === 'write' || resource === '*') &&\n        (operation === 'write' || operation === '*')) {\n        return true;\n    }\n    if ((resource === 'rate' || resource === 'cost_model') && (operation === 'write' || operation === '*')) {\n        return true;\n    }\n    return false;\n};\n","import axios from 'axios';\nexport const ReportTypePaths = {\n    [\"cost\" /* ReportType.cost */]: 'reports/openshift/costs/',\n    [\"cpu\" /* ReportType.cpu */]: 'reports/openshift/compute/',\n    [\"memory\" /* ReportType.memory */]: 'reports/openshift/memory/',\n    [\"volume\" /* ReportType.volume */]: 'reports/openshift/volumes/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","export const reportStateKey = 'report';\nexport function getReportId(reportPathsType, reportType, query) {\n    return `${reportPathsType}--${reportType}--${query}`;\n}\n","import { getReportId, reportStateKey } from './reportCommon';\nexport const selectReportState = (state) => state[reportStateKey];\nexport const selectReport = (state, reportPathsType, reportType, query) => selectReportState(state).byId.get(getReportId(reportPathsType, reportType, query));\nexport const selectReportFetchStatus = (state, reportPathsType, reportType, query) => selectReportState(state).fetchStatus.get(getReportId(reportPathsType, reportType, query));\nexport const selectReportError = (state, reportPathsType, reportType, query) => selectReportState(state).errors.get(getReportId(reportPathsType, reportType, query));\n","import { runReport } from 'api/reports/reportUtils';\nimport { createAction } from 'typesafe-actions';\nimport { getReportId } from './reportCommon';\nimport { selectReport, selectReportFetchStatus } from './reportSelectors';\nconst expirationMS = 30 * 60 * 1000; // 30 minutes\nexport const fetchReportRequest = createAction('report/request')();\nexport const fetchReportSuccess = createAction('report/success')();\nexport const fetchReportFailure = createAction('report/failure')();\nexport function fetchReport(reportPathsType, reportType, query) {\n    return (dispatch, getState) => {\n        if (!isReportExpired(getState(), reportPathsType, reportType, query)) {\n            return;\n        }\n        const meta = {\n            reportId: getReportId(reportPathsType, reportType, query),\n        };\n        dispatch(fetchReportRequest(meta));\n        runReport(reportPathsType, reportType, query)\n            .then(res => {\n            // See https://github.com/project-koku/koku-ui/pull/580\n            // const repsonseData = dropCurrentMonthData(res, query);\n            dispatch(fetchReportSuccess(res.data, meta));\n        })\n            .catch(err => {\n            dispatch(fetchReportFailure(err, meta));\n        });\n    };\n}\nfunction isReportExpired(state, reportPathsType, reportType, query) {\n    const report = selectReport(state, reportPathsType, reportType, query);\n    const fetchStatus = selectReportFetchStatus(state, reportPathsType, reportType, query);\n    if (fetchStatus === 1 /* FetchStatus.inProgress */) {\n        return false;\n    }\n    if (!report) {\n        return true;\n    }\n    const now = Date.now();\n    return now > report.timeRequested + expirationMS;\n}\n","import { runReport as runAwsOcpReport } from './awsOcpReports';\nimport { runReport as runAwsReport } from './awsReports';\nimport { runReport as runAzureOcpReport } from './azureOcpReports';\nimport { runReport as runAzureReport } from './azureReports';\nimport { runReport as runGcpOcpReport } from './gcpOcpReports';\nimport { runReport as runGcpReport } from './gcpReports';\nimport { runReport as runIbmReport } from './ibmReports';\nimport { runReport as runOciReport } from './ociReports';\nimport { runReport as runOcpCloudReport } from './ocpCloudReports';\nimport { runReport as runOcpReport } from './ocpReports';\nimport { runReport as runOcpUsageReport } from './ocpUsageReports';\nexport function runReport(reportPathsType, reportType, query) {\n    let report;\n    switch (reportPathsType) {\n        case \"aws\" /* ReportPathsType.aws */:\n            report = runAwsReport(reportType, query);\n            break;\n        case \"aws_ocp\" /* ReportPathsType.awsOcp */:\n            report = runAwsOcpReport(reportType, query);\n            break;\n        case \"azure\" /* ReportPathsType.azure */:\n            report = runAzureReport(reportType, query);\n            break;\n        case \"azure_ocp\" /* ReportPathsType.azureOcp */:\n            report = runAzureOcpReport(reportType, query);\n            break;\n        case \"gcp\" /* ReportPathsType.gcp */:\n            report = runGcpReport(reportType, query);\n            break;\n        case \"gcp_ocp\" /* ReportPathsType.gcpOcp */:\n            report = runGcpOcpReport(reportType, query);\n            break;\n        case \"gcp\" /* ReportPathsType.ibm */:\n            report = runIbmReport(reportType, query);\n            break;\n        case \"oci\" /* ReportPathsType.oci */:\n            report = runOciReport(reportType, query);\n            break;\n        case \"ocp\" /* ReportPathsType.ocp */:\n            report = runOcpReport(reportType, query);\n            break;\n        case \"ocp_cloud\" /* ReportPathsType.ocpCloud */:\n            report = runOcpCloudReport(reportType, query);\n            break;\n        case \"ocp_usage\" /* ReportPathsType.ocpUsage */:\n            report = runOcpUsageReport(reportType, query);\n            break;\n    }\n    return report;\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchReportFailure, fetchReportRequest, fetchReportSuccess } from './reportActions';\nconst defaultState = {\n    byId: new Map(),\n    fetchStatus: new Map(),\n    errors: new Map(),\n};\nexport function reportReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchReportRequest):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.payload.reportId, 1 /* FetchStatus.inProgress */) });\n        case getType(fetchReportSuccess):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* FetchStatus.complete */), byId: new Map(state.byId).set(action.meta.reportId, Object.assign(Object.assign({}, action.payload), { timeRequested: Date.now() })), errors: new Map(state.errors).set(action.meta.reportId, null) });\n        case getType(fetchReportFailure):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* FetchStatus.complete */), errors: new Map(state.errors).set(action.meta.reportId, action.payload) });\n        default:\n            return state;\n    }\n}\n","export const resourceStateKey = 'resource';\nexport function getResourceId(resourcePathsType, resourceType, query) {\n    return `${resourcePathsType}--${resourceType}--${query}`;\n}\n","import { getResourceId, resourceStateKey } from './resourceCommon';\nexport const selectResourceState = (state) => state[resourceStateKey];\nexport const selectResource = (state, resourcePathsType, resourceType, query) => selectResourceState(state).byId.get(getResourceId(resourcePathsType, resourceType, query));\nexport const selectResourceFetchStatus = (state, resourcePathsType, resourceType, query) => selectResourceState(state).fetchStatus.get(getResourceId(resourcePathsType, resourceType, query));\nexport const selectResourceError = (state, resourcePathsType, resourceType, query) => selectResourceState(state).errors.get(getResourceId(resourcePathsType, resourceType, query));\n","import { runResource } from 'api/resources/resourceUtils';\nimport { createAction } from 'typesafe-actions';\nimport { getResourceId } from './resourceCommon';\nimport { selectResource, selectResourceFetchStatus } from './resourceSelectors';\nconst expirationMS = 30 * 60 * 1000; // 30 minutes\nexport const fetchResourceRequest = createAction('resource/request')();\nexport const fetchResourceSuccess = createAction('resource/success')();\nexport const fetchResourceFailure = createAction('resource/failure')();\nexport function fetchResource(resourcePathsType, resourceType, query) {\n    return (dispatch, getState) => {\n        if (!isResourceExpired(getState(), resourcePathsType, resourceType, query)) {\n            return;\n        }\n        const meta = {\n            resourceId: getResourceId(resourcePathsType, resourceType, query),\n        };\n        dispatch(fetchResourceRequest(meta));\n        runResource(resourcePathsType, resourceType, query)\n            .then(res => {\n            dispatch(fetchResourceSuccess(res.data, meta));\n        })\n            .catch(err => {\n            dispatch(fetchResourceFailure(err, meta));\n        });\n    };\n}\nfunction isResourceExpired(state, resourcePathsType, resourceType, query) {\n    const resource = selectResource(state, resourcePathsType, resourceType, query);\n    const fetchStatus = selectResourceFetchStatus(state, resourcePathsType, resourceType, query);\n    if (fetchStatus === 1 /* FetchStatus.inProgress */) {\n        return false;\n    }\n    if (!resource) {\n        return true;\n    }\n    const now = Date.now();\n    return now > resource.timeRequested + expirationMS;\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchResourceFailure, fetchResourceRequest, fetchResourceSuccess } from './resourceActions';\nconst defaultState = {\n    byId: new Map(),\n    fetchStatus: new Map(),\n    errors: new Map(),\n};\nexport function resourceReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchResourceRequest):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.payload.resourceId, 1 /* FetchStatus.inProgress */) });\n        case getType(fetchResourceSuccess):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.resourceId, 2 /* FetchStatus.complete */), byId: new Map(state.byId).set(action.meta.resourceId, Object.assign(Object.assign({}, action.payload), { timeRequested: Date.now() })), errors: new Map(state.errors).set(action.meta.resourceId, null) });\n        case getType(fetchResourceFailure):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.resourceId, 2 /* FetchStatus.complete */), errors: new Map(state.errors).set(action.meta.resourceId, action.payload) });\n        default:\n            return state;\n    }\n}\n","import { fetchProviders as apiGetSources } from 'api/providers';\nimport { createAction, createAsyncAction } from 'typesafe-actions';\nexport const updateFilterToolbar = createAction('fetch/source/filter')();\nexport const { request: fetchSourcesRequest, success: fetchSourcesSuccess, failure: fetchSourcesFailure, } = createAsyncAction('fetch/source/request', 'fetch/source/success', 'fetch/source/failure')();\nexport const fetchSources = (query = '') => {\n    return (dispatch) => {\n        dispatch(fetchSourcesRequest());\n        return apiGetSources(query)\n            .then(res => {\n            dispatch(fetchSourcesSuccess(res));\n        })\n            .catch(err => {\n            dispatch(fetchSourcesFailure(err));\n        });\n    };\n};\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchSourcesFailure, fetchSourcesRequest, fetchSourcesSuccess, updateFilterToolbar } from './actions';\nexport const stateKey = 'sources';\nexport const defaultState = {\n    sources: null,\n    error: null,\n    status: 0 /* FetchStatus.none */,\n    currentFilterType: 'name',\n    currentFilterValue: '',\n    filter: '',\n};\nexport const reducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchSourcesRequest):\n            return Object.assign(Object.assign({}, state), { status: 1 /* FetchStatus.inProgress */ });\n        case getType(fetchSourcesSuccess):\n            return Object.assign(Object.assign({}, state), { currentFilterValue: '', filter: state.currentFilterValue, status: 2 /* FetchStatus.complete */, error: null, sources: action.payload.data });\n        case getType(fetchSourcesFailure):\n            return Object.assign(Object.assign({}, state), { status: 2 /* FetchStatus.complete */, error: action.payload });\n        case getType(updateFilterToolbar):\n            return Object.assign(Object.assign({}, state), action.payload);\n        default:\n            return state;\n    }\n};\n","import { selectPagination } from 'store/djangoUtils/pagination';\nimport { selectQuery } from 'store/djangoUtils/query';\nimport { stateKey } from './reducer';\nexport const sourcesState = (state) => state[stateKey];\nexport const sources = (state) => {\n    const srcs = sourcesState(state).sources;\n    if (srcs) {\n        return srcs.data;\n    }\n    return [];\n};\nexport const status = (state) => sourcesState(state).status;\nexport const error = (state) => sourcesState(state).error;\nexport const currentFilterValue = (state) => sourcesState(state).currentFilterValue;\nexport const currentFilterType = (state) => sourcesState(state).currentFilterType;\nexport const filter = (state) => sourcesState(state).filter;\nexport const query = selectQuery((state) => sourcesState(state).sources, ['name', 'type', 'offset', 'limit']);\nexport const pagination = selectPagination((state) => sourcesState(state).sources);\n","import axios from 'axios';\nexport const TagTypePaths = {\n    [\"tag\" /* TagType.tag */]: 'tags/openshift/infrastructures/aws/',\n};\nexport function runTag(tagType, query) {\n    const path = TagTypePaths[tagType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const TagTypePaths = {\n    [\"tag\" /* TagType.tag */]: 'tags/aws/',\n};\nexport function runTag(tagType, query) {\n    const path = TagTypePaths[tagType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const TagTypePaths = {\n    [\"tag\" /* TagType.tag */]: 'tags/openshift/infrastructures/azure/',\n};\nexport function runTag(tagType, query) {\n    const path = TagTypePaths[tagType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const TagTypePaths = {\n    [\"tag\" /* TagType.tag */]: 'tags/azure/',\n};\nexport function runTag(tagType, query) {\n    const path = TagTypePaths[tagType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const TagTypePaths = {\n    [\"tag\" /* TagType.tag */]: 'tags/openshift/infrastructures/gcp/',\n};\nexport function runTag(tagType, query) {\n    const path = TagTypePaths[tagType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const TagTypePaths = {\n    [\"tag\" /* TagType.tag */]: 'tags/gcp/',\n};\nexport function runTag(tagType, query) {\n    const path = TagTypePaths[tagType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const TagTypePaths = {\n    [\"tag\" /* TagType.tag */]: 'tags/ibm/',\n};\nexport function runTag(tagType, query) {\n    const path = TagTypePaths[tagType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const TagTypePaths = {\n    [\"tag\" /* TagType.tag */]: 'tags/oci/',\n};\nexport function runTag(tagType, query) {\n    const path = TagTypePaths[tagType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const TagTypePaths = {\n    [\"tag\" /* TagType.tag */]: 'tags/openshift/infrastructures/all/',\n};\nexport function runTag(tagType, query) {\n    const path = TagTypePaths[tagType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const TagTypePaths = {\n    [\"tag\" /* TagType.tag */]: 'tags/openshift/',\n};\nexport function runTag(tagType, query) {\n    const path = TagTypePaths[tagType];\n    return axios.get(`${path}?${query}`);\n}\n","export const tagStateKey = 'tag';\nexport function getTagId(tagPathsType, tagType, query) {\n    return `${tagPathsType}--${tagType}--${query}`;\n}\n","import { getTagId, tagStateKey } from './tagCommon';\nexport const selectTagState = (state) => state[tagStateKey];\nexport const selectTag = (state, tagPathsType, tagType, query) => selectTagState(state).byId.get(getTagId(tagPathsType, tagType, query));\nexport const selectTagFetchStatus = (state, tagPathsType, tagType, query) => selectTagState(state).fetchStatus.get(getTagId(tagPathsType, tagType, query));\nexport const selectTagError = (state, tagPathsType, tagType, query) => selectTagState(state).errors.get(getTagId(tagPathsType, tagType, query));\n","import { runTag } from 'api/tags/tagUtils';\nimport { createAction } from 'typesafe-actions';\nimport { getTagId } from './tagCommon';\nimport { selectTag, selectTagFetchStatus } from './tagSelectors';\nconst expirationMS = 30 * 60 * 1000; // 30 minutes\nexport const fetchTagRequest = createAction('tag/request')();\nexport const fetchTagSuccess = createAction('tag/success')();\nexport const fetchTagFailure = createAction('tag/failure')();\nexport function fetchTag(tagPathsType, tagType, query) {\n    return (dispatch, getState) => {\n        if (!isTagExpired(getState(), tagPathsType, tagType, query)) {\n            return;\n        }\n        const meta = {\n            tagId: getTagId(tagPathsType, tagType, query),\n        };\n        dispatch(fetchTagRequest(meta));\n        runTag(tagPathsType, tagType, query)\n            .then(res => {\n            // See https://github.com/project-koku/koku-ui/pull/580\n            // const repsonseData = dropCurrentMonthData(res, query);\n            dispatch(fetchTagSuccess(res.data, meta));\n        })\n            .catch(err => {\n            dispatch(fetchTagFailure(err, meta));\n        });\n    };\n}\nfunction isTagExpired(state, tagPathsType, tagType, query) {\n    const tagReport = selectTag(state, tagPathsType, tagType, query);\n    const fetchStatus = selectTagFetchStatus(state, tagPathsType, tagType, query);\n    if (fetchStatus === 1 /* FetchStatus.inProgress */) {\n        return false;\n    }\n    if (!tagReport) {\n        return true;\n    }\n    const now = Date.now();\n    return now > tagReport.timeRequested + expirationMS;\n}\n","import { runTag as runAwsOcpTag } from './awsOcpTags';\nimport { runTag as runAwsTag } from './awsTags';\nimport { runTag as runAzureOcpTag } from './azureOcpTags';\nimport { runTag as runAzureTag } from './azureTags';\nimport { runTag as runGcpOcpTag } from './gcpOcpTags';\nimport { runTag as runGcpTag } from './gcpTags';\nimport { runTag as runIbmTag } from './ibmTags';\nimport { runTag as runOciTag } from './ociTags';\nimport { runTag as runOcpCloudTag } from './ocpCloudTags';\nimport { runTag as runOcpTag } from './ocpTags';\nexport function runTag(tagPathsType, tagType, query) {\n    let tagReport;\n    switch (tagPathsType) {\n        case \"aws\" /* TagPathsType.aws */:\n            tagReport = runAwsTag(tagType, query);\n            break;\n        case \"aws_ocp\" /* TagPathsType.awsOcp */:\n            tagReport = runAwsOcpTag(tagType, query);\n            break;\n        case \"azure\" /* TagPathsType.azure */:\n            tagReport = runAzureTag(tagType, query);\n            break;\n        case \"oci\" /* TagPathsType.oci */:\n            tagReport = runOciTag(tagType, query);\n            break;\n        case \"azure_ocp\" /* TagPathsType.azureOcp */:\n            tagReport = runAzureOcpTag(tagType, query);\n            break;\n        case \"gcp\" /* TagPathsType.gcp */:\n            tagReport = runGcpTag(tagType, query);\n            break;\n        case \"gcp_ocp\" /* TagPathsType.gcpOcp */:\n            tagReport = runGcpOcpTag(tagType, query);\n            break;\n        case \"gcp\" /* TagPathsType.ibm */:\n            tagReport = runIbmTag(tagType, query);\n            break;\n        case \"ocp\" /* TagPathsType.ocp */:\n            tagReport = runOcpTag(tagType, query);\n            break;\n        case \"ocp_cloud\" /* TagPathsType.ocpCloud */:\n            tagReport = runOcpCloudTag(tagType, query);\n            break;\n    }\n    return tagReport;\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchTagFailure, fetchTagRequest, fetchTagSuccess } from './tagActions';\nconst defaultState = {\n    byId: new Map(),\n    fetchStatus: new Map(),\n    errors: new Map(),\n};\nexport function tagReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchTagRequest):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.payload.tagId, 1 /* FetchStatus.inProgress */) });\n        case getType(fetchTagSuccess):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.tagId, 2 /* FetchStatus.complete */), byId: new Map(state.byId).set(action.meta.tagId, Object.assign(Object.assign({}, action.payload), { timeRequested: Date.now() })), errors: new Map(state.errors).set(action.meta.tagId, null) });\n        case getType(fetchTagFailure):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.tagId, 2 /* FetchStatus.complete */), errors: new Map(state.errors).set(action.meta.tagId, action.payload) });\n        default:\n            return state;\n    }\n}\n","import { getType } from 'typesafe-actions';\nimport { closeExportsDrawer, openExportsDrawer, resetState } from './uiActions';\nexport const defaultState = {\n    isExportsDrawerOpen: false,\n};\nexport const stateKey = 'ui';\nexport function uiReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(closeExportsDrawer):\n            return Object.assign(Object.assign({}, state), { isExportsDrawerOpen: false });\n        case getType(openExportsDrawer):\n            return Object.assign(Object.assign({}, state), { isExportsDrawerOpen: true });\n        default:\n            return state;\n    }\n}\n","import { stateKey } from './uiReducer';\nexport const selectUIState = (state) => state[stateKey];\nexport const selectIsExportsDrawerOpen = (state) => selectUIState(state).isExportsDrawerOpen;\n","import { createAction } from 'typesafe-actions';\nexport const closeExportsDrawer = createAction('ui/close_exports_drawer')();\nexport const openExportsDrawer = createAction('ui/open_exports_drawer')();\nexport const resetState = createAction('ui/reset_state')();\n","export const stateKey = 'userAccess';\nexport const userAccessKey = 'user-access';\nexport const awsUserAccessQuery = {\n    type: 'AWS',\n};\nexport const azureUserAccessQuery = {\n    type: 'Azure',\n};\nexport const costModelUserAccessQuery = {\n    type: 'cost_model',\n};\nexport const ocpUserAccessQuery = {\n    type: 'OCP',\n};\nexport const gcpUserAccessQuery = {\n    type: 'GCP',\n};\nexport const ibmUserAccessQuery = {\n    type: 'IBM',\n    beta: true,\n};\n// Omitting the type param returns all user access\nexport const userAccessQuery = {};\nexport function getReportId(type, query) {\n    return `${type}--${query}`;\n}\n","import { fetchUserAccess as apiGetUserAccess } from 'api/userAccess';\nimport { createAction } from 'typesafe-actions';\nimport { getReportId } from './userAccessCommon';\nexport const fetchUserAccessRequest = createAction('userAccess/fetch/request')();\nexport const fetchUserAccessSuccess = createAction('userAccess/fetch/success')();\nexport const fetchUserAccessFailure = createAction('userAccess/fetch/failure')();\nexport function fetchUserAccess(reportType, query) {\n    return dispatch => {\n        const meta = {\n            reportId: getReportId(reportType, query),\n        };\n        dispatch(fetchUserAccessRequest(meta));\n        return apiGetUserAccess(query)\n            .then(res => {\n            dispatch(fetchUserAccessSuccess(res.data, meta));\n        })\n            .catch(err => {\n            dispatch(fetchUserAccessFailure(err, meta));\n        });\n    };\n}\n","import axios from 'axios';\n// If the user-access API is called without a query parameter, all types are returned in the response\nexport function fetchUserAccess(query) {\n    const insights = window.insights;\n    const queryString = query ? `?${query}` : '';\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`user-access/${queryString}`);\n        });\n    }\n    else {\n        return axios.get(`user-access/${queryString}`);\n    }\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchUserAccessFailure, fetchUserAccessRequest, fetchUserAccessSuccess } from './userAccessActions';\nexport const defaultState = {\n    byId: new Map(),\n    errors: new Map(),\n    fetchStatus: new Map(),\n};\nexport function userAccessReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchUserAccessRequest):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.payload.reportId, 1 /* FetchStatus.inProgress */) });\n        case getType(fetchUserAccessSuccess):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* FetchStatus.complete */), byId: new Map(state.byId).set(action.meta.reportId, Object.assign({}, action.payload)), errors: new Map(state.errors).set(action.meta.reportId, null) });\n        case getType(fetchUserAccessFailure):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* FetchStatus.complete */), errors: new Map(state.errors).set(action.meta.reportId, action.payload) });\n        default:\n            return state;\n    }\n}\n","import { getReportId, stateKey } from './userAccessCommon';\nexport const selectUserAccessState = (state) => state[stateKey];\n// Fetch userAccess\nexport const selectUserAccess = (state, providerType, query) => selectUserAccessState(state).byId.get(getReportId(providerType, query));\nexport const selectUserAccessFetchStatus = (state, providerType, query) => selectUserAccessState(state).fetchStatus.get(getReportId(providerType, query));\nexport const selectUserAccessError = (state, providerType, query) => selectUserAccessState(state).errors.get(getReportId(providerType, query));\n","import { parseQuery } from 'api/queries/query';\nimport { getCostType as getCostTypeFromLocaleStorage } from 'utils/localStorage';\n// Returns cost type\nexport const getCostType = () => {\n    const query = parseQuery(location.search);\n    if (query.cost_type) {\n        return query.cost_type;\n    }\n    switch (getCostTypeFromLocaleStorage()) {\n        case 'blended_cost':\n            return \"blended_cost\" /* CostTypes.blended */;\n        case 'savingsplan_effective_cost':\n            return \"savingsplan_effective_cost\" /* CostTypes.amortized */;\n        case 'unblended_cost':\n        default:\n            return \"unblended_cost\" /* CostTypes.unblended */;\n    }\n};\n","import { getLocale, intl } from 'components/i18n';\nimport messages from 'locales/messages';\n// Returns the number of decimals for given string\nexport const countDecimals = (value, useLocale = true) => {\n    const decimalSeparator = useLocale ? Number('1.1').toLocaleString(getLocale(), {}).substring(1, 2) : '.';\n    const decimals = value.split(decimalSeparator);\n    return decimals[1] ? decimals[1].length : 0;\n};\n// Currencies are formatted differently, depending on the locale you're using. For example, the dollar\n// sign may appear on the left or the right of the currency symbol for French Vs German.\n//\n// Using the ISO currency code AUD, $12.34 USD is formatted per the locales below.\n// See ICU currencies https://www.localeplanet.com/icu/currency.html\n//\n// en: A$12.34\n// fr: 12,34 $AU\n// de: 12,34 AU$\n//\n// Note: Some currencies do not have decimals, such as JPY, and some have 3 decimals such as IQD.\n// See https://docs.adyen.com/development-resources/currency-codes\nexport const formatCurrency = (value, units, options = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    // Don't specify default fraction digits here, rely on react-intl instead\n    return intl.formatNumber(fValue, Object.assign({ style: 'currency', currency: units ? units.toUpperCase() : 'USD' }, options));\n};\nexport const formatCurrencyAbbreviation = (value, units = 'USD') => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    // Derived from https://stackoverflow.com/questions/37799955/how-can-i-format-big-numbers-with-tolocalestring\n    const abbreviationFormats = [\n        { val: 1e15, symbol: 'quadrillion' },\n        { val: 1e12, symbol: 'trillion' },\n        { val: 1e9, symbol: 'billion' },\n        { val: 1e6, symbol: 'million' },\n        { val: 1e3, symbol: 'thousand' },\n    ];\n    // Find the proper format to use\n    let format;\n    if (abbreviationFormats != null) {\n        format = abbreviationFormats.find(f => fValue >= f.val);\n    }\n    // Apply format and insert symbol next to the numeric portion of the formatted string\n    if (format != null) {\n        const { val, symbol } = format;\n        return intl.formatMessage(messages.currencyAbbreviations, {\n            symbol,\n            value: formatCurrency(fValue / val, units, {\n                minimumFractionDigits: 0,\n                maximumFractionDigits: 0,\n            }),\n        });\n    }\n    // If no format was found, format value without abbreviation\n    return formatCurrency(value, units, {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0,\n    });\n};\n// Formats cost model rates with 0 to 10 decimals\n// https://issues.redhat.com/browse/COST-1884\nexport const formatCurrencyRate = (value, units, options = {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 10,\n}) => {\n    return formatCurrency(value, units, options);\n};\n// Formats cost model rates with 0 to 10 decimals\n// https://issues.redhat.com/browse/COST-1884\nexport const formatCurrencyRateRaw = (value, units, options = {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 10,\n}) => {\n    return formatCurrencyRaw(value, units, options);\n};\n// Formats without currency symbol\nexport const formatCurrencyRaw = (value, units, options = {}) => {\n    return formatCurrency(value, units, Object.assign({ currencyDisplay: 'code' }, options))\n        .toString()\n        .replace(units, '')\n        .trim();\n};\n// Returns formatted units or currency with given currency-code\nexport const formatUnits = (value, units, options) => {\n    const lookup = unitsLookupKey(units);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'core_hours':\n        case 'hour':\n        case 'hrs':\n            return formatUsageHrs(fValue, options);\n        case 'gb':\n        case 'gb_hours':\n        case 'gb_mo':\n        case 'gibibyte_month':\n        case 'tag_mo':\n        case 'vm_hours':\n            return formatUsageGb(fValue, options);\n    }\n    return unknownTypeFormatter(fValue, options);\n};\nexport const formatPercentage = (value, options = {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n}) => {\n    return value.toLocaleString(getLocale(), options);\n};\n// Formats cost model markup with 0 to 10 decimals\n// https://issues.redhat.com/browse/COST-1884\nexport const formatPercentageMarkup = (value, options = {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 10,\n}) => {\n    return value.toLocaleString(getLocale(), options);\n};\nconst formatUsageGb = (value, options = {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n}) => {\n    return value.toLocaleString(getLocale(), options);\n};\nconst formatUsageHrs = (value, options = {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n}) => {\n    return value.toLocaleString(getLocale(), options);\n};\n// Returns true if given percentage or currency format is valid for current locale\nexport const isCurrencyFormatValid = (value) => {\n    const decimalSeparator = intl.formatNumber(1.1).toString().replace(/1/g, '');\n    // ^[0-9] The number must start with 0-9\n    // \\d* The number can then have any number of any digits\n    // (...)$ look at the next group from the end (...)$\n    // (...)*(...)? Look for groups optionally. The first is for the comma, the second is for the decimal.\n    // (,\\d{3}){1} Look for one occurrence of a comma followed by exactly three digits\n    // \\.\\d Look for a decimal followed by any number of any digits\n    //\n    // See https://stackoverflow.com/questions/2227370/currency-validation\n    const regex = decimalSeparator === '.' ? /^-?[0-9]\\d*(((,\\d{3}){1})*(\\.\\d*)?)$/ : /^-?[0-9]\\d*(((\\.\\d{3}){1})*(,\\d*)?)$/;\n    return regex.test(value);\n};\n// Returns true if given percentage is valid for current locale\nexport const isPercentageFormatValid = (value) => {\n    return isCurrencyFormatValid(value);\n};\n// This function normalizes a given currency or percentage.\n//\n// Some locales us a comma as the decimal separator (e.g., \"1.234,56\" in German), which must be\n// replaced for APIs where USD decimal format is expected.\n//\n// Note that the group separator (e.g., \"1,234.56\" in USD) must also be removed when formatting\n// currencies and percentages to display in the browser's locale.\nexport const unFormat = (value) => {\n    if (!value) {\n        return value;\n    }\n    const groupSeparator = intl.formatNumber(1111).toString().replace(/1/g, '');\n    const decimalSeparator = intl.formatNumber(1.1).toString().replace(/1/g, '');\n    let rawValue = value.toString().replace(groupSeparator === ',' ? /,/g : /\\./g, '');\n    rawValue = rawValue.replace(decimalSeparator === '.' ? /\\./g : /,/g, '.');\n    return Number.isNaN(rawValue) ? '0' : rawValue;\n};\nconst unknownTypeFormatter = (value, options) => {\n    return value.toLocaleString(getLocale(), options);\n};\n// Returns i18n key for given units\nexport const unitsLookupKey = (units) => {\n    const lookup = units ? units.replace(/[- ]/g, '_').toLowerCase() : '';\n    switch (lookup) {\n        case 'core_hours':\n        case 'gb':\n        case 'gb_hours':\n        case 'gb_mo':\n        case 'cluser_month':\n        case 'pvc_month':\n        case 'gibibyte_month':\n        case 'hour':\n        case 'hrs':\n        case 'tag_mo':\n        case 'vm_hours':\n            return lookup;\n        case 'gb_month':\n            return 'gb_mo';\n        default:\n            return undefined;\n    }\n};\n","export const deleteSessionCookie = name => {\n    // Delete only if cookie exists\n    if (getCookie(name)) {\n        const now = new Date();\n        now.setTime(now.getTime() - 3600);\n        document.cookie = `${name}=; expires=${now.toUTCString()}; path=/`;\n    }\n};\nexport const getCookie = name => {\n    const cookie = document.cookie.match('(^|;)\\\\s*' + name + '\\\\s*=\\\\s*([^;]+)');\n    return cookie ? cookie.pop() : '';\n};\n// Returns session token\nexport const getTokenCookie = () => {\n    return getCookie('cs_jwt');\n};\nexport const setSessionCookie = (name, value) => {\n    document.cookie = `${name}=${value}; path=/`;\n};\n","import { parseQuery } from 'api/queries/query';\nimport { getTokenCookie } from 'utils/cookie';\nconst accountCurrencyID = 'cost_management_account_currency';\nconst costTypeID = 'cost_management_cost_type';\nconst currencyID = 'cost_management_currency';\nconst inactiveSourcesID = 'cost_management_inactive_sources';\nconst sessionTokenID = 'cost_management_session';\n// Returns a subset of the token cookie\nexport const getPartialTokenCookie = () => {\n    const token = getTokenCookie();\n    return token.substring(token.length - 40, token.length);\n};\n/**\n * Session\n */\n// Deletes session token\nexport const deleteSessionToken = () => {\n    localStorage.removeItem(sessionTokenID);\n};\n// Returns session token\nexport const getSessionToken = () => {\n    return localStorage.getItem(sessionTokenID);\n};\n// Invalidates session if not valid and restores query param values\nexport const invalidateSession = () => {\n    if (!isSessionValid()) {\n        deleteSessionToken();\n        // Delete cost type\n        deleteCostType();\n        // Delete currency\n        deleteAccountCurrency();\n        deleteCurrency();\n    }\n};\n// Returns true if session is valid\nexport const isSessionValid = () => {\n    return getSessionToken() === getPartialTokenCookie();\n};\n// Save partial session token\nexport const saveSessionToken = () => {\n    localStorage.setItem(sessionTokenID, getPartialTokenCookie());\n};\n/**\n * Cost type\n */\n// Delete cost type\nexport const deleteCostType = () => {\n    localStorage.removeItem(costTypeID);\n};\n// Returns cost type\nexport const getCostType = () => {\n    const costType = localStorage.getItem(costTypeID);\n    return costType && costType !== null ? costType : undefined;\n};\n// Returns true if cost type is available\nexport const isCostTypeAvailable = () => {\n    const costType = localStorage.getItem(costTypeID);\n    return costType && costType !== null;\n};\n// Restore cost type from query param if available\nexport const restoreCostType = () => {\n    const queryFromRoute = parseQuery(location.search);\n    if (queryFromRoute.cost_type) {\n        setCostType(queryFromRoute.cost_type);\n    }\n};\n// Set cost type\nexport const setCostType = (value) => {\n    localStorage.setItem(costTypeID, value);\n    saveSessionToken();\n};\n/**\n * Currency\n */\n// Deletes account currency\nexport const deleteAccountCurrency = () => {\n    localStorage.removeItem(accountCurrencyID);\n};\n// Deletes currency\nexport const deleteCurrency = () => {\n    localStorage.removeItem(currencyID);\n};\n// Returns account currency\nexport const getAccountCurrency = () => {\n    const units = localStorage.getItem(accountCurrencyID);\n    return units ? units : 'USD';\n};\n// Returns currency\nexport const getCurrency = () => {\n    const units = localStorage.getItem(currencyID);\n    return units ? units : 'USD';\n};\n// Returns true if currency is available\nexport const isCurrencyAvailable = () => {\n    const currency = localStorage.getItem(currencyID);\n    return currency && currency !== null;\n};\n// Restore currency from query param if available\nexport const restoreCurrency = () => {\n    const queryFromRoute = parseQuery(location.search);\n    if (queryFromRoute.currency) {\n        setCurrency(queryFromRoute.currency);\n    }\n};\n// Set account currency\nexport const setAccountCurrency = (value) => {\n    localStorage.setItem(accountCurrencyID, value);\n    saveSessionToken();\n};\n// Set currency\nexport const setCurrency = (value) => {\n    localStorage.setItem(currencyID, value);\n    saveSessionToken();\n};\n/**\n * Inactive sources\n */\n// Deletes inactive sources\nexport const deleteInactiveSources = () => {\n    localStorage.removeItem(inactiveSourcesID);\n};\n// Returns inactive sources\nexport const getInactiveSources = () => {\n    return localStorage.getItem(inactiveSourcesID);\n};\n// Invalidates inactive sources if current session is not valid\nexport const invalidateInactiveSources = () => {\n    if (!isSessionValid()) {\n        deleteSessionToken();\n        deleteInactiveSources();\n    }\n};\n// Returns true if inactive sources is valid for the current session\nexport const isInactiveSourcesValid = () => {\n    return getInactiveSources() && isSessionValid();\n};\n// Set inactive sources\nexport const setInactiveSources = (value) => {\n    localStorage.setItem(inactiveSourcesID, value);\n    saveSessionToken();\n};\n","export const getBaseName = pathname => {\n    let release = '/';\n    const pathName = pathname.split('/');\n    pathName.shift();\n    if (pathName[0] === 'beta') {\n        pathName.shift();\n        release = `/beta/`;\n    }\n    if (pathName[1]) {\n        return `${release}${pathName[0]}/${pathName[1]}`;\n    }\n    return `${release}${pathName[0]}`;\n};\nexport const getReleasePath = () => {\n    const pathName = window.location.pathname.split('/');\n    pathName.shift();\n    let release = '';\n    if (pathName[0] === 'beta') {\n        release = `/beta`;\n    }\n    return release;\n};\n"],"names":["initApi","version","authInterceptor","reqConfig","Object","assign","headers","fetchCostModels","query","addCostModel","request","updateCostModel","uuid","deleteCostModel","fetchProviders","insights","window","queryString","chrome","auth","getUser","then","getQuery","getQueryRoute","parseQuery","logicalAndPrefix","tagPrefix","breakdownDescKey","breakdownTitleKey","orgUnitIdKey","orgUnitNameKey","tagKey","stringify","filter_by","newQuery","JSON","parse","undefined","key","keys","filter","Array","isArray","push","convertFilterBy","encode","indices","parseKey","val","index","indexOf","substring","length","filterByKey","parseFilterByPrefix","group_by","groupByKey","parseGroupByPrefix","ignoreQueryPrefix","ReportTypePaths","runReport","reportType","path","ResourceTypePaths","isResourceTypeValid","resourcePathsType","resourceType","result","forecast","FeatureFlags","children","dispatch","useDispatch","isCurrencyFeatureEnabled","useFlag","isExportsFeatureEnabled","isIbmFeatureEnabled","isOciFeatureEnabled","useEffect","featureFlags","MaintenanceStateBase","render","intl","this","props","Maintenance","description","Stack","StackItem","formatMessage","messages","url","href","rel","target","MaintenanceState","injectIntl","Main","App","constructor","super","arguments","state","maintenanceMode","componentDidMount","history","location","init","identifyApp","pathname","appAction","appNav","on","event","_a","_b","currRoute","routes","includes","navId","domEvent","appPathname","replace","basename","componentDidUpdate","prevProps","scrollTo","componentWillUnmount","route","mapStateToProps","mapDispatchToProps","connect","asyncComponent","loader","LoadedComponent","Async","_isMounted","isLoading","Comp","default","setState","styles","content","paddingBottom","paddingTop","exportsIcon","marginLeft","marginRight","exportsLink","display","alignItems","pagination","backgroundColor","toolbarContainer","ExportsLinkBase","handleToggle","closeExportDrawer","isOpen","onClick","openExportDrawer","preventDefault","isActionLink","className","AlertActionLink","style","Button","variant","ExportsLink","locale","navigator","language","split","getLocale","cache","defaultLocale","onError","console","log","aws","defaultMessage","id","awsComputeTitle","awsCostTrendTitle","awsDailyCostTrendTitle","awsDashboardCostTitle","awsDesc","awsDetailsTableAriaLabel","awsDetailsTitle","awsOcpDashboardCostTitle","azure","azureComputeTitle","azureCostTrendTitle","azureDailyCostTrendTitle","azureDashboardCostTitle","azureDesc","azureDetailsTableAriaLabel","azureDetailsTitle","azureOcpDashboardCostTitle","back","breakdownBackToDetails","breakdownBackToDetailsAriaLabel","breakdownBackToTitles","breakdownCostBreakdownAriaLabel","breakdownCostBreakdownTitle","breakdownCostChartAriaDesc","breakdownCostChartTooltip","breakdownCostOverviewTitle","breakdownHistoricalDataTitle","breakdownSummaryTitle","breakdownTitle","breakdownTotalCostDate","calculationType","cancel","chartCostForecastConeLegendLabel","chartCostForecastConeLegendNoDataLabel","chartCostForecastConeLegendTooltip","chartCostForecastConeTooltip","chartCostForecastLegendLabel","chartCostForecastLegendNoDataLabel","chartCostForecastLegendTooltip","chartCostInfrastructureForecastConeLegendLabel","chartCostInfrastructureForecastConeLegendNoDataLabel","chartCostInfrastructureForecastConeLegendTooltip","chartCostInfrastructureForecastLegendLabel","chartCostInfrastructureForecastLegendNoDataLabel","chartCostInfrastructureForecastLegendTooltip","chartCostInfrastructureLegendLabel","chartCostInfrastructureLegendNoDataLabel","chartCostInfrastructureLegendTooltip","chartCostLegendLabel","chartCostLegendNoDataLabel","chartCostLegendTooltip","chartCostSupplementaryLegendLabel","chartCostSupplementaryLegendNoDataLabel","chartCostSupplementaryLegendTooltip","chartDateRange","chartDayOfTheMonth","chartLimitLegendLabel","chartLimitLegendNoDataLabel","chartLimitLegendTooltip","chartNoData","chartOthers","chartRequestsLegendLabel","chartRequestsLegendNoDataLabel","chartRequestsLegendTooltip","chartUsageLegendLabel","chartUsageLegendNoDataLabel","chartUsageLegendTooltip","close","clusters","cost","costCalculations","costManagement","costModels","costModelsAddTagValues","costModelsAssignSources","costModelsAssignSourcesErrorDescription","costModelsAssignSourcesErrorTitle","costModelsAssignSourcesParen","costModelsAssignedSources","costModelsAvailableSources","costModelsCanDelete","costModelsCanNotDelete","costModelsDelete","costModelsDeleteDesc","costModelsDeleteSource","costModelsDescTooLong","costModelsDetailsAssignSourcesTitle","costModelsDistributionDesc","costModelsDistributionEdit","costModelsEmptyState","costModelsEmptyStateDesc","costModelsEmptyStateLearnMore","costModelsEnterTagDescription","costModelsEnterTagKey","costModelsEnterTagRate","costModelsEnterTagValue","costModelsExamplesDoubleMarkup","costModelsExamplesNoAdjust","costModelsExamplesReduceSeventyfive","costModelsExamplesReduceZero","costModelsFilterPlaceholder","costModelsFilterTagKey","costModelsInfoTooLong","costModelsLastChange","costModelsPopover","costModelsPopoverAriaLabel","costModelsRateTooLong","costModelsReadOnly","costModelsRefreshDialog","costModelsRemoveTagLabel","costModelsRequiredField","costModelsRouterErrorTitle","costModelsRouterServerError","costModelsSelectMeasurement","costModelsSelectMetric","costModelsSourceDelete","costModelsSourceDeleteSource","costModelsSourceDeleteSourceDesc","costModelsSourceEmptyStateDesc","costModelsSourceEmptyStateTitle","costModelsSourceTableAriaLabel","costModelsSourceTablePaginationAriaLabel","costModelsSourceType","costModelsTableAriaLabel","costModelsTagRateTableAriaLabel","costModelsTagRateTableDefault","costModelsTagRateTableKey","costModelsTagRateTableRate","costModelsTagRateTableValue","costModelsUUIDEmptyState","costModelsUUIDEmptyStateDesc","costModelsWizardCreateCostModel","costModelsWizardCreatePriceList","costModelsWizardCurrencyToggleLabel","costModelsWizardEmptySourceTypeLabel","costModelsWizardEmptyStateCreate","costModelsWizardEmptyStateOtherTime","costModelsWizardEmptyStateSkipStep","costModelsWizardEmptyStateTitle","costModelsWizardGeneralInfoTitle","costModelsWizardNoRatesAdded","costModelsWizardOnboardAws","costModelsWizardOnboardOcp","costModelsWizardPriceListMetric","costModelsWizardRateAriaLabel","costModelsWizardReviewMarkDiscount","costModelsWizardReviewStatusSubDetails","costModelsWizardReviewStatusSubTitle","costModelsWizardReviewStatusTitle","costModelsWizardSourceCaption","costModelsWizardSourceErrorDescription","costModelsWizardSourceErrorTitle","costModelsWizardSourceSubtitle","costModelsWizardSourceTableAriaLabel","costModelsWizardSourceTableCostModel","costModelsWizardSourceTableDefaultCostModel","costModelsWizardSourceTitle","costModelsWizardSourceWarning","costModelsWizardStepsGenInfo","costModelsWizardStepsPriceList","costModelsWizardStepsReview","costModelsWizardStepsSources","costModelsWizardSubTitleTable","costModelsWizardWarningSources","costTypeAmortized","costTypeAmortizedDesc","costTypeBlended","costTypeBlendedDesc","costTypeLabel","costTypeUnblended","costTypeUnblendedDesc","cpuTitle","create","createCostModelConfirmMsg","createCostModelDesc","createCostModelExit","createCostModelExitYes","createCostModelNoContinue","createCostModelTitle","createRate","currency","currencyAbbreviations","currencyOptions","currencyUnits","dashboardCumulativeCostComparison","dashboardDailyUsageComparison","dashboardDatabaseTitle","dashboardNetworkTitle","dashboardStorageTitle","dashboardTotalCostTooltip","delete","detailsActionsExport","detailsActionsPriceList","detailsClustersModalTitle","detailsColumnManagementTitle","detailsCostValue","detailsEmptyState","detailsMoreClusters","detailsResourceNames","detailsSummaryModalTitle","detailsUnusedRequestsLabel","detailsUnusedUnits","detailsUnusedUsageLabel","detailsUsageCapacity","detailsUsageLimit","detailsUsageRequests","detailsUsageUsage","detailsViewAll","discountMinus","distributionModelDesc","distributionType","docsAddOcpSources","docsConfigCostModels","docsCostModelTerminology","docsUsingCostModels","download","edit","editCostModel","editMarkup","editMarkupOrDiscount","emptyFilterSourceStateSubtitle","emptyFilterStateSubtitle","emptyFilterStateTitle","equalsSymbol","errorStateNotAuthorizedDesc","errorStateNotAuthorizedTitle","errorStateUnexpectedDesc","errorStateUnexpectedTitle","examplesTitle","expiresOn","explorerChartDate","explorerChartTitle","explorerDateRange","explorerMonthDate","explorerTableAriaLabel","explorerTitle","exportAggregateType","exportAll","exportDesc","exportError","exportFileName","exportFormatType","exportFormatTypeTitle","exportGenerate","exportHeading","exportName","exportNameRequired","exportNameTooLong","exportResolution","exportSelected","exportTimeScope","exportTimeScopeTitle","exportTitle","exportsDesc","exportsEmptyState","exportsFailed","exportsFailedDesc","exportsSuccess","exportsSuccessDesc","exportsTableAriaLabel","exportsTitle","exportsUnavailable","filterByButtonAriaLabel","filterByInputAriaLabel","filterByOrgUnitAriaLabel","filterByOrgUnitPlaceholder","filterByPlaceholder","filterByTagKeyAriaLabel","filterByTagKeyPlaceholder","filterByTagValueAriaLabel","filterByTagValueButtonAriaLabel","filterByTagValueInputPlaceholder","filterByTagValuePlaceholder","filterByValues","forDate","gcp","gcpComputeTitle","gcpCostTitle","gcpCostTrendTitle","gcpDailyCostTrendTitle","gcpDesc","gcpDetailsTableAriaLabel","gcpDetailsTitle","groupByAll","groupByLabel","groupByTop","groupByValueNames","groupByValues","groupByValuesTitleCase","historicalChartCostLabel","historicalChartDayOfMonthLabel","historicalChartTitle","historicalChartUsageLabel","ibm","ibmComputeTitle","ibmCostTitle","ibmCostTrendTitle","ibmDailyCostTrendTitle","ibmDesc","ibmDetailsTableAriaLabel","ibmDetailsTitle","inactiveSourcesGoTo","inactiveSourcesTitle","inactiveSourcesTitleMultiplier","infrastructure","learnMore","loadingStateDesc","loadingStateTitle","maintenanceEmptyStateDesc","maintenanceEmptyStateInfo","maintenanceEmptyStateThanks","manageColumnsAriaLabel","manageColumnsDesc","manageColumnsTitle","markupDescription","markupOrDiscount","markupOrDiscountDesc","markupOrDiscountModalDesc","markupOrDiscountNumber","markupOrDiscountTooLong","markupPlus","markupTitle","measurement","measurementPlaceholder","measurementValues","measurementValuesDesc","memoryTitle","metric","metricPlaceholder","metricValues","monthOverMonthChange","names","next","no","noDataForDate","noDataStateDesc","noDataStateRefresh","noDataStateTitle","noExportsStateTitle","noProvidersStateAwsDesc","noProvidersStateAwsTitle","noProvidersStateAzureDesc","noProvidersStateAzureTitle","noProvidersStateGcpDesc","noProvidersStateGcpTitle","noProvidersStateGetStarted","noProvidersStateIbmDesc","noProvidersStateIbmTitle","noProvidersStateOciDesc","noProvidersStateOciTitle","noProvidersStateOcpAddSources","noProvidersStateOcpDesc","noProvidersStateOcpTitle","noProvidersStateOverviewDesc","noProvidersStateOverviewTitle","noResultsFound","notAuthorizedStateAws","notAuthorizedStateAzure","notAuthorizedStateCostModels","notAuthorizedStateGcp","notAuthorizedStateIbm","notAuthorizedStateOci","notAuthorizedStateOcp","oci","ociComputeTitle","ociCostTrendTitle","ociDailyCostTrendTitle","ociDashboardCostTitle","ociDesc","ociDetailsTableAriaLabel","ociDetailsTitle","ocpCloudDashboardComputeTitle","ocpCloudDashboardCostTitle","ocpCloudDashboardCostTrendTitle","ocpCloudDashboardDailyCostTrendTitle","ocpCpuUsageAndRequests","ocpDailyUsageAndRequestComparison","ocpDashboardCPUUsageAndRequests","ocpDashboardCostTitle","ocpDashboardCostTrendTitle","ocpDashboardDailyCostTitle","ocpDashboardMemoryUsageAndRequests","ocpDashboardVolumeUsageAndRequests","ocpDetailsInfrastructureCost","ocpDetailsInfrastructureCostDesc","ocpDetailsSupplementaryCost","ocpDetailsSupplementaryCostDesc","ocpDetailsTableAriaLabel","ocpDetailsTitle","ocpInfrastructureCostTitle","ocpInfrastructureCostTrendTitle","ocpInfrastructureDailyCostTrendTitle","ocpMemoryUsageAndRequests","ocpSupplementaryCostTitle","ocpSupplementaryCostTrendTitle","ocpSupplementaryDailyCostTrendTitle","ocpUsageCostTitle","ocpUsageDashboardCPUTitle","ocpUsageDashboardCostTrendTitle","ocpVolumeUsageAndRequests","openShift","openShiftCloudInfrastructure","openShiftCloudInfrastructureDesc","openShiftDesc","overviewInfoArialLabel","overviewTitle","pageTitleAws","pageTitleAzure","pageTitleCostModels","pageTitleDefault","pageTitleExplorer","pageTitleGcp","pageTitleIbm","pageTitleOci","pageTitleOcp","pageTitleOverview","percent","percentOfCost","percentSymbol","percentTotalCost","perspective","perspectiveValues","priceList","priceListAddRate","priceListDeleteRate","priceListDeleteRateDesc","priceListDuplicate","priceListEditRate","priceListEmptyRate","priceListEmptyRateDesc","priceListNumberRate","priceListPosNumberRate","rate","rawCostDescription","rawCostTitle","rbacErrorDescription","rbacErrorTitle","redHatStatusUrl","requests","save","select","selectAll","selected","sinceDate","sources","status","statusActions","suggestions","supplementary","tagHeadingKey","tagHeadingTitle","tagHeadingValue","tagNames","timeOfExport","toolBarBulkSelectAll","toolBarBulkSelectAriaDeselect","toolBarBulkSelectAriaSelect","toolBarBulkSelectNone","toolBarBulkSelectPage","toolBarPriceListMeasurementPlaceHolder","toolBarPriceListMetricPlaceHolder","unitTooltips","units","usage","usageCostDescription","usageCostTitle","various","volumeTitle","yes","PermissionsWrapper","userAccess","Component","NotFound","AwsBreakdown","AwsDetails","AzureBreakdown","OciBreakdown","AzureDetails","OciDetails","Explorer","GcpBreakdown","GcpDetails","IbmBreakdown","IbmDetails","OcpDetails","OcpBreakdown","Overview","CostModelsDetails","CostModel","paths","awsDetails","awsDetailsBreakdown","azureDetails","azureDetailsBreakdown","explorer","gcpDetails","gcpDetailsBreakdown","ibmDetails","ibmDetailsBreakdown","ociDetails","ociDetailsBreakdown","ocpDetails","ocpDetailsBreakdown","overview","labelKey","component","exact","Routes","map","parseApiError","error","response","data","Error","errors","er","source","detail","join","message","stateKey","fetchAccountSettingsRequest","createAction","fetchAccountSettingsSuccess","fetchAccountSettingsFailure","meta","reportId","res","catch","err","defaultState","byId","Map","fetchStatus","accountSettingsReducer","action","type","getType","set","payload","value","cost_type","initCurrency","selectAccountSettingsState","selectAccountSettings","get","selectAccountSettingsFetchStatus","selectAccountSettingsError","awsCostOverviewStateKey","currrentId","getId","costWidget","reportPathsType","accountSummaryWidget","reportSummary","reportGroupBy","showWidgetOnGroupBy","regionSummaryWidget","serviceSummaryWidget","currentWidgets","widgets","awsCostOverviewReducer","selectAwsCostOverviewState","selectWidgets","selectWidget","selectCurrentWidgets","azureCostOverviewStateKey","azureCostOverviewReducer","selectAzureCostOverviewState","gcpCostOverviewStateKey","projectSummaryWidget","gcpCostOverviewReducer","selectGcpCostOverviewState","ibmCostOverviewStateKey","ibmCostOverviewReducer","selectIbmCostOverviewState","ociCostOverviewStateKey","ociCostOverviewReducer","selectOciCostOverviewState","ocpCostOverviewStateKey","clusterWidget","cluster","cpuUsageWidget","showCapacityOnGroupBy","memoryUsageWidget","usePlaceholder","volumeUsageWidget","ocpCostOverviewReducer","selectOcpCostOverviewState","awsHistoricalDataStateKey","computeUsageWidget","storageUsageWidget","awsHistoricalDataReducer","selectAwsHistoricalDataState","azureHistoricalDataStateKey","azureHistoricalDataReducer","selectAzureHistoricalDataState","gcpHistoricalDataStateKey","gcpHistoricalDataReducer","selectGcpHistoricalDataState","ibmHistoricalDataStateKey","ibmHistoricalDataReducer","selectIbmHistoricalDataState","ociHistoricalDataStateKey","ociHistoricalDataReducer","selectOciHistoricalDataState","ocpHistoricalDataStateKey","ocpHistoricalDataReducer","selectOcpHistoricalDataState","createMapStateToProps","updateFilterToolbar","selectCostModel","resetCostModel","setCostModelDialog","fetchCostModelsRequest","success","fetchCostModelsSuccess","failure","fetchCostModelsFailure","createAsyncAction","updateCostModelsRequest","updateCostModelsSuccess","updateCostModelsFailure","dialog","name","deleteCostModelsRequest","deleteCostModelsSuccess","deleteCostModelsFailure","redirectToCostModelFromSourceUuid","source_uuid","title","AlertVariant","dismissable","currentFilterType","currentFilterValue","isDialogOpen","deleteRate","deleteSource","addSource","addRate","updateRate","deleteMarkup","updateMarkup","deleteDistribution","updateDistribution","createWizard","dialogData","update","current","reducer","costModelsState","cms","dialogs","stateName","costStatus","costError","costData","costQuery","every","updateProcessing","updateError","updateErr","deleteProcessing","deleteError","awsDashboardStateKey","awsDashboardDefaultFilters","time_scope_units","time_scope_value","resolution","awsDashboardTabFilters","limit","getQueryForWidget","widget","savingsPlan","getQueryForWidgetTabs","currentTab","service","tabsFilter","account","region","getGroupByForTab","newFilter","selectAwsDashboardState","selectWidgetQueries","previous","tabs","fetchWidgetForecasts","getState","forecastPathsType","forecastType","fetchWidgetReports","availableTabs","setWidgetTab","changeWidgetTab","tab","computeWidget","titleKey","details","costKey","showUnits","showUsageFirst","showUsageLegendLabel","usageKey","trend","computedReportItem","computedReportItemValue","chartFormatter","format","chartType","costSummaryWidget","adjustContainerHeight","showHorizontal","viewAllPath","computedForecastItem","dailyTitleKey","databaseWidget","networkWidget","storageWidget","awsDashboardReducer","awsOcpDashboardStateKey","awsOcpDashboardDefaultFilters","awsOcpDashboardTabFilters","selectAwsOcpDashboardState","awsDashboard","awsOcpDashboardReducer","azureDashboardStateKey","azureDashboardDefaultFilters","azureDashboardTabFilters","service_name","subscription_guid","resource_location","selectAzureDashboardState","virtualMachineWidget","azureDashboardReducer","azureOcpDashboardStateKey","azureOcpDashboardDefaultFilters","azureOcpDashboardTabFilters","selectAzureOcpDashboardState","azureDashboard","azureOcpDashboardReducer","gcpDashboardStateKey","gcpDashboardDefaultFilters","gcpDashboardTabFilters","gcp_project","selectGcpDashboardState","gcpDashboardReducer","gcpOcpDashboardStateKey","gcpOcpDashboardDefaultFilters","gcpOcpDashboardTabFilters","selectGcpOcpDashboardState","gcpDashboard","gcpOcpDashboardReducer","ibmDashboardStateKey","ibmDashboardDefaultFilters","ibmDashboardTabFilters","project","selectIbmDashboardState","ibmDashboardReducer","ociDashboardStateKey","ociDashboardDefaultFilters","ociDashboardTabFilters","product_service","payer_tenant_id","selectOciDashboardState","ociDashboardReducer","ocpCloudDashboardStateKey","ocpCloudDashboardDefaultFilters","ocpCloudDashboardTabFilters","selectOcpCloudDashboardState","defaultFilter","ocpCloudDashboardReducer","ocpDashboardStateKey","ocpDashboardDefaultFilters","ocpDashboardTabFilters","node","selectOcpDashboardState","showTooltip","computedForecastInfrastructureItem","cpuWidget","requestKey","memoryWidget","volumeWidget","ocpDashboardReducer","selectPagination","stateProjector","getPagination","page","perPage","count","urlParams","links","URLSearchParams","Number","first","selectQuery","params","reduce","acc","curr","search","exportStateKey","getExportId","selectExportState","selectExport","selectExportFetchStatus","selectExportError","fetchExportRequest","fetchExportSuccess","fetchExportFailure","exportSuccessID","exportReport","report","Date","now","timeRequested","isExportExpired","Accept","link","exportReducer","setFeatureFlags","resetState","featureFlagsReducer","selectFeatureFlagsState","selectIsCurrencyFeatureEnabled","selectIsExportsFeatureEnabled","selectIsIbmFeatureEnabled","selectIsOciFeatureEnabled","ForecastTypePaths","forecastStateKey","getForecastId","selectForecastState","selectForecast","selectForecastFetchStatus","selectForecastError","fetchForecastRequest","fetchForecastSuccess","fetchForecastFailure","fetchForecast","isForecastExpired","forecastId","forecastReducer","rates","fetchPriceListRequest","fetchPriceListSuccess","fetchPriceListFailure","rootReducer","accountSettings","awsOcpDashboard","awsCostOverview","awsHistoricalData","azureOcpDashboard","azureCostOverview","ociCostOverview","ociDashboard","azureHistoricalData","ociHistoricalData","gcpCostOverview","gcpOcpDashboard","gcpHistoricalData","ibmCostOverview","ibmDashboard","ibmHistoricalData","metrics","ocpCostOverview","ocpDashboard","ocpCloudDashboard","ocpHistoricalData","providerUuid","providers","rbac","ui","notifications","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","serialize","middlewares","notificationsMiddleware","configureStore","initialState","enhancer","store","Promise","reject","fetchMetricsRequest","fetchMetricsSuccess","fetchMetricsFailure","fetchMetrics","source_type","fetchRateMetrics","metricsState","metricsPayload","prev","label_metric","label_measurement","maxRate","costTypes","default_cost_type","OrgTypePaths","orgStateKey","getOrgId","orgPathsType","orgType","selectOrgState","selectOrg","selectOrgFetchStatus","selectOrgError","fetchOrgRequest","fetchOrgSuccess","fetchOrgFailure","fetchOrg","orgReport","isOrgExpired","orgId","orgReducer","addProviderKey","providersQuery","getReportId","fetchProvidersRequest","fetchProvidersSuccess","fetchProvidersFailure","providersReducer","selectProvidersState","selectAddProviderFetchStatus","selectAddProviderError","selectProviders","providerType","selectProvidersFetchStatus","selectProvidersError","fetchRbacRequest","fetchRbacSuccess","fetchRbacFailure","fetchRbac","async","_insights","getUserPermissions","user","permissions","isOrgAdmin","identity","is_org_admin","getRBAC","selectRbacState","isCostModelWritePermission","costModelPermissions","item","permission","startsWith","hasWritePermission","app","resource","operation","reportStateKey","selectReportState","selectReport","selectReportFetchStatus","selectReportError","fetchReportRequest","fetchReportSuccess","fetchReportFailure","fetchReport","isReportExpired","reportReducer","resourceStateKey","getResourceId","selectResourceState","selectResource","selectResourceFetchStatus","selectResourceError","fetchResourceRequest","fetchResourceSuccess","fetchResourceFailure","fetchResource","isResourceExpired","resourceId","resourceReducer","fetchSourcesRequest","fetchSourcesSuccess","fetchSourcesFailure","fetchSources","sourcesState","srcs","TagTypePaths","tagStateKey","getTagId","tagPathsType","tagType","selectTagState","selectTag","selectTagFetchStatus","selectTagError","fetchTagRequest","fetchTagSuccess","fetchTagFailure","fetchTag","tagReport","isTagExpired","tagId","tagReducer","isExportsDrawerOpen","uiReducer","selectUIState","selectIsExportsDrawerOpen","closeExportsDrawer","openExportsDrawer","userAccessQuery","fetchUserAccessRequest","fetchUserAccessSuccess","fetchUserAccessFailure","userAccessReducer","selectUserAccessState","selectUserAccess","selectUserAccessFetchStatus","selectUserAccessError","getCostType","countDecimals","useLocale","decimalSeparator","toLocaleString","decimals","formatCurrency","options","fValue","toUpperCase","formatCurrencyAbbreviation","abbreviationFormats","symbol","find","f","minimumFractionDigits","maximumFractionDigits","formatCurrencyRate","formatCurrencyRateRaw","formatCurrencyRaw","currencyDisplay","toString","trim","formatUnits","unitsLookupKey","formatUsageHrs","formatUsageGb","unknownTypeFormatter","formatPercentage","formatPercentageMarkup","isCurrencyFormatValid","test","isPercentageFormatValid","unFormat","groupSeparator","rawValue","isNaN","lookup","toLowerCase","accountCurrencyID","costTypeID","currencyID","inactiveSourcesID","sessionTokenID","getPartialTokenCookie","token","cookie","document","match","pop","getCookie","deleteSessionToken","localStorage","removeItem","invalidateSession","isSessionValid","deleteCostType","deleteAccountCurrency","deleteCurrency","getItem","saveSessionToken","setItem","costType","isCostTypeAvailable","restoreCostType","queryFromRoute","setCostType","getAccountCurrency","getCurrency","isCurrencyAvailable","restoreCurrency","setCurrency","setAccountCurrency","deleteInactiveSources","invalidateInactiveSources","isInactiveSourcesValid","setInactiveSources","getBaseName","release","pathName","shift","getReleasePath"],"sourceRoot":""}