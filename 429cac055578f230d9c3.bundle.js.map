{"version":3,"sources":["webpack:///./src/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/components/charts/usageChart/usageChart.tsx","webpack:///./src/components/charts/usageChart/index.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummary.styles.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummary.tsx","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryAlt.styles.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryAlt.tsx","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryDetails.styles.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryDetails.tsx","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryItem.styles.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryItem.tsx","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryItems.styles.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryItems.tsx","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryTrend.styles.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryTrend.tsx","webpack:///./src/components/reports/azureReportSummary/index.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummary.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummary.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryAlt.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryAlt.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryDetails.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryDetails.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItem.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItem.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItems.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItems.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryTrend.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryTrend.tsx","webpack:///./src/components/reports/awsReportSummary/index.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummary.styles.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummary.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryAlt.styles.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryAlt.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryDetails.styles.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryDetails.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryItem.styles.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryItem.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryItems.styles.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryItems.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryTrend.styles.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryTrend.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryUsage.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/index.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummary.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummary.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryAlt.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryAlt.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryDetails.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryDetails.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItem.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItem.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItems.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItems.tsx","webpack:///./src/components/charts/costChart/costChart.styles.ts","webpack:///./src/components/charts/costChart/costChart.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryTrend.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryTrend.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryUsage.tsx","webpack:///./src/components/reports/ocpReportSummary/index.ts","webpack:///./node_modules/react-router-dom/es/Link.js","webpack:///./src/pages/dashboard/awsDashboard/awsDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboard.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/azureDashboard/azureDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboard.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboard.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboard.tsx","webpack:///./src/pages/overview/overview.styles.ts","webpack:///./src/pages/overview/overview.tsx","webpack:///./src/pages/overview/index.ts"],"names":["chartStyles","currentRequestData","data","fill","stroke","strokeDasharray","currentUsageData","itemsPerRow","legend","labels","fontFamily","esm","value","fontSize","minWidth","legendColorScale","previousRequestData","previousUsageData","currentColorScale","previousColorScale","yAxis","axisLabel","padding","grid","ticks","tickLabels","xAxis","styles","StyleSheet","create","chartContainer",":not(foo) svg","overflow","marginTop","usageChart_UsageChart","react_default","a","Component","[object Object]","super","arguments","this","containerRef","createRef","state","hiddenSeries","Set","width","initDatum","props","setState","series","childName","legendItem","name","Object","chartUtils","symbol","type","style","handleResize","current","clientWidth","getChart","index","createElement","ChartArea","has","y","interpolation","key","getLegend","legendItemsPerRow","ChartLegend","colorScale","getLegendData","height","gutter","getTooltipLabel","datum","formatDatumValue","formatDatumOptions","es","t","handleLegendClick","delete","add","isDataAvailable","unavailable","forEach","s","isSeriesHidden","length","push","getChartNames","result","map","serie","getEvents","chart_interactive_legend","chartNames","isHidden","legendName","onLegendClick","assign","setTimeout","window","addEventListener","prevProps","removeEventListener","domain","x","maxCurrentRequest","maxCurrentUsage","maxPreviousRequest","maxPreviousUsage","maxValue","Math","max","ceil","currentRequestDate","get_date_default","currentUsageDate","previousRequestDate","previousUsageDate","adjustContainerHeight","containerHeight","title","container","ChartVoronoiContainer","allowTooltip","constrainToVisibleArea","undefined","voronoiDimension","getDomain","endDate","getEndDate","midDate","floor","adjustedContainerHeight","className","ref","Chart","containerComponent","events","legendComponent","legendData","legendPosition","theme","chartTheme","ChartAxis","tickValues","dependentAxis","__webpack_require__","d","__webpack_exports__","chartSkeleton","marginBottom","legendSkeleton","reportSummary","subtitle","display","color","var","AzureReportSummary","children","detailsLink","subTitle","status","Card","CardHeader","Title","size","Boolean","CardBody","Fragment","Skeleton","xs","md","sm","CardFooter","azureReportSummaryAlt_styles_styles","cost","flexGrow","minHeight","marginRight","tops","AzureReportSummaryAlt","tabs","Grid","GridItem","lg","xl","azureReportSummaryDetails_styles_styles","reportSummaryDetails","alignItems","text","paddingBottom","lineHeight","valueContainer","wordWrap","AzureReportSummaryDetails","costLabel","formatValue","formatOptions","report","reportType","showUnits","showUsageFirst","units","usageFormatOptions","usageLabel","emptyValueState","usage","meta","total","count","getCostLayout","getUsageLayout","usageUnits","_units","utils_formatValue","unitsLabel","azureReportSummaryItem_styles_styles","reportSummaryItem",":not(:last-child)","test","AzureReportSummaryItemBase","label","totalValue","lookup","percentVal","Number","toFixed","percentLabel","percent","Progress","defaultProps","v","AzureReportSummaryItem","azureReportSummaryItems_styles_styles","skeleton","AzureReportSummaryItems","nextProps","idKey","labelKey","computedItems","getComputedAzureReportItems","otherIndex","findIndex","i","id","toString","includes","slice","items","getItems","azureReportSummaryTrend_styles_styles","chart","AzureReportSummaryTrend","trendChart","AwsReportSummary","awsReportSummaryAlt_styles_styles","AwsReportSummaryAlt","awsReportSummaryDetails_styles_styles","AwsReportSummaryDetails","awsReportSummaryItem_styles_styles","AwsReportSummaryItemBase","AwsReportSummaryItem","awsReportSummaryItems_styles_styles","AwsReportSummaryItems","getComputedAwsReportItems","awsReportSummaryTrend_styles_styles","AwsReportSummaryTrend","OcpCloudReportSummary","ocpCloudReportSummaryAlt_styles_styles","OcpCloudReportSummaryAlt","ocpCloudReportSummaryDetails_styles_styles","OcpCloudReportSummaryDetails","requestFormatOptions","requestLabel","infrastructureCost","markupCost","request","cloudReportType","infrastructure_cost","markup_cost","Tooltip","content","enableFlip","getRequestLayout","ocpCloudReportSummaryItem_styles_styles","OcpCloudReportSummaryItemBase","OcpCloudReportSummaryItem","ocpCloudReportSummaryItems_styles_styles","OcpCloudReportSummaryItems","getComputedOcpCloudReportItems","ocpCloudReportSummaryTrend_styles_styles","OcpCloudReportSummaryTrend","OcpCloudReportSummaryUsage","usageChart","OcpReportSummary","ocpReportSummaryAlt_styles_styles","OcpReportSummaryAlt","ocpReportSummaryDetails_styles_styles","OcpReportSummaryDetails","derivedCost","derived_cost","ocpReportSummaryItem_styles_styles","OcpReportSummaryItemBase","OcpReportSummaryItem","ocpReportSummaryItems_styles_styles","OcpReportSummaryItems","getComputedOcpReportItems","currentCostData","currentInfrastructureCostData","previousCostData","previousInfrastructureCostData","costChart_styles_styles","costChart_CostChart","costKey","responsive","dist_es","maxCurrentInfrastructure","maxPreviousInfrastructure","currentInfrastructureDate","previousInfrastructureDate","ocpReportSummaryTrend_styles_styles","OcpReportSummaryTrend","OcpReportSummaryUsage","_extends","target","source","prototype","hasOwnProperty","call","_possibleConstructorReturn","self","ReferenceError","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","Link_Link","_React$Component","Link","_temp","_this","instance","Constructor","TypeError","_classCallCheck","_len","args","Array","_key","apply","concat","handleClick","onClick","defaultPrevented","button","preventDefault","history","context","router","_this$props","replace","to","subClass","superClass","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","render","_props","innerRef","obj","keys","indexOf","_objectWithoutProperties","browser_default","location","esm_history","href","createHref","propTypes","prop_types_default","func","string","bool","oneOfType","object","isRequired","contextTypes","shape","es_Link","chartAltHeight","chartHeight","containerAltHeight","containerTrendHeight","tabItems","getIdKeyForTab","tab","mapStateToProps","common","widgetId","widget","awsDashboard","selectWidget","queries","selectWidgetQueries","currentQuery","previousQuery","previous","tabsQuery","currentReport","awsReports","selectReport","currentReportFetchStatus","selectReportFetchStatus","previousReport","tabsReport","tabsReportFetchStatus","mapDispatchToProps","fetchReports","fetchWidgetReports","updateTab","changeWidgetTab","AwsDashboardWidget","react_redux_es","activeTabKey","buildDetailsLink","currentTab","awsQuery","group_by","order_by","details","trend","currentData","previousData","getUnits","awsReportSummary","showUsageLegendLabel","titleKey","getDetails","isUsageFirst","getDetailsLabel","usageKey","getDetailsLink","isDetailsLink","handleInsightsNavClick","getDetailsLinkTitle","groupBy","getHorizontalLayout","getSubTitle","getTabs","getTitle","today","Date","month","get_month_default","format_default","startDate","start_of_month_default","getTab","Tab","eventKey","getTabTitle","reportItem","getTabItem","availableTabs","topItems","activeTab","isCostReport","Tabs","isFilled","activeKey","onSelect","handleTabClick","getVerticalLayout","insights","chrome","appNavClick","secondaryNav","tabIndex","isHorizontal","awsDashboard_mapStateToProps","selectWidgets","widgets","selectCurrentWidgets","awsDashboard_awsDashboard","xl2","azureDashboardWidget_styles_chartStyles","azureDashboardWidget_styles_styles","azureDashboardWidget_getIdKeyForTab","azureDashboardWidget_mapStateToProps","azureDashboard","azureReports","azureDashboardWidget_mapDispatchToProps","AzureDashboardWidget","azureQuery","azureReportSummary","azureDashboard_mapStateToProps","azureDashboard_azureDashboard","ocpCloudDashboardWidget_styles_chartStyles","containerUsageHeight","ocpCloudDashboardWidget_styles_styles","ocpCloudDashboardWidget_getIdKeyForTab","ocpCloudDashboardWidget_mapStateToProps","ocpCloudDashboard","ocpCloudReports","ocpCloudDashboardWidget_mapDispatchToProps","OcpCloudDashboardWidget","ocpCloudQuery","ocpCloudReportSummary","requestKey","ocpCloudDashboard_mapStateToProps","ocpCloudDashboard_ocpCloudDashboard","ocpDashboardWidget_styles_chartStyles","ocpDashboardWidget_styles_styles","ocpDashboardWidget_getIdKeyForTab","ocpDashboardWidget_mapStateToProps","ocpDashboard","ocpReports","ocpDashboardWidget_mapDispatchToProps","OcpDashboardWidget","ocpQuery","currentInfrastructureData","previousInfrastructureData","ocpReportSummary","ocpDashboard_mapStateToProps","ocpDashboard_ocpDashboard","overview_styles_styles","info","marginLeft","verticalAlign","infoIcon","infoTitle","fontWeight","headerOverride","index_esm","overview_getIdKeyForTab","overview_mapStateToProps","awsProvidersQueryString","providersQuery","providers","awsProviders","selectProviders","awsProvidersError","selectProvidersError","awsProvidersFetchStatus","selectProvidersFetchStatus","azureProvidersQueryString","azureProviders","azureProvidersError","azureProvidersFetchStatus","ocpProvidersQueryString","ocpProviders","ocpProvidersError","ocpProvidersFetchStatus","overview","openProvidersModal","onboarding","openModal","showPopover","getAvailableTabs","contentRef","tabContentId","tabContentRef","getTabContent","val","TabContent","handlePopoverClick","show","error","isLoading","noAwsProviders","noAzureProviders","noOcpProviders","noProviders","showTabs","sizes","Popover","aria-label","bodyContent","info_circle_icon","page-type","errorState","noProvidersState","loadingState"],"mappings":"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","file":"429cac055578f230d9c3.bundle.js","sourcesContent":["import { StyleSheet } from '@patternfly/react-styles';\nimport { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200, global_FontFamily_sans_serif, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    itemsPerRow: 2,\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 380,\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        global_disabled_color_200.value,\n        chart_color_green_100.value,\n        global_disabled_color_200.value,\n        chart_color_green_200.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_200.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartVoronoiContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange, getMaxValue, getTooltipContent, getTooltipLabel, getUsageRangeString, } from 'components/charts/commonChart/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles, styles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n            const usageKey = 'chart.usage_legend_label';\n            const requestKey = 'chart.requests_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                series: [\n                    {\n                        childName: 'previousUsage',\n                        data: previousUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.previousUsageData,\n                    },\n                    {\n                        childName: 'currentUsage',\n                        data: currentUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.currentUsageData,\n                    },\n                    {\n                        childName: 'previousRequest',\n                        data: previousRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                            symbol: {\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.previousRequestData,\n                    },\n                    {\n                        childName: 'currentRequest',\n                        data: currentRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                            symbol: {\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.currentRequestData,\n                    },\n                ],\n            });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > 300\n                    ? chartStyles.itemsPerRow\n                    : 1;\n            return (React.createElement(ChartLegend, { colorScale: chartStyles.legendColorScale, data: this.getLegendData(), height: 25, gutter: 10, itemsPerRow: itemsPerRow, name: \"legend\", style: chartStyles.legend }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const value = getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n            if (datum.childName === 'currentRequest' ||\n                datum.childName === 'previousRequest') {\n                return i18next.t('chart.requests_tooltip', { value });\n            }\n            else if (datum.childName === 'currentUsage' ||\n                datum.childName === 'previousUsage') {\n                return i18next.t('chart.usage_tooltip', { value });\n            }\n            return value;\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length === (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign({}, s.legendItem, getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentRequest = currentRequestData\n            ? getMaxValue(currentRequestData)\n            : 0;\n        const maxCurrentUsage = currentUsageData\n            ? getMaxValue(currentUsageData)\n            : 0;\n        const maxPreviousRequest = previousRequestData\n            ? getMaxValue(previousRequestData)\n            : 0;\n        const maxPreviousUsage = previousUsageData\n            ? getMaxValue(previousUsageData)\n            : 0;\n        const maxValue = Math.max(maxCurrentRequest, maxCurrentUsage, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const currentRequestDate = currentRequestData\n            ? getDate(getDateRange(currentRequestData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentUsageData\n            ? getDate(getDateRange(currentUsageData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousRequestData\n            ? getDate(getDateRange(previousRequestData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousUsageData\n            ? getDate(getDateRange(previousUsageData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 ||\n            currentUsageDate > 0 ||\n            previousRequestDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding, title, } = this.props;\n        const { series, width } = this.state;\n        const isDataAvailable = this.isDataAvailable();\n        const container = (React.createElement(ChartVoronoiContainer, { allowTooltip: !isDataAvailable, constrainToVisibleArea: true, labels: !isDataAvailable ? this.getTooltipLabel : undefined, voronoiDimension: \"x\" }));\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 75\n            : containerHeight;\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef, style: { height: adjustedContainerHeight } },\n            React.createElement(\"div\", null, title),\n            React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                series &&\n                    series.map((s, index) => {\n                        return this.getChart(s, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))));\n    }\n}\nexport { UsageChart };\n","export { UsageChart } from './usageChart';\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './azureReportSummary.styles';\nconst AzureReportSummaryBase = ({ children, detailsLink, title, subTitle, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: SkeletonSize.xs }),\n        React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n        React.createElement(Skeleton, { size: SkeletonSize.sm }),\n        React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst AzureReportSummary = translate()(AzureReportSummaryBase);\nexport { AzureReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '175px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '470px',\n        marginRight: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './azureReportSummaryAlt.styles';\nconst AzureReportSummaryAltBase = ({ children, detailsLink, status, subTitle, t, tabs, title, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.cost) },\n                React.createElement(CardHeader, null,\n                    React.createElement(Title, { size: \"lg\" }, title),\n                    Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: SkeletonSize.xs }),\n                    React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n                    React.createElement(Skeleton, { size: SkeletonSize.sm }),\n                    React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst AzureReportSummaryAlt = translate()(AzureReportSummaryAltBase);\nexport { AzureReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    valueContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        width: '50%',\n        wordWrap: 'break-word',\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './azureReportSummaryDetails.styles';\nconst AzureReportSummaryDetailsBase = ({ costLabel, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, showUnits = false, showUsageFirst = false, t, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    if (report && report.meta && report.meta.total) {\n        cost = formatValue(report.meta.total.cost ? report.meta.total.cost.value : 0, report.meta.total.cost ? report.meta.total.cost.units : 'USD', formatOptions);\n        if (report.meta.total.usage && report.meta.total.usage.value) {\n            usage = formatValue(report.meta.total.usage ? report.meta.total.usage.value : 0, report.meta.total.usage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            // Work around for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatValue(report.meta.total.usage ? report.meta.total.usage : 0, report.meta.total.count ? report.meta.total.count.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = () => (React.createElement(\"div\", { className: css(styles.valueContainer) },\n        React.createElement(\"div\", { className: css(styles.value) }, cost),\n        React.createElement(\"div\", { className: css(styles.text) },\n            React.createElement(\"div\", null, costLabel))));\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = report && report.meta && report.meta.total && report.meta.total.usage\n            ? report.meta.total.usage.units\n            : '';\n        // added as a work-around for azure #1079\n        const _units = unitLookupKey(units ? units : usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: css(styles.valueContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                usage,\n                Boolean(showUnits &&\n                    (units ||\n                        (report &&\n                            report.meta &&\n                            report.meta.total.usage &&\n                            report.meta.total.usage.value >= 0))) && React.createElement(\"span\", { className: css(styles.text) }, unitsLabel)),\n            React.createElement(\"div\", { className: css(styles.text) },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (reportType === \"cost\" /* cost */) {\n        return React.createElement(React.Fragment, null, getCostLayout());\n    }\n    else {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(),\n            getUsageLayout()));\n    }\n};\nconst AzureReportSummaryDetails = translate()(AzureReportSummaryDetailsBase);\nexport { AzureReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './azureReportSummaryItem.styles';\nconst AzureReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nAzureReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst AzureReportSummaryItem = translate()(AzureReportSummaryItemBase);\nexport { AzureReportSummaryItem };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedAzureReportItems, } from 'utils/computedReport/getComputedAzureReportItems';\nimport { styles } from './azureReportSummaryItems.styles';\nclass AzureReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedAzureReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: SkeletonSize.md }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst AzureReportSummaryItems = translate()(AzureReportSummaryItemsBase);\nexport { AzureReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './azureReportSummaryTrend.styles';\nconst AzureReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { AzureReportSummaryTrend };\n","export { AzureReportSummary } from './azureReportSummary';\nexport { AzureReportSummaryAlt } from './azureReportSummaryAlt';\nexport { AzureReportSummaryDetails } from './azureReportSummaryDetails';\nexport { AzureReportSummaryItem } from './azureReportSummaryItem';\nexport { AzureReportSummaryItems } from './azureReportSummaryItems';\nexport { AzureReportSummaryTrend } from './azureReportSummaryTrend';\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './awsReportSummary.styles';\nconst AwsReportSummaryBase = ({ children, detailsLink, title, subTitle, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: SkeletonSize.xs }),\n        React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n        React.createElement(Skeleton, { size: SkeletonSize.sm }),\n        React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst AwsReportSummary = translate()(AwsReportSummaryBase);\nexport { AwsReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '175px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '470px',\n        marginRight: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './awsReportSummaryAlt.styles';\nconst AwsReportSummaryAltBase = ({ children, detailsLink, status, subTitle, t, tabs, title, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.cost) },\n                React.createElement(CardHeader, null,\n                    React.createElement(Title, { size: \"lg\" }, title),\n                    Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: SkeletonSize.xs }),\n                    React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n                    React.createElement(Skeleton, { size: SkeletonSize.sm }),\n                    React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst AwsReportSummaryAlt = translate()(AwsReportSummaryAltBase);\nexport { AwsReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    valueContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        width: '50%',\n        wordWrap: 'break-word',\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './awsReportSummaryDetails.styles';\nconst AwsReportSummaryDetailsBase = ({ costLabel, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, showUnits = false, showUsageFirst = false, t, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    if (report && report.meta && report.meta.total) {\n        cost = formatValue(report.meta.total.cost ? report.meta.total.cost.value : 0, report.meta.total.cost ? report.meta.total.cost.units : 'USD', formatOptions);\n        usage = formatValue(report.meta.total.usage ? report.meta.total.usage.value : 0, report.meta.total.usage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n    }\n    const getCostLayout = () => (React.createElement(\"div\", { className: css(styles.valueContainer) },\n        React.createElement(\"div\", { className: css(styles.value) }, cost),\n        React.createElement(\"div\", { className: css(styles.text) },\n            React.createElement(\"div\", null, costLabel))));\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = report && report.meta && report.meta.total && report.meta.total.usage\n            ? report.meta.total.usage.units\n            : '';\n        const units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${units}`);\n        return (React.createElement(\"div\", { className: css(styles.valueContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                usage,\n                Boolean(showUnits &&\n                    report &&\n                    report.meta &&\n                    report.meta.total.usage &&\n                    report.meta.total.usage.value >= 0) && React.createElement(\"span\", { className: css(styles.text) }, unitsLabel)),\n            React.createElement(\"div\", { className: css(styles.text) },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (reportType === \"cost\" /* cost */) {\n        return React.createElement(React.Fragment, null, getCostLayout());\n    }\n    else {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(),\n            getUsageLayout()));\n    }\n};\nconst AwsReportSummaryDetails = translate()(AwsReportSummaryDetailsBase);\nexport { AwsReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './awsReportSummaryItem.styles';\nconst AwsReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nAwsReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst AwsReportSummaryItem = translate()(AwsReportSummaryItemBase);\nexport { AwsReportSummaryItem };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedAwsReportItems, } from 'utils/computedReport/getComputedAwsReportItems';\nimport { styles } from './awsReportSummaryItems.styles';\nclass AwsReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedAwsReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: SkeletonSize.md }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst AwsReportSummaryItems = translate()(AwsReportSummaryItemsBase);\nexport { AwsReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './awsReportSummaryTrend.styles';\nconst AwsReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { AwsReportSummaryTrend };\n","export { AwsReportSummary } from './awsReportSummary';\nexport { AwsReportSummaryAlt } from './awsReportSummaryAlt';\nexport { AwsReportSummaryDetails } from './awsReportSummaryDetails';\nexport { AwsReportSummaryItem } from './awsReportSummaryItem';\nexport { AwsReportSummaryItems } from './awsReportSummaryItems';\nexport { AwsReportSummaryTrend } from './awsReportSummaryTrend';\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpCloudReportSummary.styles';\nconst OcpCloudReportSummaryBase = ({ children, detailsLink, title, subTitle, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: SkeletonSize.xs }),\n        React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n        React.createElement(Skeleton, { size: SkeletonSize.sm }),\n        React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst OcpCloudReportSummary = translate()(OcpCloudReportSummaryBase);\nexport { OcpCloudReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '175px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '470px',\n        marginRight: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpCloudReportSummaryAlt.styles';\nconst OcpCloudReportSummaryAltBase = ({ children, detailsLink, status, subTitle, t, tabs, title }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.cost) },\n                React.createElement(CardHeader, null,\n                    React.createElement(Title, { size: \"lg\" }, title),\n                    Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: SkeletonSize.xs }),\n                    React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n                    React.createElement(Skeleton, { size: SkeletonSize.sm }),\n                    React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst OcpCloudReportSummaryAlt = translate()(OcpCloudReportSummaryAltBase);\nexport { OcpCloudReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    valueContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        width: '50%',\n        wordWrap: 'break-word',\n    },\n});\n","import { Tooltip } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './ocpCloudReportSummaryDetails.styles';\nconst OcpCloudReportSummaryDetailsBase = ({ costLabel, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, requestFormatOptions, requestLabel, showUnits = false, showUsageFirst = false, t, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let markupCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const cloudReportType = reportType === \"database\" /* database */ ||\n        reportType === \"instance_type\" /* instanceType */ ||\n        reportType === \"network\" /* network */ ||\n        reportType === \"storage\" /* storage */;\n    if (report && report.meta && report.meta.total) {\n        cost = formatValue(report.meta.total.cost ? report.meta.total.cost.value : 0, report.meta.total.cost ? report.meta.total.cost.units : 'USD', formatOptions);\n        infrastructureCost = formatValue(report.meta.total.infrastructure_cost\n            ? report.meta.total.infrastructure_cost.value\n            : 0, report.meta.total.infrastructure_cost\n            ? report.meta.total.infrastructure_cost.units\n            : 'USD', formatOptions);\n        markupCost = formatValue(report.meta.total.markup_cost ? report.meta.total.markup_cost.value : 0, report.meta.total.markup_cost\n            ? report.meta.total.markup_cost.units\n            : 'USD', formatOptions);\n        if (cloudReportType) {\n            usage = formatValue(report.meta.total.usage ? report.meta.total.usage.value : 0, report.meta.total.usage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            usage = formatValue(report.meta.total.usage ? report.meta.total.usage.value : 0, report.meta.total.usage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n            request = formatValue(report.meta.total.request ? report.meta.total.request.value : 0, report.meta.total.request ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = () => (React.createElement(\"div\", { className: css(styles.valueContainer) },\n        React.createElement(Tooltip, { content: t('ocp_cloud_dashboard.total_cost_tooltip', {\n                infrastructureCost,\n                markupCost,\n            }), enableFlip: true },\n            React.createElement(\"div\", { className: css(styles.value) }, cost)),\n        React.createElement(\"div\", { className: css(styles.text) },\n            React.createElement(\"div\", null, costLabel))));\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = report && report.meta && report.meta.total && report.meta.total.request\n            ? report.meta.total.request.units\n            : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: css(styles.valueContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                request,\n                Boolean(showUnits &&\n                    report &&\n                    report.meta &&\n                    report.meta.total.request &&\n                    report.meta.total.request.value >= 0) && React.createElement(\"span\", { className: css(styles.text) }, unitsLabel)),\n            React.createElement(\"div\", { className: css(styles.text) },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = report && report.meta && report.meta.total && report.meta.total.usage\n            ? report.meta.total.usage.units\n            : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: css(styles.valueContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                usage,\n                Boolean(showUnits &&\n                    report &&\n                    report.meta &&\n                    report.meta.total.usage &&\n                    report.meta.total.usage.value >= 0) && React.createElement(\"span\", { className: css(styles.text) }, unitsLabel)),\n            React.createElement(\"div\", { className: css(styles.text) },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (reportType === \"cost\" /* cost */) {\n        return React.createElement(React.Fragment, null, getCostLayout());\n    }\n    else if (cloudReportType) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(),\n            getUsageLayout()));\n    }\n    else {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n};\nconst OcpCloudReportSummaryDetails = translate()(OcpCloudReportSummaryDetailsBase);\nexport { OcpCloudReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './ocpCloudReportSummaryItem.styles';\nconst OcpCloudReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nOcpCloudReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst OcpCloudReportSummaryItem = translate()(OcpCloudReportSummaryItemBase);\nexport { OcpCloudReportSummaryItem };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedOcpCloudReportItems, } from 'utils/computedReport/getComputedOcpCloudReportItems';\nimport { styles } from './ocpCloudReportSummaryItems.styles';\nclass OcpCloudReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedOcpCloudReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: SkeletonSize.md }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst OcpCloudReportSummaryItems = translate()(OcpCloudReportSummaryItemsBase);\nexport { OcpCloudReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './ocpCloudReportSummaryTrend.styles';\nconst OcpCloudReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { OcpCloudReportSummaryTrend };\n","import { css } from '@patternfly/react-styles';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nimport { styles } from './ocpCloudReportSummaryTrend.styles';\nconst OcpCloudReportSummaryUsage = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { OcpCloudReportSummaryUsage };\n","export { OcpCloudReportSummary } from './ocpCloudReportSummary';\nexport { OcpCloudReportSummaryAlt } from './ocpCloudReportSummaryAlt';\nexport { OcpCloudReportSummaryDetails } from './ocpCloudReportSummaryDetails';\nexport { OcpCloudReportSummaryItem } from './ocpCloudReportSummaryItem';\nexport { OcpCloudReportSummaryItems } from './ocpCloudReportSummaryItems';\nexport { OcpCloudReportSummaryTrend } from './ocpCloudReportSummaryTrend';\nexport { OcpCloudReportSummaryUsage } from './ocpCloudReportSummaryUsage';\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpReportSummary.styles';\nconst OcpReportSummaryBase = ({ children, detailsLink, title, subTitle, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: SkeletonSize.xs }),\n        React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n        React.createElement(Skeleton, { size: SkeletonSize.sm }),\n        React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst OcpReportSummary = translate()(OcpReportSummaryBase);\nexport { OcpReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '175px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '440px',\n        marginRight: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpReportSummaryAlt.styles';\nconst OcpReportSummaryAltBase = ({ children, detailsLink, status, subTitle, t, tabs, title, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.cost) },\n                React.createElement(CardHeader, null,\n                    React.createElement(Title, { size: \"lg\" }, title),\n                    Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: SkeletonSize.xs }),\n                    React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.chartSkeleton) }),\n                    React.createElement(Skeleton, { size: SkeletonSize.sm }),\n                    React.createElement(Skeleton, { size: SkeletonSize.xs, className: css(styles.legendSkeleton) }))) : (children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst OcpReportSummaryAlt = translate()(OcpReportSummaryAltBase);\nexport { OcpReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    valueContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        width: '50%',\n        wordWrap: 'break-word',\n    },\n});\n","import { Tooltip } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey, } from 'utils/formatValue';\nimport { styles } from './ocpReportSummaryDetails.styles';\nconst OcpReportSummaryDetailsBase = ({ costLabel, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, requestFormatOptions, requestLabel, showUnits = false, showUsageFirst = false, t, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let derivedCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    if (report && report.meta && report.meta.total) {\n        cost = formatValue(report.meta.total.cost ? report.meta.total.cost.value : 0, report.meta.total.cost ? report.meta.total.cost.units : 'USD', formatOptions);\n        derivedCost = formatValue(report.meta.total.derived_cost ? report.meta.total.derived_cost.value : 0, report.meta.total.derived_cost\n            ? report.meta.total.derived_cost.units\n            : 'USD', formatOptions);\n        infrastructureCost = formatValue(report.meta.total.infrastructure_cost\n            ? report.meta.total.infrastructure_cost.value\n            : 0, report.meta.total.infrastructure_cost\n            ? report.meta.total.infrastructure_cost.units\n            : 'USD', formatOptions);\n        if (reportType !== \"cost\" /* cost */) {\n            usage = formatValue(report.meta.total.usage ? report.meta.total.usage.value : 0, report.meta.total.usage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n            request = formatValue(report.meta.total.request ? report.meta.total.request.value : 0, report.meta.total.request ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = () => (React.createElement(\"div\", { className: css(styles.valueContainer) },\n        React.createElement(Tooltip, { content: t('ocp_dashboard.total_cost_tooltip', {\n                derivedCost,\n                infrastructureCost,\n            }), enableFlip: true },\n            React.createElement(\"div\", { className: css(styles.value) }, cost)),\n        React.createElement(\"div\", { className: css(styles.text) },\n            React.createElement(\"div\", null, costLabel))));\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = report && report.meta && report.meta.total && report.meta.total.request\n            ? report.meta.total.request.units\n            : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: css(styles.valueContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                request,\n                Boolean(showUnits &&\n                    report &&\n                    report.meta &&\n                    report.meta.total.request &&\n                    report.meta.total.request.value >= 0) && React.createElement(\"span\", { className: css(styles.text) }, unitsLabel)),\n            React.createElement(\"div\", { className: css(styles.text) },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = report && report.meta && report.meta.total && report.meta.total.usage\n            ? report.meta.total.usage.units\n            : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: css(styles.valueContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                usage,\n                Boolean(showUnits &&\n                    report &&\n                    report.meta &&\n                    report.meta.total.usage &&\n                    report.meta.total.usage.value >= 0) && React.createElement(\"span\", { className: css(styles.text) }, unitsLabel)),\n            React.createElement(\"div\", { className: css(styles.text) },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (reportType === \"cost\" /* cost */) {\n        return React.createElement(React.Fragment, null, getCostLayout());\n    }\n    else {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n};\nconst OcpReportSummaryDetails = translate()(OcpReportSummaryDetailsBase);\nexport { OcpReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './ocpReportSummaryItem.styles';\nconst OcpReportSummaryItemBase = ({ formatOptions, formatValue, label, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nOcpReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst OcpReportSummaryItem = translate()(OcpReportSummaryItemBase);\nexport { OcpReportSummaryItem };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedOcpReportItems, } from 'utils/computedReport/getComputedOcpReportItems';\nimport { styles } from './ocpReportSummaryItems.styles';\nclass OcpReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedOcpReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: SkeletonSize.md }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst OcpReportSummaryItems = translate()(OcpReportSummaryItemsBase);\nexport { OcpReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200, global_FontFamily_sans_serif, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    currentCostData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    currentInfrastructureCostData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    itemsPerRow: 2,\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 200,\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        global_disabled_color_200.value,\n        chart_color_green_100.value,\n        global_disabled_color_200.value,\n        chart_color_green_200.value,\n    ],\n    previousCostData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    previousInfrastructureCostData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_200.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartVoronoiContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent, getTooltipLabel, } from 'components/charts/commonChart/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles, styles } from './costChart.styles';\nclass CostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                series: [\n                    {\n                        childName: 'previousCost',\n                        data: previousCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.previousCostData,\n                    },\n                    {\n                        childName: 'currentCost',\n                        data: currentCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentCostData, costKey, true, false),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.currentCostData,\n                    },\n                    {\n                        childName: 'previousInfrastructureCost',\n                        data: previousInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                            symbol: {\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.previousInfrastructureCostData,\n                    },\n                    {\n                        childName: 'currentInfrastructureCost',\n                        data: currentInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                            symbol: {\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.currentInfrastructureCostData,\n                    },\n                ],\n            });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > 400\n                    ? chartStyles.itemsPerRow\n                    : 1;\n            return (React.createElement(ChartLegend, { colorScale: chartStyles.legendColorScale, data: this.getLegendData(), height: 25, gutter: 10, itemsPerRow: itemsPerRow, name: \"legend\", responsive: false, style: chartStyles.legend }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const value = getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n            if (datum.childName === 'currentCost' ||\n                datum.childName === 'previousCost') {\n                return i18next.t('chart.cost_tooltip', { value });\n            }\n            else if (datum.childName === 'currentInfrastructureCost' ||\n                datum.childName === 'previousInfrastructureCost') {\n                return i18next.t('chart.cost_infrastructure_tooltip', { value });\n            }\n            return value;\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length === (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign({}, s.legendItem, getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !==\n            this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.previousInfrastructureCostData !==\n                this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentInfrastructure = currentInfrastructureCostData\n            ? getMaxValue(currentInfrastructureCostData)\n            : 0;\n        const maxCurrentUsage = currentCostData ? getMaxValue(currentCostData) : 0;\n        const maxPreviousInfrastructure = previousInfrastructureCostData\n            ? getMaxValue(previousInfrastructureCostData)\n            : 0;\n        const maxPreviousUsage = previousCostData\n            ? getMaxValue(previousCostData)\n            : 0;\n        const maxValue = Math.max(maxCurrentInfrastructure, maxCurrentUsage, maxPreviousInfrastructure, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentCostData\n            ? getDate(getDateRange(currentCostData, true, true)[1])\n            : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData\n            ? getDate(getDateRange(previousCostData, true, true)[1])\n            : 0;\n        return currentInfrastructureDate > 0 ||\n            currentUsageDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentUsageDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding, title, } = this.props;\n        const { series, width } = this.state;\n        const isDataAvailable = this.isDataAvailable();\n        const container = (React.createElement(ChartVoronoiContainer, { allowTooltip: !isDataAvailable, constrainToVisibleArea: true, labels: !isDataAvailable ? this.getTooltipLabel : undefined, voronoiDimension: \"x\" }));\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 75\n            : containerHeight;\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef, style: { height: adjustedContainerHeight } },\n            React.createElement(\"div\", null, title),\n            React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                series &&\n                    series.map((s, index) => {\n                        return this.getChart(s, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))));\n    }\n}\nexport { CostChart };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { CostChart } from 'components/charts/costChart';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryTrend.styles';\nconst OcpReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(CostChart, Object.assign({}, props))));\nexport { OcpReportSummaryTrend };\n","import { css } from '@patternfly/react-styles';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryTrend.styles';\nconst OcpReportSummaryUsage = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { OcpReportSummaryUsage };\n","export { OcpReportSummary } from './ocpReportSummary';\nexport { OcpReportSummaryAlt } from './ocpReportSummaryAlt';\nexport { OcpReportSummaryDetails } from './ocpReportSummaryDetails';\nexport { OcpReportSummaryItem } from './ocpReportSummaryItem';\nexport { OcpReportSummaryItems } from './ocpReportSummaryItems';\nexport { OcpReportSummaryTrend } from './ocpReportSummaryTrend';\nexport { OcpReportSummaryUsage } from './ocpReportSummaryUsage';\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"invariant\";\nimport { createLocation } from \"history\";\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nvar Link = function (_React$Component) {\n  _inherits(Link, _React$Component);\n\n  function Link() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Link);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {\n      if (_this.props.onClick) _this.props.onClick(event);\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && // ignore everything but left clicks\n      !_this.props.target && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n\n          var history = _this.context.router.history;\n          var _this$props = _this.props,\n              replace = _this$props.replace,\n              to = _this$props.to;\n\n\n          if (replace) {\n            history.replace(to);\n          } else {\n            history.push(to);\n          }\n        }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Link.prototype.render = function render() {\n    var _props = this.props,\n        replace = _props.replace,\n        to = _props.to,\n        innerRef = _props.innerRef,\n        props = _objectWithoutProperties(_props, [\"replace\", \"to\", \"innerRef\"]); // eslint-disable-line no-unused-vars\n\n    invariant(this.context.router, \"You should not use <Link> outside a <Router>\");\n\n    invariant(to !== undefined, 'You must specify the \"to\" property');\n\n    var history = this.context.router.history;\n\n    var location = typeof to === \"string\" ? createLocation(to, null, null, history.location) : to;\n\n    var href = history.createHref(location);\n    return React.createElement(\"a\", _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));\n  };\n\n  return Link;\n}(React.Component);\n\nLink.propTypes = {\n  onClick: PropTypes.func,\n  target: PropTypes.string,\n  replace: PropTypes.bool,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  innerRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n};\nLink.defaultProps = {\n  replace: false\n};\nLink.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired,\n      createHref: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired\n};\n\n\nexport default Link;","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_2xl, global_spacer_xl } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartAltHeight: 180,\n    chartHeight: 80,\n    containerAltHeight: 200,\n    containerTrendHeight: 150,\n};\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery } from 'api/awsQuery';\nimport { transformAwsReport } from 'components/charts/commonChart/chartUtils';\nimport { AwsReportSummary, AwsReportSummaryAlt, AwsReportSummaryDetails, AwsReportSummaryItem, AwsReportSummaryItems, AwsReportSummaryTrend, } from 'components/reports/awsReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { awsDashboardActions, awsDashboardSelectors, } from 'store/awsDashboard';\nimport { awsReportsSelectors } from 'store/awsReports';\nimport { createMapStateToProps } from 'store/common';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './awsDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nclass AwsDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const currentTab = getIdKeyForTab(tab);\n            return `/aws?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, details, previousReport, t, trend } = this.props;\n            const currentData = transformAwsReport(currentReport, trend.type);\n            const previousData = transformAwsReport(previousReport, trend.type);\n            const units = this.getUnits();\n            return (React.createElement(AwsReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, showUsageLegendLabel: details.showUsageLegendLabel, title: t(trend.titleKey, {\n                    units: t(`units.${units}`),\n                }) }));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, isUsageFirst, reportType } = this.props;\n            const units = this.getUnits();\n            return (React.createElement(AwsReportSummaryDetails, { costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, showUnits: details.showUnits, showUsageFirst: isUsageFirst, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(AwsReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerAltHeight, chartStyles.chartAltHeight, true)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('aws_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabItems) },\n                    React.createElement(AwsReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const isCostReport = reportType === \"cost\" /* cost */ ||\n                reportType === \"database\" /* database */ ||\n                reportType === \"network\" /* network */;\n            if (activeTab === currentTab) {\n                return (React.createElement(AwsReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: isCostReport\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: reportItem.cost }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, reportType } = this.props;\n            let units = '';\n            if (currentReport && currentReport.meta && currentReport.meta.total) {\n                if (reportType === \"cost\" /* cost */ ||\n                    reportType === \"database\" /* database */ ||\n                    reportType === \"network\" /* network */) {\n                    units = currentReport.meta.total.cost\n                        ? unitLookupKey(currentReport.meta.total.cost.units)\n                        : '';\n                }\n                else {\n                    units = currentReport.meta.total.usage\n                        ? unitLookupKey(currentReport.meta.total.usage.units)\n                        : '';\n                }\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus } = this.props;\n            return (React.createElement(AwsReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight),\n                Boolean(availableTabs) && (React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs()))));\n        };\n        this.handleInsightsNavClick = () => {\n            insights.chrome.appNavClick({ id: 'aws', secondaryNav: true });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        updateTab(id, availableTabs[0]);\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: awsReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.tabs), tabsReportFetchStatus: awsReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(AwsDashboardWidgetBase));\nexport { AwsDashboardWidget, AwsDashboardWidgetBase };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { awsDashboardSelectors } from 'store/awsDashboard';\nimport { createMapStateToProps } from 'store/common';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\nconst AwsDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(AwsDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(AwsDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: awsDashboardSelectors.selectWidgets(state),\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = translate()(connect(mapStateToProps, {})(AwsDashboardBase));\nexport default AwsDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_2xl, global_spacer_xl } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartAltHeight: 180,\n    chartHeight: 80,\n    containerAltHeight: 200,\n    containerTrendHeight: 150,\n};\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery } from 'api/azureQuery';\nimport { transformAzureReport } from 'components/charts/commonChart/chartUtils';\nimport { AzureReportSummary, AzureReportSummaryAlt, AzureReportSummaryDetails, AzureReportSummaryItem, AzureReportSummaryItems, AzureReportSummaryTrend, } from 'components/reports/azureReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { azureDashboardActions, azureDashboardSelectors, } from 'store/azureDashboard';\nimport { azureReportsSelectors } from 'store/azureReports';\nimport { createMapStateToProps } from 'store/common';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './azureDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nclass AzureDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const currentTab = getIdKeyForTab(tab);\n            return `/azure?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, details, previousReport, t, trend } = this.props;\n            const currentData = transformAzureReport(currentReport, trend.type);\n            const previousData = transformAzureReport(previousReport, trend.type);\n            const units = this.getUnits();\n            return (React.createElement(AzureReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, showUsageLegendLabel: details.showUsageLegendLabel, title: t(trend.titleKey, {\n                    units: t(`units.${units}`),\n                }), units: units }));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, isUsageFirst, reportType } = this.props;\n            const units = this.getUnits();\n            return (React.createElement(AzureReportSummaryDetails, { costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, showUnits: details.showUnits, showUsageFirst: isUsageFirst, usageFormatOptions: details.usageFormatOptions, units: units, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(AzureReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerAltHeight, chartStyles.chartAltHeight, true)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('azure_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabItems) },\n                    React.createElement(AzureReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, details, reportType, tabsReport, topItems, } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const isCostReport = reportType === \"cost\" /* cost */ ||\n                reportType === \"database\" /* database */ ||\n                reportType === \"network\" /* network */;\n            if (activeTab === currentTab) {\n                return (React.createElement(AzureReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: isCostReport\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value\n                            ? tabsReport.meta.total.usage.value\n                            : tabsReport.meta.total.usage, units: details.units ? details.units : reportItem.units, value: reportItem.cost }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, details, reportType } = this.props;\n            if (details.units) {\n                return details.units;\n            }\n            let units = '';\n            if (currentReport && currentReport.meta && currentReport.meta.total) {\n                if (reportType === \"cost\" /* cost */ ||\n                    reportType === \"database\" /* database */ ||\n                    reportType === \"network\" /* network */) {\n                    units = currentReport.meta.total.cost\n                        ? unitLookupKey(currentReport.meta.total.cost.units)\n                        : '';\n                }\n                else {\n                    units = currentReport.meta.total.usage\n                        ? unitLookupKey(currentReport.meta.total.usage.units)\n                        : '';\n                }\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus } = this.props;\n            return (React.createElement(AzureReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight),\n                Boolean(availableTabs) && (React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs()))));\n        };\n        this.handleInsightsNavClick = () => {\n            insights.chrome.appNavClick({ id: 'azure', secondaryNav: true });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        updateTab(id, availableTabs[0]);\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: azureReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: azureReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: azureReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: azureReportsSelectors.selectReport(state, widget.reportType, queries.tabs), tabsReportFetchStatus: azureReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: azureDashboardActions.fetchWidgetReports,\n    updateTab: azureDashboardActions.changeWidgetTab,\n};\nconst AzureDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(AzureDashboardWidgetBase));\nexport { AzureDashboardWidget, AzureDashboardWidgetBase, };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { azureDashboardSelectors } from 'store/azureDashboard';\nimport { createMapStateToProps } from 'store/common';\nimport { AzureDashboardWidget } from './azureDashboardWidget';\nconst AzureDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(AzureDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(AzureDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: azureDashboardSelectors.selectWidgets(state),\n        widgets: azureDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureDashboard = translate()(connect(mapStateToProps, {})(AzureDashboardBase));\nexport default AzureDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_2xl, global_spacer_xl } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartAltHeight: 180,\n    chartHeight: 80,\n    containerAltHeight: 200,\n    containerTrendHeight: 150,\n    containerUsageHeight: 180,\n};\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery } from 'api/ocpCloudQuery';\nimport { transformOcpCloudReport } from 'components/charts/commonChart/chartUtils';\nimport { OcpCloudReportSummary, OcpCloudReportSummaryAlt, OcpCloudReportSummaryDetails, OcpCloudReportSummaryItem, OcpCloudReportSummaryItems, OcpCloudReportSummaryTrend, OcpCloudReportSummaryUsage, } from 'components/reports/ocpCloudReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardActions, ocpCloudDashboardSelectors, } from 'store/ocpCloudDashboard';\nimport { ocpCloudReportsSelectors } from 'store/ocpCloudReports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './ocpCloudDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nclass OcpCloudDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const currentTab = getIdKeyForTab(tab);\n            return `/ocp-cloud?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, details, previousReport, reportType, t, trend, } = this.props;\n            const costReportType = reportType === \"cost\" /* cost */ ||\n                reportType === \"database\" /* database */ ||\n                reportType === \"network\" /* network */;\n            const reportItem = costReportType ? 'cost' : 'usage';\n            const currentUsageData = transformOcpCloudReport(currentReport, trend.type, 'date', reportItem);\n            const previousUsageData = transformOcpCloudReport(previousReport, trend.type, 'date', reportItem);\n            const currentRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpCloudReport(currentReport, trend.type, 'date', 'request')\n                : undefined;\n            const previousRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpCloudReport(previousReport, trend.type, 'date', 'request')\n                : undefined;\n            const units = this.getUnits();\n            return (React.createElement(React.Fragment, null, Boolean(reportType === \"cost\" /* cost */ ||\n                reportType === \"database\" /* database */ ||\n                reportType === \"instance_type\" /* instanceType */ ||\n                reportType === \"network\" /* network */ ||\n                reportType === \"storage\" /* storage */) ? (React.createElement(OcpCloudReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousUsageData, showUsageLegendLabel: details.showUsageLegendLabel, title: t(trend.titleKey, {\n                    units: t(`units.${units}`),\n                }) })) : (React.createElement(OcpCloudReportSummaryUsage, { containerHeight: chartStyles.containerUsageHeight, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: t(trend.titleKey, {\n                    units: t(`units.${units}`),\n                }) }))));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, isUsageFirst, reportType } = this.props;\n            const units = this.getUnits();\n            return (React.createElement(OcpCloudReportSummaryDetails, { costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, requestFormatOptions: details.requestFormatOptions, requestLabel: this.getDetailsLabel(details.requestKey, units), showUnits: details.showUnits, showUsageFirst: isUsageFirst, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpCloudReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerAltHeight, chartStyles.chartAltHeight, true)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('ocp_cloud_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabItems) },\n                    React.createElement(OcpCloudReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const isCostReport = reportType === \"cost\" /* cost */ ||\n                reportType === \"database\" /* database */ ||\n                reportType === \"network\" /* network */;\n            if (activeTab === currentTab) {\n                return (React.createElement(OcpCloudReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: isCostReport\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: isCostReport ? reportItem.cost : reportItem.usage }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            if (availableTabs) {\n                return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, reportType } = this.props;\n            let units = '';\n            if (currentReport && currentReport.meta && currentReport.meta.total) {\n                if (reportType === \"cost\" /* cost */ ||\n                    reportType === \"database\" /* database */ ||\n                    reportType === \"network\" /* network */) {\n                    units = currentReport.meta.total.cost\n                        ? unitLookupKey(currentReport.meta.total.cost.units)\n                        : '';\n                }\n                else {\n                    units = currentReport.meta.total.usage\n                        ? unitLookupKey(currentReport.meta.total.usage.units)\n                        : '';\n                }\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpCloudReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight),\n                Boolean(availableTabs) && (React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs()))));\n        };\n        this.handleInsightsNavClick = () => {\n            insights.chrome.appNavClick({ id: 'ocp-cloud', secondaryNav: true });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: ocpCloudReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: ocpCloudReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: ocpCloudReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: ocpCloudReportsSelectors.selectReport(state, widget.reportType, queries.tabs), tabsReportFetchStatus: ocpCloudReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpCloudDashboardActions.fetchWidgetReports,\n    updateTab: ocpCloudDashboardActions.changeWidgetTab,\n};\nconst OcpCloudDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(OcpCloudDashboardWidgetBase));\nexport { OcpCloudDashboardWidget, OcpCloudDashboardWidgetBase, };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardSelectors } from 'store/ocpCloudDashboard';\nimport { OcpCloudDashboardWidget } from './ocpCloudDashboardWidget';\nconst OcpCloudDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(OcpCloudDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(OcpCloudDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: ocpCloudDashboardSelectors.selectWidgets(state),\n        widgets: ocpCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpCloudDashboard = translate()(connect(mapStateToProps, {})(OcpCloudDashboardBase));\nexport default OcpCloudDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_2xl, global_spacer_xl } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartAltHeight: 180,\n    chartHeight: 80,\n    containerAltHeight: 275,\n    containerTrendHeight: 150,\n    containerUsageHeight: 180,\n};\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery } from 'api/ocpQuery';\nimport { transformOcpReport } from 'components/charts/commonChart/chartUtils';\nimport { OcpReportSummary, OcpReportSummaryAlt, OcpReportSummaryDetails, OcpReportSummaryItem, OcpReportSummaryItems, OcpReportSummaryTrend, OcpReportSummaryUsage, } from 'components/reports/ocpReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors, } from 'store/ocpDashboard';\nimport { ocpReportsSelectors } from 'store/ocpReports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './ocpDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nclass OcpDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const currentTab = getIdKeyForTab(tab);\n            return `/ocp?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, reportType, t, trend } = this.props;\n            const reportItem = reportType === \"cost\" /* cost */ ? 'cost' : 'usage';\n            const currentUsageData = transformOcpReport(currentReport, trend.type, 'date', reportItem);\n            const previousUsageData = transformOcpReport(previousReport, trend.type, 'date', reportItem);\n            const currentRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpReport(currentReport, trend.type, 'date', 'request')\n                : undefined;\n            const previousRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpReport(previousReport, trend.type, 'date', 'request')\n                : undefined;\n            const currentInfrastructureData = reportType === \"cost\" /* cost */\n                ? transformOcpReport(currentReport, trend.type, 'date', 'infrastructureCost')\n                : undefined;\n            const previousInfrastructureData = reportType === \"cost\" /* cost */\n                ? transformOcpReport(previousReport, trend.type, 'date', 'infrastructureCost')\n                : undefined;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            return (React.createElement(React.Fragment, null, Boolean(reportType === \"cost\" /* cost */) ? (React.createElement(OcpReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentCostData: currentUsageData, currentInfrastructureCostData: currentInfrastructureData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousCostData: previousUsageData, previousInfrastructureCostData: previousInfrastructureData, title: title })) : (React.createElement(OcpReportSummaryUsage, { containerHeight: chartStyles.containerUsageHeight, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: title }))));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, isUsageFirst, reportType } = this.props;\n            const units = this.getUnits();\n            return (React.createElement(OcpReportSummaryDetails, { costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, requestFormatOptions: details.requestFormatOptions, requestLabel: this.getDetailsLabel(details.requestKey, units), showUnits: details.showUnits, showUsageFirst: isUsageFirst, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerAltHeight, chartStyles.chartAltHeight, true)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('ocp_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabItems) },\n                    React.createElement(OcpReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            if (activeTab === currentTab) {\n                return (React.createElement(OcpReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: reportType === \"cost\" /* cost */\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: reportType === \"cost\" /* cost */\n                        ? reportItem.cost\n                        : reportItem.usage }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, reportType } = this.props;\n            let units = '';\n            if (currentReport && currentReport.meta && currentReport.meta.total) {\n                if (reportType === \"cost\" /* cost */) {\n                    units = currentReport.meta.total.cost\n                        ? unitLookupKey(currentReport.meta.total.cost.units)\n                        : '';\n                }\n                else {\n                    units = currentReport.meta.total.usage\n                        ? unitLookupKey(currentReport.meta.total.usage.units)\n                        : '';\n                }\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight),\n                Boolean(availableTabs) && (React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs()))));\n        };\n        this.handleInsightsNavClick = () => {\n            insights.chrome.appNavClick({ id: 'ocp', secondaryNav: true });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id } = this.props;\n            const tab = availableTabs[tabIndex];\n            this.props.updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, widgetId } = this.props;\n        this.props.updateTab(id, availableTabs[0]);\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: ocpReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.tabs), tabsReportFetchStatus: ocpReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(OcpDashboardWidgetBase));\nexport { OcpDashboardWidget, OcpDashboardWidgetBase };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/ocpDashboard';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\nconst OcpDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(OcpDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(OcpDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: ocpDashboardSelectors.selectWidgets(state),\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = translate()(connect(mapStateToProps, {})(OcpDashboardBase));\nexport default OcpDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_FontSize_md, global_spacer_lg, global_spacer_sm, } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const styles = StyleSheet.create({\n    info: {\n        marginLeft: global_spacer_sm.value,\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    tabs: {\n        marginTop: global_spacer_lg.value,\n    },\n});\nexport const headerOverride = css `\n  &.pf-c-page__main-section {\n    --pf-c-page__main-section--PaddingBottom: 0;\n  }\n`;\n","import { Popover, Tab, TabContent, Tabs, Title, TitleSize, } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport { getProvidersQuery } from 'api/providersQuery';\nimport { ErrorState } from 'components/state/errorState/errorState';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport { NoProvidersState } from 'components/state/noProvidersState/noProvidersState';\nimport AwsDashboard from 'pages/dashboard/awsDashboard/awsDashboard';\nimport AzureDashboard from 'pages/dashboard/azureDashboard/azureDashboard';\nimport OcpCloudDashboard from 'pages/dashboard/ocpCloudDashboard/ocpCloudDashboard';\nimport OcpDashboard from 'pages/dashboard/ocpDashboard/ocpDashboard';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions } from 'store/onboarding';\nimport { awsProvidersQuery, azureProvidersQuery, ocpProvidersQuery, providersSelectors, } from 'store/providers';\nimport { headerOverride, styles } from './overview.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"aws\" /* aws */:\n            return 'aws';\n        case \"azure\" /* azure */:\n            return 'azure';\n        case \"ocp\" /* ocp */:\n            return 'ocp';\n        case \"ocpCloud\" /* ocpCloud */:\n            return 'ocpCloud';\n    }\n};\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n            showPopover: false,\n        };\n        this.getAvailableTabs = () => {\n            const { awsProviders, azureProviders, ocpProviders } = this.props;\n            const availableTabs = [];\n            if (awsProviders &&\n                awsProviders.meta &&\n                awsProviders.meta.count &&\n                ocpProviders && ocpProviders.meta && ocpProviders.meta.count) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"ocpCloud\" /* ocpCloud */,\n                });\n            }\n            if (ocpProviders && ocpProviders.meta && ocpProviders.meta.count) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"ocp\" /* ocp */,\n                });\n            }\n            if (awsProviders && awsProviders.meta && awsProviders.meta.count) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"aws\" /* aws */,\n                });\n            }\n            if (azureProviders && azureProviders.meta && azureProviders.meta.count) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"azure\" /* azure */,\n                });\n            }\n            return availableTabs;\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: this.getTabTitle(tab) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"ocpCloud\" /* ocpCloud */) {\n                return activeTabKey === index ? React.createElement(OcpCloudDashboard, null) : null;\n            }\n            else if (currentTab === \"ocp\" /* ocp */) {\n                return activeTabKey === index ? React.createElement(OcpDashboard, null) : null;\n            }\n            else if (currentTab === \"aws\" /* aws */) {\n                return activeTabKey === index ? React.createElement(AwsDashboard, null) : null;\n            }\n            else if (currentTab === \"azure\" /* azure */) {\n                return activeTabKey === index ? React.createElement(AzureDashboard, null) : null;\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"aws\" /* aws */) {\n                return t('overview.aws');\n            }\n            else if (tab === \"azure\" /* azure */) {\n                return t('overview.azure');\n            }\n            else if (tab === \"ocp\" /* ocp */) {\n                return t('overview.ocp');\n            }\n            else if (tab === \"ocpCloud\" /* ocpCloud */) {\n                return t('overview.ocp_cloud');\n            }\n        };\n        this.handlePopoverClick = () => {\n            this.setState({\n                show: !this.state.showPopover,\n            });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    render() {\n        const { awsProviders, awsProvidersError, awsProvidersFetchStatus, azureProviders, azureProvidersError, azureProvidersFetchStatus, ocpProviders, ocpProvidersError, ocpProvidersFetchStatus, t, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        const error = awsProvidersError || azureProvidersError || ocpProvidersError;\n        const isLoading = awsProvidersFetchStatus === 1 /* inProgress */ ||\n            azureProvidersFetchStatus === 1 /* inProgress */ ||\n            ocpProvidersFetchStatus === 1 /* inProgress */;\n        const noAwsProviders = awsProviders !== undefined &&\n            awsProviders.meta !== undefined &&\n            awsProviders.meta.count === 0 &&\n            awsProvidersFetchStatus === 2 /* complete */;\n        const noAzureProviders = azureProviders !== undefined &&\n            azureProviders.meta !== undefined &&\n            azureProviders.meta.count === 0 &&\n            azureProvidersFetchStatus === 2 /* complete */;\n        const noOcpProviders = ocpProviders !== undefined &&\n            ocpProviders.meta !== undefined &&\n            ocpProviders.meta.count === 0 &&\n            ocpProvidersFetchStatus === 2 /* complete */;\n        const noProviders = noAwsProviders && noAzureProviders && noOcpProviders;\n        const showTabs = !(error || noProviders || isLoading);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"section\", { className: `pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light ${showTabs ? headerOverride : ''}` },\n                React.createElement(\"header\", { className: \"pf-u-display-flex pf-u-justify-content-space-between pf-u-align-items-center\" },\n                    React.createElement(Title, { size: TitleSize['2xl'] },\n                        t('overview.title'),\n                        Boolean(showTabs) && (React.createElement(\"span\", { className: css(styles.infoIcon) },\n                            React.createElement(Popover, { \"aria-label\": \"t('ocp_details.derived_aria_label')\", enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                    React.createElement(\"p\", { className: css(styles.infoTitle) }, t('overview.ocp_cloud')),\n                                    React.createElement(\"p\", null, t('overview.ocp_cloud_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { className: css(styles.infoTitle) }, t('overview.ocp')),\n                                    React.createElement(\"p\", null, t('overview.ocp_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { className: css(styles.infoTitle) }, t('overview.aws')),\n                                    React.createElement(\"p\", null, t('overview.aws_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { className: css(styles.infoTitle) }, t('overview.azure')),\n                                    React.createElement(\"p\", null, t('overview.azure_desc'))) },\n                                React.createElement(InfoCircleIcon, { className: css(styles.info), onClick: this.handlePopoverClick })))))),\n                Boolean(showTabs) && (React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs(availableTabs)))),\n            React.createElement(\"section\", { className: \"pf-l-page__main-section pf-c-page__main-section\", \"page-type\": \"cost-management-overview\" }, Boolean(error) ? (React.createElement(ErrorState, { error: error })) : Boolean(noProviders) ? (React.createElement(NoProvidersState, null)) : Boolean(isLoading) ? (React.createElement(LoadingState, null)) : (this.getTabContent(availableTabs)))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    const awsProvidersQueryString = getProvidersQuery(awsProvidersQuery);\n    const awsProviders = providersSelectors.selectProviders(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersError = providersSelectors.selectProvidersError(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const azureProvidersQueryString = getProvidersQuery(azureProvidersQuery);\n    const azureProviders = providersSelectors.selectProviders(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const azureProvidersError = providersSelectors.selectProvidersError(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const azureProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const ocpProvidersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const ocpProviders = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersError = providersSelectors.selectProvidersError(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    return {\n        awsProviders,\n        awsProvidersError,\n        awsProvidersFetchStatus,\n        awsProvidersQueryString,\n        azureProviders,\n        azureProvidersError,\n        azureProvidersFetchStatus,\n        azureProvidersQueryString,\n        ocpProviders,\n        ocpProvidersError,\n        ocpProvidersFetchStatus,\n        ocpProvidersQueryString,\n    };\n});\nconst Overview = translate()(connect(mapStateToProps, {\n    openProvidersModal: onboardingActions.openModal,\n})(OverviewBase));\nexport default Overview;\n","import Overview from './overview';\nexport default Overview;\n"],"sourceRoot":""}