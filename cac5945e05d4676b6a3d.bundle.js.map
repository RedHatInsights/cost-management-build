{"version":3,"sources":["webpack://koku-ui/./node_modules/@redhat-cloud-services/frontend-components/components/PageHeader.js","webpack://koku-ui/./node_modules/@redhat-cloud-services/frontend-components/components/Skeleton.js","webpack://koku-ui/./src/api/queries/providersQuery.ts","webpack://koku-ui/./src/components/charts/chartTheme/theme-koku.ts","webpack://koku-ui/./src/components/charts/chartTheme/index.ts","webpack://koku-ui/./src/components/charts/chartTheme/theme-utils.ts","webpack://koku-ui/./src/utils/computedForecast/getComputedForecastItems.ts","webpack://koku-ui/./src/components/charts/common/chartDatumUtils.ts","webpack://koku-ui/./src/components/charts/common/chartUtils.ts","webpack://koku-ui/./src/components/reports/reportSummary/reportSummary.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryAlt.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryDetails.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryItem.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryItems.tsx","webpack://koku-ui/./src/components/charts/costChart/costChart.styles.ts","webpack://koku-ui/./src/components/charts/costChart/costChart.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryCost.tsx","webpack://koku-ui/./src/components/charts/dailyCostChart/dailyCostChart.styles.ts","webpack://koku-ui/./src/components/charts/dailyCostChart/dailyCostChart.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryDailyCost.tsx","webpack://koku-ui/./src/components/charts/dailyTrendChart/dailyTrendChart.styles.ts","webpack://koku-ui/./src/components/charts/dailyTrendChart/dailyTrendChart.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryDailyTrend.tsx","webpack://koku-ui/./src/components/charts/trendChart/trendChart.styles.ts","webpack://koku-ui/./src/components/charts/trendChart/trendChart.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryTrend.tsx","webpack://koku-ui/./src/components/charts/usageChart/usageChart.styles.ts","webpack://koku-ui/./src/components/charts/usageChart/usageChart.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryUsage.tsx","webpack://koku-ui/./src/components/state/emptyValueState/emptyValueState.tsx","webpack://koku-ui/./src/pages/state/loading/loading.tsx","webpack://koku-ui/./src/pages/state/loading/index.ts","webpack://koku-ui/./src/pages/state/noData/noDataState.tsx","webpack://koku-ui/./src/pages/state/noData/noData.tsx","webpack://koku-ui/./src/components/icons/costIcon/costIcon.tsx","webpack://koku-ui/./src/components/icons/costIcon/index.ts","webpack://koku-ui/./src/pages/state/noProviders/noProvidersState.styles.ts","webpack://koku-ui/./src/pages/state/noProviders/noProvidersState.tsx","webpack://koku-ui/./src/pages/state/noProviders/index.ts","webpack://koku-ui/./src/pages/state/noProviders/noProviders.tsx","webpack://koku-ui/./src/utils/computedReport/getComputedReportItems.ts","webpack://koku-ui/./src/utils/computedReport/getItemLabel.ts","webpack://koku-ui/./src/utils/noop.ts","webpack://koku-ui/./src/utils/pathname.ts","webpack://koku-ui/./src/utils/sort.ts"],"names":["e","t","r","n","a","hasOwnProperty","default","o","_extends","exports","Object","assign","arguments","length","prototype","call","apply","this","s","defineProperty","value","enumerable","configurable","writable","c","keys","indexOf","i","getOwnPropertySymbols","propertyIsEnumerable","l","createContext","p","className","children","createElement","Consumer","concat","propTypes","any","isRequired","string","u","title","Title","headingLevel","size","node","PageHeader","PageHeaderTitle","xs","sm","md","lg","isDark","oneOf","values","bool","defaultProps","Skeleton","SkeletonSize","getProvidersQuery","query","stringify","encode","indices","LAYOUT_PROPS","padding","area","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","getCustomTheme","ChartThemeColor","ChartThemeVariant","getComputedForecastItems","forecast","sortDirection","sortKey","sort","itemMap","Map","visitDataPoint","dataPoint","forEach","val","date","item","get","set","cost","getCostData","infrastructure","supplementary","key","Array","data","from","getUnsortedComputedForecastItems","direction","confidence_max","units","confidence_min","pvalues","Number","rsquared","total","transformForecast","type","forecastItem","forecastItemValue","computedItems","chartDatums","map","createForecastDatum","reduce","acc","d","prevValue","y","padChartDatums","transformForecastCone","createForecastConeDatum","prevMaxValue","prevMinValue","y0","transformReport","report","idKey","reportItem","reportItemValue","items","getComputedReportItems","createReportDatum","computedItem","xVal","getDate","Date","yVal","isFloat","parseFloat","toFixed","isInt","x","undefined","maxValue","minValue","y0Val","id","label","datums","result","firstDate","lastDate","padDate","startOfMonth","setDate","format","push","endOfMonth","prevChartDatum","chartDatum","find","fillChartDatums","getDateRange","firstOfMonth","lastOfMonth","offset","start","end","today","setMonth","getMonth","firstDay","lastDay","getDatumDateRange","getMaxValue","max","datum","getMaxMinValues","min","maxY","Math","minY","getTooltipContent","formatValue","unit","options","lookup","getCostRangeString","count","endDate","month","startDate","year","getYear","getUsageRangeString","getChartNames","series","serie","childName","getDomain","hiddenSeries","domain","index","isSeriesHidden","threshold","ceil","_min","floor","getLegendData","legendItem","name","getInteractiveLegendItemStyles","has","filter","getTooltipLabel","formatDatumValue","formatDatumOptions","formatter","dy","dy0","value0","value1","initHiddenSeries","Set","delete","add","_index","isDataAvailable","unavailable","isDataHidden","next","done","dataChildName","serieChildName","ReportSummary","withTranslation","detailsLink","subTitle","status","Card","CardTitle","Boolean","CardBody","CardFooter","ReportSummaryAlt","tabs","Grid","hasGutter","GridItem","xl","ReportSummaryDetails","chartType","computedReportItem","computedReportItemValue","costLabel","formatOptions","requestFormatOptions","requestLabel","reportType","showTooltip","showUnits","showUsageFirst","usageFormatOptions","usageLabel","supplementaryCost","infrastructureCost","request","usage","hasTotal","meta","hasCost","hasCount","hasSupplementaryCost","hasInfrastructureCost","hasRequest","hasUsage","getCostLayout","showAltHeroFont","altHeroFont","Tooltip","content","enableFlip","getRequestLayout","usageUnits","_units","unitsLabel","getUsageLayout","ReportSummaryItemBase","totalValue","percentVal","percentLabel","percent","Progress","ProgressSize","v","ReportSummaryItem","ReportSummaryItemsBase","nextProps","props","otherIndex","findIndex","toString","includes","slice","getItems","ReportSummaryItems","chartStyles","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","currentCostData","fill","currentInfrastructureColorScale","chart_color_blue_400","chart_color_blue_300","chart_color_blue_200","chart_color_blue_100","chart_color_blue_500","currentInfrastructureCostData","strokeDasharray","forecastConeData","strokeWidth","forecastConeDataColorScale","forecastData","forecastDataColorScale","forecastInfrastructureConeData","forecastInfrastructureConeDataColorScale","forecastInfrastructureData","forecastInfrastructureDataColorScale","previousCostData","previousInfrastructureCostData","previousColorScale","chart_color_black_200","yAxis","axisLabel","grid","stroke","ticks","tickLabels","fontSize","xAxis","CostChart","super","containerRef","resizeObserver","noop","navToggle","state","width","initDatum","showForecast","costKey","costInfrastructureKey","costInfrastructureTooltipKey","costTooltipKey","symbol","style","cursorVoronoiContainer","getCursorVoronoiContainer","setState","initResizeObserve","containerElement","current","ResizeObserver","window","handleResize","observe","unobserve","addEventListener","removeEventListener","insights","chrome","on","handleNavToggle","getAdjustedContainerHeight","adjustContainerHeight","height","containerHeight","adjustedContainerHeight","getChart","ChartArea","interpolation","CursorVoronoiContainer","createContainer","cursorDimension","labels","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getLegend","ChartLegend","gutter","responsive","handleLegendClick","setTimeout","clientWidth","prevProps","getInteractiveLegendEvents","chartNames","isHidden","legendName","onLegendClick","currentInfrastructureDate","currentCostDate","forecastCostDate","previousInfrastructureDate","previousUsageDate","ge","getEndDate","half","_2ndDay","_3rdDay","_4thDay","container","disable","labelComponent","ChartLegendTooltip","legendData","day","ref","Chart","containerComponent","events","getEvents","legendAllowWrap","legendComponent","legendPosition","theme","ChartAxis","tickValues","dependentAxis","ReportSummaryCost","chart_color_orange_300","DailyCostChart","initDatumChildName","isLine","isBar","isForecast","ChartBar","alignment","ChartLine","getForecastBarChart","getForecastLineChart","barWidth","ChartGroup","ReportSummaryDailyCost","itemsPerRow","DailyTrendChart","currentData","previousData","showSupplementaryLabel","showUsageLegendLabel","tooltipKey","legendItemsPerRow","orientation","previousDate","currentDate","forecastDate","ReportSummaryDailyTrend","currentMonthData","previousMonthData","TrendChart","midDate","ReportSummaryTrend","chartContainer","marginTop","currentRequestData","currentUsageData","legendColorScale","previousRequestData","previousUsageData","UsageChart","usageKey","usageTooltipKey","requestKey","requestTooltipKey","currentRequestDate","currentUsageDate","previousRequestDate","ReportSummaryUsage","EmptyValueState","withRouter","Main","NoDataStateBase","showReload","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","icon","EmptyStateBody","Button","onClick","location","reload","NoDataState","src","alt","styles","iconSpacer","marginLeft","viewSources","global_spacer_lg","NoProvidersStateBase","getDocLink","textKey","urlKey","href","rel","target","getRouteToSources","providerType","docUrlKey","descKey","titleKey","component","NoProvidersState","daily","getUnsortedComputedReportItems","markup","raw","getUsageData","capacity","limit","idSuffix","cluster","org_unit_id","mapId","cluster_alias","clusters","delta_percent","delta_value","source_uuid","itemLabelKey","String","group_by","tagPrefixKey","getItemLabel","alias","account_alias","dateMap","getReleasePath","pathName","pathname","split","shift","release","getValueForItem","array","b","aVal","bVal"],"mappings":"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","file":"cac5945e05d4676b6a3d.bundle.js","sourcesContent":["!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports,require(\"react\"),require(\"prop-types\"),require(\"classnames\"),require(\"@patternfly/react-core\")):\"function\"==typeof define&&define.amd?define([\"exports\",\"react\",\"prop-types\",\"classnames\",\"@patternfly/react-core\"],t):t((e=e||self)[\"@redhat-cloud-services/frontend-components-PageHeader\"]={},e.React,e[\"prop-types\"],e.classNames,e[\"@patternfly/react-core\"])}(this,(function(e,t,r,n,a){\"use strict\";t=t&&t.hasOwnProperty(\"default\")?t.default:t,r=r&&r.hasOwnProperty(\"default\")?r.default:r,n=n&&n.hasOwnProperty(\"default\")?n.default:n;var o=function createCommonjsModule(e,t){return e(t={exports:{}},t.exports),t.exports}((function(e){function _extends(){return e.exports=_extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},_extends.apply(this,arguments)}e.exports=_extends}));var s=function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e};var i=function _objectWithoutPropertiesLoose(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a};var c=function _objectWithoutProperties(e,t){if(null==e)return{};var r,n,a=i(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a},l=t.createContext(\"light\"),p=function PageHeader(e){var r=e.className,a=e.children,i=c(e,[\"className\",\"children\"]),p=n(r,\"pf-l-page-header\",\"pf-c-page-header\",\"pf-l-page__main-section\",\"pf-c-page__main-section\");return t.createElement(l.Consumer,null,(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"light\",r=n(s({},\"pf-m-\".concat(e,\"-200\"),\"dark\"===e),s({},\"pf-m-light\",\"light\"===e));return t.createElement(\"section\",o({},i,{className:\"\".concat(p,\" \").concat(r),\"widget-type\":\"InsightsPageHeader\"}),a)}))};p.propTypes={children:r.any.isRequired,className:r.string};var u=function PageHeaderTitle(e){var r=e.className,o=e.title,s=n(r);return t.createElement(a.Title,{headingLevel:\"h1\",size:\"2xl\",className:s,\"widget-type\":\"InsightsPageHeaderTitle\"},\" \",o,\" \")};u.propTypes={title:r.node.isRequired,className:r.string},e.PageHeader=p,e.PageHeaderTitle=u,e.default=p,Object.defineProperty(e,\"__esModule\",{value:!0})}));\n","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports,require(\"react\"),require(\"prop-types\"),require(\"classnames\")):\"function\"==typeof define&&define.amd?define([\"exports\",\"react\",\"prop-types\",\"classnames\"],t):t((e=e||self)[\"@redhat-cloud-services/frontend-components-Skeleton\"]={},e.React,e[\"prop-types\"],e.classNames)}(this,(function(e,t,r,n){\"use strict\";t=t&&t.hasOwnProperty(\"default\")?t.default:t,r=r&&r.hasOwnProperty(\"default\")?r.default:r,n=n&&n.hasOwnProperty(\"default\")?n.default:n;var o=function createCommonjsModule(e,t){return e(t={exports:{}},t.exports),t.exports}((function(e){function _extends(){return e.exports=_extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},_extends.apply(this,arguments)}e.exports=_extends}));var s=function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e};var a=function _objectWithoutPropertiesLoose(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o};var i=function _objectWithoutProperties(e,t){if(null==e)return{};var r,n,o=a(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o},l={xs:\"xs\",sm:\"sm\",md:\"md\",lg:\"lg\"},u=function Skeleton(e){var r=e.size,a=e.isDark,l=e.className,u=i(e,[\"size\",\"isDark\",\"className\"]),c=n(\"ins-c-skeleton\",\"ins-c-skeleton__\".concat(r),s({},\"ins-m-dark\",a),l);return t.createElement(\"div\",o({className:c},u),\" \")};u.propTypes={className:r.string,size:r.oneOf(Object.values(l)),isDark:r.bool},u.defaultProps={size:l.md,isDark:!1},e.Skeleton=u,e.SkeletonSize=l,e.default=u,Object.defineProperty(e,\"__esModule\",{value:!0})}));\n","import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, ChartThemeVariant, getCustomTheme } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, ChartThemeVariant.default, ChartTheme);\nexport default getTheme;\n","import { sort } from 'utils/sort';\nexport function getComputedForecastItems({ forecast, sortDirection = 0 /* asc */, sortKey = 'date', }) {\n    return sort(getUnsortedComputedForecastItems({\n        forecast,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nfunction getCostData(val, key, item) {\n    return {\n        confidence_max: {\n            value: item\n                ? item[key].confidence_max.value\n                : 0 + val[key] && val[key].confidence_max\n                    ? val[key].confidence_max.value\n                    : 0,\n            units: val[key] && val[key].confidence_max ? val[key].confidence_max.units : 'USD',\n        },\n        confidence_min: {\n            value: item\n                ? item[key].confidence_min.value\n                : 0 + val[key] && val[key].confidence_min\n                    ? val[key].confidence_min.value\n                    : 0,\n            units: val[key] && val[key].confidence_min ? val[key].confidence_min.units : 'USD',\n        },\n        pvalues: {\n            value: val[key] && val[key].pvalues ? Number(val[key].pvalues.value) : 0,\n            units: val[key] && val[key].pvalues ? val[key].pvalues.units : null,\n        },\n        rsquared: {\n            value: val[key] && val[key].rsquared ? Number(val[key].rsquared.value) : 0,\n            units: val[key] && val[key].rsquared ? val[key].rsquared.units : null,\n        },\n        total: {\n            value: item ? item[key].total.value : 0 + val[key] && val[key].total ? val[key].total.value : 0,\n            units: val[key] && val[key].total ? val[key].total.units : 'USD',\n        },\n    };\n}\nexport function getUnsortedComputedForecastItems({ forecast, }) {\n    if (!forecast) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            dataPoint.values.forEach((val) => {\n                const date = val.date;\n                const item = itemMap.get(date);\n                if (item) {\n                    // This code block is typically entered with filter[resolution]=monthly\n                    itemMap.set(date, Object.assign(Object.assign({}, item), { date, cost: getCostData(val, 'cost', item), infrastructure: getCostData(val, 'infrastructure', item), supplementary: getCostData(val, 'supplementary', item) }));\n                }\n                else {\n                    // This code block is typically entered with filter[resolution]=daily\n                    itemMap.set(date, {\n                        date,\n                        cost: getCostData(val, 'cost'),\n                        infrastructure: getCostData(val, 'infrastructure'),\n                        supplementary: getCostData(val, 'supplementary'),\n                    });\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (forecast && forecast.data) {\n        forecast.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import { endOfMonth, format, getDate, getYear, startOfMonth } from 'date-fns';\nimport i18next from 'i18next';\nimport { getComputedForecastItems } from 'utils/computedForecast/getComputedForecastItems';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { unitLookupKey } from 'utils/formatValue';\nexport function transformForecast(forecast, type = 1 /* daily */, forecastItem = 'cost', forecastItemValue = 'total') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => createForecastDatum(i[forecastItem][forecastItemValue].value, i));\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            return [...acc, createForecastDatum(prevValue + d[forecastItem][forecastItemValue].value, d)];\n        }, []);\n    }\n    return padChartDatums(chartDatums, type);\n}\nexport function transformForecastCone(forecast, type = 1 /* daily */, forecastItem = 'cost', forecastItemValue = 'total') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => createForecastConeDatum(i[forecastItem].confidence_max.value, i[forecastItem].confidence_min.value, i));\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevMaxValue = acc.length ? acc[acc.length - 1].y : d[forecastItem][forecastItemValue].value;\n            const prevMinValue = acc.length ? acc[acc.length - 1].y0 : d[forecastItem][forecastItemValue].value;\n            return [\n                ...acc,\n                createForecastConeDatum(prevMaxValue + d[forecastItem].confidence_max.value, prevMinValue + d[forecastItem].confidence_min.value, d),\n            ];\n        }, []);\n    }\n    return padChartDatums(chartDatums, type);\n}\nexport function transformReport(report, type = 1 /* daily */, idKey = 'date', reportItem = 'cost', reportItemValue = 'total' // useful for infrastructure.usage values\n) {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        idKey,\n        report,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedReportItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => {\n            const val = i[reportItem][reportItemValue] ? i[reportItem][reportItemValue].value : i[reportItem].value;\n            return createReportDatum(val, i, idKey, reportItem, reportItemValue);\n        });\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            const val = d[reportItem][reportItemValue] ? d[reportItem][reportItemValue].value : d[reportItem].value;\n            return [...acc, createReportDatum(prevValue + val, d, idKey, reportItem, reportItemValue)];\n        }, []);\n    }\n    return idKey === 'date' ? padChartDatums(chartDatums, type) : chartDatums;\n}\nexport function createForecastDatum(value, computedItem, forecastItem = 'cost', forecastItemValue = 'total') {\n    const xVal = getDate(new Date(computedItem.date));\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.date,\n        units: computedItem[forecastItem] && computedItem[forecastItem][forecastItemValue]\n            ? computedItem[forecastItem][forecastItemValue].units\n            : undefined,\n    };\n}\nexport function createForecastConeDatum(maxValue, minValue, computedItem, forecastItem = 'cost', forecastItemValue = 'total') {\n    const xVal = getDate(new Date(computedItem.date));\n    const yVal = isFloat(maxValue) ? parseFloat(maxValue.toFixed(2)) : isInt(maxValue) ? maxValue : 0;\n    const y0Val = isFloat(minValue) ? parseFloat(minValue.toFixed(2)) : isInt(minValue) ? minValue : 0;\n    return {\n        x: xVal,\n        y: maxValue === null ? null : yVal,\n        y0: minValue === null ? null : y0Val,\n        key: computedItem.date,\n        units: computedItem[forecastItem] && computedItem[forecastItem][forecastItemValue]\n            ? computedItem[forecastItem][forecastItemValue].units\n            : undefined,\n    };\n}\nexport function createReportDatum(value, computedItem, idKey = 'date', reportItem = 'cost', reportItemValue = 'total' // useful for infrastructure.usage values\n) {\n    const xVal = idKey === 'date' ? getDate(new Date(computedItem.id)) : computedItem.label;\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.id,\n        units: computedItem[reportItem]\n            ? computedItem[reportItem][reportItemValue]\n                ? computedItem[reportItem][reportItemValue].units // cost, infrastructure, supplementary\n                : computedItem[reportItem].units // capacity, limit, request, usage\n            : undefined,\n    };\n}\n// Fill in missing data with previous value to represent cumulative daily cost\nexport function fillChartDatums(datums, type = 1 /* daily */) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    const padDate = startOfMonth(firstDate);\n    let prevChartDatum;\n    for (let i = padDate.getDate(); i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = format(padDate, 'yyyy-MM-dd');\n        const chartDatum = datums.find(val => val.key === id);\n        if (chartDatum) {\n            result.push(chartDatum);\n        }\n        else if (prevChartDatum) {\n            result.push(Object.assign(Object.assign({}, prevChartDatum), { key: id, x: getDate(new Date(id)) }));\n        }\n        if (chartDatum) {\n            // Note: We want to identify missing data, but charts won't extrapolate (connect data points) if we return null here\n            // for missing daily values. For example, if there is only data for the first and last day of the month, charts would\n            // typically draw a line between two points by default. However, showing \"no data\" is more obvious there was a problem.\n            if (type === 1 /* daily */) {\n                prevChartDatum = {\n                    key: id,\n                    x: getDate(new Date(id)),\n                    y: null,\n                };\n            }\n            else {\n                prevChartDatum = chartDatum;\n            }\n        }\n    }\n    return result;\n}\n// This pads chart datums with null datum objects, representing missing data at the beginning and end of the\n// data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n// message in the tooltip, which helps distinguish between zero values and when there is no data available.\nexport function padChartDatums(datums, type = 1 /* daily */) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    // Pad start for missing data\n    let padDate = startOfMonth(firstDate);\n    for (let i = padDate.getDate(); i < firstDate.getDate(); i++) {\n        padDate.setDate(i);\n        const id = format(padDate, 'yyyy-MM-dd');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    // Fill middle with existing data\n    result.push(...datums);\n    // Pad end for missing data\n    padDate = new Date(lastDate);\n    for (let i = padDate.getDate() + 1; i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = format(padDate, 'yyyy-MM-dd');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    return fillChartDatums(result, type);\n}\nexport function getDatumDateRange(datums, offset = 0) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        // If datums is empty, obtain the month based on offset (e.g., to show previous month in chart legends)\n        if (offset) {\n            today.setMonth(today.getMonth() - offset);\n        }\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    // Find the first populated (non-null) day\n    let firstDay = 0;\n    for (let i = firstDay; i < datums.length; i++) {\n        if (datums[i].y && datums[i].y !== null) {\n            firstDay = i;\n            break;\n        }\n    }\n    // Find the last populated (non-null) day\n    let lastDay = datums.length - 1;\n    for (let i = lastDay; i >= 0; i--) {\n        if (datums[i].y && datums[i].y !== null) {\n            lastDay = i;\n            break;\n        }\n    }\n    const start = new Date(datums[firstDay].key + 'T00:00:00');\n    const end = new Date(datums[lastDay].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDatumDateRange(datums, offset);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(`chart.date_range`, {\n        count: getDate(end),\n        endDate: format(end, 'dd'),\n        month: Number(format(start, 'M')) - 1,\n        startDate: format(start, 'dd'),\n        year: getYear(end),\n    });\n}\nexport function getMonthRangeString(datums, key = 'chart.month_legend_label', offset = 0) {\n    const [start, end] = getDateRange(datums, true, false, offset);\n    return [\n        i18next.t(key, {\n            month: Number(format(start, 'M')) - 1,\n        }),\n        i18next.t(key, {\n            month: Number(format(end, 'M')) - 1,\n        }),\n    ];\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getMaxMinValues(datums) {\n    let max = -1;\n    let min = -1;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            const maxY = datum.y0 !== undefined ? Math.max(datum.y, datum.y0) : datum.y;\n            const minY = datum.y0 !== undefined ? Math.min(datum.y, datum.y0) : datum.y;\n            if (maxY > max) {\n                max = maxY;\n            }\n            if ((min === -1 || minY < min) && minY !== null) {\n                min = minY;\n            }\n        });\n    }\n    return { max, min };\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'core-hours':\n            case 'hrs':\n            case 'gb':\n            case 'gb-hours':\n            case 'gb-mo':\n            case 'vm-hours':\n                return i18next.t(`unit_tooltips.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date', units) {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(new Date(datum.key), 'dd MMM yyyy');\n        return `${date} ${formatValue(datum.y, units ? units : datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nexport function getCostRangeString(datums, key = 'chart.cost_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    if (!(datums && datums.length)) {\n        return i18next.t(`${key}_no_data`);\n    }\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(key, {\n        count: getDate(end),\n        endDate: format(end, 'd'),\n        month: Number(format(start, 'M')) - 1,\n        startDate: format(start, 'd'),\n        year: getYear(end),\n    });\n}\nexport function getUsageRangeString(datums, key = 'chart.usage_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    return getCostRangeString(datums, key, firstOfMonth, lastOfMonth, offset);\n}\nexport function isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nexport function isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\n","import { getInteractiveLegendItemStyles } from '@patternfly/react-charts';\nimport i18next from 'i18next';\nimport { getMaxMinValues, getTooltipContent } from './chartDatumUtils';\n// Returns groups of chart names associated with each data series\nexport const getChartNames = (series) => {\n    const result = [];\n    if (series) {\n        series.map(serie => {\n            // Each group of chart names are hidden / shown together\n            result.push(serie.childName);\n        });\n    }\n    return result;\n};\nexport const getDomain = (series, hiddenSeries) => {\n    const domain = { x: [1, 31] };\n    let maxValue = -1;\n    let minValue = -1;\n    if (series) {\n        series.forEach((s, index) => {\n            if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                const { max, min } = getMaxMinValues(s.data);\n                maxValue = Math.max(maxValue, max);\n                if (minValue === -1) {\n                    minValue = min;\n                }\n                else {\n                    minValue = Math.min(minValue, min);\n                }\n            }\n        });\n    }\n    const threshold = maxValue * 0.1;\n    const max = maxValue > 0 ? Math.ceil(maxValue + threshold) : 0;\n    const _min = minValue > 0 ? Math.max(0, Math.floor(minValue - threshold)) : 0;\n    const min = _min > 0 ? _min : 0;\n    if (max > 0) {\n        domain.y = [min, max];\n    }\n    return domain;\n};\n// Returns legend data styled per hiddenSeries\nexport const getLegendData = (series, hiddenSeries, tooltip = false) => {\n    if (!series) {\n        return undefined;\n    }\n    const result = series.map((s, index) => {\n        const data = Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n        return data;\n    });\n    return tooltip ? result : result.filter(d => d.childName.indexOf('Cone') === -1);\n};\n// Note: Forecast is expected to use both datum.y and datum.y0\nexport const getTooltipLabel = (datum, formatDatumValue, formatDatumOptions) => {\n    const formatter = getTooltipContent(formatDatumValue);\n    const dy = datum.y !== undefined && datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : undefined;\n    const dy0 = datum.y0 !== undefined && datum.y0 !== null ? formatter(datum.y0, datum.units, formatDatumOptions) : undefined;\n    if (dy !== undefined && dy0 !== undefined) {\n        return i18next.t('chart.cost_forecast_cone_tooltip', { value0: dy0, value1: dy });\n    }\n    return dy !== undefined ? dy : i18next.t('chart.no_data');\n};\nexport const initHiddenSeries = (series, hiddenSeries, index) => {\n    const result = new Set(hiddenSeries);\n    if (!result.delete(index)) {\n        result.add(index);\n    }\n    // Toggle forecast confidence\n    const childName = series[index].childName;\n    if (childName.indexOf('forecast') !== -1) {\n        let _index;\n        for (let i = 0; i < series.length; i++) {\n            if (series[i].childName === `${childName}Cone`) {\n                _index = i;\n                break;\n            }\n        }\n        if (index !== undefined && !result.delete(_index)) {\n            result.add(_index);\n        }\n    }\n    return result;\n};\n// Returns true if at least one data series is available\nexport const isDataAvailable = (series, hiddenSeries) => {\n    const unavailable = []; // API data may not be available (e.g., on 1st of month)\n    if (series) {\n        series.forEach((s, index) => {\n            if (isSeriesHidden(hiddenSeries, index) || (s.data && s.data.length === 0)) {\n                unavailable.push(index);\n            }\n        });\n    }\n    return unavailable.length !== (series ? series.length : 0);\n};\n// Returns true if data series is hidden\nexport const isDataHidden = (series, hiddenSeries, data) => {\n    if (data && data.length) {\n        for (let keys = hiddenSeries.keys(), key; !(key = keys.next()).done;) {\n            let dataChildName;\n            let serieChildName;\n            for (const item of data) {\n                if (item.childName) {\n                    dataChildName = item.childName;\n                    break;\n                }\n            }\n            for (const item of series[key.value].data) {\n                if (item.childName) {\n                    serieChildName = item.childName;\n                    break;\n                }\n            }\n            if (serieChildName && dataChildName && serieChildName === dataChildName) {\n                return true;\n            }\n        }\n    }\n    return false;\n};\n// Returns true if data series is hidden\nexport const isSeriesHidden = (hiddenSeries, index) => {\n    return hiddenSeries.has(index);\n};\n","import './reportSummary.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Title } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst ReportSummaryBase = ({ children, detailsLink, title, subTitle, status }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(CardTitle, null,\n        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: \"xs\" }),\n        React.createElement(Skeleton, { className: \"chartSkeleton\", size: \"md\" }),\n        React.createElement(Skeleton, { size: \"sm\" }),\n        React.createElement(Skeleton, { className: \"legendSkeleton\", size: \"xs\" }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst ReportSummary = withTranslation()(ReportSummaryBase);\nexport { ReportSummary };\n","import './reportSummaryAlt.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Grid, GridItem, Title } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst OcpCloudReportSummaryAltBase = ({ children, detailsLink, status, subTitle, tabs, title, }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(Grid, { hasGutter: true },\n        React.createElement(GridItem, { xl: 8 },\n            React.createElement(\"div\", { className: \"cost\" },\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n                    Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: \"xs\" }),\n                    React.createElement(Skeleton, { className: \"chartSkeleton\", size: \"md\" }),\n                    React.createElement(Skeleton, { size: \"sm\" }),\n                    React.createElement(Skeleton, { className: \"legendSkeleton\", size: \"xs\" }))) : (children)))),\n        React.createElement(GridItem, { xl: 4 },\n            React.createElement(\"div\", { className: \"tops\" }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink))))))));\nconst ReportSummaryAlt = withTranslation()(OcpCloudReportSummaryAltBase);\nexport { ReportSummaryAlt };\n","import './reportSummaryDetails.scss';\nimport { Tooltip } from '@patternfly/react-core';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nconst ReportSummaryDetailsBase = ({ chartType, computedReportItem = 'cost', computedReportItemValue = 'total', costLabel, formatValue, formatOptions, report, requestFormatOptions, requestLabel, reportType, showTooltip = false, showUnits = false, showUsageFirst = false, t, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let supplementaryCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const hasTotal = report && report.meta && report.meta.total;\n    const hasCost = hasTotal && report.meta.total.cost && report.meta.total.cost.total;\n    const hasCount = hasTotal && report.meta.total.count;\n    const hasSupplementaryCost = hasTotal &&\n        report.meta.total.supplementary &&\n        report.meta.total.supplementary.total &&\n        report.meta.total.supplementary.total.value;\n    const hasInfrastructureCost = hasTotal &&\n        report.meta.total.infrastructure &&\n        report.meta.total.infrastructure[computedReportItemValue] &&\n        report.meta.total.infrastructure[computedReportItemValue].value;\n    const hasRequest = hasTotal && report.meta.total.request;\n    const hasUsage = hasTotal && report.meta.total.usage;\n    if (hasTotal) {\n        cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD', formatOptions);\n        supplementaryCost = formatValue(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD', formatOptions);\n        infrastructureCost = formatValue(hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].value : 0, hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].units : 'USD', formatOptions);\n        request = formatValue(hasRequest ? report.meta.total.request.value : 0, hasRequest ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        if (hasUsage && report.meta.total.usage.value >= 0) {\n            usage = formatValue(hasUsage ? report.meta.total.usage.value : 0, hasUsage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            // Workaround for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatValue(hasUsage ? report.meta.total.usage : 0, hasCount ? report.meta.total.count.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = (showAltHeroFont = false) => {\n        let value = cost;\n        if (computedReportItem === \"infrastructure\" /* infrastructure */) {\n            value = infrastructureCost;\n        }\n        else if (computedReportItem === \"supplementary\" /* supplementary */) {\n            value = supplementaryCost;\n        }\n        const altHeroFont = showAltHeroFont ? 'Alt' : '';\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            showTooltip ? (React.createElement(Tooltip, { content: t('dashboard.total_cost_tooltip', {\n                    infrastructureCost,\n                    supplementaryCost,\n                }), enableFlip: true },\n                React.createElement(\"div\", { className: `value${altHeroFont}` }, value))) : (React.createElement(\"div\", { className: `value${altHeroFont}` }, value)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, costLabel))));\n    };\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasRequest ? report.meta.total.request.units : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, request),\n            Boolean(showUnits && (units || (hasRequest && report.meta.total.request.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasUsage ? report.meta.total.usage.units : '';\n        // added as a work-around for azure #1079\n        const _units = unitLookupKey(units ? units : usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, usage),\n            Boolean(showUnits && (units || (hasUsage && report.meta.total.usage.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (chartType === \"dailyCost\" /* dailyCost */ ||\n        chartType === \"dailyTrend\" /* dailyTrend */ ||\n        chartType === \"cost\" /* cost */) {\n        return React.createElement(React.Fragment, null, getCostLayout(reportType === \"cost\" /* cost */));\n    }\n    else if (chartType === \"trend\" /* trend */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout(reportType === \"cost\" /* cost */)));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(reportType === \"cost\" /* cost */),\n            getUsageLayout()));\n    }\n    else if (chartType === \"usage\" /* usage */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n    else {\n        return null;\n    }\n};\nconst ReportSummaryDetails = withTranslation()(ReportSummaryDetailsBase);\nexport { ReportSummaryDetails };\n","import './reportSummaryItem.scss';\nimport { Progress, ProgressSize } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nconst ReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: \"reportSummaryItem\" },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst ReportSummaryItem = withTranslation()(ReportSummaryItemBase);\nexport { ReportSummaryItem };\n","import './reportSummaryItems.scss';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nclass ReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { idKey, report } = this.props;\n        const computedItems = getComputedReportItems({\n            report,\n            idKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [...computedItems.slice(0, otherIndex), ...computedItems.slice(otherIndex + 1), computedItems[otherIndex]];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: \"md\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst ReportSummaryItems = withTranslation()(ReportSummaryItemsBase);\nexport { ReportSummaryItems };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentCostData: {\n        fill: 'none',\n    },\n    currentInfrastructureColorScale: [\n        chart_color_blue_400.value,\n        chart_color_blue_300.value,\n        chart_color_blue_200.value,\n        chart_color_blue_100.value,\n        chart_color_blue_500.value,\n    ],\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    forecastConeDataColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastDataColorScale: [chart_color_green_200.value],\n    forecastInfrastructureConeData: {\n        fill: chart_color_blue_100.value,\n        strokeWidth: 0,\n    },\n    forecastInfrastructureConeDataColorScale: [chart_color_blue_100.value],\n    forecastInfrastructureData: {\n        fill: 'none',\n    },\n    forecastInfrastructureDataColorScale: [chart_color_blue_200.value],\n    previousCostData: {\n        fill: 'none',\n    },\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './costChart.styles';\nclass CostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.resizeObserver = noop;\n        this.navToggle = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, forecastConeData, forecastData, forecastInfrastructureConeData, forecastInfrastructureData, previousInfrastructureCostData, previousCostData, showForecast, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: previousInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: currentInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentInfrastructureColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentInfrastructureColorScale[1] }),\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastInfrastructure',\n                    data: forecastInfrastructureData,\n                    legendItem: {\n                        name: getCostRangeString(forecastInfrastructureData, 'chart.cost_infrastructure_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastInfrastructureDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastInfrastructureData, 'chart.cost_infrastructure_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastInfrastructureData), { stroke: chartStyles.forecastInfrastructureDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastInfrastructureCone',\n                    data: forecastInfrastructureConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastInfrastructureConeData, 'chart.cost_infrastructure_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastInfrastructureConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastInfrastructureConeData, 'chart.cost_infrastructure_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastInfrastructureConeData), { stroke: chartStyles.forecastInfrastructureConeDataColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.initResizeObserve = () => {\n            const containerElement = this.containerRef.current;\n            const { ResizeObserver } = window;\n            if (containerElement && ResizeObserver) {\n                const resizeObserver = new ResizeObserver(this.handleResize);\n                resizeObserver.observe(containerElement);\n                this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n            }\n            else {\n                this.handleResize();\n                window.addEventListener('resize', this.handleResize);\n                this.resizeObserver = () => window.removeEventListener('resize', this.handleResize);\n                this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n            }\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width > 675 && width < 1175) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width > 450 && width < 675) {\n                        adjustedContainerHeight += 50;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 75;\n                    }\n                }\n                else {\n                    if (width > 450 && width < 725) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 50;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: \"legend\", responsive: false }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.initResizeObserve();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastInfrastructureConeData !== this.props.forecastInfrastructureConeData ||\n            prevProps.forecastInfrastructureData !== this.props.forecastInfrastructureData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.resizeObserver) {\n            this.resizeObserver();\n        }\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, forecastData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentInfrastructureDate > 0 ||\n            currentCostDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentCostDate, forecastCostDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { CostChart };\n","import './reportSummaryCost.scss';\nimport { CostChart } from 'components/charts/costChart';\nimport React from 'react';\nconst ReportSummaryCost = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(CostChart, Object.assign({}, props))));\nexport { ReportSummaryCost };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentInfrastructureColorScale: [\n        chart_color_blue_400.value,\n        chart_color_blue_300.value,\n        chart_color_blue_200.value,\n        chart_color_blue_100.value,\n        chart_color_blue_500.value,\n    ],\n    currentInfrastructureCostData: {\n        strokeDasharray: '3,3',\n    },\n    forecastConeDataColorScale: [chart_color_orange_300.value],\n    forecastDataColorScale: [chart_color_green_200.value],\n    forecastInfrastructureConeDataColorScale: [chart_color_orange_300.value],\n    forecastInfrastructureDataColorScale: [chart_color_blue_200.value],\n    previousInfrastructureCostData: {\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartAxis, ChartBar, ChartGroup, ChartLegend, ChartLegendTooltip, ChartLine, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './dailyCostChart.styles';\nclass DailyCostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.resizeObserver = noop;\n        this.navToggle = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, forecastConeData, forecastData, forecastInfrastructureConeData, forecastInfrastructureData, previousInfrastructureCostData, previousCostData, showForecast, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: this.initDatumChildName(previousCostData, 'previousCost'),\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    isLine: true,\n                    style: {\n                        data: {\n                            stroke: chartStyles.previousColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: this.initDatumChildName(currentCostData, 'currentCost'),\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: this.initDatumChildName(previousInfrastructureCostData, 'previousInfrastructureCost'),\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    isLine: true,\n                    style: {\n                        data: {\n                            stroke: chartStyles.previousColorScale[1],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: this.initDatumChildName(currentInfrastructureCostData, 'currentInfrastructureCost'),\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentInfrastructureColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentInfrastructureColorScale[1],\n                        },\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: this.initDatumChildName(forecastData, 'forecast'),\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastInfrastructure',\n                    data: this.initDatumChildName(forecastInfrastructureData, 'forecastInfrastructure'),\n                    legendItem: {\n                        name: getCostRangeString(forecastInfrastructureData, 'chart.cost_infrastructure_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastInfrastructureDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastInfrastructureData, 'chart.cost_infrastructure_forecast_legend_tooltip', false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastInfrastructureDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: this.initDatumChildName(forecastConeData, 'forecastCone'),\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastInfrastructureCone',\n                    data: this.initDatumChildName(forecastInfrastructureConeData, 'forecastInfrastructureCone'),\n                    legendItem: {\n                        name: getCostRangeString(forecastInfrastructureConeData, 'chart.cost_infrastructure_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastInfrastructureConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastInfrastructureConeData, 'chart.cost_infrastructure_forecast_cone_legend_tooltip', false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastInfrastructureConeDataColorScale[0],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.initResizeObserve = () => {\n            const containerElement = this.containerRef.current;\n            const { ResizeObserver } = window;\n            if (containerElement && ResizeObserver) {\n                const resizeObserver = new ResizeObserver(this.handleResize);\n                resizeObserver.observe(containerElement);\n                this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n            }\n            else {\n                this.handleResize();\n                window.addEventListener('resize', this.handleResize);\n                this.resizeObserver = () => window.removeEventListener('resize', this.handleResize);\n                this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n            }\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width > 675 && width < 1175) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width > 450 && width < 675) {\n                        adjustedContainerHeight += 50;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 75;\n                    }\n                }\n                else {\n                    if (width > 450 && width < 725) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 50;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!hiddenSeries.has(index) && !series.isForecast) {\n                if (series.isBar) {\n                    return (React.createElement(ChartBar, { alignment: \"middle\", data: series.data, key: series.childName, name: series.childName, style: series.style }));\n                }\n                else if (series.isLine) {\n                    return React.createElement(ChartLine, { data: series.data, key: series.childName, name: series.childName, style: series.style });\n                }\n            }\n            return null;\n        };\n        this.getForecastBarChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!hiddenSeries.has(index) && series.isForecast && series.isBar) {\n                return (React.createElement(ChartBar, { alignment: \"middle\", data: series.data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        this.getForecastLineChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!hiddenSeries.has(index) && series.isForecast && series.isLine) {\n                return (React.createElement(ChartBar, { alignment: \"middle\", barWidth: 1, data: series.data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: \"legend\", responsive: false }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.initResizeObserve();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastInfrastructureConeData !== this.props.forecastInfrastructureConeData ||\n            prevProps.forecastInfrastructureData !== this.props.forecastInfrastructureData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.resizeObserver) {\n            this.resizeObserver();\n        }\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, forecastData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentInfrastructureDate > 0 ||\n            currentCostDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentCostDate, forecastCostDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getForecastBarChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getForecastLineChart(s, index)))),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { DailyCostChart };\n","import './reportSummaryDailyCost.scss';\nimport { DailyCostChart } from 'components/charts/dailyCostChart';\nimport React from 'react';\nconst ReportSummaryDailyCost = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(DailyCostChart, Object.assign({}, props))));\nexport { ReportSummaryDailyCost };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    forecastConeDataColorScale: [chart_color_orange_300.value],\n    forecastDataColorScale: [chart_color_green_200.value],\n    itemsPerRow: 4,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartAxis, ChartBar, ChartGroup, ChartLegend, ChartLegendTooltip, ChartLine, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './dailyTrendChart.styles';\nclass DailyTrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.resizeObserver = noop;\n        this.navToggle = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showForecast, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_label'\n                    : 'chart.cost_legend_label';\n            const tooltipKey = showUsageLegendLabel\n                ? 'chart.usage_legend_tooltip'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_tooltip'\n                    : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: this.initDatumChildName(previousData, 'previousCost'),\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, tooltipKey, false, false, 1),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.previousColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: this.initDatumChildName(currentData, 'currentCost'),\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, tooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentColorScale[0],\n                        },\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: this.initDatumChildName(forecastData, 'forecast'),\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: this.initDatumChildName(forecastConeData, 'forecastCone'),\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.initResizeObserve = () => {\n            const containerElement = this.containerRef.current;\n            const { ResizeObserver } = window;\n            if (containerElement && ResizeObserver) {\n                const resizeObserver = new ResizeObserver(this.handleResize);\n                resizeObserver.observe(containerElement);\n                this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n            }\n            else {\n                this.handleResize();\n                window.addEventListener('resize', this.handleResize);\n                this.resizeObserver = () => window.removeEventListener('resize', this.handleResize);\n                this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n            }\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width < 700) {\n                        adjustedContainerHeight += 25;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!series.isForecast) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                if (series.isBar) {\n                    return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n                }\n                else if (series.isLine) {\n                    return React.createElement(ChartLine, { data: data, key: series.childName, name: series.childName, style: series.style });\n                }\n            }\n            return null;\n        };\n        this.getForecastBarChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isBar) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        this.getForecastLineChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isLine) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", barWidth: 1, data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), gutter: 20, height: 25, itemsPerRow: legendItemsPerRow, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.initResizeObserve();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.resizeObserver) {\n            this.resizeObserver();\n        }\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getEndDate() {\n        const { currentData, forecastData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, forecastDate, previousDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 }, series.map((s, index) => this.getChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 },\n                            React.createElement(ChartBar, { data: [{ y: null }], name: \"forcast_spacer\" }),\n                            series.map((s, index) => this.getForecastBarChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 },\n                            React.createElement(ChartBar, { data: [{ y: null }], name: \"forcast_cone_spacer\" }),\n                            series.map((s, index) => this.getForecastLineChart(s, index)))),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { DailyTrendChart };\n","import './reportSummaryDailyTrend.scss';\nimport { DailyTrendChart } from 'components/charts/dailyTrendChart';\nimport React from 'react';\nconst ReportSummaryDailyTrend = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(DailyTrendChart, Object.assign({}, props))));\nexport { ReportSummaryDailyTrend };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    forecastConeDataColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastDataColorScale: [chart_color_green_200.value],\n    itemsPerRow: 4,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.resizeObserver = noop;\n        this.navToggle = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showForecast, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_label'\n                    : 'chart.cost_legend_label';\n            const tooltipKey = showUsageLegendLabel\n                ? 'chart.usage_legend_tooltip'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_tooltip'\n                    : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, tooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, tooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeDataColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.initResizeObserve = () => {\n            const containerElement = this.containerRef.current;\n            const { ResizeObserver } = window;\n            if (containerElement && ResizeObserver) {\n                const resizeObserver = new ResizeObserver(this.handleResize);\n                resizeObserver.observe(containerElement);\n                this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n            }\n            else {\n                this.handleResize();\n                window.addEventListener('resize', this.handleResize);\n                this.resizeObserver = () => window.removeEventListener('resize', this.handleResize);\n                this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n            }\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width < 700) {\n                        adjustedContainerHeight += 25;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), gutter: 20, height: 25, itemsPerRow: legendItemsPerRow, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.initResizeObserve();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.resizeObserver) {\n            this.resizeObserver();\n        }\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getEndDate() {\n        const { currentData, forecastData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, forecastDate, previousDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { TrendChart };\n","import './reportSummaryTrend.scss';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nconst ReportSummaryTrend = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { ReportSummaryTrend };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const chartStyles = {\n    chartContainer: {\n        marginTop: global_spacer_lg.value,\n    },\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_300.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_400.value,\n        },\n    },\n    itemsPerRow: 2,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        chart_color_black_200.value,\n        chart_color_green_400.value,\n        chart_color_black_200.value,\n        chart_color_green_300.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange, getUsageRangeString } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.resizeObserver = noop;\n        this.navToggle = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n            const usageKey = 'chart.usage_legend_label';\n            const usageTooltipKey = 'chart.usage_legend_tooltip';\n            const requestKey = 'chart.requests_legend_label';\n            const requestTooltipKey = 'chart.requests_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousUsage',\n                    data: previousUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousUsageData, usageTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousUsageData,\n                },\n                {\n                    childName: 'currentUsage',\n                    data: currentUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[1],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentUsageData, usageTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentUsageData,\n                },\n                {\n                    childName: 'previousRequest',\n                    data: previousRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[2],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(previousRequestData, requestTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousRequestData,\n                },\n                {\n                    childName: 'currentRequest',\n                    data: currentRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[3],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(currentRequestData, requestTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentRequestData,\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.initResizeObserve = () => {\n            const containerElement = this.containerRef.current;\n            const { ResizeObserver } = window;\n            if (containerElement && ResizeObserver) {\n                const resizeObserver = new ResizeObserver(this.handleResize);\n                resizeObserver.observe(containerElement);\n                this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n            }\n            else {\n                this.handleResize();\n                window.addEventListener('resize', this.handleResize);\n                this.resizeObserver = () => window.removeEventListener('resize', this.handleResize);\n                this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n            }\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (width < 480) {\n                    adjustedContainerHeight += 20;\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 300 ? chartStyles.itemsPerRow : 1;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.initResizeObserve();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.resizeObserver) {\n            this.resizeObserver();\n        }\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { UsageChart };\n","import './reportSummaryUsage.scss';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nconst ReportSummaryUsage = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { ReportSummaryUsage };\n","import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/js/icons/minus-icon';\nimport React from 'react';\nexport const EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nconst Loading = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(LoadingState, null))));\n};\nexport default withRouter(Loading);\n","import Loading from './loading';\nexport default Loading;\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { FileInvoiceDollarIcon } from '@patternfly/react-icons/dist/js/icons/file-invoice-dollar-icon';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { withRouter } from 'react-router-dom';\nclass NoDataStateBase extends React.Component {\n    render() {\n        const { showReload = true, t } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: FileInvoiceDollarIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, t('no_data_state.title')),\n            React.createElement(EmptyStateBody, null, t('no_data_state.desc')),\n            showReload && (React.createElement(Button, { variant: \"primary\", onClick: () => window.location.reload() }, t('no_data_state.refresh')))));\n    }\n}\nconst NoDataState = withRouter(withTranslation()(NoDataStateBase));\nexport { NoDataState };\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { NoDataState } from './noDataState';\nconst NoData = ({ showReload, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(NoDataState, { showReload: showReload }))));\n};\nexport default withRouter(NoData);\n","import './costIcon.scss';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst icon = require('./Cost-icon.svg');\nconst CostIcon = ({ className, t }) => {\n    return React.createElement(\"img\", { className: `cost-icon ${className}`, src: icon, alt: t('cost_management'), \"aria-hidden\": \"true\" });\n};\nexport default withTranslation()(CostIcon);\n","import CostIcon from './costIcon';\nexport default CostIcon;\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    iconSpacer: {\n        marginLeft: global_spacer_xs.value,\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\nimport CostIcon from 'components/icons/costIcon';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { withRouter } from 'react-router-dom';\nimport { getReleasePath } from 'utils/pathname';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDocLink = (textKey, urlKey) => {\n            const { t } = this.props;\n            return (React.createElement(\"a\", { href: t(urlKey), rel: \"noreferrer\", target: \"_blank\" },\n                t(textKey),\n                React.createElement(\"span\", { style: styles.iconSpacer },\n                    React.createElement(ExternalLinkAltIcon, null))));\n        };\n        this.getRouteToSources = () => {\n            const release = getReleasePath();\n            return `${release}/settings/sources`;\n        };\n    }\n    render() {\n        const { providerType, t } = this.props;\n        let descKey = 'no_providers_state.overview_desc';\n        let titleKey = 'no_providers_state.overview_title';\n        let docUrlKey;\n        let icon;\n        let textKey;\n        switch (providerType) {\n            case \"aws\" /* aws */:\n                descKey = 'no_providers_state.aws_desc';\n                titleKey = 'no_providers_state.aws_title';\n                break;\n            case \"azure\" /* azure */:\n                descKey = 'no_providers_state.azure_desc';\n                titleKey = 'no_providers_state.azure_title';\n                break;\n            case \"gcp\" /* gcp */:\n                descKey = 'no_providers_state.gcp_desc';\n                titleKey = 'no_providers_state.gcp_title';\n                break;\n            case \"ocp\" /* ocp */:\n                descKey = 'no_providers_state.ocp_desc';\n                docUrlKey = 'docs.add_ocp_sources';\n                textKey = 'no_providers_state.ocp_add_sources';\n                titleKey = 'no_providers_state.ocp_title';\n                break;\n            default:\n                icon = CostIcon;\n        }\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: icon ? icon : PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, t(titleKey)),\n            React.createElement(EmptyStateBody, null, t(descKey)),\n            docUrlKey && textKey ? (React.createElement(\"div\", { style: styles.viewSources }, this.getDocLink(textKey, docUrlKey))) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: this.getRouteToSources() }, t('no_providers_state.get_started')))));\n    }\n}\nconst NoProvidersState = withRouter(withTranslation()(NoProvidersStateBase));\nexport { NoProvidersState };\n","import NoProviders from './noProviders';\nexport default NoProviders;\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = ({ providerType, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(NoProvidersState, { providerType: providerType }))));\n};\nexport default withRouter(NoProviders);\n","import { sort } from 'utils/sort';\nimport { getItemLabel } from './getItemLabel';\nexport function getComputedReportItems({ daily, idKey, report, sortDirection = 0 /* asc */, sortKey = 'date', }) {\n    return sort(getUnsortedComputedReportItems({\n        daily,\n        idKey,\n        report,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nfunction getCostData(val, key, item) {\n    return {\n        markup: {\n            value: (item ? item[key].markup.value : 0) + val[key] && val[key].markup ? val[key].markup.value : 0,\n            units: val[key] && val[key].markup ? val[key].markup.units : 'USD',\n        },\n        raw: {\n            value: (item ? item[key].raw.value : 0) + val[key] && val[key].raw ? val[key].raw.value : 0,\n            units: val[key] && val[key].raw ? val[key].raw.units : 'USD',\n        },\n        total: {\n            value: (item ? item[key].total.value : 0) + val[key] && val[key].total ? Number(val[key].total.value) : 0,\n            units: val[key] && val[key].total ? val[key].total.units : null,\n        },\n        usage: {\n            value: (item ? item[key].usage.value : 0) + val[key] && val[key].usage ? Number(val[key].usage.value) : 0,\n            units: val[key] && val[key].usage ? val[key].usage.units : null,\n        },\n    };\n}\nfunction getUsageData(val, item) {\n    return {\n        capacity: {\n            value: (item ? item.capacity.value : 0) + val.capacity ? val.capacity.value : 0,\n            units: val.capacity ? val.capacity.units : 'Core-Hours',\n        },\n        limit: {\n            value: (item ? item.limit.value : 0) + val.limit ? val.limit.value : 0,\n            units: val.limit ? val.limit.units : 'Core-Hours',\n        },\n        request: {\n            value: (item ? item.request.value : 0) + val.request ? val.request.value : 0,\n            units: val.request ? val.request.units : 'Core-Hours',\n        },\n        usage: {\n            value: (item ? item.usage.value : 0) + val.usage ? val.usage.value : 0,\n            units: val.usage ? val.usage.units : 'Core-Hours',\n        },\n    };\n}\n// Details pages typically use this function with filter[resolution]=monthly\nexport function getUnsortedComputedReportItems({ daily = false, report, idKey, }) {\n    if (!report) {\n        return [];\n    }\n    // Map<string | number, ComputedReportItem | Map<string | number, ComputedReportItem>\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            const type = dataPoint.type;\n            dataPoint.values.forEach((val) => {\n                // Ensure unique map IDs -- https://github.com/project-koku/koku-ui/issues/706\n                const idSuffix = idKey !== 'date' && idKey !== 'cluster' && val.cluster ? `-${val.cluster}` : '';\n                // org_unit_id workaround for storage and instance-type APIs\n                let id = idKey === 'org_entities' ? val.org_unit_id : val[idKey];\n                if (id === undefined) {\n                    id = val.date; // Note: There is no longer val.id\n                }\n                const mapId = `${id}${idSuffix}`;\n                // 'clusters' will contain either the cluster alias or default cluster ID\n                const cluster_alias = val.clusters && val.clusters.length > 0 ? val.clusters[0] : undefined;\n                const cluster = cluster_alias || val.cluster;\n                const clusters = val.clusters ? val.clusters : [];\n                const date = val.date;\n                const delta_percent = val.delta_percent ? val.delta_percent : 0;\n                const delta_value = val.delta_value ? val.delta_value : 0;\n                const source_uuid = val.source_uuid ? val.source_uuid : [];\n                let label;\n                const itemLabelKey = getItemLabel({ report, idKey, value: val });\n                if (itemLabelKey === 'org_entities' && val.alias) {\n                    label = val.alias;\n                }\n                else if (itemLabelKey === 'account' && val.account_alias) {\n                    label = val.account_alias;\n                }\n                else if (itemLabelKey === 'cluster' && cluster_alias) {\n                    label = cluster_alias;\n                }\n                else if (val[itemLabelKey] instanceof Object) {\n                    label = val[itemLabelKey].value;\n                }\n                else {\n                    label = val[itemLabelKey];\n                }\n                if (label === undefined) {\n                    label = val.alias ? val.alias : val[idKey];\n                }\n                if (daily) {\n                    const data = Object.assign(Object.assign({}, getUsageData(val)), { // capacity, limit, request, & usage\n                        cluster,\n                        clusters, cost: getCostData(val, 'cost'), date,\n                        delta_percent,\n                        delta_value,\n                        id, infrastructure: getCostData(val, 'infrastructure'), label,\n                        source_uuid, supplementary: getCostData(val, 'supplementary'), type });\n                    const item = itemMap.get(mapId);\n                    if (item) {\n                        item.set(date, data);\n                    }\n                    else {\n                        const dateMap = new Map();\n                        dateMap.set(date, data);\n                        itemMap.set(mapId, dateMap);\n                    }\n                }\n                else {\n                    const item = itemMap.get(mapId);\n                    if (item) {\n                        itemMap.set(mapId, Object.assign(Object.assign(Object.assign({}, item), getUsageData(val, item)), { // capacity, limit, request, & usage\n                            cluster,\n                            clusters,\n                            date,\n                            delta_percent,\n                            delta_value, cost: getCostData(val, 'cost', item), id, infrastructure: getCostData(val, 'infrastructure', item), label,\n                            source_uuid, supplementary: getCostData(val, 'supplementary', item), type }));\n                    }\n                    else {\n                        itemMap.set(mapId, Object.assign(Object.assign({}, getUsageData(val)), { // capacity, limit, request, & usage\n                            cluster,\n                            clusters, cost: getCostData(val, 'cost'), date,\n                            delta_percent,\n                            delta_value,\n                            id, infrastructure: getCostData(val, 'infrastructure'), label,\n                            source_uuid, supplementary: getCostData(val, 'supplementary'), type }));\n                    }\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import { tagPrefix } from 'api/queries/query';\nexport function getItemLabel({ idKey, report, value }) {\n    let itemLabelKey = String(idKey);\n    if (report.meta && report.meta.group_by) {\n        const group_by = report.meta.group_by;\n        for (const key of Object.keys(group_by)) {\n            if (key.indexOf(tagPrefix)) {\n                const tagPrefixKey = tagPrefix + idKey;\n                if (value.hasOwnProperty(tagPrefixKey)) {\n                    itemLabelKey = tagPrefixKey;\n                }\n            }\n        }\n    }\n    return itemLabelKey;\n}\n","export const noop = () => { }; // tslint:disable-line no-empty\n","export const getReleasePath = () => {\n    const pathName = window.location.pathname.split('/');\n    pathName.shift();\n    let release = '';\n    if (pathName[0] === 'beta') {\n        release = `/beta`;\n    }\n    return release;\n};\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */ ? getValueForItem(a, options) : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */ ? getValueForItem(b, options) : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n"],"sourceRoot":""}