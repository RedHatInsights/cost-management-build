{"version":3,"sources":["webpack:///./src/pages/costModels/costModelsDetails/components/dropdown.tsx","webpack:///./src/pages/costModels/costModelsDetails/components/markup.styles.ts","webpack:///./src/pages/costModels/costModelsDetails/components/updateMarkupDialog.tsx","webpack:///./src/pages/costModels/costModelsDetails/components/markup.tsx","webpack:///./src/pages/costModels/costModelsDetails/components/addRateModal.styles.ts","webpack:///./src/pages/costModels/costModelsDetails/components/addRateModal.tsx","webpack:///./src/pages/costModels/costModelsDetails/components/updateRateModel.tsx","webpack:///./src/pages/costModels/costModelsDetails/components/priceListTable.tsx","webpack:///./src/pages/costModels/costModelsDetails/assignSourcesModalToolbar.tsx","webpack:///./src/pages/costModels/costModelsDetails/addSourceStep.tsx","webpack:///./src/pages/costModels/costModelsDetails/addSourceWizard.tsx","webpack:///./src/pages/costModels/costModelsDetails/components/sourcesToolbar.tsx","webpack:///./src/pages/costModels/costModelsDetails/components/table.styles.ts","webpack:///./src/pages/costModels/costModelsDetails/components/table.tsx","webpack:///./src/pages/costModels/costModelsDetails/sourceTable.tsx","webpack:///./src/pages/costModels/costModel/costModelInfo.styles.ts","webpack:///./src/pages/costModels/costModelsDetails/components/updateCostModel.tsx","webpack:///./src/pages/costModels/costModel/header.tsx","webpack:///./src/pages/costModels/costModel/index.tsx"],"names":["Component","props","super","this","state","isOpen","onToggle","bind","onSelect","setState","prevState","isPlain","direction","position","dropdownItems","createElement","Dropdown","toggle","KebabToggle","styles","card","minHeight","marginLeft","global_spacer_md","value","marginRight","cardBody","fontSize","global_FontSize_xl","textAlign","markup","String","current","error","onClose","updateCostModel","isLoading","t","Modal","title","cost_model","name","variant","actions","Button","key","onClick","newState","Object","assign","source_uuids","sources","map","provider","uuid","source_type","unit","isDisabled","isNaN","Number","Fragment","Alert","Form","FormGroup","label","fieldId","helperTextInvalid","validated","InputGroup","style","width","TextInput","type","id","onChange","InputGroupText","borderLeft","updateProcessing","updateError","setCostModelDialog","stateProps","dispatchProps","ownProps","updateMarkup","isDialogOpen","isUpdateDialogOpen","costModelDialog","isWritePermission","rbac","isCostModelWritePermission","markupValue","toFixed","Card","CardHeader","CardHeaderMain","CardActions","right","DropdownItem","component","CardBody","isFilled","form","arguments","service","onTransition","initialState","start","stop","isProcessing","onProceed","context","metric","measurement","rate","costType","matches","ValidCancelButton","secondary","primary","CancelButton","metricsHash","costTypes","send","stateNames","toStrings","mainState","length","availableRates","rates","r","label_metric","label_measurement","options","keys","payload","metricOptions","metricChange","measurementOptions","m","units","label_measurement_unit","measurementChange","default_cost_type","rateChange","isRateInvalid","isMeasurementInvalid","costTypeChange","renderActionButtons","Stack","hasGutter","StackItem","Title","headingLevel","size","TextContent","Text","h6","renderForm","metrics","index","tiered_rates","cost_type","originalCostType","originalRate","borderRight","deleteRate","pagination","perPage","page","fetchStatus","fetchError","setDialogOpen","maxRate","metricOpts","measurementOpts","reduce","acc","curr","measurs","filter","i","includes","updateRate","slice","usage","addRate","isSmall","body","cm","costModel","assignees","List","p","ListItem","actionText","initialFilters","measurements","search","setSearch","onRemove","onClearAll","from","to","res","filtered","toString","meta","setPrimary","selected","secondaries","placeholderText","selections","setSelections","selection","filters","button","onClear","Pagination","isCompact","itemCount","onSetPage","_evt","onPerPageSelect","perPageOptions","Boolean","Bullseye","EmptyState","EmptyStateIcon","icon","EmptyStateBody","tiers","undefined","pointerEvents","tooltip","rowIndex","_rowData","_extra","Toolbar","ToolbarContent","ToolbarItem","status","SearchInput","placeholder","onSearch","onKeyPress","evt","AssignSourcesToolbar","searchInputProps","paginationProps","clearAllFilters","ToolbarFilter","deleteChip","chips","query","categoryName","isLoadingSources","fetchingSourcesError","isSelected","rowId","checked","providers","cur","providerData","ix","provCostModels","cost_models","join","warningIcon","find","text","cellName","cells","Checkbox","isChecked","fetch","category","chip","newQuery","split","updateFilter","currentFilterType","currentFilterValue","currentFilter","curQuery","count","newPerPage","newPage","Table","rows","subTitle","flexDirection","ToolbarGroup","updateFilterToolbar","prevProps","initChecked","some","isUpdateInProgress","onSave","updateApiError","Split","SplitItem","fetchSources","SourcesToolbar","actionButtonProps","categoryNames","emptyState","display","justifyContent","onAdd","filteredRows","every","fName","children","_category","actionResolver","onDelete","onDeleteText","dialogSource","addSource","deleteSource","source","item","headerDescription","wordWrap","content","paddingTop","global_spacer_xl","height","costmodelsContainer","backgroundColor","global_BackgroundColor_light_100","paddingBottom","headerCostModel","padding","global_spacer_lg","var","global_spacer_sm","__rest","s","e","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","propertyIsEnumerable","description","created_timestamp","updated_timestamp","previous","isRequired","TextArea","costModels","isDeleteProcessing","deleteProcessing","deleteError","deleteCostModel","tabRefs","tabIndex","onSelectTab","historyObject","Breadcrumb","breadcrumb","BreadcrumbItem","isActive","sourceTypeTitle","Tabs","activeKey","Tab","eventKey","TabTitleText","tabContentId","tabContentRef","createRef","fetchRbac","fetchMetrics","fetchCostModels","match","params","metricsStatus","rbacStatus","costModelStatus","rbacError","costModelError","metricsError","history","TabContent","ref","hidden","store","metricsState","selectRbacState"],"mappings":"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","file":"63ff0bea1f5be683cc0d.bundle.js","sourcesContent":["import { Dropdown, KebabToggle } from '@patternfly/react-core';\nimport React from 'react';\nclass DropdownBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { isOpen: false };\n        this.onToggle = this.onToggle.bind(this);\n        this.onSelect = this.onSelect.bind(this);\n    }\n    onSelect() {\n        this.setState(prevState => ({ isOpen: !prevState.isOpen }));\n    }\n    onToggle(isOpen) {\n        this.setState({ isOpen });\n    }\n    render() {\n        const { isPlain = false, direction = 'down', position = 'left', dropdownItems, } = this.props;\n        return (React.createElement(Dropdown, { isPlain: isPlain, position: position, direction: direction, isOpen: this.state.isOpen, onSelect: this.onSelect, toggle: React.createElement(KebabToggle, { onToggle: this.onToggle }), dropdownItems: dropdownItems }));\n    }\n}\nexport default DropdownBase;\n","import { global_FontSize_xl, global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = {\n    card: {\n        minHeight: '130px',\n        marginLeft: global_spacer_md.value,\n        marginRight: global_spacer_md.value,\n    },\n    cardBody: {\n        fontSize: global_FontSize_xl.value,\n        textAlign: 'center',\n    },\n};\n","import { Alert, Button, Form, FormGroup, InputGroup, InputGroupText, Modal, TextInput, } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nclass UpdateMarkupModelBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            markup: String(this.props.current.markup.value || 0),\n        };\n    }\n    render() {\n        const { error, current, onClose, updateCostModel, isLoading, t, } = this.props;\n        return (React.createElement(Modal, { title: t('cost_models_details.edit_markup', {\n                cost_model: current.name,\n            }), isOpen: true, onClose: () => onClose({ name: 'updateMarkup', isOpen: false }), variant: \"small\", actions: [\n                React.createElement(Button, { key: \"proceed\", variant: \"primary\", onClick: () => {\n                        const newState = Object.assign(Object.assign({}, current), { source_uuids: current.sources.map(provider => provider.uuid), source_type: current.source_type === 'OpenShift Container Platform'\n                                ? 'OCP'\n                                : 'AWS', markup: {\n                                value: this.state.markup,\n                                unit: 'percent',\n                            } });\n                        updateCostModel(current.uuid, newState, 'updateMarkup');\n                    }, isDisabled: isNaN(Number(this.state.markup)) ||\n                        Number(this.state.markup) === Number(current.markup.value || 0) ||\n                        isLoading }, t('cost_models_details.add_rate_modal.save')),\n                React.createElement(Button, { key: \"cancel\", variant: \"secondary\", onClick: () => onClose({ name: 'updateMarkup', isOpen: false }), isDisabled: isLoading }, t('cost_models_details.add_rate_modal.cancel')),\n            ] },\n            React.createElement(React.Fragment, null,\n                error && React.createElement(Alert, { variant: \"danger\", title: `${error}` }),\n                React.createElement(Form, null,\n                    React.createElement(FormGroup, { label: t('cost_models_wizard.markup.markup_label'), fieldId: \"markup-input-box\", helperTextInvalid: t('cost_models_wizard.markup.invalid_markup_text'), validated: !isNaN(Number(this.state.markup)) ? 'default' : 'error' },\n                        React.createElement(InputGroup, { style: { width: '150px' } },\n                            React.createElement(TextInput, { type: \"text\", \"aria-label\": t('cost_models_wizard.markup.markup_label'), id: \"markup-input-box\", value: this.state.markup, onChange: (markup) => this.setState({ markup }), validated: !isNaN(Number(this.state.markup)) ? 'default' : 'error' }),\n                            React.createElement(InputGroupText, { style: { borderLeft: '0' } }, \"%\")))))));\n    }\n}\n// Fixes issue with Typescript:\n// https://github.com/microsoft/TypeScript/issues/25103#issuecomment-412806226\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    return Object.assign(Object.assign(Object.assign({}, stateProps), dispatchProps), ownProps);\n};\nexport default connect(createMapStateToProps(state => {\n    return {\n        isLoading: costModelsSelectors.updateProcessing(state),\n        error: costModelsSelectors.updateError(state),\n    };\n}), {\n    onClose: costModelsActions.setCostModelDialog,\n    updateCostModel: costModelsActions.updateCostModel,\n}, mergeProps)(translate()(UpdateMarkupModelBase));\n","import { Card, CardActions, CardBody, CardHeader, CardHeaderMain, DropdownItem, DropdownPosition, } from '@patternfly/react-core';\nimport { ReadOnlyTooltip } from 'pages/costModels/costModelsDetails/components/readOnlyTooltip';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { rbacSelectors } from 'store/rbac';\nimport Dropdown from './dropdown';\nimport { styles } from './markup.styles';\nimport UpdateMarkupDialog from './updateMarkupDialog';\nconst MarkupCardBase = ({ isWritePermission, setCostModelDialog, current, isUpdateDialogOpen, t, }) => {\n    const markupValue = current && current.markup && current.markup.value\n        ? Number(current.markup.value).toFixed(2)\n        : 0;\n    return (React.createElement(React.Fragment, null,\n        isUpdateDialogOpen && React.createElement(UpdateMarkupDialog, { current: current }),\n        React.createElement(Card, { style: styles.card },\n            React.createElement(CardHeader, null,\n                React.createElement(CardHeaderMain, null, t('cost_models_details.description_markup')),\n                React.createElement(CardActions, null,\n                    React.createElement(Dropdown, { position: DropdownPosition.right, isPlain: true, dropdownItems: [\n                            React.createElement(ReadOnlyTooltip, { key: \"edit\", isDisabled: !isWritePermission },\n                                React.createElement(DropdownItem, { isDisabled: !isWritePermission, onClick: () => setCostModelDialog({ isOpen: true, name: 'updateMarkup' }), component: \"button\" }, t('cost_models_details.edit_markup_action'))),\n                        ] }))),\n            React.createElement(CardBody, { isFilled: true }),\n            React.createElement(CardBody, { style: styles.cardBody },\n                markupValue,\n                \"%\"),\n            React.createElement(CardBody, { isFilled: true }))));\n};\nexport default connect(createMapStateToProps(state => {\n    const { updateMarkup } = costModelsSelectors.isDialogOpen(state)('markup');\n    return {\n        isUpdateDialogOpen: updateMarkup,\n        costModelDialog: costModelsSelectors.isDialogOpen(state)('markup'),\n        isWritePermission: rbacSelectors.isCostModelWritePermission(state),\n    };\n}), {\n    setCostModelDialog: costModelsActions.setCostModelDialog,\n})(translate()(MarkupCardBase));\n","export const styles = {\n    form: {\n        width: '350px',\n    },\n};\n","import { Alert, Button, ButtonVariant, Modal, Stack, StackItem, Text, TextContent, TextVariants, Title, } from '@patternfly/react-core';\nimport { Form } from 'components/forms/form';\nimport { SetMeasurement, SetMetric, SetRate, unusedRates, } from 'pages/costModels/components/addCostModelRateForm';\nimport { addRateMachine, } from 'pages/costModels/components/addPriceList';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { metricsSelectors } from 'store/metrics';\nimport { interpret } from 'xstate';\nimport { styles } from './addRateModal.styles';\nexport class AddRateModelBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.service = interpret(addRateMachine).onTransition(current => this.setState({ current }));\n        this.state = { current: addRateMachine.initialState };\n    }\n    componentDidMount() {\n        this.service.start();\n    }\n    componentWillUnmount() {\n        this.service.stop();\n    }\n    renderActionButtons() {\n        const { t, onClose, isProcessing, onProceed } = this.props;\n        const { current, current: { context: { metric, measurement, rate, costType }, }, } = this.state;\n        if (current.matches('setRate.valid')) {\n            const ValidCancelButton = (React.createElement(Button, { key: \"cancel\", variant: ButtonVariant.secondary, onClick: onClose, isDisabled: isProcessing }, t('cost_models_details.add_rate_modal.cancel')));\n            const ValidOkButton = (React.createElement(Button, { key: \"proceed\", variant: ButtonVariant.primary, onClick: () => onProceed(metric, measurement, rate, costType), isDisabled: isProcessing }, t('cost_models_details.add_rate')));\n            return [ValidOkButton, ValidCancelButton];\n        }\n        const CancelButton = (React.createElement(Button, { key: \"cancel\", variant: ButtonVariant.secondary, onClick: onClose }, t('cost_models_details.add_rate_modal.cancel')));\n        const OkButton = (React.createElement(Button, { key: \"proceed\", variant: ButtonVariant.primary, isDisabled: true }, t('cost_models_details.add_rate')));\n        return [OkButton, CancelButton];\n    }\n    renderForm() {\n        const { current: { context: { metric, measurement, rate, costType }, }, } = this.state;\n        const { metricsHash, costTypes, current, t } = this.props;\n        const { send } = this.service;\n        const stateNames = this.state.current.toStrings();\n        const mainState = stateNames.length > 1 ? stateNames[1] : stateNames[0];\n        const availableRates = unusedRates(metricsHash, current.rates.map(r => ({\n            metric: r.metric.label_metric,\n            measurement: r.metric.label_measurement,\n        })));\n        switch (mainState) {\n            case 'setMetric':\n                return (React.createElement(SetMetric, { t: t, options: Object.keys(availableRates).map(r => ({\n                        label: t(`cost_models.${r}`),\n                        value: r,\n                    })), onChange: (value) => send({ type: 'CHANGE_METRIC', payload: { metric: value } }), value: metric }));\n            case 'setMeasurement':\n                return (React.createElement(SetMeasurement, { t: t, metricOptions: Object.keys(availableRates).map(r => ({\n                        label: t(`cost_models.${r}`),\n                        value: r,\n                    })), metricChange: (value) => send({ type: 'CHANGE_METRIC', payload: { metric: value } }), metric: metric, measurementOptions: Object.keys(availableRates[metric]).map(m => ({\n                        label: t(`cost_models.${m}`, {\n                            units: metricsHash[metric][m].label_measurement_unit,\n                        }),\n                        value: m,\n                    })), measurement: measurement, measurementChange: (value) => send({\n                        type: 'CHANGE_MEASUREMENT',\n                        payload: {\n                            measurement: value,\n                            costType: metricsHash[metric][value].default_cost_type,\n                        },\n                    }) }));\n            case 'setRate.init':\n            case 'setRate.valid':\n                return (React.createElement(React.Fragment, null,\n                    React.createElement(SetRate, { t: t, metricOptions: Object.keys(availableRates).map(r => ({\n                            label: t(`cost_models.${r}`),\n                            value: r,\n                        })), metricChange: (value) => send({ type: 'CHANGE_METRIC', payload: { metric: value } }), metric: metric, measurementOptions: Object.keys(availableRates[metric] || {}).map(m => ({\n                            label: t(`cost_models.${m}`, {\n                                units: metricsHash[metric][m].label_measurement_unit,\n                            }),\n                            value: m,\n                        })), measurement: measurement, measurementChange: (value) => send({\n                            type: 'CHANGE_MEASUREMENT',\n                            payload: {\n                                measurement: value,\n                                costType: metricsHash[metric][value].default_cost_type,\n                            },\n                        }), rate: rate, rateChange: (value) => send({ type: 'CHANGE_RATE', payload: { rate: value } }), isRateInvalid: false, isMeasurementInvalid: false, costTypes: costTypes, costType: costType, costTypeChange: value => send({\n                            type: 'CHANGE_INFRA_COST',\n                            payload: { costType: value },\n                        }) })));\n            case 'setRate.invalid':\n                return (React.createElement(React.Fragment, null,\n                    React.createElement(SetRate, { t: t, metricOptions: Object.keys(availableRates).map(r => ({\n                            label: t(`cost_models.${r}`),\n                            value: r,\n                        })), metricChange: (value) => {\n                            send({ type: 'CHANGE_METRIC', payload: { metric: value } });\n                        }, metric: metric, measurement: measurement, measurementOptions: Object.keys(availableRates[metric]).map(m => ({\n                            label: t(`cost_models.${m}`, {\n                                units: metricsHash[metric][m].label_measurement_unit,\n                            }),\n                            value: m,\n                        })), measurementChange: (value) => send({\n                            type: 'CHANGE_MEASUREMENT',\n                            payload: {\n                                measurement: value,\n                                costType: metricsHash[metric][value].default_cost_type,\n                            },\n                        }), rate: rate, rateChange: (value) => send({ type: 'CHANGE_RATE', payload: { rate: value } }), isRateInvalid: isNaN(Number(rate)) || rate === '' || Number(rate) <= 0, isMeasurementInvalid: measurement === '', costTypes: costTypes, costType: costType, costTypeChange: value => send({\n                            type: 'CHANGE_INFRA_COST',\n                            payload: { costType: value },\n                        }) })));\n        }\n    }\n    render() {\n        const { updateError, current, onClose, t } = this.props;\n        return (React.createElement(Modal, { title: t('cost_models_details.add_rate_modal.title', {\n                name: current.name,\n            }), isOpen: true, onClose: onClose, actions: this.renderActionButtons(), variant: \"small\" },\n            React.createElement(React.Fragment, null,\n                updateError && React.createElement(Alert, { variant: \"danger\", title: `${updateError}` }),\n                React.createElement(Stack, { hasGutter: true },\n                    React.createElement(StackItem, null,\n                        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('cost_models_details.cost_model.source_type'))),\n                    React.createElement(StackItem, null,\n                        React.createElement(TextContent, null,\n                            React.createElement(Text, { component: TextVariants.h6 }, current.source_type))),\n                    React.createElement(StackItem, null,\n                        React.createElement(Form, { style: styles.form }, this.renderForm()))))));\n    }\n}\nexport default connect(createMapStateToProps(state => ({\n    metricsHash: metricsSelectors.metrics(state),\n    costTypes: metricsSelectors.costTypes(state),\n})))(translate()(AddRateModelBase));\n","import { Alert, Button, FormGroup, InputGroup, InputGroupText, Modal, Stack, StackItem, Text, TextContent, TextInput, TextVariants, Title, } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons/dist/js/icons/dollar-sign-icon';\nimport { Form } from 'components/forms/form';\nimport { canSubmit, CostTypeSelectorBase, isRateValid, } from 'pages/costModels/components/addCostModelRateForm';\nimport React from 'react';\nclass UpdateRateModelBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rate: String(this.props.current.rates[this.props.index].tiered_rates[0].value),\n            costType: this.props.current.rates[this.props.index].cost_type,\n        };\n    }\n    render() {\n        const { updateError, current, onClose, onProceed, isProcessing, t, index, metricsHash, costTypes, } = this.props;\n        const metric = current.rates[index].metric.label_metric;\n        const measurement = current.rates[index].metric.label_measurement;\n        const originalCostType = current.rates[index].cost_type;\n        const originalRate = String(this.props.current.rates[this.props.index].tiered_rates[0].value);\n        return (React.createElement(Modal, { title: t('cost_models_details.edit_rate'), isOpen: true, onClose: onClose, variant: \"small\", actions: [\n                React.createElement(Button, { key: \"proceed\", variant: \"primary\", onClick: () => onProceed(metric, measurement, this.state.rate, this.state.costType), isDisabled: canSubmit(this.state.rate) ||\n                        isProcessing ||\n                        (this.state.costType === originalCostType &&\n                            this.state.rate === originalRate) }, t('cost_models_details.add_rate_modal.save')),\n                React.createElement(Button, { key: \"cancel\", variant: \"secondary\", onClick: onClose, isDisabled: isProcessing }, t('cost_models_details.add_rate_modal.cancel')),\n            ] },\n            React.createElement(React.Fragment, null,\n                updateError && React.createElement(Alert, { variant: \"danger\", title: `${updateError}` }),\n                React.createElement(Stack, { hasGutter: true },\n                    React.createElement(StackItem, null,\n                        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('cost_models_details.cost_model.source_type'))),\n                    React.createElement(StackItem, null,\n                        React.createElement(TextContent, null,\n                            React.createElement(Text, { component: TextVariants.h6 }, current.source_type))),\n                    React.createElement(StackItem, null,\n                        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('cost_models.add_rate_form.metric_select'))),\n                    React.createElement(StackItem, null,\n                        React.createElement(TextContent, null,\n                            React.createElement(Text, { component: TextVariants.h6 }, t(`cost_models.${metric}`)))),\n                    React.createElement(StackItem, null,\n                        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('cost_models.add_rate_form.measurement_select'))),\n                    React.createElement(StackItem, null,\n                        React.createElement(TextContent, null,\n                            React.createElement(Text, { component: TextVariants.h6 }, t(`cost_models.${measurement}`, {\n                                units: t(`cost_models.${metricsHash[metric][measurement].label_measurement_unit}`),\n                            })))),\n                    React.createElement(StackItem, null,\n                        React.createElement(Form, null,\n                            React.createElement(FormGroup, { label: t('cost_models.add_rate_form.rate_input'), fieldId: \"rate-input-box\", helperTextInvalid: t('cost_models.add_rate_form.error_message'), validated: isRateValid(this.state.rate) ? 'default' : 'error' },\n                                React.createElement(InputGroup, { style: { width: '350px' } },\n                                    React.createElement(InputGroupText, { style: { borderRight: '0' } },\n                                        React.createElement(DollarSignIcon, null)),\n                                    React.createElement(TextInput, { style: { borderLeft: '0' }, type: \"text\", \"aria-label\": t('cost_models_wizard.price_list.rate_aria_label'), id: \"rate-input-box\", value: this.state.rate, onChange: (rate) => this.setState({ rate }), validated: isRateValid(this.state.rate) ? 'default' : 'error' }))),\n                            React.createElement(\"div\", { style: { width: '350px' } },\n                                React.createElement(CostTypeSelectorBase, { t: t, costTypes: costTypes, value: this.state.costType, onChange: value => this.setState({ costType: value }) }))))))));\n    }\n}\nexport default UpdateRateModelBase;\n","import { Bullseye, Button, EmptyState, EmptyStateBody, EmptyStateIcon, List, ListItem, Pagination, Title, Toolbar, ToolbarContent, ToolbarItem, ToolbarItemVariant, } from '@patternfly/react-core';\nimport { FileInvoiceDollarIcon } from '@patternfly/react-icons/dist/js/icons/file-invoice-dollar-icon';\nimport { EmptyFilterState } from 'components/state/emptyFilterState/emptyFilterState';\nimport { ErrorState } from 'components/state/errorState/errorState';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport { WithPriceListSearch } from 'pages/costModels/components/hoc/withPriceListSearch';\nimport { PriceListToolbar } from 'pages/costModels/components/priceListToolbar';\nimport { RateTable } from 'pages/costModels/components/rateTable';\nimport { CheckboxSelector } from 'pages/costModels/components/toolbar/checkboxSelector';\nimport { PrimarySelector } from 'pages/costModels/components/toolbar/primarySelector';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { metricsSelectors } from 'store/metrics';\nimport { rbacSelectors } from 'store/rbac';\nimport AddRateModel from './addRateModal';\nimport Dialog from './dialog';\nimport UpdateRateModel from './updateRateModel';\nclass PriceListTable extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            deleteRate: null,\n            index: -1,\n            pagination: {\n                perPage: 6,\n                page: 1,\n            },\n        };\n    }\n    render() {\n        const { t, fetchStatus, fetchError, setDialogOpen, isDialogOpen, metricsHash, maxRate, isWritePermission, costTypes, } = this.props;\n        const metricOpts = Object.keys(metricsHash).map(m => ({\n            label: t(`cost_models.${m}`),\n            value: m,\n        }));\n        const measurementOpts = metricOpts.reduce((acc, curr) => {\n            const measurs = Object.keys(metricsHash[curr.value])\n                .filter(m => !acc.map(i => i.value).includes(m))\n                .map(m => ({ label: t(`toolbar.pricelist.options.${m}`), value: m }));\n            return [...acc, ...measurs];\n        }, []);\n        return (React.createElement(React.Fragment, null,\n            isDialogOpen.updateRate && (React.createElement(UpdateRateModel, { t: t, costTypes: costTypes, metricsHash: metricsHash, index: this.state.index, current: this.props.current, isProcessing: this.props.isLoading, onClose: () => setDialogOpen({ name: 'updateRate', isOpen: false }), onProceed: (metric, measurement, rate, costType) => {\n                    const newState = Object.assign(Object.assign({}, this.props.current), { source_uuids: this.props.current.sources.map(provider => provider.uuid), source_type: this.props.current.source_type ===\n                            'OpenShift Container Platform'\n                            ? 'OCP'\n                            : 'AWS', rates: [\n                            ...this.props.current.rates.slice(0, this.state.index),\n                            ...this.props.current.rates.slice(this.state.index + 1),\n                            {\n                                metric: { name: metricsHash[metric][measurement].metric },\n                                cost_type: costType,\n                                tiered_rates: [\n                                    {\n                                        unit: 'USD',\n                                        value: Number(rate),\n                                        usage: { unit: 'USD' },\n                                    },\n                                ],\n                            },\n                        ] });\n                    this.props.updateCostModel(this.props.current.uuid, newState, 'updateRate');\n                }, updateError: this.props.error })),\n            isDialogOpen.addRate && (React.createElement(AddRateModel, { updateError: this.props.error, current: this.props.current, isProcessing: this.props.isLoading, onClose: () => setDialogOpen({ name: 'addRate', isOpen: false }), onProceed: (metric, measurement, rate, costType) => {\n                    const newState = Object.assign(Object.assign({}, this.props.current), { source_uuids: this.props.current.sources.map(provider => provider.uuid), source_type: this.props.current.source_type ===\n                            'OpenShift Container Platform'\n                            ? 'OCP'\n                            : 'AWS', rates: [\n                            ...this.props.current.rates,\n                            {\n                                metric: { name: metricsHash[metric][measurement].metric },\n                                cost_type: costType,\n                                tiered_rates: [\n                                    {\n                                        unit: 'USD',\n                                        value: Number(rate),\n                                        usage: { unit: 'USD' },\n                                    },\n                                ],\n                            },\n                        ] });\n                    this.props.updateCostModel(this.props.current.uuid, newState, 'addRate');\n                } })),\n            React.createElement(Dialog, { isSmall: true, isOpen: isDialogOpen.deleteRate, title: t('dialog.rate.title', { rate: this.state.deleteRate }), onClose: () => {\n                    this.props.setDialogOpen({ name: 'deleteRate', isOpen: false });\n                    this.setState({ deleteRate: null });\n                }, isProcessing: this.props.isLoading, onProceed: () => {\n                    const { index } = this.state;\n                    const { current } = this.props;\n                    const newState = Object.assign(Object.assign({}, current), { source_uuids: current.sources.map(provider => provider.uuid), source_type: current.source_type === 'OpenShift Container Platform'\n                            ? 'OCP'\n                            : 'AWS', rates: [\n                            ...current.rates.slice(0, index),\n                            ...current.rates.slice(index + 1),\n                        ] });\n                    this.props.updateCostModel(current.uuid, newState, 'deleteRate');\n                }, body: React.createElement(React.Fragment, null,\n                    t('dialog.rate.body', {\n                        rate: this.state.deleteRate,\n                        cm: this.props.costModel,\n                    }),\n                    this.props.assignees && this.props.assignees.length > 0 && (React.createElement(React.Fragment, null,\n                        t('dialog.rate.assigned'),\n                        React.createElement(List, null, this.props.assignees.map(p => (React.createElement(ListItem, { key: p }, p))))))), actionText: t('dialog.deleteRate') }),\n            React.createElement(WithPriceListSearch, { initialFilters: { primary: 'metrics', metrics: [], measurements: [] } }, ({ search, setSearch, onRemove, onSelect, onClearAll }) => {\n                const from = (this.state.pagination.page - 1) * this.state.pagination.perPage;\n                const to = this.state.pagination.page * this.state.pagination.perPage;\n                const res = this.props.current.rates\n                    .filter(rate => search.metrics.length === 0 ||\n                    search.metrics.includes(rate.metric.label_metric))\n                    .filter(rate => search.measurements.length === 0 ||\n                    search.measurements.includes(rate.metric.label_measurement));\n                const filtered = res.slice(from, to).map(r => ({\n                    metric: r.metric.label_metric,\n                    measurement: r.metric.label_measurement,\n                    rate: r.tiered_rates[0].value.toString(),\n                    costType: r.cost_type,\n                    meta: r.metric,\n                }));\n                return (React.createElement(React.Fragment, null,\n                    React.createElement(PriceListToolbar, { primary: React.createElement(PrimarySelector, { isDisabled: this.props.current.rates.length === 0, primary: search.primary, setPrimary: (primary) => setSearch({ primary }), options: [\n                                {\n                                    label: t('toolbar.pricelist.metric'),\n                                    value: 'metrics',\n                                },\n                                {\n                                    label: t('toolbar.pricelist.measurement'),\n                                    value: 'measurements',\n                                },\n                            ] }), selected: search.primary, secondaries: [\n                            {\n                                component: (React.createElement(CheckboxSelector, { isDisabled: this.props.current.rates.length === 0, placeholderText: t('toolbar.pricelist.measurement_placeholder'), selections: search.measurements, setSelections: (selection) => onSelect('measurements', selection), options: measurementOpts })),\n                                name: 'measurements',\n                                onRemove,\n                                filters: search.measurements,\n                            },\n                            {\n                                component: (React.createElement(CheckboxSelector, { isDisabled: this.props.current.rates.length === 0, placeholderText: t('toolbar.pricelist.metric_placeholder'), selections: search.metrics, setSelections: (selection) => onSelect('metrics', selection), options: metricOpts })),\n                                name: 'metrics',\n                                onRemove,\n                                filters: search.metrics,\n                            },\n                        ], button: React.createElement(Button, { isDisabled: maxRate === this.props.current.rates.length\n                                ? true\n                                : !isWritePermission, onClick: () => this.props.setDialogOpen({\n                                name: 'addRate',\n                                isOpen: true,\n                            }) }, t('toolbar.pricelist.add_rate')), onClear: onClearAll, pagination: React.createElement(Pagination, { isCompact: true, itemCount: res.length, perPage: this.state.pagination.perPage, page: this.state.pagination.page, onSetPage: (_evt, page) => this.setState({\n                                pagination: Object.assign(Object.assign({}, this.state.pagination), { page }),\n                            }), onPerPageSelect: (_evt, perPage) => this.setState({ pagination: { page: 1, perPage } }), perPageOptions: [\n                                { title: '2', value: 2 },\n                                { title: '4', value: 4 },\n                                { title: '6', value: 6 },\n                            ] }) }),\n                    fetchStatus !== 2 /* complete */ && React.createElement(LoadingState, null),\n                    fetchStatus === 2 /* complete */ &&\n                        Boolean(fetchError) && React.createElement(ErrorState, { error: fetchError }),\n                    fetchStatus === 2 /* complete */ &&\n                        filtered.length === 0 &&\n                        (search.metrics.length !== 0 ||\n                            search.measurements.length !== 0) && (React.createElement(EmptyFilterState, { filter: t('cost_models_wizard.price_list.toolbar_top_results_aria_label') })),\n                    fetchStatus === 2 /* complete */ &&\n                        filtered.length === 0 &&\n                        search.measurements.length === 0 &&\n                        search.metrics.length === 0 && (React.createElement(Bullseye, null,\n                        React.createElement(EmptyState, null,\n                            React.createElement(EmptyStateIcon, { icon: FileInvoiceDollarIcon }),\n                            React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('cost_models_details.empty_state_rate.title')),\n                            React.createElement(EmptyStateBody, null, t('cost_models_details.empty_state_rate.description'))))),\n                    fetchStatus === 2 /* complete */ && filtered.length > 0 && (React.createElement(React.Fragment, null,\n                        React.createElement(RateTable, { t: t, tiers: filtered, actions: [\n                                {\n                                    title: t('cost_models_wizard.price_list.update_button'),\n                                    isDisabled: !isWritePermission,\n                                    // HACK: to display tooltip on disable\n                                    style: !isWritePermission\n                                        ? { pointerEvents: 'auto' }\n                                        : undefined,\n                                    tooltip: !isWritePermission ? (React.createElement(\"div\", null, t('cost_models.read_only_tooltip'))) : (undefined),\n                                    onClick: (_evt, rowIndex, _rowData, _extra) => {\n                                        this.setState({\n                                            deleteRate: null,\n                                            index: rowIndex + from,\n                                        });\n                                        this.props.setDialogOpen({\n                                            name: 'updateRate',\n                                            isOpen: true,\n                                        });\n                                    },\n                                },\n                                {\n                                    title: t('cost_models_wizard.price_list.delete_button'),\n                                    isDisabled: !isWritePermission,\n                                    // HACK: to display tooltip on disable\n                                    style: !isWritePermission\n                                        ? { pointerEvents: 'auto' }\n                                        : {},\n                                    tooltip: !isWritePermission ? (React.createElement(\"div\", null, t('cost_models.read_only_tooltip'))) : (undefined),\n                                    onClick: (_evt, rowIndex, _rowData, _extra) => {\n                                        this.setState({\n                                            deleteRate: filtered[rowIndex],\n                                            index: rowIndex + from,\n                                        });\n                                        this.props.setDialogOpen({\n                                            name: 'deleteRate',\n                                            isOpen: true,\n                                        });\n                                    },\n                                },\n                            ] }),\n                        React.createElement(Toolbar, { id: \"price-list-toolbar-bottom\" },\n                            React.createElement(ToolbarContent, null,\n                                React.createElement(ToolbarItem, { variant: ToolbarItemVariant.pagination },\n                                    React.createElement(Pagination, { itemCount: res.length, perPage: this.state.pagination.perPage, page: this.state.pagination.page, onSetPage: (_evt, page) => this.setState({\n                                            pagination: Object.assign(Object.assign({}, this.state.pagination), { page }),\n                                        }), onPerPageSelect: (_evt, perPage) => this.setState({\n                                            pagination: { page: 1, perPage },\n                                        }), perPageOptions: [\n                                            { title: '2', value: 2 },\n                                            { title: '4', value: 4 },\n                                            { title: '6', value: 6 },\n                                        ] }))))))));\n            })));\n    }\n}\nexport default connect(createMapStateToProps(state => ({\n    isLoading: costModelsSelectors.updateProcessing(state),\n    error: costModelsSelectors.updateError(state),\n    isDialogOpen: costModelsSelectors.isDialogOpen(state)('rate'),\n    fetchError: costModelsSelectors.error(state),\n    fetchStatus: costModelsSelectors.status(state),\n    metricsHash: metricsSelectors.metrics(state),\n    maxRate: metricsSelectors.maxRate(state),\n    costTypes: metricsSelectors.costTypes(state),\n    isWritePermission: rbacSelectors.isCostModelWritePermission(state),\n})), {\n    updateCostModel: costModelsActions.updateCostModel,\n    setDialogOpen: costModelsActions.setCostModelDialog,\n})(translate()(PriceListTable));\n","import { InputGroup, InputGroupText, Pagination, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarItem, } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nconst SearchInput = ({ id, placeholder = '', value, onChange, onSearch, }) => {\n    return (React.createElement(InputGroup, null,\n        React.createElement(TextInput, { value: value, placeholder: placeholder, id: id, onChange: onChange, onKeyPress: (evt) => {\n                if (evt.key !== 'Enter' || value === '') {\n                    return;\n                }\n                onSearch(evt);\n            } }),\n        React.createElement(InputGroupText, { style: { borderLeft: '0' } },\n            React.createElement(SearchIcon, null))));\n};\nexport const AssignSourcesToolbarBase = ({ t, searchInputProps, paginationProps, filter, }) => {\n    return (React.createElement(Toolbar, { id: \"assign-sources-toolbar\", clearAllFilters: filter.onClearAll },\n        React.createElement(ToolbarContent, null,\n            React.createElement(ToolbarItem, { variant: \"search-filter\" },\n                React.createElement(ToolbarFilter, { deleteChip: filter.onRemove, chips: filter.query.name, categoryName: \"name\" },\n                    React.createElement(SearchInput, Object.assign({ placeholder: t('cost_models_wizard.source_table.filter_placeholder') }, searchInputProps)))),\n            React.createElement(ToolbarItem, { variant: \"pagination\" },\n                React.createElement(Pagination, { isCompact: paginationProps.isCompact, itemCount: paginationProps.itemCount, page: paginationProps.page, perPage: paginationProps.perPage, onSetPage: paginationProps.onSetPage, onPerPageSelect: paginationProps.onPerPageSelect })))));\n};\nexport const AssignSourcesToolbar = translate()(AssignSourcesToolbarBase);\n","import { Checkbox, Pagination, Toolbar, ToolbarContent, ToolbarGroup, ToolbarItem, } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { EmptyFilterState } from 'components/state/emptyFilterState/emptyFilterState';\nimport { ErrorState } from 'components/state/errorState/errorState';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport { addMultiValueQuery, removeMultiValueQuery, } from 'pages/costModels/components/filterLogic';\nimport { WarningIcon } from 'pages/costModels/components/warningIcon';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { sourcesActions, sourcesSelectors } from 'store/sourceSettings';\nimport { AssignSourcesToolbar } from './assignSourcesModalToolbar';\nclass AddSourcesStep extends React.Component {\n    render() {\n        const { costModel } = this.props;\n        if (this.props.isLoadingSources) {\n            return React.createElement(LoadingState, null);\n        }\n        if (this.props.fetchingSourcesError) {\n            return React.createElement(ErrorState, { error: null });\n        }\n        const onSelect = (isSelected, rowId) => {\n            if (rowId === -1) {\n                const newState = this.props.providers.reduce((acc, cur) => {\n                    return Object.assign(Object.assign({}, acc), { [cur.uuid]: { selected: isSelected, meta: cur } });\n                }, {});\n                this.props.setState(newState);\n                return;\n            }\n            this.props.setState(Object.assign(Object.assign({}, this.props.checked), { [this.props.providers[rowId].uuid]: {\n                    selected: isSelected,\n                    meta: this.props.providers[rowId],\n                } }));\n        };\n        const sources = this.props.providers.map((providerData, ix) => {\n            const isSelected = this.props.checked[providerData.uuid]\n                ? this.props.checked[providerData.uuid].selected\n                : false;\n            const provCostModels = providerData.cost_models === undefined\n                ? this.props.t('cost_models_wizard.source_table.default_cost_model')\n                : providerData.cost_models.map(cm => cm.name).join(',');\n            const warningIcon = providerData.cost_models.length &&\n                providerData.cost_models.find(cm => cm.name === costModel.name) ===\n                    undefined ? (React.createElement(WarningIcon, { key: providerData.uuid, text: this.props.t('cost_models_wizard.warning_source', {\n                    cost_model: provCostModels,\n                }) })) : null;\n            const cellName = (React.createElement(\"div\", { key: providerData.uuid },\n                providerData.name,\n                \" \",\n                warningIcon));\n            const checkbox = (React.createElement(React.Fragment, null,\n                React.createElement(Checkbox, { id: providerData.uuid, key: providerData.uuid, isChecked: isSelected, isDisabled: providerData.cost_models.length > 0, onChange: isChecked => onSelect(isChecked, ix) })));\n            return {\n                cells: [checkbox, cellName, provCostModels || ''],\n                selected: isSelected,\n            };\n        });\n        const sourceTypeMap = {\n            'OpenShift Container Platform': 'OCP',\n            'Microsoft Azure': 'AZURE',\n            'Amazon Web Services': 'AWS',\n        };\n        const source_type = sourceTypeMap[costModel.source_type];\n        return (React.createElement(React.Fragment, null,\n            React.createElement(AssignSourcesToolbar, { filter: {\n                    onClearAll: () => this.props.fetch(`source_type=${source_type}&limit=${this.props.pagination.perPage}`),\n                    onRemove: (category, chip) => {\n                        const newQuery = removeMultiValueQuery({\n                            name: this.props.query.name\n                                ? this.props.query.name.split(',')\n                                : [],\n                        })(category, chip);\n                        this.props.fetch(`source_type=${source_type}${newQuery.name ? `&name=${newQuery.name.join(',')}` : ''}&offset=0&limit=${this.props.pagination.perPage}`);\n                    },\n                    query: {\n                        name: Boolean(this.props.query.name)\n                            ? this.props.query.name.split(',')\n                            : [],\n                    },\n                }, searchInputProps: {\n                    id: 'assign-sources-modal-toolbar',\n                    onChange: value => this.props.updateFilter({\n                        currentFilterType: 'name',\n                        currentFilterValue: value,\n                    }),\n                    value: this.props.currentFilter.value,\n                    onSearch: _evt => {\n                        const curQuery = Boolean(this.props.query.name)\n                            ? this.props.query.name.split(',')\n                            : [];\n                        const newQuery = addMultiValueQuery({ name: curQuery })('name', this.props.currentFilter.value);\n                        this.props.fetch(`source_type=${source_type}&name=${newQuery.name.join(',')}&limit=${this.props.pagination.perPage}&offset=0`);\n                    },\n                }, paginationProps: {\n                    itemCount: this.props.pagination.count,\n                    perPage: this.props.pagination.perPage,\n                    page: this.props.pagination.page,\n                    onPerPageSelect: (_evt, newPerPage) => {\n                        this.props.fetch(`source_type=${source_type}&limit=${newPerPage}&offset=0&${this.props.query.name ? `name=${this.props.query.name}` : ''}`);\n                    },\n                    onSetPage: (_evt, newPage) => {\n                        this.props.fetch(`source_type=${source_type}&limit=${this.props.pagination.perPage}&offset=${this.props.pagination.perPage * (newPage - 1)}&${this.props.query.name ? `name=${this.props.query.name}` : ''}`);\n                    },\n                } }),\n            sources.length > 0 && (React.createElement(Table, { \"aria-label\": this.props.t('cost_models_details.add_source'), cells: [\n                    '',\n                    this.props.t('filter.name'),\n                    this.props.t('cost_models_wizard.source_table.column_cost_model'),\n                ], rows: sources },\n                React.createElement(TableHeader, null),\n                React.createElement(TableBody, null))),\n            sources.length === 0 && (React.createElement(EmptyFilterState, { subTitle: this.props.t('no_match_found_state.desc') })),\n            React.createElement(Toolbar, { id: \"costmodels_details.sources_pagination_datatoolbar\" },\n                React.createElement(ToolbarContent, { style: { flexDirection: 'row-reverse' }, \"aria-label\": this.props.t('cost_models_details.sources_pagination_bottom') },\n                    React.createElement(ToolbarGroup, null,\n                        React.createElement(ToolbarItem, null,\n                            React.createElement(Pagination, { itemCount: this.props.pagination.count, isDisabled: this.props.isLoadingSources, perPage: this.props.pagination.perPage, page: this.props.pagination.page, onPerPageSelect: (_evt, newPerPage) => {\n                                    this.props.fetch(`limit=${newPerPage}&offset=0&${this.props.query.name\n                                        ? `name=${this.props.query.name}`\n                                        : ''}`);\n                                }, onSetPage: (_evt, newPage) => {\n                                    this.props.fetch(`limit=${this.props.pagination.perPage}&offset=${this\n                                        .props.pagination.perPage *\n                                        (newPage - 1)}&${this.props.query.name\n                                        ? `name=${this.props.query.name}`\n                                        : ''}`);\n                                } })))))));\n    }\n}\nexport default connect(createMapStateToProps(state => {\n    return {\n        currentFilter: {\n            name: sourcesSelectors.currentFilterType(state),\n            value: sourcesSelectors.currentFilterValue(state),\n        },\n    };\n}), {\n    updateFilter: sourcesActions.updateFilterToolbar,\n})(translate()(AddSourcesStep));\n","import { Alert, Button, Modal, Split, SplitItem, Stack, StackItem, Title, } from '@patternfly/react-core';\nimport { parseApiError } from 'pages/costModels/createCostModelWizard/parseError';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsSelectors } from 'store/costModels';\nimport { sourcesActions, sourcesSelectors } from 'store/sourceSettings';\nimport AddSourceStep from './addSourceStep';\nconst sourceTypeMap = {\n    'OpenShift Container Platform': 'OCP',\n    'Microsoft Azure': 'AZURE',\n    'Amazon Web Services': 'AWS',\n};\nclass AddSourceWizardBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = { checked: {} };\n    }\n    componentDidMount() {\n        const { costModel: { source_type }, fetch, } = this.props;\n        const sourceType = sourceTypeMap[source_type];\n        fetch(`type=${sourceType}&limit=10&offset=0`);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.isLoadingSources === true &&\n            this.props.isLoadingSources === false) {\n            const initChecked = this.props.providers.reduce((acc, curr) => {\n                return Object.assign(Object.assign({}, acc), { [curr.uuid]: {\n                        selected: this.props.costModel.sources.some(p => p.uuid === curr.uuid),\n                        meta: curr,\n                    } });\n            }, {});\n            this.setState({ checked: initChecked });\n        }\n    }\n    render() {\n        const { isUpdateInProgress, onClose, isOpen, onSave, t, costModel, updateApiError, } = this.props;\n        return (React.createElement(Modal, { isOpen: isOpen, title: t('cost_models_details.assign_sources', {\n                cost_model: this.props.costModel.name,\n            }), onClose: onClose, variant: \"large\", actions: [\n                React.createElement(Button, { key: \"save\", isDisabled: isUpdateInProgress || this.props.isLoadingSources, onClick: () => {\n                        onSave(Object.keys(this.state.checked).filter(uuid => this.state.checked[uuid].selected));\n                    } }, t('cost_models_details.action_assign')),\n                React.createElement(Button, { key: \"cancel\", variant: \"link\", isDisabled: isUpdateInProgress, onClick: onClose }, t('cost_models_wizard.cancel_button')),\n            ] },\n            React.createElement(Stack, { hasGutter: true },\n                React.createElement(StackItem, null, Boolean(updateApiError) && (React.createElement(Alert, { variant: \"danger\", title: `${updateApiError}` }))),\n                React.createElement(StackItem, null,\n                    React.createElement(Split, { hasGutter: true },\n                        React.createElement(SplitItem, null,\n                            React.createElement(Title, { headingLevel: \"h2\", size: \"md\" }, t('cost_models_wizard.general_info.source_type_label'))),\n                        React.createElement(SplitItem, null, this.props.costModel.source_type))),\n                React.createElement(StackItem, null,\n                    React.createElement(AddSourceStep, { fetch: this.props.fetch, fetchingSourcesError: this.props.fetchingSourcesError, isLoadingSources: this.props.isLoadingSources, providers: this.props.providers, pagination: this.props.pagination, query: this.props.query, costModel: costModel, checked: this.state.checked, setState: newState => {\n                            this.setState({ checked: newState });\n                        } })))));\n    }\n}\nexport default connect(createMapStateToProps(state => {\n    return {\n        pagination: sourcesSelectors.pagination(state),\n        query: sourcesSelectors.query(state),\n        providers: sourcesSelectors.sources(state),\n        isLoadingSources: sourcesSelectors.status(state) === 1 /* inProgress */,\n        isUpdateInProgress: costModelsSelectors.updateProcessing(state),\n        updateApiError: costModelsSelectors.updateError(state),\n        fetchingSourcesError: sourcesSelectors.error(state)\n            ? parseApiError(sourcesSelectors.error(state))\n            : '',\n    };\n}), {\n    fetch: sourcesActions.fetchSources,\n})(translate()(AddSourceWizardBase));\n","import { Button, InputGroup, InputGroupText, Pagination, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarItem, } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport React from 'react';\nimport { ReadOnlyTooltip } from './readOnlyTooltip';\nconst SearchInput = ({ id, placeholder = '', value, onChange, onSearch, }) => {\n    return (React.createElement(InputGroup, null,\n        React.createElement(TextInput, { value: value, placeholder: placeholder, id: id, onChange: onChange, onKeyPress: (evt) => {\n                if (evt.key !== 'Enter' || value === '') {\n                    return;\n                }\n                onSearch(evt);\n            } }),\n        React.createElement(InputGroupText, { style: { borderLeft: '0' } },\n            React.createElement(SearchIcon, null))));\n};\nexport const SourcesToolbar = ({ searchInputProps, paginationProps, filter, actionButtonProps, }) => {\n    return (React.createElement(Toolbar, { id: \"assign-sources-toolbar\", clearAllFilters: filter.onClearAll },\n        React.createElement(ToolbarContent, null,\n            React.createElement(ToolbarItem, { variant: \"search-filter\" },\n                React.createElement(ToolbarFilter, { deleteChip: filter.onRemove, chips: filter.query.name, categoryName: filter.categoryNames.name },\n                    React.createElement(SearchInput, Object.assign({}, searchInputProps)))),\n            React.createElement(ToolbarItem, null,\n                React.createElement(ReadOnlyTooltip, { isDisabled: actionButtonProps.isDisabled },\n                    React.createElement(Button, Object.assign({}, actionButtonProps)))),\n            React.createElement(ToolbarItem, { variant: \"pagination\" },\n                React.createElement(Pagination, { isCompact: paginationProps.isCompact, itemCount: paginationProps.itemCount, page: paginationProps.page, perPage: paginationProps.perPage, onSetPage: paginationProps.onSetPage, onPerPageSelect: paginationProps.onPerPageSelect })))));\n};\n","export const styles = {\n    emptyState: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n    },\n};\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, Pagination, Title, Toolbar, ToolbarContent, ToolbarItem, } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons/dist/js/icons/dollar-sign-icon';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { EmptyFilterState } from 'components/state/emptyFilterState/emptyFilterState';\nimport { addMultiValueQuery, removeMultiValueQuery, } from 'pages/costModels/components/filterLogic';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { rbacSelectors } from 'store/rbac';\nimport { SourcesToolbar } from './sourcesToolbar';\nimport { styles } from './table.styles';\nclass TableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            query: { name: [] },\n            currentFilter: '',\n            pagination: { page: 1, perPage: 10 },\n        };\n    }\n    render() {\n        const { pagination: { page, perPage }, } = this.state;\n        const { onAdd, t, rows, cells, isWritePermission } = this.props;\n        const filteredRows = rows\n            .filter(uuid => {\n            if (!Boolean(this.state.query.name)) {\n                return true;\n            }\n            return this.state.query.name.every(fName => uuid.includes(fName));\n        })\n            .map(uuid => [uuid]);\n        const res = filteredRows.slice((page - 1) * perPage, page * perPage);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(SourcesToolbar, { actionButtonProps: {\n                    isDisabled: !isWritePermission,\n                    onClick: onAdd,\n                    children: t('toolbar.sources.assign_sources'),\n                }, filter: {\n                    onClearAll: () => this.setState({\n                        pagination: Object.assign(Object.assign({}, this.state.pagination), { page: 1 }),\n                        query: { name: [] },\n                    }),\n                    onRemove: (_category, chip) => {\n                        this.setState({\n                            pagination: Object.assign(Object.assign({}, this.state.pagination), { page: 1 }),\n                            query: removeMultiValueQuery(this.state.query)('name', chip),\n                        });\n                    },\n                    query: this.state.query,\n                    categoryNames: { name: t('toolbar.sources.category.name') },\n                }, paginationProps: {\n                    isCompact: true,\n                    itemCount: filteredRows.length,\n                    perPage,\n                    page,\n                    onSetPage: (_evt, newPage) => this.setState({\n                        pagination: Object.assign(Object.assign({}, this.state.pagination), { page: newPage }),\n                    }),\n                    onPerPageSelect: (_evt, newPerPage) => this.setState({\n                        pagination: { page: 1, perPage: newPerPage },\n                    }),\n                }, searchInputProps: {\n                    id: 'sources-tab-toolbar',\n                    onChange: (value) => this.setState({\n                        currentFilter: value,\n                    }),\n                    onSearch: () => {\n                        this.setState({\n                            query: addMultiValueQuery(this.state.query)('name', this.state.currentFilter),\n                            currentFilter: '',\n                            pagination: Object.assign(Object.assign({}, this.state.pagination), { page: 1 }),\n                        });\n                    },\n                    value: this.state.currentFilter,\n                    placeholder: t('toolbar.sources.filter_placeholder'),\n                } }),\n            res.length > 0 && (React.createElement(Table, { \"aria-label\": \"cost-model-sources\", cells: cells, rows: res, actionResolver: () => [\n                    this.props.onDelete && {\n                        title: this.props.onDeleteText ||\n                            t('cost_models_details.action_delete'),\n                        isDisabled: !isWritePermission,\n                        // HACK: to display tooltip on disable\n                        style: !isWritePermission\n                            ? { pointerEvents: 'auto' }\n                            : undefined,\n                        tooltip: !isWritePermission ? (React.createElement(\"div\", null, t('cost_models.read_only_tooltip'))) : (undefined),\n                        onClick: (_evt, rowId) => {\n                            this.props.onDelete(res[rowId]);\n                        },\n                    },\n                ] },\n                React.createElement(TableHeader, null),\n                React.createElement(TableBody, null))),\n            rows.length === 0 && (React.createElement(\"div\", { style: styles.emptyState },\n                React.createElement(EmptyState, null,\n                    React.createElement(EmptyStateIcon, { icon: DollarSignIcon }),\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('cost_models_details.empty_state_source.title')),\n                    React.createElement(EmptyStateBody, null, t('cost_models_details.empty_state_source.description'))))),\n            filteredRows.length === 0 && rows.length > 0 && (React.createElement(EmptyFilterState, { filter: this.state.currentFilter, subTitle: t('no_match_found_state.desc') })),\n            React.createElement(Toolbar, { id: \"costmodels_details_filter_datatoolbar\" },\n                React.createElement(ToolbarContent, { \"aria-label\": t('cost_models_details.sources_filter_controller'), style: { flexDirection: 'row-reverse' } },\n                    React.createElement(ToolbarItem, { variant: \"pagination\" },\n                        React.createElement(Pagination, { itemCount: filteredRows.length, perPage: perPage, page: page, onSetPage: (_evt, newPage) => this.setState({\n                                pagination: Object.assign(Object.assign({}, this.state.pagination), { page: newPage }),\n                            }), onPerPageSelect: (_evt, newPerPage) => this.setState({\n                                pagination: { page: 1, perPage: newPerPage },\n                            }) }))))));\n    }\n}\nexport default connect(createMapStateToProps(state => ({\n    isWritePermission: rbacSelectors.isCostModelWritePermission(state),\n})))(translate()(TableBase));\n","import React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport AddSourceWizard from './addSourceWizard';\nimport Dialog from './components/dialog';\nimport Table from './components/table';\nclass SourceTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = { dialogSource: null };\n    }\n    render() {\n        const { setDialogOpen, isLoading, sources, costModel, t, isDialogOpen, } = this.props;\n        return (React.createElement(React.Fragment, null,\n            isDialogOpen.addSource && (React.createElement(AddSourceWizard, { costModel: costModel, isOpen: true, onClose: () => setDialogOpen({ name: 'addSource', isOpen: false }), onSave: (source_uuids) => {\n                    this.props.updateCostModel(costModel.uuid, Object.assign(Object.assign({}, costModel), { source_type: costModel.source_type === 'OpenShift Container Platform'\n                            ? 'OCP'\n                            : 'AWS', source_uuids }), 'addSource');\n                } })),\n            React.createElement(Dialog, { isSmall: true, isOpen: isDialogOpen.deleteSource, title: t('dialog.delete_source_from_cost_model_title', {\n                    source: this.state.dialogSource,\n                    cost_model: costModel.name,\n                }), onClose: () => {\n                    setDialogOpen({ name: 'deleteSource', isOpen: false });\n                    this.setState({ dialogSource: null });\n                }, isProcessing: isLoading, onProceed: () => {\n                    const newState = Object.assign(Object.assign({}, costModel), { source_type: costModel.source_type === 'OpenShift Container Platform'\n                            ? 'OCP'\n                            : 'AWS', source_uuids: sources\n                            .filter(provider => provider.name !== this.state.dialogSource)\n                            .map(provider => provider.uuid) });\n                    this.props.updateCostModel(costModel.uuid, newState, 'deleteSource');\n                }, body: t('dialog.delete_source_from_cost_model_body', {\n                    source: this.state.dialogSource,\n                    cost_model: costModel.name,\n                }), actionText: t('dialog.deleteSource') }),\n            React.createElement(Table, { onDeleteText: t('cost_models_details.action_unassign'), onDelete: item => {\n                    this.setState({ dialogSource: item[0] });\n                    setDialogOpen({ name: 'deleteSource', isOpen: true });\n                }, onAdd: () => setDialogOpen({ name: 'addSource', isOpen: true }), cells: [t('filter.name')], rows: sources.map(p => p.name) })));\n    }\n}\nexport default connect(createMapStateToProps(state => ({\n    isLoading: costModelsSelectors.updateProcessing(state),\n    isDialogOpen: costModelsSelectors.isDialogOpen(state)('sources'),\n})), {\n    setDialogOpen: costModelsActions.setCostModelDialog,\n    updateCostModel: costModelsActions.updateCostModel,\n})(translate()(SourceTableBase));\n","import { global_BackgroundColor_light_100, global_spacer_lg, global_spacer_md, global_spacer_sm, global_spacer_xl, } from '@patternfly/react-tokens';\nexport const styles = {\n    headerDescription: {\n        width: '97%',\n        wordWrap: 'break-word',\n    },\n    content: {\n        paddingTop: global_spacer_xl.value,\n        height: '182vh',\n    },\n    costmodelsContainer: {\n        marginLeft: global_spacer_xl.value,\n        marginRight: global_spacer_xl.value,\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    headerCostModel: {\n        padding: global_spacer_lg.var,\n        paddingBottom: 0,\n        backgroundColor: global_BackgroundColor_light_100.value,\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Alert, Button, Form, FormGroup, Modal, TextArea, TextInput, } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nclass UpdateCostModelBase extends React.Component {\n    constructor(props) {\n        super(props);\n        const current = this.props.costModel[0];\n        this.state = {\n            name: current.name,\n            description: current.description,\n        };\n    }\n    render() {\n        const { updateCostModel, updateError, costModel, isProcessing, setDialogOpen, t, } = this.props;\n        const current = costModel[0];\n        return (React.createElement(Modal, { title: t('cost_models_details.edit_cost_model'), isOpen: true, onClose: () => setDialogOpen({ name: 'updateCostModel', isOpen: false }), variant: \"small\", actions: [\n                React.createElement(Button, { key: \"proceed\", variant: \"primary\", onClick: () => {\n                        const { uuid, sources, created_timestamp, updated_timestamp } = current, previous = __rest(current, [\"uuid\", \"sources\", \"created_timestamp\", \"updated_timestamp\"]);\n                        updateCostModel(uuid, Object.assign(Object.assign({}, previous), { source_uuids: sources.map(provider => provider.uuid), name: this.state.name, description: this.state.description, source_type: current.source_type === 'OpenShift Container Platform'\n                                ? 'OCP'\n                                : 'AWS' }), 'updateCostModel');\n                    }, isDisabled: isProcessing ||\n                        (this.state.name === current.name &&\n                            this.state.description === current.description) }, t('cost_models_details.save_button')),\n                React.createElement(Button, { key: \"cancel\", variant: \"secondary\", onClick: () => setDialogOpen({ name: 'updateCostModel', isOpen: false }), isDisabled: isProcessing }, t('dialog.cancel')),\n            ] },\n            React.createElement(React.Fragment, null,\n                updateError && React.createElement(Alert, { variant: \"danger\", title: `${updateError}` }),\n                React.createElement(Form, null,\n                    React.createElement(FormGroup, { label: t('cost_models_wizard.general_info.name_label'), isRequired: true, fieldId: \"name\" },\n                        React.createElement(TextInput, { isRequired: true, type: \"text\", id: \"name\", name: \"name\", value: this.state.name, onChange: value => this.setState({ name: value }) })),\n                    React.createElement(FormGroup, { label: t('cost_models_wizard.general_info.description_label'), fieldId: \"description\" },\n                        React.createElement(TextArea, { type: \"text\", id: \"description\", name: \"description\", value: this.state.description, onChange: value => this.setState({ description: value }) }))))));\n    }\n}\nconst UpdateCostModelModal = connect(createMapStateToProps(state => ({\n    costModel: costModelsSelectors.costModels(state),\n    isProcessing: costModelsSelectors.updateProcessing(state),\n    updateError: costModelsSelectors.updateError(state),\n})), {\n    setDialogOpen: costModelsActions.setCostModelDialog,\n    updateCostModel: costModelsActions.updateCostModel,\n})(translate()(UpdateCostModelBase));\nexport default UpdateCostModelModal;\n","import { Breadcrumb, BreadcrumbItem, DropdownItem, List, ListItem, Split, SplitItem, Tab, Tabs, TabTitleText, Title, } from '@patternfly/react-core';\nimport Dialog from 'pages/costModels/costModelsDetails/components/dialog';\nimport Dropdown from 'pages/costModels/costModelsDetails/components/dropdown';\nimport { ReadOnlyTooltip } from 'pages/costModels/costModelsDetails/components/readOnlyTooltip';\nimport UpdateCostModelModal from 'pages/costModels/costModelsDetails/components/updateCostModel';\nimport { styles } from 'pages/costModels/costModelsDetails/costModelsDetails.styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { rbacSelectors } from 'store/rbac';\nconst Header = ({ t, tabRefs, tabIndex, onSelectTab, setDialogOpen, isDialogOpen, deleteError, isDeleteProcessing, deleteCostModel, current, isWritePermission, historyObject, }) => {\n    return (React.createElement(React.Fragment, null,\n        isDialogOpen.updateCostModel && React.createElement(UpdateCostModelModal, null),\n        React.createElement(Dialog, { isSmall: true, isOpen: isDialogOpen.deleteCostModel, title: t('dialog.delete_cost_model_title', {\n                cost_model: current.name,\n            }), onClose: () => setDialogOpen({ name: 'deleteCostModel', isOpen: false }), error: deleteError, isProcessing: isDeleteProcessing, onProceed: () => {\n                deleteCostModel(current.uuid, 'deleteCostModel', historyObject);\n            }, body: React.createElement(React.Fragment, null,\n                current.sources.length === 0 &&\n                    t('dialog.delete_cost_model_body_green', {\n                        cost_model: current.name,\n                    }),\n                current.sources.length > 0 && (React.createElement(React.Fragment, null,\n                    t('dialog.delete_cost_model_body_red', {\n                        cost_model: current.name,\n                    }),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"br\", null),\n                    t('dialog.delete_cost_model_body_red_costmodel_delete'),\n                    React.createElement(\"br\", null),\n                    React.createElement(List, null, current.sources.map(provider => (React.createElement(ListItem, { key: `${provider.uuid}` }, provider.name))))))), actionText: current.sources.length === 0 ? t('dialog.deleteCostModel') : '' }),\n        React.createElement(\"header\", { style: styles.headerCostModel },\n            React.createElement(Breadcrumb, { style: styles.breadcrumb },\n                React.createElement(BreadcrumbItem, { to: \"cost-management/cost-models\" }, t('cost_models_details.cost_model.cost_models')),\n                React.createElement(BreadcrumbItem, { isActive: true }, current.name)),\n            React.createElement(Split, null,\n                React.createElement(SplitItem, { style: styles.headerDescription },\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"2xl\" }, current.name),\n                    current.description && (React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"md\" }, current.description)),\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.sourceTypeTitle, size: \"md\" },\n                        t('cost_models_details.cost_model.source_type'),\n                        \":\",\n                        ' ',\n                        current.source_type),\n                    current.source_type === 'OpenShift Container Platform' ? (React.createElement(Tabs, { activeKey: tabIndex, onSelect: (_evt, index) => onSelectTab(index) },\n                        React.createElement(Tab, { eventKey: 0, title: React.createElement(TabTitleText, null, \"Price list\"), tabContentId: \"refPriceList\", tabContentRef: tabRefs[0] }),\n                        React.createElement(Tab, { eventKey: 1, title: React.createElement(TabTitleText, null, \"Markup\"), tabContentId: \"refMarkup\", tabContentRef: tabRefs[1] }),\n                        React.createElement(Tab, { eventKey: 2, title: React.createElement(TabTitleText, null, \"Sources\"), tabContentId: \"refSources\", tabContentRef: tabRefs[2] }))) : (React.createElement(Tabs, { activeKey: tabIndex, onSelect: (_evt, index) => onSelectTab(index) },\n                        React.createElement(Tab, { eventKey: 0, title: React.createElement(TabTitleText, null, \"Markup\"), tabContentId: \"refMarkup\", tabContentRef: tabRefs[0] }),\n                        React.createElement(Tab, { eventKey: 1, title: React.createElement(TabTitleText, null, \"Sources\"), tabContentId: \"refSources\", tabContentRef: tabRefs[1] })))),\n                React.createElement(SplitItem, null,\n                    React.createElement(Dropdown, { isPlain: true, position: \"right\", dropdownItems: [\n                            React.createElement(ReadOnlyTooltip, { key: \"edit\", isDisabled: !isWritePermission },\n                                React.createElement(DropdownItem, { isDisabled: !isWritePermission, onClick: () => setDialogOpen({\n                                        isOpen: true,\n                                        name: 'updateCostModel',\n                                    }) }, t('cost_models_details.action_edit'))),\n                            React.createElement(ReadOnlyTooltip, { key: \"delete\", isDisabled: !isWritePermission },\n                                React.createElement(DropdownItem, { isDisabled: !isWritePermission, onClick: () => setDialogOpen({\n                                        isOpen: true,\n                                        name: 'deleteCostModel',\n                                    }) }, t('cost_models_details.action_delete'))),\n                        ] }))))));\n};\nexport default connect(createMapStateToProps(state => ({\n    isDialogOpen: costModelsSelectors.isDialogOpen(state)('costmodel'),\n    isDeleteProcessing: costModelsSelectors.deleteProcessing(state),\n    deleteError: costModelsSelectors.deleteError(state),\n    isWritePermission: rbacSelectors.isCostModelWritePermission(state),\n})), {\n    setDialogOpen: costModelsActions.setCostModelDialog,\n    deleteCostModel: costModelsActions.deleteCostModel,\n})(translate()(Header));\n","import { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, TabContent, Title, } from '@patternfly/react-core';\nimport { ErrorCircleOIcon } from '@patternfly/react-icons';\nimport { ErrorState } from 'components/state/errorState/errorState';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport MarkupCard from 'pages/costModels/costModelsDetails/components/markup';\nimport PriceListTable from 'pages/costModels/costModelsDetails/components/priceListTable';\nimport SourceTable from 'pages/costModels/costModelsDetails/sourceTable';\nimport React from 'react';\nimport { I18n } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { metricsActions, metricsSelectors } from 'store/metrics';\nimport { rbacActions, rbacSelectors } from 'store/rbac';\nimport { parseApiError } from '../createCostModelWizard/parseError';\nimport { styles } from './costModelInfo.styles';\nimport Header from './header';\nclass CostModelInformation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.tabRefs = [\n            React.createRef(),\n            React.createRef(),\n            React.createRef(),\n        ];\n        this.state = { tabIndex: 0 };\n    }\n    componentDidMount() {\n        this.props.fetchRbac();\n        this.props.fetchMetrics();\n        this.props.fetchCostModels(`uuid=${this.props.match.params.uuid}`);\n    }\n    render() {\n        const { costModels, metricsStatus, rbacStatus, costModelStatus, rbacError, costModelError, metricsError, } = this.props;\n        if (metricsStatus !== 2 /* complete */ ||\n            rbacStatus !== 2 /* complete */ ||\n            costModelStatus !== 2 /* complete */) {\n            return React.createElement(LoadingState, null);\n        }\n        const fetchError = metricsError || rbacError || costModelError;\n        if (Boolean(fetchError)) {\n            if (costModelError !== null) {\n                const costModelErrMessage = parseApiError(costModelError);\n                if (costModelErrMessage === 'uuid: Enter a valid UUID.') {\n                    return (React.createElement(I18n, null, t => {\n                        return (React.createElement(Bullseye, null,\n                            React.createElement(EmptyState, null,\n                                React.createElement(EmptyStateIcon, { icon: ErrorCircleOIcon }),\n                                React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('cost_models_details.empty_state_bad_uuid.title')),\n                                React.createElement(EmptyStateBody, null, t('cost_models_details.empty_state_bad_uuid.description', { uuid: this.props.match.params.uuid })))));\n                    }));\n                }\n            }\n            return React.createElement(ErrorState, { error: fetchError });\n        }\n        const current = costModels[0];\n        const sources = current.sources;\n        return (React.createElement(\"div\", null,\n            React.createElement(Header, { historyObject: this.props.history, current: current, tabRefs: this.tabRefs, tabIndex: this.state.tabIndex, onSelectTab: tabIndex => this.setState({ tabIndex }) }),\n            React.createElement(\"div\", { style: styles.content }, current.source_type === 'OpenShift Container Platform' ? (React.createElement(React.Fragment, null,\n                React.createElement(TabContent, { eventKey: 0, id: \"refPriceList\", ref: this.tabRefs[0], hidden: this.state.tabIndex !== 0 },\n                    React.createElement(\"div\", { style: styles.costmodelsContainer },\n                        React.createElement(PriceListTable, { costModel: current.name, assignees: sources.map(p => p.name), current: current }))),\n                React.createElement(TabContent, { eventKey: 1, id: \"refMarkup\", ref: this.tabRefs[1], hidden: this.state.tabIndex !== 1 },\n                    React.createElement(MarkupCard, { current: current })),\n                React.createElement(TabContent, { eventKey: 2, id: \"refSources\", ref: this.tabRefs[2], hidden: this.state.tabIndex !== 2 },\n                    React.createElement(\"div\", { style: styles.costmodelsContainer },\n                        React.createElement(SourceTable, { costModel: current, sources: sources }))))) : (React.createElement(React.Fragment, null,\n                React.createElement(TabContent, { eventKey: 0, id: \"refMarkup\", ref: this.tabRefs[0], hidden: this.state.tabIndex !== 0 },\n                    React.createElement(MarkupCard, { current: current })),\n                React.createElement(TabContent, { eventKey: 1, id: \"refSources\", ref: this.tabRefs[1], hidden: this.state.tabIndex !== 1 },\n                    React.createElement(\"div\", { style: styles.costmodelsContainer },\n                        React.createElement(SourceTable, { costModel: current, sources: sources }))))))));\n    }\n}\nexport default connect(createMapStateToProps(store => {\n    return {\n        costModels: costModelsSelectors.costModels(store),\n        costModelError: costModelsSelectors.error(store),\n        costModelStatus: costModelsSelectors.status(store),\n        metricsHash: metricsSelectors.metrics(store),\n        maxRate: metricsSelectors.maxRate(store),\n        costTypes: metricsSelectors.costTypes(store),\n        metricsError: metricsSelectors.metricsState(store).error,\n        metricsStatus: metricsSelectors.status(store),\n        rbacError: rbacSelectors.selectRbacState(store).error,\n        rbacStatus: rbacSelectors.selectRbacState(store).status,\n    };\n}), {\n    fetchMetrics: metricsActions.fetchMetrics,\n    fetchRbac: rbacActions.fetchRbac,\n    fetchCostModels: costModelsActions.fetchCostModels,\n})(CostModelInformation);\n"],"sourceRoot":""}