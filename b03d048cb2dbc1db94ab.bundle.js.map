{"version":3,"sources":["webpack:///./src/components/charts/common/chartUtils.ts","webpack:///./src/components/charts/common/chart.styles.ts","webpack:///./src/components/charts/chartTheme/theme-koku.ts","webpack:///./src/components/charts/chartTheme/index.ts","webpack:///./src/components/charts/chartTheme/theme-utils.ts","webpack:///./src/utils/computedReport/getComputedReportItems.ts","webpack:///./src/utils/computedReport/getItemLabel.ts","webpack:///./src/testIds.ts","webpack:///./src/utils/dateRange.ts","webpack:///./src/components/state/emptyValueState/emptyValueState.styles.ts","webpack:///./src/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/utils/sort.ts","webpack:///./src/components/reports/reportSummary/reportSummary.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummary.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItem.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryItem.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItems.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryItems.tsx","webpack:///./src/components/charts/costChart/costChart.styles.ts","webpack:///./src/components/charts/costChart/costChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryCost.tsx","webpack:///./src/components/charts/trendChart/trendChart.styles.ts","webpack:///./src/components/charts/trendChart/trendChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.tsx","webpack:///./src/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/components/charts/usageChart/usageChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.tsx","webpack:///./src/utils/equal.ts","webpack:///./src/pages/details/components/export/exportModal.styles.ts","webpack:///./src/pages/details/components/export/exportSubmit.tsx","webpack:///./src/pages/details/components/export/exportModal.tsx","webpack:///./src/pages/state/noProviders/noProvidersState.styles.ts","webpack:///./src/pages/state/noProviders/noProvidersState.tsx","webpack:///./src/utils/pathname.ts","webpack:///./src/pages/state/noProviders/notProviders.tsx","webpack:///./src/pages/state/noProviders/index.ts","webpack:///./src/pages/state/loading/loading.tsx","webpack:///./src/pages/state/loading/index.ts","webpack:///./src/pages/details/components/utils/groupBy.tsx","webpack:///./src/pages/state/notAvailable/index.ts","webpack:///./src/pages/details/components/cluster/cluster.styles.ts","webpack:///./src/pages/details/components/cluster/clusterModal.styles.ts","webpack:///./src/pages/details/components/cluster/clusterView.tsx","webpack:///./src/pages/details/components/cluster/clusterModal.tsx","webpack:///./src/pages/details/components/cluster/cluster.tsx","webpack:///./src/pages/details/components/costChart/costChart.styles.ts","webpack:///./src/pages/details/components/costChart/costChart.tsx","webpack:///./src/pages/details/components/summary/summaryModal.styles.ts","webpack:///./src/pages/details/components/summary/summaryModalView.tsx","webpack:///./src/pages/details/components/summary/summaryModal.tsx","webpack:///./src/pages/details/components/summary/summaryCard.styles.ts","webpack:///./src/pages/details/components/summary/summaryCard.tsx","webpack:///./src/pages/details/components/usageChart/usageChart.styles.ts","webpack:///./src/pages/details/components/usageChart/usageChart.tsx","webpack:///./src/pages/details/components/costOverview/costOverviewBase.tsx","webpack:///./src/components/charts/historicalCostChart/historicalCostChart.styles.ts","webpack:///./src/components/charts/historicalCostChart/historicalCostChart.tsx","webpack:///./src/pages/details/components/historicalData/historicalChart.styles.ts","webpack:///./src/pages/details/components/historicalData/historicalDataCostChart.tsx","webpack:///./src/components/charts/historicalTrendChart/historicalTrendChart.styles.ts","webpack:///./src/components/charts/historicalTrendChart/historicalTrendChart.tsx","webpack:///./src/pages/details/components/historicalData/historicalDataTrendChart.tsx","webpack:///./src/components/charts/historicalUsageChart/historicalUsageChart.styles.ts","webpack:///./src/components/charts/historicalUsageChart/historicalUsageChart.tsx","webpack:///./src/pages/details/components/historicalData/historicalDataUsageChart.tsx","webpack:///./src/pages/details/components/historicalData/historicalDataBase.tsx","webpack:///./src/pages/details/components/breakdown/breakdown.styles.ts","webpack:///./src/pages/details/components/tag/tag.styles.ts","webpack:///./src/pages/details/components/tag/tagView.tsx","webpack:///./src/pages/details/components/tag/tagModal.tsx","webpack:///./src/pages/details/components/tag/tagLink.tsx","webpack:///./src/pages/details/components/breakdown/breakdownHeader.styles.ts","webpack:///./src/pages/details/components/breakdown/breakdownHeader.tsx","webpack:///./src/pages/details/components/breakdown/breakdownBase.tsx","webpack:///./src/pages/details/components/priceList/noRatesState.styles.ts","webpack:///./src/pages/details/components/priceList/noRatesState.tsx","webpack:///./src/pages/details/components/priceList/priceListModal.styles.ts","webpack:///./src/pages/details/components/priceList/priceListTable.tsx","webpack:///./src/pages/details/components/priceList/priceListModal.tsx","webpack:///./src/pages/details/components/actions/actions.tsx","webpack:///./src/pages/details/components/groupBy/groupBy.styles.ts","webpack:///./src/pages/details/components/groupBy/groupByOrg.tsx","webpack:///./src/pages/details/components/groupBy/groupByTag.tsx","webpack:///./src/pages/details/components/groupBy/groupBy.tsx","webpack:///./src/pages/details/components/dataToolbar/dataToolbar.styles.ts","webpack:///./src/pages/details/components/dataToolbar/dataToolbar.tsx","webpack:///./src/utils/computedReport/getComputedOcpReportItems.ts","webpack:///./src/pages/details/ocpDetails/detailsHeader.styles.ts","webpack:///./src/pages/details/ocpDetails/detailsHeader.tsx","webpack:///./src/pages/details/ocpDetails/detailsTable.styles.ts","webpack:///./src/pages/details/ocpDetails/detailsTable.tsx","webpack:///./src/pages/details/ocpDetails/detailsToolbar.tsx","webpack:///./src/pages/details/ocpDetails/ocpDetails.styles.ts","webpack:///./src/pages/details/ocpDetails/ocpDetails.tsx","webpack:///./src/pages/details/ocpDetails/index.ts","webpack:///./src/pages/details/ocpBreakdown/costOverview.tsx","webpack:///./src/pages/details/ocpBreakdown/historicalData.tsx","webpack:///./src/pages/details/ocpBreakdown/ocpBreakdown.tsx","webpack:///./src/pages/details/ocpBreakdown/index.ts"],"names":["transformReport","report","type","key","reportItem","reportItemValue","items","idKey","sortKey","sortDirection","computedItems","result","map","i","createDatum","reduce","acc","d","prevValue","length","y","datums","firstDate","Date","lastDate","padDate","getDate","setDate","id","push","padComputedReportItems","value","computedItem","xVal","label","yVal","n","Number","parseFloat","toFixed","isInt","x","name","units","undefined","getDateRange","firstOfMonth","lastOfMonth","offset","start","end","today","setMonth","getMonth","getDatumDateRange","getMaxValue","max","forEach","datum","getTooltipContent","formatValue","unit","options","lookup","t","getCostRangeString","count","endDate","month","startDate","year","getUsageRangeString","chartOverride","LAYOUT_PROPS","padding","area","Object","assign","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","ChartTheme","default","getComputedReportItems","labelKey","sort","getUnsortedComputedReportItems","direction","itemMap","Map","visitDataPoint","dataPoint","values","idSuffix","cluster","org_unit_id","mapId","cluster_alias","clusters","capacity","cost","total","deltaPercent","delta_percent","deltaValue","delta_value","source_uuid","supplementary","infrastructure","itemLabelKey","String","meta","group_by","keys","indexOf","tagPrefixKey","hasOwnProperty","getItemLabel","alias","account_alias","limit","request","usage","item","get","set","Array","data","from","getTestProps","testIds","details","cluster_lnk","historical_data_btn","show_more_btn","tag_lnk","view_all_btn","export","cancel_btn","submit_btn","login","alert","form","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","s3_input","clusterid_input","arn_input","providers","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","view_all_link","sidebar","nav","link","backdrop","getNoDataForDateRangeString","getForDateRangeString","getSinceDateRangeString","styles","container","fontSize","EmptyValueState","createElement","style","getValueForItem","array","a","b","aVal","bVal","chartSkeleton","height","marginBottom","global_spacer_md","marginTop","legendSkeleton","reportSummary","subtitle","display","global_FontSize_xs","color","global_Color_200","var","ReportSummary","children","detailsLink","title","subTitle","status","Card","CardTitle","Title","headingLevel","size","Boolean","CardBody","Fragment","Skeleton","CardFooter","flexGrow","minHeight","marginRight","tops","global_spacer_lg","ReportSummaryAlt","tabs","Grid","hasGutter","GridItem","lg","xl","reportSummaryDetails","alignItems","text","paddingBottom","global_spacer_sm","lineHeight","global_LineHeight_sm","paddingLeft","global_spacer_xs","whiteSpace","global_Color_100","global_FontSize_4xl","valueContainer","width","wordWrap","ReportSummaryDetails","chartType","computedReportItem","computedReportItemValue","costLabel","formatOptions","requestFormatOptions","requestLabel","showTooltip","showUnits","showUsageFirst","usageFormatOptions","usageLabel","supplementaryCost","infrastructureCost","hasTotal","hasCost","hasCount","hasSupplementaryCost","hasInfrastructureCost","hasRequest","hasUsage","getCostLayout","Tooltip","content","enableFlip","getRequestLayout","usageUnits","_units","unitsLabel","getUsageLayout","reportSummaryItem","ReportSummaryItemBase","totalValue","percentVal","percentLabel","percent","className","Progress","sm","defaultProps","v","ReportSummaryItem","skeleton","Component","nextProps","this","props","otherIndex","findIndex","toString","includes","slice","getItems","ReportSummaryItems","chartStyles","currentColorScale","chart_color_green_100","chart_color_green_200","chart_color_green_300","chart_color_green_400","chart_color_green_500","currentCostData","fill","currentInfrastructureCostData","strokeDasharray","itemsPerRow","labels","fontFamily","global_FontFamily_sans_serif","minWidth","previousCostData","previousInfrastructureCostData","previousColorScale","global_disabled_color_200","yAxis","axisLabel","grid","stroke","ticks","tickLabels","xAxis","super","arguments","containerRef","createRef","state","hiddenSeries","Set","initDatum","costKey","setState","CursorVoronoiContainer","series","childName","legendItem","symbol","handleNavToggle","setTimeout","handleResize","current","clientWidth","getChart","index","ChartArea","has","interpolation","getContainer","cursorDimension","isDataAvailable","getTooltipLabel","labelComponent","ChartLegendTooltip","legendData","getLegendData","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getLegend","legendItemsPerRow","ChartLegend","gutter","responsive","formatDatumValue","formatDatumOptions","formatter","handleLegendClick","delete","add","unavailable","s","isSeriesHidden","getChartNames","serie","getEvents","chartNames","isHidden","legendName","onLegendClick","window","addEventListener","navToggle","insights","chrome","on","prevProps","removeEventListener","domain","maxCurrentInfrastructure","maxCurrentUsage","maxPreviousInfrastructure","maxPreviousUsage","maxValue","Math","ceil","currentInfrastructureDate","currentUsageDate","previousInfrastructureDate","previousUsageDate","adjustContainerHeight","containerHeight","getDomain","getEndDate","midDate","floor","adjustedContainerHeight","ref","Chart","containerComponent","events","legendComponent","legendPosition","theme","ChartAxis","tickValues","dependentAxis","ReportSummaryCost","currentMonthData","previousMonthData","currentData","previousData","showSupplementaryLabel","showUsageLegendLabel","orientation","maxCurrent","maxPrevious","previousDate","currentDate","ReportSummaryTrend","chartContainer","currentRequestData","currentUsageData","legendColorScale","previousRequestData","previousUsageData","maxCurrentRequest","maxPreviousRequest","currentRequestDate","previousRequestDate","ReportSummaryUsage","isEqual","obj1","obj2","JSON","stringify","split","join","marginLeft","modal","h2","global_spacer_xl","input","ul","stateProps","dispatchProps","defaultState","fetchReportClicked","getExport","reportFetchStatus","getFileName","handleClose","groupBy","reportPathsType","provider","date","onClose","handleFetchReport","exportReport","queryString","handleResolutionChange","_","event","resolution","currentTarget","bind","Button","isDisabled","onClick","variant","primary","mapStateToProps","isAllItems","query","newQuery","parse","order_by","filter","newQueryString","getQueryString","selectExport","reportError","selectExportError","selectExportFetchStatus","mapDispatchToProps","ExportSubmit","resolutionOptions","isOpen","sortedItems","selectedLabel","Modal","actions","Form","FormGroup","fieldId","option","Radio","isValid","checked","onChange","groupItem","ExportModal","viewSources","getViewSources","release","pathName","location","pathname","shift","getReleasePath","href","EmptyState","large","EmptyStateIcon","icon","EmptyStateBody","NoProvidersState","withRouter","Main","getGroupById","find","getGroupByValue","groupById","clustersContainer","global_spacer_3xl","global_spacer_2xl","textAlign","modalOverride","ClusterView","ClusterModal","showAll","handleOpen","preventDefault","charCount","someClusters","allClusters","clusterString","trim","concat","Cluster","chartHeight","fontWeight","global_FontWeight_bold","__rest","e","p","prototype","call","getOwnPropertySymbols","propertyIsEnumerable","getLegendLabel","_a","ChartLabel","getSkeleton","hasMarkup","markup","hasRaw","raw","markupUnits","rawUnits","markupValue","rawValue","usageValue","markupLabel","rawLabel","LegendLabel","Legend","dy","rowGutter","ChartPie","ariaDesc","ariaTitle","constrainToVisibleArea","legendOrientation","themeColor","green","CostChart","mainContent","fetchReport","_item","filterBy","parentGroupBy","groupByOrg","time_scope_units","time_scope_value","account","filter_by","selectReport","selectReportFetchStatus","SummaryModalView","SummaryModal","card","viewAllContainer","isBulletChartModalOpen","getSummary","getViewAll","handleBulletChartModalOpen","button","handleBulletChartModalClose","reportType","SummaryCard","getCpuChart","chartDatum","getChartDatumWithCapacity","getChartDatum","getFreeSpace","ChartBullet","comparativeErrorMeasureData","comparativeErrorMeasureLegendData","getChartHeight","getItemsPerRow","maxDomain","isDatumEmpty","minDomain","primarySegmentedMeasureData","primarySegmentedMeasureLegendData","qualitativeRangeData","ranges","qualitativeRangeLegendData","hasRange","range","hasLimit","trunc","limitUnits","requestUnits","hasCapacity","capacityUnits","unusedRequestCapacity","unusedUsageCapacity","unusedRequestCapacityPercentage","unusedUsageCapacityPercentage","md","percentage","UsageChart","getClusterChart","widget","showWidget","showWidgetOnGroupBy","reportGroupBy","getCostChart","getCpuUsageChart","getMemoryUsageChart","getSummaryCard","usePlaceholder","getWidgetsColumns","selectWidgets","widgets","visibleWidgets","widgetId","renderedWidget","renderWidget","rows","leftColumnWidgets","rightColumnWidgets","currentCapacityData","previousCapacityData","chart_color_blue_100","chart_color_blue_200","chart_color_blue_300","chart_color_blue_400","chart_color_blue_500","maxCurrentLimit","maxPreviousLimit","xAxisLabel","yAxisLabel","costChart","instanceChart","storageChart","currentQueryString","previousQueryString","currentReport","currentReportFetchStatus","previousReport","previousReportFetchStatus","costUnits","currentQuery","previousQuery","HistoricalDataCostChart","isCostChart","isNaN","useFilter","HistoricalDataTrendChart","currentLimitData","previousLimitData","HistoricalDataUsageChart","getTrendChart","getUsageChart","paddingRight","paddingTop","dataListHeading","groupByHeading","tagLink","tagsContainer","getDataListItems","tag","val","DataListItem","DataListItemRow","DataListItemCells","dataListCells","DataListCell","dataListItems","DataList","isCompact","TagView","getTagValueCount","queryFromRoute","search","TagModal","TagLink","costValue","costLabelDate","global_FontSize_sm","header","justifyContent","backgroundColor","global_BackgroundColor_100","infoDescription","global_disabled_color_100","breadcrumbOverride","buildDetailsLink","detailsURL","groupByKey","getGroupByOrg","getTotalCost","description","filterByAccount","showTags","Link","to","BreakdownHeader","getIdKeyForTab","tab","activeTabKey","getAvailableTabs","contentRef","getTab","Tab","eventKey","tabContentId","tabContentRef","TabTitleText","getTabTitle","getTabContent","availableTabs","TabContent","getTabItem","costOverviewComponent","historicalDataComponent","emptyTab","currentTab","getTabs","Tabs","activeKey","onSelect","handleTabClick","tabIndex","updateReport","prevState","noReport","noLocation","NoRatesState","getUsageRangeText","metric","range_value","range_unit","rates","notAvailableText","Table","cells","replace","m","toUpperCase","value_unit","period","getSourceUUID","uuid","fetch","priceListStatus","priceListProvider","priceListError","priceList","error","priceListRates","close","renderContent","PriceListModal","providerType","selectProviders","providerUuid","ratesPerProvider","fetchPriceList","isDropdownOpen","isExportModalOpen","isPriceListModalOpen","getExportModal","handleExportModalClose","getPriceListModal","handlePriceListModalClose","handleExportModalOpen","handlePriceListModalOpen","handleOnSelect","handleOnToggle","showPriceListOption","DropdownItem","component","unshift","Dropdown","toggle","KebabToggle","onToggle","isPlain","position","dropdownItems","Actions","groupBySelector","groupBySelectorLabel","defaultItem","isGroupByOpen","getCurrentGroupBy","getIdKeyForGroupBy","groupByKeys","getGroupByItems","sortedData","roots","org","level","filteredOrgs","root","handleGroupByClear","currentItem","handleGroupBySelect","selection","onItemClicked","handleGroupByToggle","groupByItems","Select","onClear","placeholderText","selections","typeahead","SelectOption","GroupByOrg","hasTagKeys","keepData","tagKey","GroupByTag","groupByOrgOptions","groupByTagOptions","isGroupByOrgVisible","isGroupByTagVisible","handleGroupByClick","orgReport","tagReport","allOptions","showOrgs","DropdownToggle","orgReportFetchStatus","tagReportFetchStatus","GroupBy","toolbarContainer","global_BackgroundColor_light_100","selectOverride","defaultFilters","categoryInput","filters","isCategoryDropdownOpen","isOrgUnitSelectExpanded","isTagValueDropdownOpen","isTagKeySelectExpanded","isTagValueSelectExpanded","tagKeyValueInput","getDefaultCategory","categoryOptions","getActiveFilters","isArray","substring","onDelete","chip","filterType","_filterType","onFilterRemoved","getCurrentCategoryOption","currentCategory","onCategoryClick","onCategorySelect","currentTagKey","onCategoryToggle","getCategoryInput","categoryOption","ToolbarFilter","categoryName","chips","deleteChip","showToolbarItem","InputGroup","TextInput","onCategoryInputChange","placeholder","onKeyDown","evt","onCategoryInput","control","getDefaultCategoryOptions","prevFilters","onFilterAdded","getOrgUnitSelect","getOrgUnitOptions","compareTo","node","checkbox","onOrgUnitToggle","onOrgUnitSelect","target","prevSelections","getTagKeySelect","selectOptions","getTagKeyOptions","selectOption","ToolbarItem","onTagKeyClear","onTagKeyToggle","onTagKeySelect","isPlaceholder","getTagValueSelect","tagKeyOption","getTagValueOptions","onTagValueToggle","onTagValueSelect","onTagValueInputChange","onTagValueInput","getExportButton","isExportDisabled","handleExportClicked","plain","onExportClicked","pagination","showExport","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","ToolbarToggleGroup","breakpoint","toggleIcon","ToolbarGroup","getCategoryDropdown","alignment","DataToolbar","project","costLabelUnit","info","verticalAlign","infoIcon","global_FontSize_md","infoTitle","baseQuery","delta","groupByOptions","showPopover","handlePopoverClick","show","onGroupByClicked","providersError","showContent","Popover","bodyContent","providersQueryString","selectProvidersError","providersFetchStatus","selectProvidersFetchStatus","DetailsHeader","emptyState","infoArrow","infoArrowDesc","monthOverMonthOverride","global_success_color_100","global_danger_color_100","tableOverride","columns","buildCostLink","groupByTagKey","getGroupByTagKey","orderBy","transforms","sortable","monthOverMonth","getMonthOverMonthCost","InfrastructureCost","getInfrastructureCost","getSupplementaryCost","getActions","sortBy","getEmptyState","showMargin","tagIndex","abs","showPercentage","showValue","iconOverride","ininfoArrow","getSortBy","asc","c","column","desc","isSelected","rowId","onSelected","row","selected","selectedItems","parent","handleOnSort","onSort","gridBreakPoint","DetailsTable","getCategoryOptions","DetailsToolbar","ocpDetails","paginationContainer","tableContainer","getPagination","isBottom","page","Pagination","itemCount","onPerPageSelect","handlePerPageSelect","onSetPage","handleSetPage","perPage","getTable","handleSelected","handleSort","getToolbar","handleFilterAdded","handleFilterRemoved","filterValue","history","found","filteredQuery","getRouteForQuery","_event","pageNumber","sortType","isSortAscending","newItems","reset","isLoading","noProviders","selectReportError","ocpCostOverview","selectCurrentWidgets","CostOverview","ocpHistoricalData","HistoricalData"],"mappings":"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","file":"b03d048cb2dbc1db94ab.bundle.js","sourcesContent":["import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getYear from 'date-fns/get_year';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nimport { unitLookupKey, } from 'utils/formatValue';\nexport function transformReport(report, type = 1 /* daily */, key = 'date', reportItem = 'cost', reportItemValue = 'total') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        idKey: key,\n        report,\n        reportItemValue,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedReportItems(items);\n    let result;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        result = computedItems.map(i => createDatum(i[reportItem], i, key, reportItem));\n    }\n    else {\n        result = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            return [\n                ...acc,\n                createDatum(prevValue + d[reportItem], d, key, reportItem),\n            ];\n        }, []);\n    }\n    return key === 'date' ? padComputedReportItems(result) : result;\n}\nexport function createDatum(value, computedItem, idKey = 'date', reportItem = 'cost') {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value)\n        ? parseFloat(value.toFixed(2))\n        : isInt(value)\n            ? value\n            : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.id,\n        name: computedItem.id,\n        units: computedItem.units ? computedItem.units[reportItem] : undefined,\n    };\n}\n// This pads computed report items with null datum objects, representing missing data at the begining and end of the\n// data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n// message in the tooltip, which helps distinguish between zero values and when there is no data available.\nexport function padComputedReportItems(datums) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    // Pad start for missing data\n    let padDate = startOfMonth(firstDate);\n    for (let i = padDate.getDate(); i < firstDate.getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createDatum(null, { id }, 'date', null));\n    }\n    // Fill middle with existing data\n    result.push(...datums);\n    // Pad end for missing data\n    padDate = new Date(lastDate);\n    for (let i = padDate.getDate() + 1; i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createDatum(null, { id }, 'date', null));\n    }\n    return result;\n}\nexport function getDatumDateRange(datums, offset = 0) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        // If datums is empty, obtain the month based on offset (e.g., to show previous month in chart legends)\n        if (offset) {\n            today.setMonth(today.getMonth() - offset);\n        }\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    const start = new Date(datums[0].key + 'T00:00:00');\n    const end = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDatumDateRange(datums, offset);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(`chart.date_range`, {\n        count: getDate(end),\n        endDate: formatDate(end, 'DD'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'DD'),\n        year: getYear(end),\n    });\n}\nexport function getMonthRangeString(datums, key = 'chart.month_legend_label', offset = 0) {\n    const [start, end] = getDateRange(datums, true, false, offset);\n    return [\n        i18next.t(key, {\n            month: Number(formatDate(start, 'M')) - 1,\n        }),\n        i18next.t(key, {\n            month: Number(formatDate(end, 'M')) - 1,\n        }),\n    ];\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'core-hours':\n            case 'hrs':\n            case 'gb':\n            case 'gb-hours':\n            case 'gb-mo':\n            case 'vm-hours':\n                return i18next.t(`unit_tooltips.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date', units) {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'DD MMM YYYY');\n        return `${date} ${formatValue(datum.y, units ? units : datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nexport function getCostRangeString(datums, key = 'chart.cost_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(key, {\n        count: getDate(end),\n        endDate: formatDate(end, 'D'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'D'),\n        year: getYear(end),\n    });\n}\nexport function getUsageRangeString(datums, key = 'chart.usage_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    return getCostRangeString(datums, key, firstOfMonth, lastOfMonth, offset);\n}\nfunction isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nfunction isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\n","import { global_Color_dark_100, global_Color_light_100, global_primary_color_100, global_primary_color_200, global_success_color_100, global_success_color_200, } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const chartStyles = {\n    padding: 8,\n    group: {\n        data: { strokeWidth: 2, fillOpacity: 0.4 },\n    },\n    tooltipText: {\n        fontSize: '14px',\n        fill: global_Color_light_100.value,\n    },\n    tooltipFlyout: { fill: global_Color_dark_100.value },\n    previousMonth: {\n        data: {\n            fill: global_success_color_200.value,\n            stroke: global_success_color_100.value,\n        },\n    },\n    currentMonth: {\n        data: {\n            fill: global_primary_color_100.value,\n            stroke: global_primary_color_200.value,\n        },\n    },\n};\nexport const chartOverride = css `\n  :not(foo) svg {\n    overflow: visible;\n  }\n`;\n","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, ChartThemeVariant, getCustomTheme, } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, ChartThemeVariant.default, ChartTheme);\nexport default getTheme;\n","import { sort } from 'utils/sort';\nimport { getItemLabel } from './getItemLabel';\nexport function getComputedReportItems({ idKey, labelKey = idKey, report, reportItemValue = 'total', sortDirection = 0 /* asc */, sortKey = 'cost', }) {\n    return sort(getUnsortedComputedReportItems({\n        idKey,\n        labelKey,\n        report,\n        reportItemValue,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedReportItems({ report, idKey, labelKey = idKey, reportItemValue = 'total', }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            const type = dataPoint.type;\n            dataPoint.values.forEach((value) => {\n                // Ensure unique map IDs -- https://github.com/project-koku/koku-ui/issues/706\n                const idSuffix = idKey !== 'date' && idKey !== 'cluster' && value.cluster\n                    ? `-${value.cluster}`\n                    : '';\n                // org_unit_id workaround for storage and instance-type APIs\n                const id = idKey === 'org_entities' ? value.id || value.org_unit_id : value[idKey];\n                const mapId = `${id}${idSuffix}`;\n                // clusters will either contain the cluster alias or default to cluster ID\n                const cluster_alias = value.clusters && value.clusters.length > 0\n                    ? value.clusters[0]\n                    : undefined;\n                const cluster = cluster_alias || value.cluster;\n                const clusters = value.clusters ? value.clusters : [];\n                const capacity = value.capacity ? value.capacity.value : 0;\n                const cost = value.cost && value.cost.total ? value.cost.total.value : 0;\n                const deltaPercent = value.delta_percent ? value.delta_percent : 0;\n                const deltaValue = value.delta_value ? value.delta_value : 0;\n                const source_uuid = value.source_uuid ? value.source_uuid : [];\n                const supplementary = value.supplementary && value.supplementary.total\n                    ? value.supplementary.total.value\n                    : 0;\n                const infrastructure = value.infrastructure && value.infrastructure[reportItemValue]\n                    ? value.infrastructure[reportItemValue].value\n                    : 0;\n                let label;\n                const itemLabelKey = getItemLabel({ report, labelKey, value });\n                if (itemLabelKey === 'org_entities' && value.alias) {\n                    label = value.alias;\n                }\n                else if (itemLabelKey === 'account' && value.account_alias) {\n                    label = value.account_alias;\n                }\n                else if (itemLabelKey === 'cluster' && cluster_alias) {\n                    label = cluster_alias;\n                }\n                else if (value[itemLabelKey] instanceof Object) {\n                    label = value[itemLabelKey].value;\n                }\n                else {\n                    label = value[itemLabelKey];\n                }\n                const limit = value.limit ? value.limit.value : 0;\n                const request = value.request ? value.request.value : 0;\n                const usage = value.usage ? value.usage.value : 0;\n                const units = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (value.capacity && { capacity: value.capacity.units })), { cost: value.cost && value.cost.total ? value.cost.total.units : 'USD' }), (value.limit && { limit: value.limit.units })), (value.infrastructure &&\n                    value.infrastructure.total && {\n                    infrastructure: value.infrastructure.total.units,\n                })), (value.request && { request: value.request.units })), (value.supplementary &&\n                    value.supplementary.total && {\n                    supplementary: value.supplementary.total.units,\n                })), (value.usage && { usage: value.usage.units }));\n                const item = itemMap.get(mapId);\n                if (item) {\n                    itemMap.set(mapId, Object.assign(Object.assign({}, item), { capacity: item.capacity + capacity, cost: item.cost + cost, supplementary: item.supplementary + supplementary, infrastructure: item.infrastructure + infrastructure, limit: item.limit + limit, request: item.request + request, usage: item.usage + usage }));\n                }\n                else {\n                    itemMap.set(mapId, {\n                        capacity,\n                        cluster,\n                        clusters,\n                        cost,\n                        deltaPercent,\n                        deltaValue,\n                        source_uuid,\n                        supplementary,\n                        id,\n                        infrastructure,\n                        label,\n                        limit,\n                        request,\n                        type,\n                        units,\n                        usage,\n                    });\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import { tagPrefix } from 'api/queries/query';\nexport function getItemLabel({ report, labelKey, value }) {\n    let itemLabelKey = String(labelKey);\n    if (report.meta && report.meta.group_by) {\n        const group_by = report.meta.group_by;\n        for (const key of Object.keys(group_by)) {\n            if (key.indexOf(tagPrefix)) {\n                const tagPrefixKey = tagPrefix + labelKey;\n                if (value.hasOwnProperty(tagPrefixKey)) {\n                    itemLabelKey = tagPrefixKey;\n                }\n            }\n        }\n    }\n    return itemLabelKey;\n}\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        cluster_lnk: 'cluster-lnk',\n        historical_data_btn: 'historical-data-btn',\n        show_more_btn: 'show-more-btn',\n        tag_lnk: 'tag-lnk',\n        view_all_btn: 'view-all-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n        view_all_link: 'view-all-lnk',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nexport function getNoDataForDateRangeString(key = 'no_data_for_date', offset = 1) {\n    const today = new Date();\n    if (offset) {\n        today.setMonth(today.getMonth() - offset);\n    }\n    const month = getMonth(today);\n    const endDate = formatDate(today, 'D');\n    const startDate = formatDate(startOfMonth(today), 'D');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n    });\n}\nexport function getForDateRangeString(value, key = 'for_date', offset = 1) {\n    const today = new Date();\n    if (offset) {\n        today.setMonth(today.getMonth() - offset);\n    }\n    const month = getMonth(today);\n    const endDate = formatDate(today, 'D');\n    const startDate = formatDate(startOfMonth(today), 'D');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n        value,\n    });\n}\nexport function getSinceDateRangeString(key = 'since_date') {\n    const today = new Date();\n    const month = getMonth(today);\n    const endDate = formatDate(today, 'D');\n    const startDate = formatDate(startOfMonth(today), 'D');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n    });\n}\n","import { global_FontSize_sm } from '@patternfly/react-tokens';\nexport const styles = {\n    container: {\n        fontSize: global_FontSize_sm.value,\n    },\n};\n","import { MinusIcon } from '@patternfly/react-icons/dist/js/icons/minus-icon';\nimport React from 'react';\nimport { styles } from './emptyValueState.styles';\nexport const EmptyValueState = () => {\n    return (React.createElement(\"span\", { style: styles.container },\n        React.createElement(MinusIcon, null)));\n};\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */\n            ? getValueForItem(a, options)\n            : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */\n            ? getValueForItem(b, options)\n            : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n","import { global_Color_200, global_FontSize_xs, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = {\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n};\n","import { Card, CardBody, CardFooter, CardTitle, Title, } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './reportSummary.styles';\nconst ReportSummaryBase = ({ children, detailsLink, title, subTitle, status, t, }) => (React.createElement(Card, { style: styles.reportSummary },\n    React.createElement(CardTitle, null,\n        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { style: styles.subtitle }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: \"xs\" }),\n        React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" }),\n        React.createElement(Skeleton, { size: \"sm\" }),\n        React.createElement(Skeleton, { style: styles.legendSkeleton, size: \"xs\" }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst ReportSummary = translate()(ReportSummaryBase);\nexport { ReportSummary };\n","import { global_Color_200, global_FontSize_xs, global_spacer_lg, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = {\n    chartSkeleton: {\n        height: '175px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '470px',\n        marginRight: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Card, CardBody, CardFooter, CardTitle, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './reportSummaryAlt.styles';\nconst OcpCloudReportSummaryAltBase = ({ children, detailsLink, status, subTitle, t, tabs, title, }) => (React.createElement(Card, { style: styles.reportSummary },\n    React.createElement(Grid, { hasGutter: true },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { style: styles.cost },\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n                    Boolean(subTitle) && React.createElement(\"p\", { style: styles.subtitle }, subTitle)),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: \"xs\" }),\n                    React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" }),\n                    React.createElement(Skeleton, { size: \"sm\" }),\n                    React.createElement(Skeleton, { style: styles.legendSkeleton, size: \"xs\" }))) : (children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { style: styles.container },\n                React.createElement(\"div\", { style: styles.tops }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst ReportSummaryAlt = translate()(OcpCloudReportSummaryAltBase);\nexport { ReportSummaryAlt };\n","import { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, global_spacer_xs, } from '@patternfly/react-tokens';\nexport const styles = {\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    text: {\n        paddingBottom: global_spacer_sm.value,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    units: {\n        paddingLeft: global_spacer_xs.value,\n        paddingBottom: global_spacer_sm.value,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n        whiteSpace: 'nowrap',\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    valueContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        width: '50%',\n        wordWrap: 'break-word',\n    },\n};\n","import { Tooltip } from '@patternfly/react-core';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey, } from 'utils/formatValue';\nimport { styles } from './reportSummaryDetails.styles';\nconst ReportSummaryDetailsBase = ({ chartType, computedReportItem = 'cost', computedReportItemValue = 'total', costLabel, formatValue, formatOptions, report, requestFormatOptions, requestLabel, showTooltip = false, showUnits = false, showUsageFirst = false, t, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let supplementaryCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const hasTotal = report && report.meta && report.meta.total;\n    const hasCost = hasTotal && report.meta.total.cost && report.meta.total.cost.total;\n    const hasCount = hasTotal && report.meta.total.count;\n    const hasSupplementaryCost = hasTotal &&\n        report.meta.total.supplementary &&\n        report.meta.total.supplementary.total &&\n        report.meta.total.supplementary.total.value;\n    const hasInfrastructureCost = hasTotal &&\n        report.meta.total.infrastructure &&\n        report.meta.total.infrastructure[computedReportItemValue] &&\n        report.meta.total.infrastructure[computedReportItemValue].value;\n    const hasRequest = hasTotal && report.meta.total.request;\n    const hasUsage = hasTotal && report.meta.total.usage;\n    if (hasTotal) {\n        cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD', formatOptions);\n        supplementaryCost = formatValue(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost\n            ? report.meta.total.supplementary.total.units\n            : 'USD', formatOptions);\n        infrastructureCost = formatValue(hasInfrastructureCost\n            ? report.meta.total.infrastructure[computedReportItemValue].value\n            : 0, hasInfrastructureCost\n            ? report.meta.total.infrastructure[computedReportItemValue].units\n            : 'USD', formatOptions);\n        request = formatValue(hasRequest ? report.meta.total.request.value : 0, hasRequest ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        if (hasUsage && report.meta.total.usage.value >= 0) {\n            usage = formatValue(hasUsage ? report.meta.total.usage.value : 0, hasUsage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            // Workaround for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatValue(hasUsage ? report.meta.total.usage : 0, hasCount ? report.meta.total.count.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = () => {\n        let value = cost;\n        if (computedReportItem === \"infrastructure\" /* infrastructure */) {\n            value = infrastructureCost;\n        }\n        else if (computedReportItem === \"supplementary\" /* supplementary */) {\n            value = supplementaryCost;\n        }\n        return (React.createElement(\"div\", { style: styles.valueContainer },\n            Boolean(showTooltip) ? (React.createElement(Tooltip, { content: t('dashboard.total_cost_tooltip', {\n                    infrastructureCost,\n                    supplementaryCost,\n                }), enableFlip: true },\n                React.createElement(\"div\", { style: styles.value }, value))) : (React.createElement(\"div\", { style: styles.value }, value)),\n            React.createElement(\"div\", { style: styles.text },\n                React.createElement(\"div\", null, costLabel))));\n    };\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasRequest\n            ? report.meta.total.request.units\n            : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { style: styles.valueContainer },\n            React.createElement(\"div\", { style: styles.value },\n                request,\n                Boolean(showUnits &&\n                    (units || (hasRequest && report.meta.total.request.value >= 0))) && React.createElement(\"span\", { style: styles.units }, unitsLabel)),\n            React.createElement(\"div\", { style: styles.text },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasUsage ? report.meta.total.usage.units : '';\n        // added as a work-around for azure #1079\n        const _units = unitLookupKey(units ? units : usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { style: styles.valueContainer },\n            React.createElement(\"div\", { style: styles.value },\n                usage,\n                Boolean(showUnits &&\n                    (units || (hasUsage && report.meta.total.usage.value >= 0))) && React.createElement(\"span\", { style: styles.units }, unitsLabel)),\n            React.createElement(\"div\", { style: styles.text },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (chartType === \"cost\" /* cost */ ||\n        chartType === \"supplementary\" /* supplementary */) {\n        return React.createElement(React.Fragment, null, getCostLayout());\n    }\n    else if (chartType === \"trend\" /* trend */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(),\n            getUsageLayout()));\n    }\n    else if (chartType === \"usage\" /* usage */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n    else {\n        return null;\n    }\n};\nconst ReportSummaryDetails = translate()(ReportSummaryDetailsBase);\nexport { ReportSummaryDetails };\n","import { global_spacer_md } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const reportSummaryItem = css `\n  :not(:last-child) {\n    margin-bottom: ${global_spacer_md.value};\n  }\n`;\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { reportSummaryItem } from './reportSummaryItem.styles';\nconst ReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: reportSummaryItem },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst ReportSummaryItem = translate()(ReportSummaryItemBase);\nexport { ReportSummaryItem };\n","import { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = {\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n};\n","import { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nimport { styles } from './reportSummaryItems.styles';\nclass ReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { computedReportItemValue = 'total', idKey, labelKey, report, } = this.props;\n        const computedItems = getComputedReportItems({\n            report,\n            idKey,\n            labelKey,\n            reportItemValue: computedReportItemValue,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: \"md\" }),\n                React.createElement(Skeleton, { size: \"md\", style: styles.skeleton }),\n                React.createElement(Skeleton, { size: \"md\", style: styles.skeleton }),\n                React.createElement(Skeleton, { size: \"md\", style: styles.skeleton })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst ReportSummaryItems = translate()(ReportSummaryItemsBase);\nexport { ReportSummaryItems, };\n","import { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200, global_FontFamily_sans_serif, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    currentCostData: {\n        fill: 'none',\n    },\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    itemsPerRow: 2,\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 200,\n    },\n    previousCostData: {\n        fill: 'none',\n    },\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_200.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './costChart.styles';\nclass CostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                // Note: Container order is important\n                CursorVoronoiContainer: createContainer('cursor', 'voronoi'),\n                series: [\n                    {\n                        childName: 'previousCost',\n                        data: previousCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'currentCost',\n                        data: currentCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentCostData, costKey, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'previousInfrastructureCost',\n                        data: previousInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[1],\n                                type: 'dash',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                        },\n                    },\n                    {\n                        childName: 'currentInfrastructureCost',\n                        data: currentInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[1],\n                                type: 'dash',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentColorScale[1] }),\n                        },\n                    },\n                ],\n            });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            const { CursorVoronoiContainer } = this.state;\n            if (!CursorVoronoiContainer) {\n                return undefined;\n            }\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData() }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > 400\n                    ? chartStyles.itemsPerRow\n                    : 1;\n            return (React.createElement(ChartLegend, { height: 25, gutter: 10, itemsPerRow: itemsPerRow, name: \"legend\", responsive: false, style: chartStyles.legend }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null\n                ? formatter(datum.y, datum.units, formatDatumOptions)\n                : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign({ childName: s.childName }, s.legendItem), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n            return undefined;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !==\n            this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.previousInfrastructureCostData !==\n                this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentInfrastructure = currentInfrastructureCostData\n            ? getMaxValue(currentInfrastructureCostData)\n            : 0;\n        const maxCurrentUsage = currentCostData ? getMaxValue(currentCostData) : 0;\n        const maxPreviousInfrastructure = previousInfrastructureCostData\n            ? getMaxValue(previousInfrastructureCostData)\n            : 0;\n        const maxPreviousUsage = previousCostData\n            ? getMaxValue(previousCostData)\n            : 0;\n        const maxValue = Math.max(maxCurrentInfrastructure, maxCurrentUsage, maxPreviousInfrastructure, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentCostData\n            ? getDate(getDateRange(currentCostData, true, true)[1])\n            : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData\n            ? getDate(getDateRange(previousCostData, true, true)[1])\n            : 0;\n        return currentInfrastructureDate > 0 ||\n            currentUsageDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentUsageDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 75\n            : containerHeight;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: chartOverride, ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                    series &&\n                        series.map((s, index) => {\n                            return this.getChart(s, index);\n                        }),\n                    React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                    React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis })))));\n    }\n}\nexport { CostChart };\n","import { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = {\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n};\n","import { CostChart } from 'components/charts/costChart';\nimport React from 'react';\nimport { styles } from './reportSummaryTrend.styles';\nconst ReportSummaryCost = props => (React.createElement(\"div\", { style: styles.chart },\n    React.createElement(CostChart, Object.assign({}, props))));\nexport { ReportSummaryCost };\n","import { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200, global_FontFamily_sans_serif, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 175,\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_200.value,\n    ],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_label'\n                    : 'chart.cost_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                // Note: Container order is important\n                CursorVoronoiContainer: createContainer('cursor', 'voronoi'),\n                series: [\n                    {\n                        childName: 'previousCost',\n                        data: previousData,\n                        legendItem: {\n                            name: getCostRangeString(previousData, key, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'currentCost',\n                        data: currentData,\n                        legendItem: {\n                            name: getCostRangeString(currentData, key, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[0] }),\n                        },\n                    },\n                ],\n            });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            const { CursorVoronoiContainer } = this.state;\n            if (!CursorVoronoiContainer) {\n                return undefined;\n            }\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData() }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: this.getLegendData(), gutter: 10, height: 25, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical', style: chartStyles.legend }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions, units } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null\n                ? formatter(datum.y, units || datum.units, formatDatumOptions)\n                : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            // Todo: Leave one legend item visible at all times?\n            // const { hiddenSeries, series } = this.state;\n            // const leaveVisible = hiddenSeries.size === series.length - 1;\n            // if (leaveVisible && !this.isSeriesHidden(props.index)) {\n            //   return;\n            // }\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign({ childName: s.childName }, s.legendItem), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentData, previousData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrent = currentData ? getMaxValue(currentData) : 0;\n        const maxPrevious = previousData ? getMaxValue(previousData) : 0;\n        const maxValue = Math.max(maxCurrent, maxPrevious);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData\n            ? getDate(getDateRange(previousData, true, true)[1])\n            : 0;\n        const currentDate = currentData\n            ? getDate(getDateRange(currentData, true, true)[1])\n            : 0;\n        return currentDate > 0 || previousDate > 0\n            ? Math.max(currentDate, previousDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 20\n            : containerHeight;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: chartOverride, ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                    series &&\n                        series.map((s, index) => {\n                            return this.getChart(s, index);\n                        }),\n                    React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                    React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis })))));\n    }\n}\nexport { TrendChart };\n","import { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './reportSummaryTrend.styles';\nconst ReportSummaryTrend = props => (React.createElement(\"div\", { style: styles.chart },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { ReportSummaryTrend };\n","import { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200, global_FontFamily_sans_serif, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartContainer: {\n        marginTop: global_spacer_lg.value,\n    },\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    itemsPerRow: 2,\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 380,\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        global_disabled_color_200.value,\n        chart_color_green_100.value,\n        global_disabled_color_200.value,\n        chart_color_green_200.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_200.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getDateRange, getMaxValue, getTooltipContent, getUsageRangeString, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n            const usageKey = 'chart.usage_legend_label';\n            const requestKey = 'chart.requests_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                // Note: Container order is important\n                CursorVoronoiContainer: createContainer('cursor', 'voronoi'),\n                series: [\n                    {\n                        childName: 'previousUsage',\n                        data: previousUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.previousUsageData,\n                    },\n                    {\n                        childName: 'currentUsage',\n                        data: currentUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[1],\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.currentUsageData,\n                    },\n                    {\n                        childName: 'previousRequest',\n                        data: previousRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[2],\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.previousRequestData,\n                    },\n                    {\n                        childName: 'currentRequest',\n                        data: currentRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[3],\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.currentRequestData,\n                    },\n                ],\n            });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            const { CursorVoronoiContainer } = this.state;\n            if (!CursorVoronoiContainer) {\n                return undefined;\n            }\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData() }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > 300\n                    ? chartStyles.itemsPerRow\n                    : 1;\n            return (React.createElement(ChartLegend, { data: this.getLegendData(), height: 25, gutter: 10, itemsPerRow: itemsPerRow, name: \"legend\", style: chartStyles.legend }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null\n                ? formatter(datum.y, datum.units, formatDatumOptions)\n                : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign({ childName: s.childName }, s.legendItem), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentRequest = currentRequestData\n            ? getMaxValue(currentRequestData)\n            : 0;\n        const maxCurrentUsage = currentUsageData\n            ? getMaxValue(currentUsageData)\n            : 0;\n        const maxPreviousRequest = previousRequestData\n            ? getMaxValue(previousRequestData)\n            : 0;\n        const maxPreviousUsage = previousUsageData\n            ? getMaxValue(previousUsageData)\n            : 0;\n        const maxValue = Math.max(maxCurrentRequest, maxCurrentUsage, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const currentRequestDate = currentRequestData\n            ? getDate(getDateRange(currentRequestData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentUsageData\n            ? getDate(getDateRange(currentUsageData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousRequestData\n            ? getDate(getDateRange(previousRequestData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousUsageData\n            ? getDate(getDateRange(previousUsageData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 ||\n            currentUsageDate > 0 ||\n            previousRequestDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 480\n                ? containerHeight\n                : containerHeight + 20\n            : containerHeight;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: chartOverride, ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                    series &&\n                        series.map((s, index) => {\n                            return this.getChart(s, index);\n                        }),\n                    React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                    React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis })))));\n    }\n}\nexport { UsageChart };\n","import { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nimport { styles } from './reportSummaryTrend.styles';\nconst ReportSummaryUsage = props => (React.createElement(\"div\", { style: styles.chart },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { ReportSummaryUsage };\n","export function isEqual(obj1, obj2) {\n    let a = JSON.stringify(obj1);\n    let b = JSON.stringify(obj2);\n    if (!a) {\n        a = '';\n    }\n    if (!b) {\n        b = '';\n    }\n    return (a\n        .split('')\n        .sort()\n        .join('') ===\n        b\n            .split('')\n            .sort()\n            .join(''));\n}\n","import { global_spacer_sm, global_spacer_xl, global_spacer_xs, } from '@patternfly/react-tokens';\nexport const styles = {\n    form: {\n        marginLeft: global_spacer_sm.var,\n    },\n    modal: {\n        h2: {\n            marginBottom: global_spacer_xl.value,\n        },\n        input: {\n            marginRight: global_spacer_xs.var,\n        },\n        ul: {\n            marginLeft: global_spacer_sm.var,\n        },\n    },\n    title: {\n        paddingBottom: global_spacer_xl.var,\n    },\n};\n","import { Button, ButtonVariant } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/query';\nimport formatDate from 'date-fns/format';\nimport fileDownload from 'js-file-download';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { exportActions, exportSelectors } from 'store/exports';\nimport { getTestProps, testIds } from 'testIds';\nconst reportType = \"cost\" /* cost */;\nexport class ExportSubmitBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            fetchReportClicked: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExport = () => {\n            const { report, reportFetchStatus } = this.props;\n            if (report && reportFetchStatus === 2 /* complete */) {\n                fileDownload(report.data, this.getFileName(), 'text/csv');\n                this.handleClose();\n            }\n        };\n        this.getFileName = () => {\n            const { groupBy, reportPathsType, t } = this.props;\n            const fileName = t('export.file_name', {\n                provider: reportPathsType,\n                groupBy,\n                date: formatDate(new Date(), 'YYYY-MM-DD'),\n            });\n            return `${fileName}.csv`;\n        };\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleFetchReport = () => {\n            const { exportReport, queryString, reportPathsType } = this.props;\n            exportReport(reportPathsType, reportType, queryString);\n            this.setState({\n                fetchReportClicked: true,\n            }, () => {\n                this.getExport();\n            });\n        };\n        this.handleResolutionChange = (_, event) => {\n            this.setState({ resolution: event.currentTarget.value });\n        };\n        this.handleResolutionChange = this.handleResolutionChange.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        const { report } = this.props;\n        const { fetchReportClicked } = this.state;\n        if (prevProps.report !== report && fetchReportClicked) {\n            this.getExport();\n        }\n    }\n    render() {\n        const { reportFetchStatus, t } = this.props;\n        return (React.createElement(Button, Object.assign({}, getTestProps(testIds.export.submit_btn), { isDisabled: reportFetchStatus === 1 /* inProgress */, key: \"confirm\", onClick: this.handleFetchReport, variant: ButtonVariant.primary }), t('export.confirm')));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const { groupBy, isAllItems, items, query, reportPathsType, resolution, } = props;\n    const getQueryString = () => {\n        const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { group_by: undefined, order_by: undefined });\n        newQuery.filter.resolution = resolution;\n        let newQueryString = getQuery(newQuery);\n        if (isAllItems) {\n            newQueryString += `&group_by[${groupBy}]=*`;\n        }\n        else {\n            for (const item of items) {\n                newQueryString += `&group_by[${groupBy}]=` + item.label;\n            }\n        }\n        return newQueryString;\n    };\n    const queryString = getQueryString();\n    const report = exportSelectors.selectExport(state, reportPathsType, reportType, queryString);\n    const reportError = exportSelectors.selectExportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = exportSelectors.selectExportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    exportReport: exportActions.exportReport,\n};\nconst ExportSubmit = translate()(connect(mapStateToProps, mapDispatchToProps)(ExportSubmitBase));\nexport { ExportSubmit };\n","import { Button, ButtonVariant, Form, FormGroup, Modal, Radio, Title, } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { exportActions } from 'store/exports';\nimport { getTestProps, testIds } from 'testIds';\nimport { sort } from 'utils/sort';\nimport { styles } from './exportModal.styles';\nimport { ExportSubmit } from './exportSubmit';\nconst resolutionOptions = [\n    { label: 'Daily', value: 'daily' },\n    { label: 'Monthly', value: 'monthly' },\n];\nexport class ExportModalBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            resolution: 'daily',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleResolutionChange = (_, event) => {\n            this.setState({ resolution: event.currentTarget.value });\n        };\n        this.handleResolutionChange = this.handleResolutionChange.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        const { isOpen } = this.props;\n        if (isOpen && !prevProps.isOpen) {\n            this.setState(Object.assign({}, this.defaultState));\n        }\n    }\n    render() {\n        const { groupBy, isAllItems, items, query, reportPathsType, t, } = this.props;\n        const { resolution } = this.state;\n        const sortedItems = [...items];\n        if (this.props.isOpen) {\n            sort(sortedItems, {\n                key: 'id',\n                direction: 0 /* asc */,\n            });\n        }\n        let selectedLabel = t('export.selected', { groupBy });\n        if (groupBy.indexOf(tagPrefix) !== -1) {\n            selectedLabel = t('export.selected_tags');\n        }\n        return (React.createElement(Modal, { style: styles.modal, isOpen: this.props.isOpen, onClose: this.handleClose, title: t('export.title'), variant: \"small\", actions: [\n                React.createElement(ExportSubmit, { groupBy: groupBy, isAllItems: isAllItems, items: items, key: \"confirm\", onClose: this.handleClose, query: query, reportPathsType: reportPathsType, resolution: resolution }),\n                React.createElement(Button, Object.assign({}, getTestProps(testIds.export.cancel_btn), { key: \"cancel\", onClick: this.handleClose, variant: ButtonVariant.link }), t('export.cancel'))\n            ] },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, t('export.heading', { groupBy })),\n            React.createElement(Form, { style: styles.form },\n                React.createElement(FormGroup, { label: t('export.aggregate_type'), fieldId: \"aggregate-type\" },\n                    React.createElement(React.Fragment, null, resolutionOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `resolution-${index}`, isValid: option.value !== undefined, label: t(option.label), value: option.value, checked: resolution === option.value, name: \"resolution\", onChange: this.handleResolutionChange, \"aria-label\": t(option.label) }))))),\n                React.createElement(FormGroup, { label: selectedLabel, fieldId: \"selected-labels\" },\n                    React.createElement(\"ul\", null, sortedItems.map((groupItem, index) => {\n                        return React.createElement(\"li\", { key: index }, groupItem.label);\n                    }))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    exportReport: exportActions.exportReport,\n};\nconst ExportModal = translate()(connect(mapStateToProps, mapDispatchToProps)(ExportModalBase));\nexport { ExportModal };\n","import { global_spacer_lg } from '@patternfly/react-tokens';\nexport const styles = {\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title, } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons/dist/js/icons/dollar-sign-icon';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getTestProps, testIds } from 'testIds';\nimport { getReleasePath } from 'utils/pathname';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getViewSources = () => {\n            const { t } = this.props;\n            const release = getReleasePath();\n            return (React.createElement(\"a\", Object.assign({ href: `${release}/settings/sources` }, getTestProps(testIds.providers.view_all_link)), t('providers.view_sources')));\n        };\n    }\n    render() {\n        const { t } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: DollarSignIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, t('providers.empty_state_title')),\n            React.createElement(EmptyStateBody, null, t('providers.empty_state_desc')),\n            React.createElement(\"div\", { style: styles.viewSources }, this.getViewSources())));\n    }\n}\nconst NoProvidersState = translate()(NoProvidersStateBase);\nexport { NoProvidersState };\n","export const getReleasePath = () => {\n    const pathName = window.location.pathname.split('/');\n    pathName.shift();\n    let release = '';\n    if (pathName[0] === 'beta') {\n        release = `/beta`;\n    }\n    return release;\n};\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = () => {\n    return (React.createElement(Main, null,\n        React.createElement(NoProvidersState, null)));\n};\nexport default withRouter(NoProviders);\n","import NoProviders from './notProviders';\nexport default NoProviders;\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nconst NoProviders = () => {\n    return (React.createElement(Main, null,\n        React.createElement(LoadingState, null)));\n};\nexport default withRouter(NoProviders);\n","import Loading from './loading';\nexport default Loading;\n","import { orgUnitIdKey } from 'api/queries/query';\nexport const getGroupById = (query) => {\n    const groupBys = query && query.group_by ? Object.keys(query.group_by) : [];\n    return groupBys.find(key => key !== orgUnitIdKey);\n};\nexport const getGroupByValue = (query) => {\n    const groupById = getGroupById(query);\n    return groupById ? query.group_by[groupById] : undefined;\n};\n","import NotAvailable from './notAvailable';\nexport default NotAvailable;\n","import { global_spacer_3xl, global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = {\n    clustersContainer: {\n        marginRight: global_spacer_3xl.value,\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { global_spacer_2xl, global_spacer_lg } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const styles = {\n    modal: {\n        // Workaround for isLarge not working properly\n        height: '700px',\n        width: '600px',\n    },\n    subTitle: {\n        marginTop: global_spacer_2xl.value,\n        textAlign: 'right',\n    },\n};\nexport const modalOverride = css `\n  & .pf-c-modal-box__body {\n    margin-top: ${global_spacer_lg.value};\n  }\n  & .pf-c-modal-box__footer {\n    display: none;\n  }\n`;\n","import React from 'react';\nimport { translate } from 'react-i18next';\nclass ClusterViewBase extends React.Component {\n    render() {\n        const { item } = this.props;\n        if (!item.clusters) {\n            return null;\n        }\n        return item.clusters.map((cluster, index) => (React.createElement(\"div\", { key: `cluster-${index}` }, cluster)));\n    }\n}\nconst ClusterView = translate()(ClusterViewBase);\nexport { ClusterView, ClusterViewBase };\n","import { Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { modalOverride, styles } from './clusterModal.styles';\nimport { ClusterView } from './clusterView';\nclass ClusterModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        const { isOpen, item } = this.props;\n        return nextProps.item !== item || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupBy, isOpen, item, t } = this.props;\n        return (React.createElement(Modal, { className: modalOverride, style: styles.modal, isOpen: isOpen, onClose: this.handleClose, title: t('details.clusters_modal_title', {\n                groupBy,\n                name: item.label,\n            }), width: '50%' },\n            React.createElement(ClusterView, { item: item })));\n    }\n}\nconst ClusterModal = translate()(ClusterModalBase);\nexport { ClusterModal };\n","import React from 'react';\nimport { translate } from 'react-i18next';\nimport { getTestProps, testIds } from 'testIds';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { styles } from './cluster.styles';\nimport { ClusterModal } from './clusterModal';\nclass ClusterBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isOpen: false,\n            showAll: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = (isOpen) => {\n            this.setState({ isOpen });\n        };\n        this.handleOpen = event => {\n            this.setState({ isOpen: true });\n            event.preventDefault();\n            return false;\n        };\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n    }\n    render() {\n        const { groupBy, report, t } = this.props;\n        const { isOpen, showAll } = this.state;\n        let charCount = 0;\n        const maxChars = 50;\n        const someClusters = [];\n        const allClusters = [];\n        const computedItems = getComputedReportItems({\n            report,\n            idKey: groupBy,\n        });\n        const item = computedItems && computedItems.length ? computedItems[0] : undefined;\n        if (!item) {\n            return null;\n        }\n        for (const cluster of item.clusters) {\n            const prefix = someClusters.length > 0 ? ', ' : '';\n            const clusterString = `${prefix}${cluster}`;\n            if (showAll) {\n                someClusters.push(clusterString);\n            }\n            else if (charCount <= maxChars) {\n                if (charCount + clusterString.length > maxChars) {\n                    someClusters.push(clusterString\n                        .slice(0, maxChars - charCount)\n                        .trim()\n                        .concat('...'));\n                }\n                else {\n                    someClusters.push(clusterString);\n                }\n            }\n            charCount += clusterString.length;\n            allClusters.push(cluster);\n        }\n        return (React.createElement(\"div\", { style: styles.clustersContainer },\n            Boolean(someClusters) &&\n                someClusters.map((cluster, index) => (React.createElement(\"span\", { key: index }, cluster))),\n            Boolean(someClusters.length < allClusters.length) && (React.createElement(\"a\", Object.assign({}, getTestProps(testIds.details.cluster_lnk), { href: \"#/\", onClick: this.handleOpen }), t('details.more_clusters', {\n                value: allClusters.length - someClusters.length,\n            }))),\n            React.createElement(ClusterModal, { groupBy: groupBy, isOpen: isOpen, item: item, onClose: this.handleClose })));\n    }\n}\nconst Cluster = translate()(ClusterBase);\nexport { Cluster };\n","import { global_FontWeight_bold, global_spacer_3xl, global_spacer_md, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartHeight: 150,\n    subTitle: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n};\nexport const styles = {\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { ChartLabel, ChartLegend, ChartPie, ChartThemeColor, } from '@patternfly/react-charts';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { formatValue } from 'utils/formatValue';\nimport { chartStyles, styles } from './costChart.styles';\nclass CostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        // Override legend layout\n        this.getLegendLabel = () => {\n            return (_a) => {\n                var { values } = _a, props = __rest(_a, [\"values\"]);\n                return (React.createElement(ChartLabel, Object.assign({}, props, { style: [{ fontWeight: chartStyles.subTitle.fontWeight }, {}], text: [values[props.index], props.text] })));\n            };\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" })));\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    render() {\n        const { report, reportFetchStatus, t } = this.props;\n        const { width } = this.state;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost;\n        const hasMarkup = hasCost && report.meta.total.cost.markup;\n        const hasRaw = hasCost && report.meta.total.cost.raw;\n        const hasUsage = hasCost && report.meta.total.cost.usage;\n        const markupUnits = hasMarkup ? report.meta.total.cost.markup.units : 'USD';\n        const rawUnits = hasRaw ? report.meta.total.cost.raw.units : 'USD';\n        const usageUnits = hasUsage ? report.meta.total.cost.usage.units : 'USD';\n        const markupValue = hasMarkup ? report.meta.total.cost.markup.value : 0;\n        const rawValue = hasRaw ? report.meta.total.cost.raw.value : 0;\n        const usageValue = hasUsage ? report.meta.total.cost.usage.value : 0;\n        const markup = formatValue(hasMarkup ? report.meta.total.cost.markup.value : 0, markupUnits);\n        const raw = formatValue(hasRaw ? report.meta.total.cost.raw.value : 0, rawUnits);\n        const usage = formatValue(hasUsage ? report.meta.total.cost.usage.value : 0, usageUnits);\n        const markupLabel = t('breakdown.cost_chart.markup_label');\n        const rawLabel = t('breakdown.cost_chart.raw_label');\n        const usageLabel = t('breakdown.cost_chart.usage_label');\n        // Override legend label layout\n        const LegendLabel = this.getLegendLabel();\n        const Legend = (React.createElement(ChartLegend, { gutter: 25, itemsPerRow: 2, labelComponent: React.createElement(LegendLabel, { dy: 10, lineHeight: 1.5, values: [markup, raw, usage] }), rowGutter: 20 }));\n        return (React.createElement(\"div\", { ref: this.containerRef, style: { height: chartStyles.chartHeight } }, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(ChartPie, { ariaDesc: t('breakdown.cost_chart.aria_desc'), ariaTitle: t('breakdown.cost_chart.aria_title'), constrainToVisibleArea: true, data: [\n                { x: markupLabel, y: markupValue, units: markupUnits },\n                { x: rawLabel, y: rawValue, units: rawUnits },\n                { x: usageLabel, y: usageValue, units: usageUnits },\n            ], height: chartStyles.chartHeight, labels: ({ datum }) => t('breakdown.cost_chart.tooltip', {\n                name: datum.x,\n                value: formatValue(datum.y, datum.units),\n            }), legendComponent: Legend, legendData: [\n                {\n                    name: markupLabel,\n                },\n                {\n                    name: rawLabel,\n                },\n                {\n                    name: usageLabel,\n                },\n            ], legendOrientation: \"vertical\", legendPosition: \"right\", padding: {\n                bottom: 20,\n                left: 0,\n                right: width - chartStyles.chartHeight,\n                top: 20,\n            }, themeColor: ChartThemeColor.green, width: width }))));\n    }\n}\nconst CostChart = translate()(CostChartBase);\nexport { CostChart };\n","import { global_spacer_lg, global_spacer_xl } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const styles = {\n    mainContent: {\n        marginTop: global_spacer_xl.value,\n    },\n    subTitle: {\n        textAlign: 'right',\n    },\n};\nexport const modalOverride = css `\n  /* Workaround for isLarge not working properly */\n  &.pf-c-modal-box {\n    height: 700px;\n    width: 600px;\n  }\n  & .pf-c-modal-box__body {\n    margin-top: ${global_spacer_lg.value};\n  }\n  & .pf-c-modal-box__footer {\n    display: none;\n  }\n`;\n","import { Title } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { ReportSummaryItem, ReportSummaryItems, } from 'components/reports/reportSummary';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue } from 'utils/formatValue';\nimport { formatCurrency } from 'utils/formatValue';\nimport { styles } from './summaryModal.styles';\nconst reportType = \"cost\" /* cost */;\nclass SummaryModalViewBase extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { groupBy, report, reportFetchStatus, t } = this.props;\n        const cost = formatCurrency(report && report.meta && report.meta.total\n            ? report.meta.total.cost.total.value\n            : 0);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { style: styles.subTitle },\n                React.createElement(Title, { headingLevel: \"h2\", size: \"xl\" }, t('details.cost_value', { value: cost }))),\n            React.createElement(\"div\", { style: styles.mainContent },\n                React.createElement(ReportSummaryItems, { idKey: groupBy, report: report, status: reportFetchStatus }, ({ items }) => items.map(_item => (React.createElement(ReportSummaryItem, { key: _item.id, formatOptions: {}, formatValue: formatValue, label: _item.label ? _item.label.toString() : '', totalValue: report.meta.total.cost.total.value, units: report.meta.total.cost.total.units, value: _item.cost })))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, parentGroupBy, query, reportPathsType }) => {\n    const groupByOrg = query && query.group_by[orgUnitIdKey]\n        ? query.group_by[orgUnitIdKey]\n        : undefined;\n    const newQuery = {\n        filter: Object.assign({ time_scope_units: 'month', time_scope_value: -1, resolution: 'monthly', [parentGroupBy]: filterBy }, (query && query.filter && query.filter.account && { account: query.filter.account })),\n        filter_by: query ? query.filter_by : undefined,\n        group_by: Object.assign(Object.assign({}, (groupByOrg && { [orgUnitIdKey]: groupByOrg })), (groupBy && { [groupBy]: '*' })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst SummaryModalView = translate()(connect(mapStateToProps, mapDispatchToProps)(SummaryModalViewBase));\nexport { SummaryModalView };\n","import { Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { modalOverride } from './summaryModal.styles';\nimport { SummaryModalView } from './summaryModalView';\nclass SummaryModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        const { filterBy, isOpen } = this.props;\n        return nextProps.filterBy !== filterBy || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { filterBy, groupBy, isOpen, parentGroupBy, query, reportPathsType, t, } = this.props;\n        return (React.createElement(Modal, { className: modalOverride, isOpen: isOpen, onClose: this.handleClose, title: t('details.summary_modal_title', {\n                groupBy,\n                name: filterBy,\n            }), variant: \"large\" },\n            React.createElement(SummaryModalView, { filterBy: filterBy, groupBy: groupBy, parentGroupBy: parentGroupBy, query: query, reportPathsType: reportPathsType })));\n    }\n}\nconst SummaryModal = translate()(SummaryModalBase);\nexport { SummaryModal };\n","import { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = {\n    card: {},\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    viewAllContainer: {\n        marginLeft: '-15px',\n    },\n};\n","import { Button, ButtonType, ButtonVariant, Card, CardBody, CardFooter, CardTitle, Title, } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { ReportSummaryItem, ReportSummaryItems, } from 'components/reports/reportSummary';\nimport { SummaryModal } from 'pages/details/components/summary/summaryModal';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getTestProps, testIds } from 'testIds';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './summaryCard.styles';\nclass SummaryBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            isBulletChartModalOpen: false,\n        };\n        this.getItems = () => {\n            const { groupBy, report } = this.props;\n            const computedItems = getComputedReportItems({\n                report,\n                idKey: groupBy,\n            });\n            return computedItems;\n        };\n        this.getSummary = () => {\n            const { groupBy, report, reportFetchStatus } = this.props;\n            return (React.createElement(ReportSummaryItems, { idKey: groupBy, report: report, status: reportFetchStatus }, ({ items }) => items.map(reportItem => (React.createElement(ReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: {}, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : undefined, totalValue: report.meta.total.cost.total.value, units: report.meta.total.cost.total.units, value: reportItem.cost })))));\n        };\n        this.getViewAll = () => {\n            const { filterBy, groupBy, parentGroupBy, query, reportPathsType, t, } = this.props;\n            const { isBulletChartModalOpen } = this.state;\n            const computedItems = this.getItems();\n            const otherIndex = computedItems.findIndex(i => {\n                const id = i.id;\n                if (id && id !== null) {\n                    return id.toString().includes('Other');\n                }\n            });\n            if (otherIndex !== -1) {\n                return (React.createElement(\"div\", { style: styles.viewAllContainer },\n                    React.createElement(Button, Object.assign({}, getTestProps(testIds.details.view_all_btn), { onClick: this.handleBulletChartModalOpen, type: ButtonType.button, variant: ButtonVariant.link }), t('details.view_all', { groupBy })),\n                    React.createElement(SummaryModal, { filterBy: filterBy, groupBy: groupBy, isOpen: isBulletChartModalOpen, onClose: this.handleBulletChartModalClose, parentGroupBy: parentGroupBy, query: query, reportPathsType: reportPathsType })));\n            }\n            else {\n                return null;\n            }\n        };\n        this.handleBulletChartModalClose = (isOpen) => {\n            this.setState({ isBulletChartModalOpen: isOpen });\n        };\n        this.handleBulletChartModalOpen = event => {\n            this.setState({ isBulletChartModalOpen: true });\n            event.preventDefault();\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, reportType, } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType, reportType, } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { groupBy, reportFetchStatus, t } = this.props;\n        return (React.createElement(Card, { style: styles.card },\n            React.createElement(CardTitle, null,\n                React.createElement(Title, { headingLevel: \"h2\", size: \"md\" }, t('breakdown.summary_title', { groupBy }))),\n            React.createElement(CardBody, null, Boolean(reportFetchStatus === 1 /* inProgress */) ? (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: \"md\" }),\n                React.createElement(Skeleton, { size: \"md\", style: styles.skeleton }),\n                React.createElement(Skeleton, { size: \"md\", style: styles.skeleton }),\n                React.createElement(Skeleton, { size: \"md\", style: styles.skeleton }))) : (this.getSummary())),\n            React.createElement(CardFooter, null, this.getViewAll())));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, parentGroupBy, query, reportPathsType, reportType }) => {\n    const groupByOrg = query && query.group_by[orgUnitIdKey]\n        ? query.group_by[orgUnitIdKey]\n        : undefined;\n    const newQuery = {\n        filter: Object.assign({ limit: 3, time_scope_units: 'month', time_scope_value: -1, resolution: 'monthly', [parentGroupBy]: filterBy }, (query && query.filter && query.filter.account && { account: query.filter.account })),\n        filter_by: query ? query.filter_by : undefined,\n        group_by: Object.assign(Object.assign({}, (groupByOrg && { [orgUnitIdKey]: groupByOrg })), (groupBy && { [groupBy]: '*' })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportFetchStatus,\n        reportPathsType,\n        reportType,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst SummaryCard = translate()(connect(mapStateToProps, mapDispatchToProps)(SummaryBase));\nexport { SummaryCard };\n","import { global_FontWeight_bold, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = {\n    chartSkeleton: {\n        marginBottom: global_spacer_md.value,\n    },\n    capacity: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n};\n","import { ChartBullet } from '@patternfly/react-charts';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { getQuery } from 'api/queries/query';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { styles } from './usageChart.styles';\nclass UsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current && this.containerRef.current.clientWidth) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getCpuChart = () => {\n            const { parentGroupBy, reportFetchStatus, report } = this.props;\n            const { width } = this.state;\n            const chartDatum = parentGroupBy === 'cluster'\n                ? this.getChartDatumWithCapacity()\n                : this.getChartDatum();\n            if (!report || chartDatum.usage.length === 0) {\n                return null;\n            }\n            return (React.createElement(\"div\", null, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(React.Fragment, null,\n                Boolean(parentGroupBy === 'cluster') && this.getFreeSpace(),\n                React.createElement(ChartBullet, { comparativeErrorMeasureData: chartDatum.limit.value\n                        ? [\n                            {\n                                tooltip: chartDatum.limit.tooltip,\n                                y: chartDatum.limit.value,\n                            },\n                        ]\n                        : [], comparativeErrorMeasureLegendData: chartDatum.limit.value\n                        ? [{ name: chartDatum.limit.legend }]\n                        : [], height: this.getChartHeight(), labels: ({ datum }) => `${datum.tooltip}`, legendPosition: \"bottom-left\", legendItemsPerRow: this.getItemsPerRow(), maxDomain: this.isDatumEmpty(chartDatum) ? 100 : undefined, minDomain: 0, padding: {\n                        bottom: 75,\n                        left: 10,\n                        right: 50,\n                        top: 0,\n                    }, primarySegmentedMeasureData: chartDatum.usage.length\n                        ? chartDatum.usage.map(datum => {\n                            return {\n                                tooltip: datum.tooltip,\n                                y: datum.value,\n                            };\n                        })\n                        : [], primarySegmentedMeasureLegendData: chartDatum.usage.length\n                        ? chartDatum.usage.map(datum => {\n                            return {\n                                name: datum.legend,\n                            };\n                        })\n                        : [], qualitativeRangeData: chartDatum.ranges.length\n                        ? [\n                            {\n                                tooltip: chartDatum.ranges[0].tooltip,\n                                y: chartDatum.ranges[0].value,\n                            },\n                        ]\n                        : [], qualitativeRangeLegendData: chartDatum.ranges.length\n                        ? [{ name: chartDatum.ranges[0].legend }]\n                        : [], width: width })))));\n        };\n        this.getChartHeight = () => {\n            const { parentGroupBy } = this.props;\n            const { width } = this.state;\n            if (parentGroupBy === 'cluster') {\n                return width > 950 ? 115 : width > 450 ? 150 : 210;\n            }\n            else {\n                return width > 700 ? 115 : width > 450 ? 150 : 180;\n            }\n        };\n        this.getItemsPerRow = () => {\n            const { width } = this.state;\n            return width > 950 ? 4 : width > 700 ? 3 : width > 450 ? 2 : 1;\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, size: \"xs\" })));\n        };\n        this.isDatumEmpty = (datum) => {\n            let hasRange = false;\n            for (const range of datum.ranges) {\n                if (range.value) {\n                    hasRange = true;\n                    break;\n                }\n            }\n            let hasUsage = false;\n            for (const usage of datum.usage) {\n                if (usage.value) {\n                    hasUsage = true;\n                    break;\n                }\n            }\n            return !(datum.limit.value || hasRange || hasUsage);\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, reportType, } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n        window.addEventListener('resize', this.handleResize);\n        this.handleResize();\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType, reportType, } = this.props;\n        if (prevProps.queryString !== this.props.queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getChartDatum() {\n        const { report, reportType, t } = this.props;\n        const datum = {\n            limit: {},\n            ranges: [],\n            usage: [],\n        };\n        // Always show bullet chart legends https://github.com/project-koku/koku-ui/issues/963\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasLimit = hasTotal && report.meta.total.limit && report.meta.total.limit !== null;\n        const limit = Math.trunc(hasLimit ? report.meta.total.limit.value : 0);\n        const limitUnits = t(`units.${unitLookupKey(hasLimit ? report.meta.total.limit.units : '')}`);\n        datum.limit = {\n            legend: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            tooltip: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            value: Math.trunc(limit),\n        };\n        const hasRequest = hasTotal &&\n            report.meta.total.request &&\n            report.meta.total.request !== null;\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        datum.ranges = [\n            {\n                legend: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                value: Math.trunc(request),\n            },\n        ];\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        datum.usage = [\n            {\n                legend: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                value: Math.trunc(usage),\n            },\n        ];\n        return datum;\n    }\n    getChartDatumWithCapacity() {\n        const { report, reportType, t } = this.props;\n        const datum = {\n            limit: {},\n            ranges: [],\n            usage: [],\n        };\n        // Always show bullet chart legends https://github.com/project-koku/koku-ui/issues/963\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasLimit = hasTotal && report.meta.total.limit && report.meta.total.limit !== null;\n        const limit = Math.trunc(hasLimit ? report.meta.total.limit.value : 0);\n        const limitUnits = t(`units.${unitLookupKey(hasLimit ? report.meta.total.limit.units : '')}`);\n        datum.limit = {\n            legend: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            tooltip: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            value: Math.trunc(limit),\n        };\n        const hasCapacity = hasTotal &&\n            report.meta.total.request &&\n            report.meta.total.request !== null;\n        const capacity = Math.trunc(hasCapacity ? report.meta.total.capacity.value : 0);\n        const capacityUnits = t(`units.${unitLookupKey(hasCapacity ? report.meta.total.capacity.units : '')}`);\n        datum.ranges = [\n            {\n                legend: t(`details.usage.${reportType}_capacity`, {\n                    value: capacity,\n                    units: capacityUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_capacity`, {\n                    value: capacity,\n                    units: capacityUnits,\n                }),\n                value: Math.trunc(capacity),\n            },\n        ];\n        const hasRequest = hasTotal &&\n            report.meta.total.request &&\n            report.meta.total.request !== null;\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        datum.usage = [\n            {\n                legend: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                value: Math.trunc(usage),\n            },\n            {\n                legend: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                value: Math.trunc(request),\n            },\n        ];\n        return datum;\n    }\n    getFreeSpace() {\n        const { report, reportType, t } = this.props;\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasCapacity = hasTotal &&\n            report.meta.total.request &&\n            report.meta.total.request !== null;\n        const hasRequest = hasTotal &&\n            report.meta.total.request &&\n            report.meta.total.request !== null;\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const capacity = Math.trunc(hasCapacity ? report.meta.total.capacity.value : 0);\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        // Show negative values https://github.com/project-koku/koku-ui/issues/1214\n        const unusedRequestCapacity = capacity - request;\n        const unusedUsageCapacity = capacity - usage;\n        let unusedRequestCapacityPercentage = request > 0 ? (request / capacity) * 100 : 0;\n        if (unusedRequestCapacityPercentage > 100) {\n            unusedRequestCapacityPercentage = 100 - unusedRequestCapacityPercentage;\n        }\n        let unusedUsageCapacityPercentage = capacity > usage ? (usage / capacity) * 100 : 0;\n        if (unusedUsageCapacityPercentage > 100) {\n            unusedUsageCapacityPercentage = 100 - unusedUsageCapacityPercentage;\n        }\n        return (React.createElement(Grid, { hasGutter: true },\n            React.createElement(GridItem, { md: 12, lg: 6 },\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_usage_unused_label`)),\n                React.createElement(\"div\", { style: styles.capacity }, formatValue(unusedUsageCapacity)),\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_usage_unused_units`, {\n                    percentage: formatValue(unusedUsageCapacityPercentage, usageUnits),\n                    units: usageUnits,\n                }))),\n            React.createElement(GridItem, { md: 12, lg: 6 },\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_requests_unused_label`)),\n                React.createElement(\"div\", { style: styles.capacity }, formatValue(unusedRequestCapacity)),\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_requests_unused_units`, {\n                    percentage: formatValue(unusedRequestCapacityPercentage, requestUnits),\n                    units: requestUnits,\n                })))));\n    }\n    render() {\n        return React.createElement(\"div\", { ref: this.containerRef }, this.getCpuChart());\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { groupBy, parentGroupBy, reportPathsType, reportType }) => {\n    const query = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -1,\n            resolution: 'monthly',\n            limit: 3,\n        },\n        group_by: {\n            [parentGroupBy]: groupBy,\n        },\n    };\n    const queryString = getQuery(query);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        report,\n        reportFetchStatus,\n        queryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst UsageChart = translate()(connect(mapStateToProps, mapDispatchToProps)(UsageChartBase));\nexport { UsageChart };\n","import { Card, CardBody, CardTitle, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { orgUnitIdKey, tagPrefix } from 'api/queries/query';\nimport { Cluster } from 'pages/details/components/cluster/cluster';\nimport { CostChart } from 'pages/details/components/costChart/costChart';\nimport { SummaryCard } from 'pages/details/components/summary/summaryCard';\nimport { UsageChart } from 'pages/details/components/usageChart/usageChart';\nimport React from 'react';\nconst PLACEHOLDER = 'placeholder';\nclass CostOverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Returns cluster chart\n        this.getClusterChart = (widget) => {\n            const { groupBy, report, t } = this.props;\n            let showWidget = false;\n            for (const groupById of widget.cluster.showWidgetOnGroupBy) {\n                if (groupById === groupBy ||\n                    (groupById === tagPrefix && groupBy.indexOf(tagPrefix) !== -1)) {\n                    showWidget = true;\n                    break;\n                }\n            }\n            if (showWidget) {\n                return (React.createElement(Card, null,\n                    React.createElement(CardTitle, null,\n                        React.createElement(Title, { headingLevel: \"h2\", size: \"md\" }, t('breakdown.cluster_title'))),\n                    React.createElement(CardBody, null,\n                        React.createElement(Cluster, { groupBy: widget.cluster.reportGroupBy, report: report }))));\n            }\n            return null;\n        };\n        // Returns cost breakdown chart\n        this.getCostChart = (widget) => {\n            const { report, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"md\" }, t('breakdown.cost_breakdown_title'))),\n                React.createElement(CardBody, null,\n                    React.createElement(CostChart, { report: report }))));\n        };\n        // Returns CPU usage chart\n        this.getCpuUsageChart = (widget) => {\n            const { filterBy, groupBy, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"md\" }, t(`breakdown.cpu_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(UsageChart, { groupBy: filterBy, parentGroupBy: groupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns memory usage chart\n        this.getMemoryUsageChart = (widget) => {\n            const { filterBy, groupBy, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"md\" }, t(`breakdown.memory_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(UsageChart, { groupBy: filterBy, parentGroupBy: groupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns summary card widget\n        this.getSummaryCard = (widget) => {\n            const { filterBy, groupBy, query } = this.props;\n            let showWidget = false;\n            for (const groupById of widget.reportSummary.showWidgetOnGroupBy) {\n                if (groupById === groupBy ||\n                    (query && query.group_by && query.group_by[orgUnitIdKey]) ||\n                    (groupById === tagPrefix &&\n                        groupBy &&\n                        groupBy.indexOf(tagPrefix) !== -1)) {\n                    showWidget = true;\n                    break;\n                }\n            }\n            if (showWidget) {\n                return (React.createElement(SummaryCard, { filterBy: filterBy, groupBy: widget.reportSummary.reportGroupBy, parentGroupBy: groupBy, query: query, reportPathsType: widget.reportPathsType, reportType: widget.reportType }));\n            }\n            else if (widget.reportSummary.usePlaceholder) {\n                return PLACEHOLDER;\n            }\n            return null;\n        };\n        // Helper to fill grid columns instead of rows, based on the order defined by the reducer\n        this.getWidgetsColumns = () => {\n            const { selectWidgets, widgets } = this.props;\n            const visibleWidgets = [];\n            widgets.map(widgetId => {\n                const widget = selectWidgets[widgetId];\n                const renderedWidget = this.renderWidget(widget);\n                if (renderedWidget !== null) {\n                    visibleWidgets.push(renderedWidget);\n                }\n            });\n            const rows = Math.floor(visibleWidgets.length / 2) + (visibleWidgets.length % 2);\n            const leftColumnWidgets = [];\n            const rightColumnWidgets = [];\n            for (let i = 0; i < rows; i++) {\n                if (visibleWidgets[i] !== PLACEHOLDER) {\n                    leftColumnWidgets.push(visibleWidgets[i]);\n                }\n                if (i + rows < visibleWidgets.length) {\n                    if (visibleWidgets[i + rows] !== PLACEHOLDER) {\n                        rightColumnWidgets.push(visibleWidgets[i + rows]);\n                    }\n                }\n            }\n            return { leftColumnWidgets, rightColumnWidgets };\n        };\n    }\n    // Returns rendered widget based on type\n    renderWidget(widget) {\n        switch (widget.type) {\n            case \"cluster\" /* cluster */:\n                return this.getClusterChart(widget);\n            case \"cost\" /* cost */:\n                return this.getCostChart(widget);\n            case \"cpuUsage\" /* cpuUsage */:\n                return this.getCpuUsageChart(widget);\n            case \"memoryUsage\" /* memoryUsage */:\n                return this.getMemoryUsageChart(widget);\n            case \"summary\" /* reportSummary */:\n                return this.getSummaryCard(widget);\n            default:\n                return null;\n        }\n    }\n    render() {\n        // Sort widgets vertically\n        const { leftColumnWidgets, rightColumnWidgets } = this.getWidgetsColumns();\n        return (React.createElement(Grid, { hasGutter: true },\n            React.createElement(GridItem, { lg: 12, xl: 6 },\n                React.createElement(Grid, { hasGutter: true }, leftColumnWidgets.map((widget, index) => {\n                    return React.createElement(GridItem, { key: `widget-${index}` }, widget);\n                }))),\n            React.createElement(GridItem, { lg: 12, xl: 6 },\n                React.createElement(Grid, { hasGutter: true }, rightColumnWidgets.map((widget, index) => {\n                    return React.createElement(GridItem, { key: `widget-${index}` }, widget);\n                })))));\n    }\n}\nexport { CostOverviewBase };\n","import { chart_color_blue_100, chart_color_blue_200, chart_color_blue_300, chart_color_blue_400, chart_color_blue_500, chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_FontFamily_sans_serif, global_spacer_lg, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    currentCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    currentCostData: {\n        fill: 'none',\n    },\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 12,\n        },\n    },\n    itemsPerRow: 0,\n    previousCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    previousCostData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getCostRangeString, getMaxValue, getTooltipContent, } from 'components/charts/common/chartUtils';\nimport { getDateRange } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles, styles } from './historicalCostChart.styles';\nclass HistoricalCostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentCostData, currentInfrastructureCostData, previousCostData, previousInfrastructureCostData, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                // Note: Container order is important\n                CursorVoronoiContainer: createContainer('cursor', 'voronoi'),\n                series: [\n                    {\n                        childName: 'previousCost',\n                        data: previousCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'currentCost',\n                        data: currentCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentCostData, costKey, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'previousInfrastructureCost',\n                        data: previousInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[1],\n                                type: 'dash',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                        },\n                    },\n                    {\n                        childName: 'currentInfrastructureCost',\n                        data: currentInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[1],\n                                type: 'dash',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentColorScale[1] }),\n                        },\n                    },\n                ],\n            });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            const { CursorVoronoiContainer } = this.state;\n            if (!CursorVoronoiContainer) {\n                return undefined;\n            }\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData() }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 120,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > 700\n                    ? chartStyles.itemsPerRow\n                    : 2;\n            return (React.createElement(ChartLegend, { data: this.getLegendData(), gutter: 0, height: 25, itemsPerRow: itemsPerRow, name: \"legend\", style: chartStyles.legend }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null\n                ? formatter(datum.y, datum.units, formatDatumOptions)\n                : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign({ childName: s.childName }, s.legendItem), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.currentInfrastructureCostData !==\n                this.props.currentInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData ||\n            prevProps.previousInfrastructureCostData !==\n                this.props.previousInfrastructureCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentCostData, currentInfrastructureCostData, previousCostData, previousInfrastructureCostData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentLimit = currentCostData ? getMaxValue(currentCostData) : 0;\n        const maxCurrentRequest = currentInfrastructureCostData\n            ? getMaxValue(currentInfrastructureCostData)\n            : 0;\n        const maxPreviousLimit = previousCostData\n            ? getMaxValue(previousCostData)\n            : 0;\n        const maxPreviousRequest = previousInfrastructureCostData\n            ? getMaxValue(previousInfrastructureCostData)\n            : 0;\n        const maxValue = Math.max(maxCurrentLimit, maxCurrentRequest, maxPreviousLimit, maxPreviousRequest);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, previousInfrastructureCostData, } = this.props;\n        const currentRequestDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 || previousRequestDate > 0\n            ? Math.max(currentRequestDate, previousRequestDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 120,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 700\n                ? containerHeight - 25\n                : containerHeight\n            : containerHeight;\n        return (React.createElement(\"div\", { className: chartOverride, ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: adjustedContainerHeight }) },\n                React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                    series &&\n                        series.map((s, index) => {\n                            return this.getChart(s, index);\n                        }),\n                    React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                    React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis })))));\n    }\n}\nexport { HistoricalCostChart };\n","import { global_spacer_3xl, global_spacer_lg, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartHeight: 300,\n    chartContainerHeight: 300,\n};\nexport const styles = {\n    chartContainer: {\n        marginLeft: global_spacer_lg.value,\n    },\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n    costChart: {\n        marginTop: global_spacer_sm.value,\n    },\n    instanceChart: {\n        marginTop: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    storageChart: {\n        marginTop: global_spacer_md.value,\n    },\n};\n","import { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { getQuery } from 'api/queries/query';\nimport { transformReport, } from 'components/charts/common/chartUtils';\nimport { HistoricalCostChart } from 'components/charts/historicalCostChart';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataCostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, size: \"xs\" })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType, } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType, } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, reportType, t, } = this.props;\n        // Current data\n        const currentData = transformReport(currentReport, 0 /* rolling */, 'date', 'cost');\n        const currentInfrastructureCostData = transformReport(currentReport, 0 /* rolling */, 'date', 'infrastructure');\n        // Previous data\n        const previousData = transformReport(previousReport, 0 /* rolling */, 'date', 'cost');\n        const previousInfrastructureCostData = transformReport(previousReport, 0 /* rolling */, 'date', 'infrastructure');\n        const costUnits = currentReport &&\n            currentReport.meta &&\n            currentReport.meta.total &&\n            currentReport.meta.total.cost\n            ? currentReport.meta.total.cost.total.units\n            : 'USD';\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.costChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalCostChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight - 25, currentCostData: currentData, currentInfrastructureCostData: currentInfrastructureCostData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousCostData: previousData, previousInfrastructureCostData: previousInfrastructureCostData, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: t(`breakdown.historical_chart.${reportType}_label`, {\n                    units: t(`units.${unitLookupKey(costUnits)}`),\n                }) })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, reportPathsType, reportType }) => {\n    const currentQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -1,\n            resolution: 'daily',\n            limit: 3,\n        },\n        group_by: {\n            [groupBy]: filterBy,\n        },\n    };\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -2,\n            resolution: 'daily',\n            limit: 3,\n        },\n        group_by: {\n            [groupBy]: filterBy,\n        },\n    };\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataCostChart = translate()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataCostChartBase));\nexport { HistoricalDataCostChart };\n","import { chart_color_blue_100, chart_color_blue_200, chart_color_blue_300, chart_color_blue_400, chart_color_blue_500, chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_FontFamily_sans_serif, global_spacer_lg, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 12,\n        },\n    },\n    itemsPerRow: 0,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles, styles } from './historicalTrendChart.styles';\nclass HistoricalTrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : 'chart.cost_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                // Note: Container order is important\n                CursorVoronoiContainer: createContainer('cursor', 'voronoi'),\n                series: [\n                    {\n                        childName: 'previousCost',\n                        data: previousData,\n                        legendItem: {\n                            name: getCostRangeString(previousData, key, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'currentCost',\n                        data: currentData,\n                        legendItem: {\n                            name: getCostRangeString(currentData, key, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[1],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[1] }),\n                        },\n                    },\n                ],\n            });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            const { CursorVoronoiContainer } = this.state;\n            if (!CursorVoronoiContainer) {\n                return undefined;\n            }\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData() }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 120,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            return (React.createElement(ChartLegend, { data: this.getLegendData(), gutter: 10, height: 25, itemsPerRow: legendItemsPerRow, name: \"legend\", style: chartStyles.legend }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions, units } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null\n                ? formatter(datum.y, units || datum.units, formatDatumOptions)\n                : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign({ childName: s.childName }, s.legendItem), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentData, previousData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrent = currentData ? getMaxValue(currentData) : 0;\n        const maxPrevious = previousData ? getMaxValue(previousData) : 0;\n        const maxValue = Math.max(maxCurrent, maxPrevious);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData\n            ? getDate(getDateRange(previousData, true, true)[1])\n            : 0;\n        const currentDate = currentData\n            ? getDate(getDateRange(currentData, true, true)[1])\n            : 0;\n        return currentDate > 0 || previousDate > 0\n            ? Math.max(currentDate, previousDate)\n            : 31;\n    }\n    render() {\n        const { height, containerHeight = height, padding = {\n            bottom: 120,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        return (React.createElement(\"div\", { className: chartOverride, ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: containerHeight }) },\n                React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                    series &&\n                        series.map((s, index) => {\n                            return this.getChart(s, index);\n                        }),\n                    React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                    React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis })))));\n    }\n}\nexport { HistoricalTrendChart };\n","import { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { transformReport, } from 'components/charts/common/chartUtils';\nimport { HistoricalTrendChart } from 'components/charts/historicalTrendChart';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataTrendChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, size: \"xs\" })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType, } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType, } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, reportType, t, } = this.props;\n        const isCostChart = reportType === \"cost\" /* cost */;\n        // Current data\n        const currentData = transformReport(currentReport, isCostChart ? 0 /* rolling */ : 1 /* daily */, 'date', isCostChart ? 'cost' : 'usage');\n        const previousData = transformReport(previousReport, isCostChart ? 0 /* rolling */ : 1 /* daily */, 'date', isCostChart ? 'cost' : 'usage');\n        const costUnits = currentReport &&\n            currentReport.meta &&\n            currentReport.meta.total &&\n            currentReport.meta.total.cost\n            ? currentReport.meta.total.cost.total.units\n            : 'USD';\n        let usageUnits = currentReport &&\n            currentReport.meta &&\n            currentReport.meta.total &&\n            currentReport.meta.total.usage\n            ? currentReport.meta.total.usage.units\n            : undefined;\n        let yAxisLabel;\n        if (isCostChart) {\n            yAxisLabel = t(`breakdown.historical_chart.${reportType}_label`, {\n                units: t(`units.${unitLookupKey(costUnits)}`),\n            });\n        }\n        else if (usageUnits &&\n            Number.isNaN(Number(currentReport.meta.total.usage.units))) {\n            yAxisLabel = t(`breakdown.historical_chart.units_label`, {\n                units: t(`units.${unitLookupKey(usageUnits)}`),\n            });\n        }\n        else {\n            usageUnits = t(`breakdown.historical_chart.${reportType}_label`);\n            yAxisLabel = t(`breakdown.historical_chart.units_label`, {\n                units: t(`units.${unitLookupKey(usageUnits)}`),\n            });\n        }\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.costChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalTrendChart, { containerHeight: chartStyles.chartContainerHeight - 50, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousData: previousData, units: isCostChart ? costUnits : usageUnits, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: yAxisLabel })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, query, reportPathsType, reportType }) => {\n    const groupByOrg = query && query.group_by[orgUnitIdKey]\n        ? query.group_by[orgUnitIdKey]\n        : undefined;\n    // instance-types and storage APIs must filter org units\n    const useFilter = reportType === \"instance_type\" /* instanceType */ || reportType === \"storage\" /* storage */;\n    const currentQuery = {\n        filter: Object.assign(Object.assign({ time_scope_units: 'month', time_scope_value: -1, resolution: 'daily', limit: 3 }, (query && query.filter && query.filter.account && { account: query.filter.account })), (groupByOrg && useFilter && ({ [orgUnitIdKey]: groupByOrg }))),\n        filter_by: query ? query.filter_by : undefined,\n        group_by: Object.assign(Object.assign({}, (groupByOrg && !useFilter && { [orgUnitIdKey]: groupByOrg })), { [groupBy]: filterBy }),\n    };\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = {\n        filter: Object.assign(Object.assign({ time_scope_units: 'month', time_scope_value: -2, resolution: 'daily', limit: 3 }, (query && query.filter && query.filter.account && { account: query.filter.account })), (groupByOrg && useFilter && ({ [orgUnitIdKey]: groupByOrg }))),\n        filter_by: query ? query.filter_by : undefined,\n        group_by: Object.assign(Object.assign({}, (groupByOrg && !useFilter && { [orgUnitIdKey]: groupByOrg })), { [groupBy]: filterBy }),\n    };\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataTrendChart = translate()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataTrendChartBase));\nexport { HistoricalDataTrendChart };\n","import { chart_color_blue_100, chart_color_blue_200, chart_color_blue_300, chart_color_blue_400, chart_color_blue_500, chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_FontFamily_sans_serif, global_spacer_lg, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    currentCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    currentLimitData: {\n        fill: 'none',\n    },\n    currentRequestData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    currentUsageData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 12,\n        },\n    },\n    previousCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousLimitData: {\n        fill: 'none',\n    },\n    previousRequestData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    previousUsageData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getDateRange } from 'components/charts/common/chartUtils';\nimport { getMaxValue, getTooltipContent, getUsageRangeString, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles, styles } from './historicalUsageChart.styles';\nclass HistoricalUsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentLimitData, currentRequestData, currentUsageData, previousLimitData, previousRequestData, previousUsageData, } = this.props;\n            const limitKey = 'chart.limit_legend_label';\n            const usageKey = 'chart.usage_legend_label';\n            const requestKey = 'chart.requests_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                // Note: Container order is important\n                CursorVoronoiContainer: createContainer('cursor', 'voronoi'),\n                series: [\n                    {\n                        childName: 'previousUsage',\n                        data: previousUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousUsageData), { stroke: chartStyles.previousColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'currentUsage',\n                        data: currentUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentUsageData), { stroke: chartStyles.currentColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'previousRequest',\n                        data: previousRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[1],\n                                type: 'dash',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousRequestData), { stroke: chartStyles.previousColorScale[1] }),\n                        },\n                    },\n                    {\n                        childName: 'currentRequest',\n                        data: currentRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[1],\n                                type: 'dash',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentRequestData), { stroke: chartStyles.currentColorScale[1] }),\n                        },\n                    },\n                    {\n                        childName: 'previousLimit',\n                        data: previousLimitData,\n                        legendItem: {\n                            name: getUsageRangeString(previousLimitData, limitKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[2],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousLimitData), { stroke: chartStyles.previousColorScale[2] }),\n                        },\n                    },\n                    {\n                        childName: 'currentLimit',\n                        data: currentLimitData,\n                        legendItem: {\n                            name: getUsageRangeString(currentLimitData, limitKey, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[2],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentLimitData), { stroke: chartStyles.currentColorScale[2] }),\n                        },\n                    },\n                ],\n            });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            const { CursorVoronoiContainer } = this.state;\n            if (!CursorVoronoiContainer) {\n                return undefined;\n            }\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData() }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 130,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > 800\n                    ? chartStyles.itemsPerRow\n                    : 2;\n            return (React.createElement(ChartLegend, { data: this.getLegendData(), gutter: 0, height: 25, itemsPerRow: itemsPerRow, name: \"legend\", style: chartStyles.legend }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null\n                ? formatter(datum.y, datum.units, formatDatumOptions)\n                : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign({ childName: s.childName }, s.legendItem), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentLimitData !== this.props.currentLimitData ||\n            prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousLimitData !== this.props.previousLimitData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, currentLimitData, previousLimitData, previousRequestData, previousUsageData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentLimit = currentLimitData\n            ? getMaxValue(currentLimitData)\n            : 0;\n        const maxCurrentRequest = currentRequestData\n            ? getMaxValue(currentRequestData)\n            : 0;\n        const maxCurrentUsage = currentUsageData\n            ? getMaxValue(currentUsageData)\n            : 0;\n        const maxPreviousLimit = previousLimitData\n            ? getMaxValue(previousLimitData)\n            : 0;\n        const maxPreviousRequest = previousRequestData\n            ? getMaxValue(previousRequestData)\n            : 0;\n        const maxPreviousUsage = previousUsageData\n            ? getMaxValue(previousUsageData)\n            : 0;\n        const maxValue = Math.max(maxCurrentLimit, maxCurrentRequest, maxCurrentUsage, maxPreviousLimit, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const currentRequestDate = currentRequestData\n            ? getDate(getDateRange(currentRequestData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentUsageData\n            ? getDate(getDateRange(currentUsageData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousRequestData\n            ? getDate(getDateRange(previousRequestData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousUsageData\n            ? getDate(getDateRange(previousUsageData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 ||\n            currentUsageDate > 0 ||\n            previousRequestDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 130,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 800\n                ? containerHeight - 50\n                : containerHeight\n            : containerHeight;\n        return (React.createElement(\"div\", { className: chartOverride, ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: adjustedContainerHeight }) },\n                React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                    series &&\n                        series.map((s, index) => {\n                            return this.getChart(s, index);\n                        }),\n                    React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                    React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis })))));\n    }\n}\nexport { HistoricalUsageChart };\n","import { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { getQuery } from 'api/queries/query';\nimport { transformReport, } from 'components/charts/common/chartUtils';\nimport { HistoricalUsageChart } from 'components/charts/historicalUsageChart';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataUsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, size: \"xs\" })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType, } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType, } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, t, } = this.props;\n        // Current data\n        const currentLimitData = transformReport(currentReport, 1 /* daily */, 'date', 'limit');\n        const currentRequestData = transformReport(currentReport, 1 /* daily */, 'date', 'request');\n        const currentUsageData = transformReport(currentReport, 1 /* daily */, 'date', 'usage');\n        // Previous data\n        const previousLimitData = transformReport(previousReport, 1 /* daily */, 'date', 'limit');\n        const previousRequestData = transformReport(previousReport, 1 /* daily */, 'date', 'request');\n        const previousUsageData = transformReport(previousReport, 1 /* daily */, 'date', 'usage');\n        const usageUnits = currentReport &&\n            currentReport.meta &&\n            currentReport.meta.total &&\n            currentReport.meta.total.usage\n            ? currentReport.meta.total.usage.units\n            : '';\n        return (React.createElement(\"div\", { style: styles.chartContainer }, currentReportFetchStatus === 1 /* inProgress */ &&\n            previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalUsageChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight, currentLimitData: currentLimitData, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousLimitData: previousLimitData, previousRequestData: previousRequestData, previousUsageData: previousUsageData, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: t(`breakdown.historical_chart.units_label`, {\n                units: t(`units.${unitLookupKey(usageUnits)}`),\n            }) }))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, reportPathsType, reportType }) => {\n    const currentQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -1,\n            resolution: 'daily',\n            limit: 3,\n        },\n        group_by: {\n            [groupBy]: filterBy,\n        },\n    };\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -2,\n            resolution: 'daily',\n            limit: 3,\n        },\n        group_by: {\n            [groupBy]: filterBy,\n        },\n    };\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataUsageChart = translate()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataUsageChartBase));\nexport { HistoricalDataUsageChart };\n","import { Card, CardBody, CardTitle, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport React from 'react';\nimport { HistoricalDataCostChart } from './historicalDataCostChart';\nimport { HistoricalDataTrendChart } from './historicalDataTrendChart';\nimport { HistoricalDataUsageChart } from './historicalDataUsageChart';\nclass HistoricalDataBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Returns cost chart\n        this.getCostChart = (widget) => {\n            const { filterBy, groupBy, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"md\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataCostChart, { filterBy: filterBy, groupBy: groupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns trend chart\n        this.getTrendChart = (widget) => {\n            const { filterBy, groupBy, query, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"md\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataTrendChart, { filterBy: filterBy, groupBy: groupBy, query: query, reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns usage chart\n        this.getUsageChart = (widget) => {\n            const { filterBy, groupBy, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"md\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataUsageChart, { filterBy: filterBy, groupBy: groupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n    }\n    // Returns rendered widget based on type\n    renderWidget(widget) {\n        switch (widget.type) {\n            case \"cost\" /* cost */:\n                return this.getCostChart(widget);\n            case \"tend\" /* trend */:\n                return this.getTrendChart(widget);\n            case \"usage\" /* usage */:\n                return this.getUsageChart(widget);\n            default:\n                return null;\n        }\n    }\n    render() {\n        const { selectWidgets, widgets } = this.props;\n        return (React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n            const widget = selectWidgets[widgetId];\n            return (React.createElement(GridItem, { key: `widget-${widgetId}` }, this.renderWidget(widget)));\n        })));\n    }\n}\nexport { HistoricalDataBase };\n","import { global_spacer_lg } from '@patternfly/react-tokens';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingLeft: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n};\n","import { global_FontWeight_bold, global_spacer_3xl, global_spacer_lg, global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = {\n    dataListHeading: {\n        fontWeight: global_FontWeight_bold.value\n    },\n    groupByHeading: {\n        marginBottom: global_spacer_lg.value\n    },\n    tagLink: {\n        marginLeft: global_spacer_sm.value,\n    },\n    tagsContainer: {\n        marginRight: global_spacer_3xl.value,\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { DataList, DataListCell, DataListItem, DataListItemCells, DataListItemRow, } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { styles } from './tag.styles';\nclass TagViewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDataListItems = () => {\n            const { report } = this.props;\n            const result = [];\n            if (report) {\n                for (const tag of report.data) {\n                    for (const val of tag.values) {\n                        const id = `${tag.key}:${val}`;\n                        result.push(React.createElement(DataListItem, { \"aria-labelledby\": id, key: `${id}-item` },\n                            React.createElement(DataListItemRow, null,\n                                React.createElement(DataListItemCells, { dataListCells: [\n                                        React.createElement(DataListCell, { key: `${id}-cell1` },\n                                            React.createElement(\"span\", { id: id }, tag.key)),\n                                        React.createElement(DataListCell, { key: `${id}-cell2` }, val)\n                                    ] }))));\n                    }\n                }\n            }\n            return result;\n        };\n    }\n    render() {\n        const { filterBy, groupBy, t } = this.props;\n        const dataListItems = this.getDataListItems();\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"span\", { style: styles.dataListHeading }, t(`group_by.values.${groupBy}`))),\n            React.createElement(\"div\", { style: styles.groupByHeading },\n                React.createElement(\"span\", null, filterBy)),\n            React.createElement(DataList, { \"aria-label\": \"Simple data list example\", isCompact: true },\n                React.createElement(DataListItem, { \"aria-labelledby\": \"heading1\" },\n                    React.createElement(DataListItemRow, null,\n                        React.createElement(DataListItemCells, { dataListCells: [\n                                React.createElement(DataListCell, { key: \"primary content\" },\n                                    React.createElement(\"span\", { id: \"heading1\", style: styles.dataListHeading }, t('tag.heading_key'))),\n                                React.createElement(DataListCell, { key: \"secondary content\" },\n                                    React.createElement(\"span\", { id: \"heading2\", style: styles.dataListHeading }, t('tag.heading_value')))\n                            ] }))),\n                dataListItems.map(item => item))));\n    }\n}\nconst TagView = translate()(connect()(TagViewBase));\nexport { TagView };\n","import { Modal } from '@patternfly/react-core';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { TagView } from './tagView';\nconst reportType = \"tag\" /* tag */;\nclass TagModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getTagValueCount = () => {\n            const { report } = this.props;\n            let count = 0;\n            if (report) {\n                for (const tag of report.data) {\n                    if (tag.values) {\n                        count += tag.values.length;\n                    }\n                }\n            }\n            return count;\n        };\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    shouldComponentUpdate(nextProps) {\n        const { filterBy, isOpen } = this.props;\n        return nextProps.filterBy !== filterBy || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { filterBy, groupBy, isOpen, report, t } = this.props;\n        return (React.createElement(Modal, { isOpen: isOpen, onClose: this.handleClose, title: t('tag.title', {\n                value: this.getTagValueCount()\n            }), width: '50%' },\n            React.createElement(TagView, { filterBy: filterBy, groupBy: groupBy, report: report })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, reportPathsType }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const queryString = getQuery({\n        filter: Object.assign({ [groupBy]: filterBy, resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }, (queryFromRoute.filter.account && { account: queryFromRoute.filter.account })),\n    });\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst TagModal = translate()(connect(mapStateToProps, mapDispatchToProps)(TagModalBase));\nexport { TagModal };\n","import { TagIcon } from '@patternfly/react-icons';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './tag.styles';\nimport { TagModal } from './tagModal';\nconst reportType = \"tag\" /* tag */;\nclass TagLinkBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = (isOpen) => {\n            this.setState({ isOpen });\n        };\n        this.handleOpen = event => {\n            this.setState({ isOpen: true });\n            event.preventDefault();\n            return false;\n        };\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { filterBy, groupBy, id, report, reportPathsType } = this.props;\n        const { isOpen } = this.state;\n        let count = 0;\n        if (report) {\n            for (const tag of report.data) {\n                if (tag.values) {\n                    count += tag.values.length;\n                }\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.tagsContainer, id: id },\n            Boolean(count > 0) && (React.createElement(React.Fragment, null,\n                React.createElement(TagIcon, null),\n                React.createElement(\"a\", Object.assign({}, getTestProps(testIds.details.tag_lnk), { href: \"#/\", onClick: this.handleOpen, style: styles.tagLink }), count))),\n            React.createElement(TagModal, { filterBy: filterBy, groupBy: groupBy, isOpen: isOpen, onClose: this.handleClose, reportPathsType: reportPathsType })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, reportPathsType }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const queryString = getQuery({\n        filter: Object.assign({ [groupBy]: filterBy, resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }, (queryFromRoute.filter.account && { account: queryFromRoute.filter.account })),\n    });\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        filterBy,\n        queryString,\n        report,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst TagLink = translate()(connect(mapStateToProps, mapDispatchToProps)(TagLinkBase));\nexport { TagLink };\n","import { global_BackgroundColor_100, global_Color_200, global_disabled_color_100, global_FontSize_sm, global_FontSize_xs, global_spacer_lg, global_spacer_md, global_spacer_xl, global_spacer_xs, } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const styles = {\n    cost: {\n        marginTop: global_spacer_xl.var,\n    },\n    costLabel: {\n        marginTop: global_spacer_xs.var,\n    },\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        textAlign: 'right',\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n        textAlign: 'right',\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingLeft: global_spacer_xl.var,\n        paddingRight: global_spacer_xl.var,\n        paddingTop: global_spacer_xl.var,\n        backgroundColor: global_BackgroundColor_100.var,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    tabs: {\n        display: 'flex',\n    },\n    tag: {\n        marginLeft: global_spacer_lg.var,\n    },\n    title: {\n        paddingBottom: global_spacer_lg.var,\n        paddingTop: global_spacer_md.var,\n    },\n};\nexport const breadcrumbOverride = css `\n  .pf-c-breadcrumb__item:not(:last-child) {\n    margin-left: var(--pf-c-breadcrumb__item--MarginRight);\n    margin-right: 0;\n  }\n  .pf-c-breadcrumb__item-divider {\n    margin-left: 0;\n    margin-right: var(--pf-c-breadcrumb__item-divider--MarginLeft);\n  }\n`;\n","import { Title } from '@patternfly/react-core';\nimport { AngleLeftIcon } from '@patternfly/react-icons';\nimport { breakdownDescKey, breakdownTitleKey, getQueryRoute, orgUnitIdKey, } from 'api/queries/query';\nimport { TagLink } from 'pages/details/components/tag/tagLink';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { getForDateRangeString } from 'utils/dateRange';\nimport { formatValue } from 'utils/formatValue';\nimport { breadcrumbOverride, styles } from './breakdownHeader.styles';\nclass BreakdownHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.buildDetailsLink = () => {\n            const { detailsURL, groupBy, query } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Retrieve org unit used by the details page\n            if (query[orgUnitIdKey]) {\n                groupByKey = orgUnitIdKey;\n                value = query[orgUnitIdKey];\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { group_by: {\n                    [groupByKey]: value,\n                } });\n            // Don't want these params when returning to the details page\n            if (newQuery.filter) {\n                newQuery.filter.account = undefined;\n                newQuery[breakdownDescKey] = undefined;\n                newQuery[orgUnitIdKey] = undefined;\n                newQuery[breakdownTitleKey] = undefined;\n            }\n            return `${detailsURL}?${getQueryRoute(newQuery)}`;\n        };\n        this.getGroupByOrg = () => {\n            const { query } = this.props;\n            let groupByOrg;\n            for (const groupBy of Object.keys(query.group_by)) {\n                if (groupBy === orgUnitIdKey) {\n                    groupByOrg = query.group_by[orgUnitIdKey];\n                    break;\n                }\n            }\n            return groupByOrg;\n        };\n        this.getTotalCost = () => {\n            const { report } = this.props;\n            const hasCost = report &&\n                report.meta &&\n                report.meta.total &&\n                report.meta.total.cost &&\n                report.meta.total.cost.total;\n            const cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD');\n            return cost;\n        };\n    }\n    render() {\n        const { description, filterBy, groupBy, reportPathsType, t, tabs, title, query } = this.props;\n        const filterByAccount = query && query.filter ? query.filter.account : undefined;\n        const groupByOrg = this.getGroupByOrg();\n        const showTags = filterByAccount ||\n            groupBy === 'account' ||\n            groupBy === 'project' ||\n            groupBy === 'subscription_guid';\n        // i18n groupBy key\n        const groupByKey = groupBy\n            ? groupBy\n            : filterByAccount\n                ? 'account'\n                : groupByOrg\n                    ? orgUnitIdKey\n                    : undefined;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", null,\n                React.createElement(\"nav\", { \"aria-label\": \"breadcrumb\", className: `pf-c-breadcrumb ${breadcrumbOverride}` },\n                    React.createElement(\"ol\", { className: \"pf-c-breadcrumb__list\" },\n                        React.createElement(\"li\", { className: \"pf-c-breadcrumb__item\" },\n                            React.createElement(\"span\", { className: \"pf-c-breadcrumb__item-divider\" },\n                                React.createElement(AngleLeftIcon, null)),\n                            React.createElement(Link, { to: this.buildDetailsLink() }, t('breakdown.back_to_details', {\n                                groupBy: groupByKey,\n                                value: reportPathsType,\n                            }))))),\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" },\n                    t('breakdown.title', { value: title }),\n                    description && (React.createElement(\"div\", { style: styles.infoDescription }, description))),\n                React.createElement(\"div\", { style: styles.tabs },\n                    tabs,\n                    React.createElement(\"div\", { style: styles.tag }, Boolean(showTags) && (React.createElement(TagLink, { filterBy: filterBy, groupBy: groupByKey, id: \"tags\", reportPathsType: reportPathsType }))))),\n            React.createElement(\"div\", { style: styles.cost },\n                React.createElement(\"div\", { style: styles.costLabel },\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: \"4xl\" },\n                        React.createElement(\"span\", null, this.getTotalCost()))),\n                React.createElement(\"div\", { style: styles.costLabelDate }, getForDateRangeString(groupByKey, 'breakdown.total_cost_date')))));\n    }\n}\nconst BreakdownHeader = translate()(BreakdownHeaderBase);\nexport { BreakdownHeader };\n","import { Tab, TabContent, Tabs, TabTitleText } from '@patternfly/react-core';\nimport React from 'react';\nimport { styles } from './breakdown.styles';\nimport { BreakdownHeader } from './breakdownHeader';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"cost-overview\" /* costOverview */:\n            return 'cost-overview';\n        case \"historical-data\" /* historicalData */:\n            return 'historical-data';\n    }\n};\nclass BreakdownBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [\n                {\n                    contentRef: React.createRef(),\n                    tab: \"cost-overview\" /* costOverview */,\n                },\n                {\n                    contentRef: React.createRef(),\n                    tab: \"historical-data\" /* historicalData */,\n                },\n            ];\n            return availableTabs;\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { costOverviewComponent, historicalDataComponent } = this.props;\n            const { activeTabKey } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"cost-overview\" /* costOverview */) {\n                return costOverviewComponent;\n            }\n            else if (currentTab === \"historical-data\" /* historicalData */) {\n                return historicalDataComponent;\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"cost-overview\" /* costOverview */) {\n                return t('breakdown.cost_overview_title');\n            }\n            else if (tab === \"historical-data\" /* historicalData */) {\n                return t('breakdown.historical_data_title');\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                });\n            }\n        };\n        this.updateReport = () => {\n            const { location, fetchReport, queryString, reportPathsType, reportType, } = this.props;\n            if (location.search) {\n                fetchReport(reportPathsType, reportType, queryString);\n            }\n        };\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { location, report, reportError, queryString } = this.props;\n        const newQuery = prevProps.queryString !== queryString;\n        const noReport = !report && !reportError;\n        const noLocation = !location.search;\n        if (newQuery || noReport || noLocation) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { description, detailsURL, filterBy, groupBy, query, report, reportPathsType, title, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        return (React.createElement(React.Fragment, null,\n            React.createElement(BreakdownHeader, { description: description, detailsURL: detailsURL, filterBy: filterBy, groupBy: groupBy, query: query, report: report, reportPathsType: reportPathsType, tabs: this.getTabs(availableTabs), title: title }),\n            React.createElement(\"div\", { style: styles.content }, this.getTabContent(availableTabs))));\n    }\n}\nexport default BreakdownBase;\n","import { global_spacer_xl } from '@patternfly/react-tokens';\nexport const styles = {\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '50vh',\n        marginTop: global_spacer_xl.value,\n    },\n};\n","import { EmptyState as PfEmptyState, EmptyStateBody, EmptyStateIcon, Title, } from '@patternfly/react-core';\nimport { MoneyCheckAltIcon } from '@patternfly/react-icons/dist/js/icons/money-check-alt-icon';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './noRatesState.styles';\nconst NoRatesStateBase = ({ t, cluster }) => {\n    return (React.createElement(\"div\", { style: styles.container },\n        React.createElement(PfEmptyState, null,\n            React.createElement(EmptyStateIcon, { icon: MoneyCheckAltIcon }),\n            React.createElement(Title, { headingLevel: \"h2\", size: \"xl\" }, t('no_rates_state.title')),\n            React.createElement(EmptyStateBody, null, t('no_rates_state.desc', { cluster })))));\n};\nexport const NoRatesState = translate()(NoRatesStateBase);\n","import { global_spacer_3xl, global_spacer_md } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const modalOverride = css `\n  /* Workaround for isLarge not working properly */\n  &.pf-c-modal-box {\n    height: '900px';\n    width: 1200px;\n  }\n  & .pf-c-modal-box__footer {\n    display: none;\n  }\n`;\nexport const styles = {\n    skeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n};\n","import { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport React from 'react';\nimport { formatCurrency } from 'utils/formatValue';\nfunction getUsageRangeText(metric, t) {\n    return metric.range_value[0] === null && metric.range_value[1] === null\n        ? t('details.price_list.modal.no_range_set')\n        : `${metric.range_value[0] || ' '} - ${metric.range_value[2] || ' '} ${metric.range_unit}`;\n}\nconst PriceListTable = ({ rates, t }) => {\n    const notAvailableText = t('details.price_list.modal.not_available');\n    return (React.createElement(Table, { \"aria-label\": \"price-list-table\", cells: [\n            t('details.price_list.modal.metric'),\n            t('details.price_list.modal.value'),\n            t('details.price_list.modal.applied_usage_range'),\n            t('details.price_list.modal.applied_usage_date_range'),\n        ], rows: rates.map(metric => {\n            // Avoid relying on API labels as i18n keys -- see https://issues.redhat.com/browse/COST-50\n            const s = metric.display.replace(/cpu/g, 'CPU');\n            return [\n                t(`details.price_list.modal.metric_display`, {\n                    display: s.replace(/(^\\w)/g, m => m.toUpperCase()),\n                    index: metric.index + 1,\n                    unit: metric.range_unit,\n                }),\n                metric.value\n                    ? formatCurrency(metric.value, metric.value_unit)\n                    : notAvailableText,\n                getUsageRangeText(metric, t),\n                t(`details.price_list.modal.${metric.period}`),\n            ];\n        }) },\n        React.createElement(TableHeader, null),\n        React.createElement(TableBody, null)));\n};\nexport default PriceListTable;\n","import { Modal } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { ErrorState } from 'components/state/errorState/errorState';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { priceListActions, priceListSelectors } from 'store/priceList';\nimport { providersSelectors } from 'store/providers';\nimport { NoRatesState } from './noRatesState';\nimport { modalOverride, styles } from './priceListModal.styles';\nimport PriceListTable from './priceListTable';\n// Prune null values\nconst getSourceUUID = (item) => {\n    for (const uuid of item.source_uuid) {\n        if (uuid !== null) {\n            return uuid;\n        }\n    }\n    return '';\n};\nclass PriceListModalBase extends React.Component {\n    componentDidUpdate() {\n        const { fetch, isOpen, item, providers, priceListStatus: status, } = this.props;\n        if (isOpen && status !== 1 /* inProgress */) {\n            const priceListProvider = providers.data.find(p => p.uuid === getSourceUUID(item));\n            fetch(priceListProvider ? priceListProvider.uuid : null);\n        }\n    }\n    renderContent() {\n        const { item, priceListStatus, priceListError, priceList, providers, t, } = this.props;\n        if (priceListStatus !== 2 /* complete */) {\n            return React.createElement(Skeleton, { style: styles.skeleton, size: \"md\" });\n        }\n        if (priceListError !== null) {\n            return React.createElement(ErrorState, { error: priceListError });\n        }\n        const priceListProvider = providers.data.find(p => p.uuid === getSourceUUID(item));\n        const priceListRates = priceListProvider && priceList[priceListProvider.uuid];\n        return priceListRates ? (React.createElement(PriceListTable, { t: t, rates: priceListRates })) : (React.createElement(NoRatesState, { cluster: item.label.toString() }));\n    }\n    render() {\n        const { t, isOpen, close, item } = this.props;\n        return (React.createElement(Modal, { className: modalOverride, isOpen: isOpen, onClose: () => close(false), title: t('details.price_list.modal.title', { name: item.label }) }, this.renderContent()));\n    }\n}\nconst PriceListModal = connect(createMapStateToProps((state, { item, providerType }) => {\n    let type;\n    switch (providerType) {\n        case \"aws\" /* aws */:\n            type = 'AWS';\n            break;\n        case \"azure\" /* azure */:\n            type = 'AZURE';\n            break;\n        case \"ocp\" /* ocp */:\n            type = 'OCP';\n            break;\n    }\n    const providers = providersSelectors.selectProviders(state, providerType, `type=${type}`);\n    const priceListProvider = providers && providers.data\n        ? providers.data.find(p => p.uuid === getSourceUUID(item))\n        : undefined;\n    const providerUuid = priceListProvider ? priceListProvider.uuid : null;\n    return {\n        priceList: priceListSelectors.ratesPerProvider(state, providerUuid),\n        priceListError: priceListSelectors.error(state, providerUuid),\n        priceListStatus: priceListSelectors.status(state, providerUuid),\n        providers,\n    };\n}), {\n    fetch: priceListActions.fetchPriceList,\n})(translate()(PriceListModalBase));\nexport { PriceListModal };\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport { ExportModal } from 'pages/details/components/export/exportModal';\nimport { PriceListModal } from 'pages/details/components/priceList/priceListModal';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nclass DetailsActionsBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n            isPriceListModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, query, reportPathsType } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, query: query, reportPathsType: reportPathsType }));\n        };\n        this.getPriceListModal = () => {\n            const { item, providerType } = this.props;\n            return (React.createElement(PriceListModal, { close: this.handlePriceListModalClose, isOpen: this.state.isPriceListModalOpen, item: item, providerType: providerType }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handlePriceListModalClose = (isOpen) => {\n            this.setState({ isPriceListModalOpen: isOpen });\n        };\n        this.handlePriceListModalOpen = () => {\n            this.setState({ isPriceListModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handlePriceListModalClose = this.handlePriceListModalClose.bind(this);\n        this.handlePriceListModalOpen = this.handlePriceListModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, t } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, t('details.actions.export')),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix), onClick: this.handlePriceListModalOpen }, t('details.actions.price_list')));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal(),\n            showPriceListOption && this.getPriceListModal()));\n    }\n}\nconst Actions = translate()(DetailsActionsBase);\nexport { Actions };\n","import { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = {\n    groupBySelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    groupBySelectorLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { Select, SelectOption, SelectVariant, } from '@patternfly/react-core';\nimport { orgUnitIdKey, orgUnitNameKey, parseQuery, } from 'api/queries/query';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './groupBy.styles';\nclass GroupByOrgBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy } = this.props;\n            const queryFromRoute = parseQuery(location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by\n                ? Object.keys(queryFromRoute.group_by)\n                : [];\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            for (const key of groupByKeys) {\n                const index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = queryFromRoute.group_by[orgUnitIdKey];\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.getGroupByItems = () => {\n            const { report } = this.props;\n            if (!(report && report.data)) {\n                return [];\n            }\n            // Sort all names first\n            const sortedData = report.data.sort((a, b) => {\n                if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                    return -1;\n                }\n                if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                    return 1;\n                }\n                return 0;\n            });\n            // Move roots first\n            const roots = sortedData.filter(org => org.level === 0);\n            const filteredOrgs = sortedData.filter(org => org.level !== 0);\n            roots.map(root => {\n                const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n                filteredOrgs.unshift(item);\n            });\n            return filteredOrgs.map(org => ({\n                id: org[orgUnitIdKey],\n                toString: () => org[orgUnitNameKey],\n            }));\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            this.setState({\n                currentItem: selection.id,\n                isGroupByOpen: false,\n            });\n            if (onItemClicked) {\n                onItemClicked(`${orgUnitIdKey}${selection.id}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled = false, t } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        const groupByItems = this.getGroupByItems();\n        const selection = groupByItems.find((item) => item.id === currentItem);\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": t('group_by.org_unit_aria_label'), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelect, isOpen: isGroupByOpen, placeholderText: t('group_by.org_unit_placeholder'), selections: selection, variant: SelectVariant.typeahead }, groupByItems.map(item => (React.createElement(SelectOption, { description: item.id, key: item.id, value: item }))))));\n    }\n}\nconst GroupByOrg = translate()(GroupByOrgBase);\nexport { GroupByOrg };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { parseQuery, tagPrefix } from 'api/queries/query';\nimport { uniq, uniqBy } from 'lodash';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './groupBy.styles';\nclass GroupByTagBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getGroupByItems = () => {\n            const { report } = this.props;\n            if (!(report && report.data)) {\n                return [];\n            }\n            // If the key_only param is used, we have an array of strings\n            let hasTagKeys = false;\n            for (const item of report.data) {\n                if (item.hasOwnProperty('key')) {\n                    hasTagKeys = true;\n                    break;\n                }\n            }\n            // Workaround for https://github.com/project-koku/koku/issues/1797\n            let data = [];\n            if (hasTagKeys) {\n                const keepData = report.data.map((_a) => {\n                    var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                    return keepProps;\n                });\n                data = uniqBy(keepData, 'key');\n            }\n            else {\n                data = uniq(report.data);\n            }\n            return data.map(tag => {\n                const tagKey = hasTagKeys ? tag.key : tag;\n                return React.createElement(SelectOption, { key: tag.key, value: tagKey });\n            });\n        };\n        this.getCurrentGroupBy = () => {\n            const queryFromRoute = parseQuery(location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by\n                ? Object.keys(queryFromRoute.group_by)\n                : [];\n            let groupBy;\n            for (const key of groupByKeys) {\n                const index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = key.slice(tagPrefix.length);\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            this.setState({\n                currentItem: selection,\n                isGroupByOpen: false,\n            });\n            if (onItemClicked) {\n                onItemClicked(`${tagPrefix}${selection}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled, t } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": t('group_by.tag_key_aria_label'), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelect, isOpen: isGroupByOpen, placeholderText: t('group_by.tag_key_placeholder'), selections: currentItem, variant: SelectVariant.typeahead }, this.getGroupByItems())));\n    }\n}\nconst GroupByTag = translate()(GroupByTagBase);\nexport { GroupByTag };\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey, parseQuery, tagKey, tagPrefix, } from 'api/queries/query';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { styles } from './groupBy.styles';\nimport { GroupByOrg } from './groupByOrg';\nimport { GroupByTag } from './groupByTag';\nconst groupByOrgOptions = [{ label: orgUnitIdKey, value: orgUnitIdKey }];\nconst groupByTagOptions = [{ label: tagKey, value: tagKey }];\nconst orgReportType = \"org\" /* org */;\nconst tagReportType = \"tag\" /* tag */;\nclass GroupByBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n            isGroupByOrgVisible: false,\n            isGroupByTagVisible: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleGroupByClick = value => {\n            const { onItemClicked } = this.props;\n            if (value === orgUnitIdKey || value === tagKey) {\n                this.setState({\n                    currentItem: value,\n                    isGroupByOrgVisible: value === orgUnitIdKey,\n                    isGroupByTagVisible: value === tagKey,\n                });\n            }\n            else {\n                this.setState({\n                    currentItem: value,\n                    isGroupByOrgVisible: false,\n                    isGroupByTagVisible: false,\n                });\n                if (onItemClicked) {\n                    onItemClicked(value);\n                }\n            }\n        };\n        this.getGroupByItems = () => {\n            const { options, orgReport, tagReport, t } = this.props;\n            const allOptions = [...options];\n            if (orgReport && orgReport.data && orgReport.data.length > 0) {\n                allOptions.push(...groupByOrgOptions);\n            }\n            if (tagReport && tagReport.data && tagReport.data.length > 0) {\n                allOptions.push(...groupByTagOptions);\n            }\n            return allOptions.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleGroupByClick(option.value) }, t(`group_by.values.${option.label}`))));\n        };\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy } = this.props;\n            const { defaultItem } = this.state;\n            const queryFromRoute = parseQuery(location.search);\n            if (!(queryFromRoute && queryFromRoute.group_by)) {\n                return defaultItem;\n            }\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by\n                ? Object.keys(queryFromRoute.group_by)\n                : [];\n            for (const key of groupByKeys) {\n                let index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = tagKey;\n                    this.setState({\n                        isGroupByTagVisible: true,\n                    });\n                    break;\n                }\n                index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = orgUnitIdKey;\n                    this.setState({\n                        isGroupByOrgVisible: true,\n                    });\n                    break;\n                }\n            }\n            return groupBy !== 'date' ? groupBy : defaultItem;\n        };\n        this.handleGroupBySelect = event => {\n            this.setState({\n                isGroupByOpen: !this.state.isGroupByOpen,\n            });\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({\n                isGroupByOpen,\n            });\n        };\n        this.handleGroupByClick = this.handleGroupByClick.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, showOrgs, showTags, } = this.props;\n        if (showOrgs) {\n            fetchReport(reportPathsType, orgReportType, queryString);\n        }\n        if (showTags) {\n            fetchReport(reportPathsType, tagReportType, queryString);\n        }\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, groupBy, queryString, reportPathsType, showOrgs, showTags, } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            if (showOrgs) {\n                fetchReport(reportPathsType, orgReportType, queryString);\n            }\n            if (showTags) {\n                fetchReport(reportPathsType, tagReportType, queryString);\n            }\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { getIdKeyForGroupBy, groupBy, isDisabled = false, onItemClicked, orgReport, t, tagReport, } = this.props;\n        const { currentItem, isGroupByOpen, isGroupByOrgVisible, isGroupByTagVisible, } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(\"label\", { style: styles.groupBySelectorLabel },\n                t('group_by.view'),\n                \":\"),\n            React.createElement(Dropdown, { onSelect: this.handleGroupBySelect, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.handleGroupByToggle }, t(`group_by.values.${currentItem}`)), isOpen: isGroupByOpen, dropdownItems: [this.getGroupByItems()] }),\n            Boolean(isGroupByOrgVisible) && (React.createElement(GroupByOrg, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: isDisabled, onItemClicked: onItemClicked, options: groupByOrgOptions, report: orgReport })),\n            Boolean(isGroupByTagVisible) && (React.createElement(GroupByTag, { groupBy: groupBy, isDisabled: isDisabled, onItemClicked: onItemClicked, options: groupByTagOptions, report: tagReport }))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType }) => {\n    const queryString = getQuery({\n    // key_only: true\n    });\n    const orgReport = reportSelectors.selectReport(state, reportPathsType, orgReportType, queryString);\n    const orgReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, orgReportType, queryString);\n    const tagReport = reportSelectors.selectReport(state, reportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, tagReportType, queryString);\n    return {\n        queryString,\n        orgReport,\n        orgReportFetchStatus,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst GroupBy = translate()(connect(mapStateToProps, mapDispatchToProps)(GroupByBase));\nexport { GroupBy };\n","import { global_BackgroundColor_light_100, global_spacer_md, global_spacer_xl, } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const styles = {\n    export: {\n        marginRight: global_spacer_md.value,\n    },\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n        marginLeft: global_spacer_xl.value,\n        marginRight: global_spacer_xl.value,\n    },\n};\n// Workaround for https://github.com/patternfly/patternfly-react/issues/4477\nexport const selectOverride = css `\n  &.pf-c-select {\n    min-width: 250px;\n  }\n`;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Button, ButtonVariant, Dropdown, DropdownItem, DropdownPosition, DropdownToggle, InputGroup, Select, SelectOption, SelectVariant, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarGroup, ToolbarItem, ToolbarToggleGroup, } from '@patternfly/react-core';\nimport { ExportIcon } from '@patternfly/react-icons/dist/js/icons/export-icon';\nimport { FilterIcon } from '@patternfly/react-icons/dist/js/icons/filter-icon';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport { orgUnitIdKey, orgUnitNameKey, tagKey, tagPrefix, } from 'api/queries/query';\nimport { cloneDeep } from 'lodash';\nimport { uniq, uniqBy } from 'lodash';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { isEqual } from 'utils/equal';\nimport { selectOverride, styles } from './dataToolbar.styles';\nconst defaultFilters = {\n    tag: {},\n};\n// If the number of tag keys are greater or equal, then show text input Vs select\n// See https://github.com/project-koku/koku/pull/2069\nconst tagKeyValueLimit = 50;\nexport class DataToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            categoryInput: '',\n            filters: cloneDeep(defaultFilters),\n            isCategoryDropdownOpen: false,\n            isOrgUnitSelectExpanded: false,\n            isTagValueDropdownOpen: false,\n            isTagKeySelectExpanded: false,\n            isTagValueSelectExpanded: false,\n            tagKeyValueInput: '',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        // Initialize\n        this.getDefaultCategory = () => {\n            const { categoryOptions, groupBy, query } = this.props;\n            if (!categoryOptions) {\n                return 'name';\n            }\n            if (query && query.group_by && query.group_by[orgUnitIdKey]) {\n                return orgUnitIdKey;\n            }\n            for (const option of categoryOptions) {\n                if (groupBy === option.key ||\n                    (groupBy && groupBy.indexOf(tagPrefix) !== -1 && option.key === tagKey)) {\n                    return option.key;\n                }\n            }\n            return categoryOptions[0].key;\n        };\n        this.getActiveFilters = query => {\n            const filters = cloneDeep(defaultFilters);\n            if (query && query.filter_by) {\n                Object.keys(query.filter_by).forEach(key => {\n                    const values = Array.isArray(query.filter_by[key])\n                        ? [...query.filter_by[key]]\n                        : [query.filter_by[key]];\n                    if (key.indexOf(tagPrefix) !== -1) {\n                        filters.tag[key.substring(tagPrefix.length)] = values;\n                    }\n                    else {\n                        filters[key] = values;\n                    }\n                });\n            }\n            return filters;\n        };\n        this.onDelete = (type, chip) => {\n            // Todo: workaround for https://github.com/patternfly/patternfly-react/issues/3552\n            // This prevents us from using a localized string, if necessary\n            const filterType = type && type.key ? type.key : type;\n            const id = chip && chip.key ? chip.key : chip;\n            if (filterType) {\n                this.setState((prevState) => {\n                    if (prevState.filters.tag[filterType]) {\n                        // Todo: use ID\n                        prevState.filters.tag[filterType] = prevState.filters.tag[filterType].filter(s => s !== id);\n                    }\n                    else if (prevState.filters[filterType]) {\n                        prevState.filters[filterType] = prevState.filters[filterType].filter(s => s !== id);\n                    }\n                    return {\n                        filters: prevState.filters,\n                    };\n                }, () => {\n                    const { filters } = this.state;\n                    const _filterType = filters.tag[filterType]\n                        ? `${tagPrefix}${filterType}`\n                        : filterType; // Todo: use ID\n                    this.props.onFilterRemoved(_filterType, id);\n                });\n            }\n            else {\n                this.setState({\n                    filters: cloneDeep(defaultFilters),\n                }, () => {\n                    this.props.onFilterRemoved(null); // Clear all\n                });\n            }\n        };\n        this.getCurrentCategoryOption = () => {\n            const { categoryOptions } = this.props;\n            const { currentCategory } = this.state;\n            if (!categoryOptions) {\n                return undefined;\n            }\n            for (const option of categoryOptions) {\n                if (currentCategory === option.key) {\n                    return option;\n                }\n            }\n            return categoryOptions[0];\n        };\n        this.onCategoryClick = value => {\n            this.setState({\n                currentCategory: value,\n            });\n        };\n        this.onCategorySelect = event => {\n            this.setState({\n                categoryInput: '',\n                currentTagKey: undefined,\n                isCategoryDropdownOpen: !this.state.isCategoryDropdownOpen,\n            });\n        };\n        this.onCategoryToggle = isOpen => {\n            this.setState({\n                isCategoryDropdownOpen: isOpen,\n            });\n        };\n        // Category input\n        this.getCategoryInput = categoryOption => {\n            const { t } = this.props;\n            const { currentCategory, filters, categoryInput } = this.state;\n            return (React.createElement(ToolbarFilter, { categoryName: categoryOption, chips: filters[categoryOption.key], deleteChip: this.onDelete, key: categoryOption.key, showToolbarItem: currentCategory === categoryOption.key },\n                React.createElement(InputGroup, null,\n                    React.createElement(TextInput, { name: `${categoryOption.key}-input`, id: `${categoryOption.key}-input`, type: \"search\", \"aria-label\": t(`filter_by.${categoryOption.key}_input_aria_label`), onChange: this.onCategoryInputChange, value: categoryInput, placeholder: t(`filter_by.${categoryOption.key}_placeholder`), onKeyDown: evt => this.onCategoryInput(evt, categoryOption.key) }),\n                    React.createElement(Button, { variant: ButtonVariant.control, \"aria-label\": t(`filter_by.${categoryOption.key}_button_aria_label`), onClick: evt => this.onCategoryInput(evt, categoryOption.key) },\n                        React.createElement(SearchIcon, null)))));\n        };\n        this.getDefaultCategoryOptions = () => {\n            const { t } = this.props;\n            return [{ name: t('filter_by.values.name'), key: 'name' }];\n        };\n        this.onCategoryInputChange = value => {\n            this.setState({ categoryInput: value });\n        };\n        this.onCategoryInput = (event, key) => {\n            const { categoryInput, currentCategory } = this.state;\n            if ((event.key && event.key !== 'Enter') || categoryInput.trim() === '') {\n                return;\n            }\n            this.setState((prevState) => {\n                const prevFilters = prevState.filters[key];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { [currentCategory]: prevFilters && prevFilters.includes(categoryInput)\n                            ? prevFilters\n                            : prevFilters\n                                ? [...prevFilters, categoryInput]\n                                : [categoryInput] }),\n                    categoryInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(currentCategory, categoryInput);\n            });\n        };\n        // Org unit select\n        this.getOrgUnitSelect = () => {\n            const { t } = this.props;\n            const { currentCategory, filters, isOrgUnitSelectExpanded } = this.state;\n            const options = this.getOrgUnitOptions().map(option => ({\n                id: option.key,\n                toString: () => option.name,\n                compareTo: value => filters[orgUnitIdKey]\n                    ? filters[orgUnitIdKey].find(val => val === value.id)\n                    : false,\n            }));\n            const chips = []; // Get selected items as PatternFly's ToolbarChip type\n            const selections = []; // Select options and selections must be same type\n            if (filters[orgUnitIdKey] && Array.isArray(filters[orgUnitIdKey])) {\n                filters[orgUnitIdKey].map(id => {\n                    const option = options.find(val => val.id === id);\n                    if (option) {\n                        selections.push(option);\n                        chips.push({\n                            key: option.id,\n                            node: option.toString(),\n                        });\n                    }\n                });\n            }\n            // Todo: selectOverride is a workaround for https://github.com/patternfly/patternfly-react/issues/4477\n            return (React.createElement(ToolbarFilter, { categoryName: {\n                    key: orgUnitIdKey,\n                    name: t('filter_by.values.org_unit_id'),\n                }, chips: chips, deleteChip: this.onDelete, key: orgUnitIdKey, showToolbarItem: currentCategory === orgUnitIdKey },\n                React.createElement(Select, { className: selectOverride, variant: SelectVariant.checkbox, \"aria-label\": t('filter_by.org_unit_aria_label'), onToggle: this.onOrgUnitToggle, onSelect: this.onOrgUnitSelect, selections: selections, isOpen: isOrgUnitSelectExpanded, placeholderText: t('filter_by.org_unit_placeholder') }, options.map(option => (React.createElement(SelectOption, { description: option.id, key: option.id, value: option }))))));\n        };\n        this.onOrgUnitSelect = (event, selection) => {\n            const checked = event.target.checked;\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters[orgUnitIdKey]\n                    ? prevState.filters[orgUnitIdKey]\n                    : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign({}, prevState.filters.tag), [orgUnitIdKey]: checked\n                            ? [...prevSelections, selection.id]\n                            : prevSelections.filter(value => value !== selection.id) }),\n                };\n            }, () => {\n                if (checked) {\n                    this.props.onFilterAdded(orgUnitIdKey, selection.id);\n                }\n                else {\n                    this.onDelete(orgUnitIdKey, selection.id);\n                }\n            });\n        };\n        this.onOrgUnitToggle = isOpen => {\n            this.setState({\n                isOrgUnitSelectExpanded: isOpen,\n            });\n        };\n        // Tag key select\n        this.getTagKeySelect = () => {\n            const { t } = this.props;\n            const { currentCategory, currentTagKey, isTagKeySelectExpanded, } = this.state;\n            if (currentCategory !== tagKey) {\n                return null;\n            }\n            const selectOptions = this.getTagKeyOptions().map(selectOption => {\n                return React.createElement(SelectOption, { key: selectOption.key, value: selectOption.key });\n            });\n            return (React.createElement(ToolbarItem, null,\n                React.createElement(Select, { variant: SelectVariant.typeahead, \"aria-label\": t('filter_by.tag_key_aria_label'), onClear: this.onTagKeyClear, onToggle: this.onTagKeyToggle, onSelect: this.onTagKeySelect, isOpen: isTagKeySelectExpanded, placeholderText: t('filter_by.tag_key_placeholder'), selections: currentTagKey }, selectOptions)));\n        };\n        this.onTagKeyClear = () => {\n            this.setState({\n                currentTagKey: undefined,\n                isTagKeySelectExpanded: false,\n            });\n        };\n        this.onTagKeySelect = (event, selection, isPlaceholder) => {\n            this.setState({\n                currentTagKey: selection,\n                isTagKeySelectExpanded: !this.state.isTagKeySelectExpanded,\n            });\n        };\n        this.onTagKeyToggle = isOpen => {\n            this.setState({\n                isTagKeySelectExpanded: isOpen,\n            });\n        };\n        // Tag value select\n        this.getTagValueSelect = tagKeyOption => {\n            const { t } = this.props;\n            const { currentCategory, currentTagKey, filters, isTagValueSelectExpanded, tagKeyValueInput, } = this.state;\n            const selectOptions = this.getTagValueOptions().map(selectOption => {\n                return React.createElement(SelectOption, { key: selectOption.key, value: selectOption.key });\n            });\n            return (React.createElement(ToolbarFilter, { categoryName: tagKeyOption, chips: filters.tag[tagKeyOption.key], deleteChip: this.onDelete, key: tagKeyOption.key, showToolbarItem: currentCategory === tagKey && currentTagKey === tagKeyOption.key }, Boolean(selectOptions.length < tagKeyValueLimit) ? (React.createElement(Select, { variant: SelectVariant.checkbox, \"aria-label\": t('filter_by.tag_value_aria_label'), onToggle: this.onTagValueToggle, onSelect: this.onTagValueSelect, selections: filters.tag[tagKeyOption.key] ? filters.tag[tagKeyOption.key] : [], isOpen: isTagValueSelectExpanded, placeholderText: t('filter_by.tag_value_placeholder') }, selectOptions)) : (React.createElement(InputGroup, null,\n                React.createElement(TextInput, { name: \"tagkeyvalue-input\", id: \"tagkeyvalue-input\", type: \"search\", \"aria-label\": t('filter_by.tag_value_aria_label'), onChange: this.onTagValueInputChange, value: tagKeyValueInput, placeholder: t('filter_by.tag_value_input_placeholder'), onKeyDown: evt => this.onTagValueInput(evt) }),\n                React.createElement(Button, { variant: ButtonVariant.control, \"aria-label\": t('filter_by.tag_value_button_aria_label'), onClick: evt => this.onTagValueInput(evt) },\n                    React.createElement(SearchIcon, null))))));\n        };\n        this.onTagValueInputChange = value => {\n            this.setState({ tagKeyValueInput: value });\n        };\n        this.onTagValueInput = event => {\n            const { currentTagKey, tagKeyValueInput } = this.state;\n            if ((event.key && event.key !== 'Enter') ||\n                tagKeyValueInput.trim() === '') {\n                return;\n            }\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters.tag[currentTagKey]\n                    ? prevState.filters.tag[currentTagKey]\n                    : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign(Object.assign({}, prevState.filters.tag), { [currentTagKey]: [...prevSelections, tagKeyValueInput] }) }),\n                    tagKeyValueInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(`${tagPrefix}${currentTagKey}`, tagKeyValueInput);\n            });\n        };\n        this.onTagValueSelect = (event, selection) => {\n            const { currentTagKey } = this.state;\n            const checked = event.target.checked;\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters.tag[currentTagKey]\n                    ? prevState.filters.tag[currentTagKey]\n                    : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign(Object.assign({}, prevState.filters.tag), { [currentTagKey]: checked\n                                ? [...prevSelections, selection]\n                                : prevSelections.filter(value => value !== selection) }) }),\n                };\n            }, () => {\n                if (checked) {\n                    this.props.onFilterAdded(`${tagPrefix}${currentTagKey}`, selection);\n                }\n                else {\n                    this.onDelete(currentTagKey, selection);\n                }\n            });\n        };\n        this.onTagValueToggle = isOpen => {\n            this.setState({\n                isTagValueSelectExpanded: isOpen,\n            });\n        };\n        // Export button\n        this.getExportButton = () => {\n            const { isExportDisabled } = this.props;\n            return (React.createElement(ToolbarItem, null,\n                React.createElement(Button, { isDisabled: isExportDisabled, onClick: this.handleExportClicked, variant: ButtonVariant.plain },\n                    React.createElement(ExportIcon, null))));\n        };\n        this.handleExportClicked = () => {\n            this.props.onExportClicked();\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentCategory: this.getDefaultCategory(),\n        });\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { categoryOptions, groupBy, orgReport, query, tagReport, } = this.props;\n        if (categoryOptions !== prevProps.categoryOptions ||\n            groupBy !== prevProps.groupBy ||\n            (query && !isEqual(query, prevProps.query)) ||\n            (orgReport && !isEqual(orgReport, prevProps.orgReport)) ||\n            (tagReport && !isEqual(tagReport, prevProps.tagReport))) {\n            this.setState(() => {\n                const filters = this.getActiveFilters(query);\n                return categoryOptions !== prevProps.categoryOptions ||\n                    prevProps.groupBy !== groupBy\n                    ? {\n                        currentCategory: this.getDefaultCategory(),\n                        filters,\n                    }\n                    : {\n                        filters,\n                    };\n            });\n        }\n    }\n    // Category dropdown\n    getCategoryDropdown() {\n        const { categoryOptions } = this.props;\n        const { isCategoryDropdownOpen } = this.state;\n        if (!categoryOptions) {\n            return null;\n        }\n        return (React.createElement(ToolbarItem, null,\n            React.createElement(Dropdown, { onSelect: this.onCategorySelect, position: DropdownPosition.left, toggle: React.createElement(DropdownToggle, { onToggle: this.onCategoryToggle, style: { width: '100%' } },\n                    React.createElement(FilterIcon, null),\n                    \" \",\n                    this.getCurrentCategoryOption().name), isOpen: isCategoryDropdownOpen, dropdownItems: categoryOptions &&\n                    categoryOptions.map(option => (React.createElement(DropdownItem, { key: option.key, onClick: () => this.onCategoryClick(option.key) }, option.name))), style: { width: '100%' } })));\n    }\n    getOrgUnitOptions() {\n        const { orgReport } = this.props;\n        let options = [];\n        if (!(orgReport && orgReport.data)) {\n            return options;\n        }\n        // Sort all names first\n        const sortedData = orgReport.data.sort((a, b) => {\n            if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                return -1;\n            }\n            if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                return 1;\n            }\n            return 0;\n        });\n        // Move roots first\n        const roots = sortedData.filter(org => org.level === 0);\n        const filteredOrgs = sortedData.filter(org => org.level !== 0);\n        roots.map(root => {\n            const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n            filteredOrgs.unshift(item);\n        });\n        if (filteredOrgs.length > 0) {\n            options = filteredOrgs.map(org => {\n                return {\n                    key: org[orgUnitIdKey],\n                    name: org[orgUnitNameKey],\n                };\n            });\n        }\n        return options;\n    }\n    getTagKeyOptions() {\n        const { tagReport } = this.props;\n        let data = [];\n        let options = [];\n        if (!(tagReport && tagReport.data)) {\n            return options;\n        }\n        // If the key_only param is used, we have an array of strings\n        let hasTagKeys = false;\n        for (const item of tagReport.data) {\n            if (item.hasOwnProperty('key')) {\n                hasTagKeys = true;\n                break;\n            }\n        }\n        // Workaround for https://github.com/project-koku/koku/issues/1797\n        if (hasTagKeys) {\n            const keepData = tagReport.data.map((_a) => {\n                var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                return keepProps;\n            });\n            data = uniqBy(keepData, 'key');\n        }\n        else {\n            data = uniq(tagReport.data);\n        }\n        if (data.length > 0) {\n            options = data.map(tag => {\n                const key = hasTagKeys ? tag.key : tag;\n                return {\n                    key,\n                    name: key,\n                };\n            });\n        }\n        return options;\n    }\n    getTagValueOptions() {\n        const { tagReport } = this.props;\n        const { currentTagKey } = this.state;\n        let data = [];\n        if (tagReport && tagReport.data) {\n            data = [...new Set([...tagReport.data])]; // prune duplicates\n        }\n        let options = [];\n        if (data.length > 0) {\n            for (const tag of data) {\n                if (currentTagKey === tag.key && tag.values) {\n                    options = tag.values.map(val => {\n                        return {\n                            key: val,\n                            name: val,\n                        };\n                    });\n                    break;\n                }\n            }\n        }\n        return options;\n    }\n    render() {\n        const { categoryOptions, pagination, showExport } = this.props;\n        const options = categoryOptions\n            ? categoryOptions\n            : this.getDefaultCategoryOptions();\n        // Todo: clearAllFilters workaround https://github.com/patternfly/patternfly-react/issues/4222\n        return (React.createElement(\"div\", { style: styles.toolbarContainer },\n            React.createElement(Toolbar, { id: \"details-toolbar\", clearAllFilters: this.onDelete, collapseListedFiltersBreakpoint: \"xl\" },\n                React.createElement(ToolbarContent, null,\n                    React.createElement(ToolbarToggleGroup, { breakpoint: \"xl\", toggleIcon: React.createElement(FilterIcon, null) },\n                        React.createElement(ToolbarGroup, { variant: \"filter-group\" },\n                            this.getCategoryDropdown(),\n                            this.getTagKeySelect(),\n                            this.getTagKeyOptions().map(option => this.getTagValueSelect(option)),\n                            this.getOrgUnitSelect(),\n                            options &&\n                                options\n                                    .filter(option => option.key !== tagKey && option.key !== orgUnitIdKey)\n                                    .map(option => this.getCategoryInput(option))),\n                        Boolean(showExport) && (React.createElement(ToolbarGroup, null, this.getExportButton()))),\n                    React.createElement(ToolbarItem, { alignment: { default: 'alignRight' }, variant: \"pagination\" }, pagination)))));\n    }\n}\nconst DataToolbar = translate()(DataToolbarBase);\nexport { DataToolbar };\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import { global_BackgroundColor_light_100, global_Color_100, global_Color_200, global_FontSize_md, global_FontSize_sm, global_spacer_md, global_spacer_sm, global_spacer_xl, } from '@patternfly/react-tokens';\nexport const styles = {\n    cost: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    costLabel: {},\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: global_spacer_xl.var,\n        backgroundColor: global_BackgroundColor_light_100.var,\n    },\n    info: {\n        marginLeft: global_spacer_sm.value,\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Popover, Title, Tooltip } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons/dist/js/icons/info-circle-icon';\nimport { getQuery } from 'api/queries/ocpQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport { GroupBy } from 'pages/details/components/groupBy/groupBy';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpProvidersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy, } from 'utils/computedReport/getComputedOcpReportItems';\nimport { getSinceDateRangeString } from 'utils/dateRange';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './detailsHeader.styles';\nconst baseQuery = {\n    delta: 'cost',\n    filter: {\n        time_scope_units: 'month',\n        time_scope_value: -1,\n        resolution: 'monthly',\n    },\n};\nconst groupByOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nconst reportPathsType = \"ocp\" /* ocp */;\nclass DetailsHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            showPopover: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handlePopoverClick = () => {\n            this.setState({\n                show: !this.state.showPopover,\n            });\n        };\n    }\n    render() {\n        const { groupBy, onGroupByClicked, providers, providersError, report, t, } = this.props;\n        const showContent = report &&\n            !providersError &&\n            providers &&\n            providers.meta &&\n            providers.meta.count > 0;\n        let cost = React.createElement(EmptyValueState, null);\n        let supplementaryCost = React.createElement(EmptyValueState, null);\n        let infrastructureCost = React.createElement(EmptyValueState, null);\n        if (report && report.meta && report.meta.total) {\n            const hasCost = report.meta.total.cost && report.meta.total.cost.total;\n            const hasSupplementaryCost = report.meta.total.supplementary &&\n                report.meta.total.supplementary.total;\n            const hasInfrastructureCost = report.meta.total.infrastructure &&\n                report.meta.total.infrastructure.total;\n            cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD');\n            supplementaryCost = formatValue(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost\n                ? report.meta.total.supplementary.total.units\n                : 'USD');\n            infrastructureCost = formatValue(hasInfrastructureCost\n                ? report.meta.total.infrastructure.total.value\n                : 0, hasInfrastructureCost\n                ? report.meta.total.infrastructure.total.units\n                : 'USD');\n        }\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", null,\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, t('ocp_details.title')),\n                React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onItemClicked: onGroupByClicked, options: groupByOptions, reportPathsType: reportPathsType, showTags: true })),\n            Boolean(showContent) && (React.createElement(\"div\", { style: styles.cost },\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: \"4xl\" },\n                    React.createElement(Tooltip, { content: t('ocp_details.total_cost_tooltip', {\n                            supplementaryCost,\n                            infrastructureCost,\n                        }), enableFlip: true },\n                        React.createElement(\"span\", null, cost))),\n                React.createElement(\"div\", { style: styles.costLabel },\n                    React.createElement(\"div\", { style: styles.costLabelUnit },\n                        t('ocp_details.total_cost'),\n                        React.createElement(\"span\", { style: styles.infoIcon },\n                            React.createElement(Popover, { \"aria-label\": t('ocp_details.supplementary_aria_label'), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('ocp_details.supplementary_cost_title')),\n                                    React.createElement(\"p\", null, t('ocp_details.supplementary_cost_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('ocp_details.infrastructure_cost_title')),\n                                    React.createElement(\"p\", null, t('ocp_details.infrastructure_cost_desc'))) },\n                                React.createElement(InfoCircleIcon, { style: styles.info, onClick: this.handlePopoverClick })))),\n                    React.createElement(\"div\", { style: styles.costLabelDate }, getSinceDateRangeString()))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const queryString = getQuery(baseQuery);\n    const providersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const providers = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, \"ocp\" /* ocp */, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, providersQueryString);\n    return {\n        providers,\n        providersError,\n        providersFetchStatus,\n        queryString,\n    };\n});\nconst DetailsHeader = translate()(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","import { global_BackgroundColor_light_100, global_danger_color_100, global_disabled_color_100, global_FontSize_xs, global_spacer_3xl, global_spacer_xs, global_success_color_100, } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const styles = {\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n};\nexport const monthOverMonthOverride = css `\n  div {\n    display: block;\n    margin-right: 0;\n    margin-bottom: ${global_spacer_xs.value};\n    &.iconOverride {\n      &.decrease {\n        color: ${global_success_color_100.value};\n      }\n      &.increase {\n        color: ${global_danger_color_100.value};\n      }\n      .fa-sort-up,\n      .fa-sort-down {\n        margin-left: 10px;\n      }\n      .fa-sort-up::before {\n        color: ${global_danger_color_100.value};\n      }\n      .fa-sort-down::before {\n        color: ${global_success_color_100.value};\n      }\n      span {\n        margin-right: -17px !important;\n      }\n    }\n  }\n`;\nexport const tableOverride = css `\n  &.pf-c-table {\n    thead th + th + th {\n      .pf-c-table__button {\n        margin-left: auto\n      }\n      text-align: right;\n    }\n    tbody td + td + td + td {\n      text-align: right;\n    }\n  }\n`;\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/js/icons/calculator-icon';\nimport { sortable, SortByDirection, Table, TableBody, TableHeader, } from '@patternfly/react-table';\nimport { getQuery, getQueryRoute } from 'api/queries/ocpQuery';\nimport { tagPrefix } from 'api/queries/query';\nimport { EmptyFilterState } from 'components/state/emptyFilterState/emptyFilterState';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport { Actions } from 'pages/details/components/actions/actions';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedOcpReportItems';\nimport { getUnsortedComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString, } from 'utils/dateRange';\nimport { formatCurrency } from 'utils/formatValue';\nimport { monthOverMonthOverride, styles, tableOverride, } from './detailsTable.styles';\nconst reportPathsType = \"ocp\" /* ocp */;\nclass DetailsTableBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.buildCostLink = (label) => {\n            const { groupBy, query } = this.props;\n            const newQuery = Object.assign(Object.assign({}, query), { group_by: {\n                    [groupBy]: label,\n                } });\n            return `/details/ocp/breakdown?${getQueryRoute(newQuery)}`;\n        };\n        this.initDatum = () => {\n            const { query, report, t } = this.props;\n            if (!query || !report) {\n                return;\n            }\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = this.getGroupByTagKey();\n            const total = formatCurrency(report &&\n                report.meta &&\n                report.meta.total &&\n                report.meta.total.cost &&\n                report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0);\n            const columns = groupByTagKey\n                ? [\n                    // Sorting with tag keys is not supported\n                    {\n                        title: t('ocp_details.tag_column_title'),\n                    },\n                    {\n                        title: t('ocp_details.change_column_title'),\n                    },\n                    {\n                        title: t('ocp_details.infrastructure_cost_column_title'),\n                    },\n                    {\n                        title: t('ocp_details.supplementary_cost_column_title'),\n                    },\n                    {\n                        orderBy: 'cost',\n                        title: t('ocp_details.cost_column_title', { total }),\n                        transforms: [sortable],\n                    },\n                    {\n                        title: '',\n                    },\n                ]\n                : [\n                    {\n                        orderBy: groupById,\n                        title: t('ocp_details.name_column_title', { groupBy: groupById }),\n                        transforms: [sortable],\n                    },\n                    {\n                        title: t('ocp_details.change_column_title'),\n                    },\n                    {\n                        orderBy: 'infrastructure_cost',\n                        title: t('ocp_details.infrastructure_cost_column_title'),\n                    },\n                    {\n                        orderBy: 'supplementary_cost',\n                        title: t('ocp_details.supplementary_cost_column_title'),\n                    },\n                    {\n                        orderBy: 'cost',\n                        title: t('ocp_details.cost_column_title'),\n                        transforms: [sortable],\n                    },\n                    {\n                        title: '',\n                    },\n                ];\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n            computedItems.map((item, index) => {\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const InfrastructureCost = this.getInfrastructureCost(item, index);\n                const supplementaryCost = this.getSupplementaryCost(item, index);\n                const cost = this.getTotalCost(item, index);\n                const actions = this.getActions(item, index);\n                let name = React.createElement(Link, { to: this.buildCostLink(label.toString()) }, label);\n                if (label === `no-${groupById}` || label === `no-${groupByTagKey}`) {\n                    name = label;\n                }\n                rows.push({\n                    cells: [\n                        { title: React.createElement(\"div\", null, name) },\n                        { title: React.createElement(\"div\", null, monthOverMonth) },\n                        { title: React.createElement(\"div\", null, InfrastructureCost) },\n                        { title: React.createElement(\"div\", null, supplementaryCost) },\n                        { title: React.createElement(\"div\", null, cost) },\n                        { title: React.createElement(\"div\", null, actions) },\n                    ],\n                    isOpen: false,\n                    item,\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n                sortBy: {},\n            });\n        };\n        this.getActions = (item, index) => {\n            const { groupBy, query } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, item: item, providerType: \"ocp\" /* ocp */, query: query, reportPathsType: reportPathsType, showPriceListOption: groupBy === 'cluster' }));\n        };\n        this.getEmptyState = () => {\n            const { query, t } = this.props;\n            for (const val of Object.values(query.filter_by)) {\n                if (val !== '*') {\n                    return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, t('ocp_details.empty_state'))));\n        };\n        this.getSupplementaryCost = (item, index) => {\n            const { report, t } = this.props;\n            const total = report &&\n                report.meta &&\n                report.meta.total &&\n                report.meta.total.supplementary &&\n                report.meta.total.supplementary.total\n                ? report.meta.total.supplementary.total.value\n                : 0;\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.supplementary),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, t('percent_of_cost', {\n                    value: ((item.supplementary / total) * 100).toFixed(2),\n                }))));\n        };\n        this.getGroupByTagKey = () => {\n            const { query } = this.props;\n            let groupByTagKey;\n            for (const groupBy of Object.keys(query.group_by)) {\n                const tagIndex = groupBy.indexOf(tagPrefix);\n                if (tagIndex !== -1) {\n                    groupByTagKey = groupBy.substring(tagIndex + tagPrefix.length);\n                    break;\n                }\n            }\n            return groupByTagKey;\n        };\n        this.getInfrastructureCost = (item, index) => {\n            const { report, t } = this.props;\n            const total = report &&\n                report.meta &&\n                report.meta.total &&\n                report.meta.total.infrastructure &&\n                report.meta.total.infrastructure.total &&\n                report.meta.total.infrastructure.total.value\n                ? report.meta.total.infrastructure.total.value\n                : 0;\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.infrastructure),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, t('percent_of_cost', {\n                    value: ((item.infrastructure / total) * 100).toFixed(2),\n                }))));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { t } = this.props;\n            const value = formatCurrency(Math.abs(item.cost - item.deltaValue));\n            const percentage = item.deltaPercent !== null ? Math.abs(item.deltaPercent).toFixed(2) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.deltaPercent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.deltaPercent !== null && item.deltaValue < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.deltaPercent !== null && item.deltaValue > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: monthOverMonthOverride },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        Boolean(showPercentage) ? (t('percent', { value: percentage })) : (React.createElement(EmptyValueState, null)),\n                        Boolean(showPercentage &&\n                            item.deltaPercent !== null &&\n                            item.deltaValue > 0) && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        Boolean(showPercentage &&\n                            item.deltaPercent !== null &&\n                            item.deltaValue < 0) && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.ininfoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getSortBy = () => {\n            const { query } = this.props;\n            const { columns } = this.state;\n            let index = -1;\n            let direction = SortByDirection.asc;\n            for (const key of Object.keys(query.order_by)) {\n                let c = 0;\n                for (const column of columns) {\n                    if (column.orderBy === key) {\n                        direction =\n                            query.order_by[key] === 'asc'\n                                ? SortByDirection.asc\n                                : SortByDirection.desc;\n                        index = c + 1;\n                        break;\n                    }\n                    c++;\n                }\n            }\n            return index > -1 ? { index, direction } : {};\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, t } = this.props;\n            const cost = report &&\n                report.meta &&\n                report.meta.total &&\n                report.meta.total.cost &&\n                report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, t('percent_of_cost', {\n                    value: ((item.cost / cost) * 100).toFixed(2),\n                }))));\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected } = this.props;\n            let rows;\n            if (rowId === -1) {\n                rows = this.state.rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                rows = [...this.state.rows];\n                rows[rowId].selected = isSelected;\n            }\n            if (onSelected) {\n                const selectedItems = [];\n                for (const row of rows) {\n                    if (row.selected && row.item && !row.parent) {\n                        selectedItems.push(row.item);\n                    }\n                }\n                onSelected(selectedItems);\n            }\n            this.setState({ rows });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { onSort } = this.props;\n            const { columns } = this.state;\n            if (onSort) {\n                const orderBy = columns[index - 1].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { query, report } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data\n            ? JSON.stringify(prevProps.report.data)\n            : '';\n        if (getQuery(prevProps.query) !== getQuery(query) ||\n            previousReport !== currentReport) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { columns, rows } = this.state;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Table, { \"aria-label\": \"details-table\", cells: columns, className: tableOverride, rows: rows, sortBy: this.getSortBy(), onSelect: this.handleOnSelect, onSort: this.handleOnSort, gridBreakPoint: \"grid-2xl\" },\n                React.createElement(TableHeader, null),\n                React.createElement(TableBody, null)),\n            Boolean(rows.length === 0) && (React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState()))));\n    }\n}\nconst DetailsTable = translate()(DetailsTableBase);\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/ocpQuery';\nimport { tagKey } from 'api/queries/query';\nimport { DataToolbar } from 'pages/details/components/dataToolbar/dataToolbar';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { isEqual } from 'utils/equal';\nconst reportType = \"tag\" /* tag */;\nconst reportPathsType = \"ocp\" /* ocp */;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { report, t } = this.props;\n            const options = [\n                { name: t('filter_by.values.cluster'), key: 'cluster' },\n                { name: t('filter_by.values.node'), key: 'node' },\n                { name: t('filter_by.values.project'), key: 'project' },\n                { name: t('filter_by.values.tag'), key: tagKey },\n            ];\n            return report && report.data && report.data.length\n                ? options\n                : options.filter(option => option.key !== tagKey);\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        });\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { fetchReport, query, queryString, report } = this.props;\n        if (query && !isEqual(query, prevProps.query)) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n        if (!isEqual(report, prevProps.report)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            });\n        }\n    }\n    render() {\n        const { groupBy, isExportDisabled, onExportClicked, onFilterAdded, onFilterRemoved, pagination, query, report, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isExportDisabled: isExportDisabled, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, tagReport: report, showExport: true }));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    // Omitting key_only to share a single request -- the toolbar needs key values\n    const queryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n    });\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst DetailsToolbar = translate()(connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase));\nexport { DetailsToolbar };\n","import { global_BackgroundColor_light_100, global_spacer_md, global_spacer_xl, } from '@patternfly/react-tokens';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_xl.value,\n        paddingTop: global_spacer_xl.value,\n    },\n    ocpDetails: {\n        minHeight: '100%',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_xl.value,\n        marginRight: global_spacer_xl.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        padding: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_xl.value,\n        marginRight: global_spacer_xl.value,\n    },\n};\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { getQuery, getQueryRoute, parseQuery, } from 'api/queries/ocpQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { tagPrefix } from 'api/queries/query';\nimport { ExportModal } from 'pages/details/components/export/exportModal';\nimport Loading from 'pages/state/loading';\nimport NoProviders from 'pages/state/noProviders';\nimport NotAvailable from 'pages/state/notAvailable';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpProvidersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedOcpReportItems';\nimport { getUnsortedComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nimport { styles } from './ocpDetails.styles';\nconst baseQuery = {\n    delta: 'cost',\n    filter: {\n        limit: 10,\n        offset: 0,\n        resolution: 'monthly',\n        time_scope_units: 'month',\n        time_scope_value: -1,\n    },\n    filter_by: {},\n    group_by: {\n        project: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst reportType = \"cost\" /* cost */;\nconst reportPathsType = \"ocp\" /* ocp */;\nclass OcpDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = (computedItems) => {\n            const { isExportModalOpen, selectedItems } = this.state;\n            const { query } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = this.getGroupByTagKey();\n            return (React.createElement(ExportModal, { isAllItems: selectedItems.length === computedItems.length, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: selectedItems, onClose: this.handleExportModalClose, query: query, reportPathsType: reportPathsType }));\n        };\n        this.getGroupByTagKey = () => {\n            const { query } = this.props;\n            let groupByTagKey;\n            for (const groupBy of Object.keys(query.group_by)) {\n                const tagIndex = groupBy.indexOf(tagPrefix);\n                if (tagIndex !== -1) {\n                    groupByTagKey = groupBy.substring(tagIndex + tagPrefix.length);\n                    break;\n                }\n            }\n            return groupByTagKey;\n        };\n        this.getPagination = (isBottom = false) => {\n            const { report } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = offset / limit + 1;\n            return (React.createElement(Pagination, { isCompact: true, itemCount: count, onPerPageSelect: this.handlePerPageSelect, onSetPage: this.handleSetPage, page: page, perPage: limit, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: \"`pagination${isBottom ? '-bottom' : ''}`\" }));\n        };\n        this.getTable = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = this.getGroupByTagKey();\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, onSelected: this.handleSelected, onSort: this.handleSort, query: query, report: report }));\n        };\n        this.getToolbar = () => {\n            const { selectedItems } = this.state;\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = this.getGroupByTagKey();\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isExportDisabled: selectedItems.length === 0, onExportClicked: this.handleExportModalOpen, onFilterAdded: this.handleFilterAdded, onFilterRemoved: this.handleFilterRemoved, pagination: this.getPagination(), query: query, report: report }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleFilterAdded = (filterType, filterValue) => {\n            const { history, query } = this.props;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            // Filter by * won't generate a new request if group_by * already exists\n            if (filterValue === '*' && newQuery.group_by[filterType] === '*') {\n                return;\n            }\n            if (newQuery.filter_by[filterType]) {\n                let found = false;\n                const filters = newQuery.filter_by[filterType];\n                if (!Array.isArray(filters)) {\n                    found = filterValue === newQuery.filter_by[filterType];\n                }\n                else {\n                    for (const filter of filters) {\n                        if (filter === filterValue) {\n                            found = true;\n                            break;\n                        }\n                    }\n                }\n                if (!found) {\n                    newQuery.filter_by[filterType] = [\n                        newQuery.filter_by[filterType],\n                        filterValue,\n                    ];\n                }\n            }\n            else {\n                newQuery.filter_by[filterType] = [filterValue];\n            }\n            const filteredQuery = this.getRouteForQuery(newQuery, true);\n            history.replace(filteredQuery);\n        };\n        this.handleFilterRemoved = (filterType, filterValue) => {\n            const { history, query } = this.props;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            if (filterType === null) {\n                newQuery.filter_by = undefined; // Clear all\n            }\n            else if (filterValue === null) {\n                newQuery.filter_by[filterType] = undefined; // Clear all values\n            }\n            else if (Array.isArray(newQuery.filter_by[filterType])) {\n                const index = newQuery.filter_by[filterType].indexOf(filterValue);\n                if (index > -1) {\n                    newQuery.filter_by[filterType] = [\n                        ...query.filter_by[filterType].slice(0, index),\n                        ...query.filter_by[filterType].slice(index + 1),\n                    ];\n                }\n            }\n            else {\n                newQuery.filter_by[filterType] = undefined;\n            }\n            const filteredQuery = this.getRouteForQuery(newQuery, true);\n            history.replace(filteredQuery);\n        };\n        this.handleGroupByClick = groupBy => {\n            const { history, query } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { filter_by: undefined, group_by: {\n                    [groupByKey]: '*',\n                }, order_by: { cost: 'desc' } });\n            history.replace(this.getRouteForQuery(newQuery, true));\n            this.setState({ selectedItems: [] });\n        };\n        this.handlePerPageSelect = (_event, perPage) => {\n            const { history, query } = this.props;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            newQuery.filter = Object.assign(Object.assign({}, query.filter), { limit: perPage });\n            const filteredQuery = this.getRouteForQuery(newQuery, true);\n            history.replace(filteredQuery);\n        };\n        this.handleSelected = (selectedItems) => {\n            this.setState({ selectedItems });\n        };\n        this.handleSetPage = (event, pageNumber) => {\n            const { history, query, report } = this.props;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = pageNumber * limit - limit;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            newQuery.filter = Object.assign(Object.assign({}, query.filter), { offset });\n            const filteredQuery = this.getRouteForQuery(newQuery);\n            history.replace(filteredQuery);\n        };\n        this.handleSort = (sortType, isSortAscending) => {\n            const { history, query } = this.props;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            newQuery.order_by = {};\n            newQuery.order_by[sortType] = isSortAscending ? 'asc' : 'desc';\n            const filteredQuery = this.getRouteForQuery(newQuery);\n            history.replace(filteredQuery);\n        };\n        this.updateReport = () => {\n            const { query, location, fetchReport, history, queryString } = this.props;\n            if (!location.search) {\n                history.replace(this.getRouteForQuery({\n                    filter_by: query ? query.filter_by : undefined,\n                    group_by: query ? query.group_by : undefined,\n                    order_by: { cost: 'desc' },\n                }));\n            }\n            else {\n                fetchReport(reportPathsType, reportType, queryString);\n            }\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleFilterAdded = this.handleFilterAdded.bind(this);\n        this.handleFilterRemoved = this.handleFilterRemoved.bind(this);\n        this.handlePerPageSelect = this.handlePerPageSelect.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n        this.handleSetPage = this.handleSetPage.bind(this);\n        this.handleSort = this.handleSort.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { location, report, reportError, queryString } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.queryString !== queryString;\n        const noReport = !report && !reportError;\n        const noLocation = !location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    getRouteForQuery(query, reset = false) {\n        const { history } = this.props;\n        // Reset pagination\n        if (reset) {\n            query.filter = Object.assign(Object.assign({}, query.filter), { offset: baseQuery.filter.offset });\n        }\n        return `${history.location.pathname}?${getQueryRoute(query)}`;\n    }\n    render() {\n        const { providers, providersFetchStatus, query, report, reportError, } = this.props;\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const groupByTagKey = this.getGroupByTagKey();\n        const computedItems = getUnsortedComputedReportItems({\n            report,\n            idKey: groupByTagKey || groupById,\n        });\n        const isLoading = providersFetchStatus === 1 /* inProgress */;\n        const noProviders = providers &&\n            providers.meta &&\n            providers.meta.count === 0 &&\n            providersFetchStatus === 2 /* complete */;\n        if (reportError) {\n            return React.createElement(NotAvailable, null);\n        }\n        else if (noProviders) {\n            return React.createElement(NoProviders, null);\n        }\n        else if (isLoading) {\n            return React.createElement(Loading, null);\n        }\n        return (React.createElement(\"div\", { style: styles.ocpDetails },\n            React.createElement(DetailsHeader, { groupBy: groupById, onGroupByClicked: this.handleGroupByClick, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                this.getToolbar(),\n                this.getExportModal(computedItems),\n                React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                React.createElement(\"div\", { style: styles.paginationContainer },\n                    React.createElement(\"div\", { style: styles.pagination }, this.getPagination(true))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const queryFromRoute = parseQuery(location.search);\n    const query = {\n        delta: 'cost',\n        filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        group_by: queryFromRoute.group_by || baseQuery.group_by,\n        order_by: queryFromRoute.order_by || baseQuery.order_by,\n    };\n    const queryString = getQuery(query);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    const providersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const providers = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, providersQueryString);\n    return {\n        providers,\n        providersFetchStatus,\n        query,\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default translate()(connect(mapStateToProps, mapDispatchToProps)(OcpDetails));\n","import OcpDetails from './ocpDetails';\nexport default OcpDetails;\n","import { CostOverviewBase } from 'pages/details/components/costOverview/costOverviewBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCostOverviewSelectors } from 'store/costOverview/ocpCostOverview';\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: ocpCostOverviewSelectors.selectWidgets(state),\n        widgets: ocpCostOverviewSelectors.selectCurrentWidgets(state),\n    };\n});\nconst CostOverview = translate()(connect(mapStateToProps, {})(CostOverviewBase));\nexport { CostOverview };\n","import { HistoricalDataBase } from 'pages/details/components/historicalData/historicalDataBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpHistoricalDataSelectors } from 'store/historicalData/ocpHistoricalData';\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: ocpHistoricalDataSelectors.selectWidgets(state),\n        widgets: ocpHistoricalDataSelectors.selectCurrentWidgets(state),\n    };\n});\nconst HistoricalData = translate()(connect(mapStateToProps, {})(HistoricalDataBase));\nexport { HistoricalData };\n","import { getQuery, parseQuery } from 'api/queries/ocpQuery';\nimport BreakdownBase from 'pages/details/components/breakdown/breakdownBase';\nimport { getGroupById, getGroupByValue, } from 'pages/details/components/utils/groupBy';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { CostOverview } from './costOverview';\nimport { HistoricalData } from './historicalData';\nconst detailsURL = '/details/ocp';\nconst reportType = \"cost\" /* cost */;\nconst reportPathsType = \"ocp\" /* ocp */;\nconst mapStateToProps = createMapStateToProps(state => {\n    const queryFromRoute = parseQuery(location.search);\n    const query = queryFromRoute;\n    const queryString = getQuery(query);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    const filterBy = getGroupByValue(query);\n    const groupBy = getGroupById(query);\n    return {\n        costOverviewComponent: (React.createElement(CostOverview, { filterBy: filterBy, groupBy: groupBy, report: report })),\n        detailsURL,\n        filterBy,\n        groupBy,\n        historicalDataComponent: (React.createElement(HistoricalData, { filterBy: filterBy, groupBy: groupBy })),\n        query,\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportType,\n        reportPathsType,\n        title: filterBy,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst OcpBreakdown = translate()(connect(mapStateToProps, mapDispatchToProps)(BreakdownBase));\nexport default OcpBreakdown;\n","import OcpBreakdown from './ocpBreakdown';\nexport default OcpBreakdown;\n"],"sourceRoot":""}