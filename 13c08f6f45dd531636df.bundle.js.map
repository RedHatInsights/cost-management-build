{"version":3,"sources":["webpack:///./src/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/components/charts/usageChart/usageChart.tsx","webpack:///./src/components/charts/usageChart/index.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummary.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummary.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryAlt.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryAlt.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryDetails.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryDetails.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItem.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItem.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItems.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItems.tsx","webpack:///./src/components/charts/costChart/costChart.styles.ts","webpack:///./src/components/charts/costChart/costChart.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryTrend.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryTrend.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryUsage.tsx","webpack:///./src/components/reports/ocpReportSummary/index.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummary.styles.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummary.tsx","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryAlt.styles.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryAlt.tsx","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryDetails.styles.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryDetails.tsx","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryItem.styles.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryItem.tsx","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryItems.styles.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryItems.tsx","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryTrend.styles.ts","webpack:///./src/components/reports/azureReportSummary/azureReportSummaryTrend.tsx","webpack:///./src/components/reports/azureReportSummary/index.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummary.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummary.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryAlt.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryAlt.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryDetails.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryDetails.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItem.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItem.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItems.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItems.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryTrend.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryTrend.tsx","webpack:///./src/components/reports/awsReportSummary/index.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummary.styles.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummary.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryAlt.styles.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryAlt.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryDetails.styles.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryDetails.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryItem.styles.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryItem.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryItems.styles.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryItems.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryTrend.styles.ts","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryTrend.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/ocpCloudReportSummaryUsage.tsx","webpack:///./src/components/reports/ocpCloudReportSummary/index.ts","webpack:///./node_modules/react-router-dom/es/Link.js","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboard.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboard.tsx","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboard.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/azureDashboard/azureDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboard.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboard.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboard.tsx","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboard.tsx","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboard.tsx","webpack:///./src/pages/overview/overview.styles.ts","webpack:///./src/pages/overview/perspective.styles.ts","webpack:///./src/pages/overview/perspective.tsx","webpack:///./src/pages/overview/overview.tsx","webpack:///./src/pages/overview/index.ts"],"names":["chartStyles","currentRequestData","data","fill","stroke","strokeDasharray","currentUsageData","itemsPerRow","legend","labels","fontFamily","esm","value","fontSize","minWidth","legendColorScale","previousRequestData","previousUsageData","currentColorScale","previousColorScale","yAxis","axisLabel","padding","grid","ticks","tickLabels","xAxis","styles","StyleSheet","create","chartContainer",":not(foo) svg","overflow","marginTop","usageChart_UsageChart","react_default","a","Component","[object Object]","super","arguments","this","containerRef","createRef","state","hiddenSeries","Set","width","initDatum","props","setState","series","childName","legendItem","name","Object","chartUtils","symbol","type","style","handleResize","current","clientWidth","getChart","index","createElement","ChartArea","has","y","interpolation","key","getLegend","legendItemsPerRow","ChartLegend","colorScale","getLegendData","height","gutter","getTooltipLabel","datum","formatDatumValue","formatDatumOptions","es","t","handleLegendClick","delete","add","isDataAvailable","unavailable","forEach","s","isSeriesHidden","length","push","getChartNames","result","map","serie","getEvents","chart_interactive_legend","chartNames","isHidden","legendName","onLegendClick","assign","setTimeout","window","addEventListener","prevProps","removeEventListener","domain","x","maxCurrentRequest","maxCurrentUsage","maxPreviousRequest","maxPreviousUsage","maxValue","Math","max","ceil","currentRequestDate","get_date_default","currentUsageDate","previousRequestDate","previousUsageDate","adjustContainerHeight","containerHeight","title","container","ChartVoronoiContainer","allowTooltip","constrainToVisibleArea","undefined","voronoiDimension","getDomain","endDate","getEndDate","midDate","floor","adjustedContainerHeight","className","ref","Chart","containerComponent","events","legendComponent","legendData","legendPosition","theme","chartTheme","ChartAxis","tickValues","dependentAxis","__webpack_require__","d","__webpack_exports__","chartSkeleton","marginBottom","legendSkeleton","reportSummary","subtitle","display","color","var","OcpReportSummary","children","detailsLink","subTitle","status","Card","CardHeader","Title","size","Boolean","CardBody","Fragment","Skeleton","xs","md","sm","CardFooter","ocpReportSummaryAlt_styles_styles","cost","flexGrow","minHeight","marginRight","tops","OcpReportSummaryAlt","tabs","Grid","GridItem","lg","xl","ocpReportSummaryDetails_styles_styles","reportSummaryDetails","alignItems","text","paddingBottom","lineHeight","valueContainer","wordWrap","OcpReportSummaryDetails","costLabel","formatValue","formatOptions","report","reportType","requestFormatOptions","requestLabel","showUnits","showUsageFirst","usageFormatOptions","usageLabel","emptyValueState","derivedCost","infrastructureCost","request","usage","meta","total","units","derived_cost","infrastructure_cost","getRequestLayout","usageUnits","_units","utils_formatValue","unitsLabel","getUsageLayout","Tooltip","content","enableFlip","ocpReportSummaryItem_styles_styles","reportSummaryItem",":not(:last-child)","test","OcpReportSummaryItemBase","label","totalValue","lookup","percentVal","Number","toFixed","percentLabel","percent","Progress","defaultProps","v","OcpReportSummaryItem","ocpReportSummaryItems_styles_styles","skeleton","OcpReportSummaryItems","nextProps","idKey","labelKey","computedItems","getComputedOcpReportItems","otherIndex","findIndex","i","id","toString","includes","slice","items","getItems","currentCostData","currentInfrastructureCostData","previousCostData","previousInfrastructureCostData","costChart_styles_styles","costChart_CostChart","costKey","responsive","dist_es","maxCurrentInfrastructure","maxPreviousInfrastructure","currentInfrastructureDate","previousInfrastructureDate","ocpReportSummaryTrend_styles_styles","chart","OcpReportSummaryTrend","OcpReportSummaryUsage","usageChart","AzureReportSummary","azureReportSummaryAlt_styles_styles","AzureReportSummaryAlt","azureReportSummaryDetails_styles_styles","AzureReportSummaryDetails","count","getCostLayout","azureReportSummaryItem_styles_styles","AzureReportSummaryItemBase","AzureReportSummaryItem","azureReportSummaryItems_styles_styles","AzureReportSummaryItems","getComputedAzureReportItems","azureReportSummaryTrend_styles_styles","AzureReportSummaryTrend","trendChart","AwsReportSummary","awsReportSummaryAlt_styles_styles","AwsReportSummaryAlt","awsReportSummaryDetails_styles_styles","AwsReportSummaryDetails","awsReportSummaryItem_styles_styles","AwsReportSummaryItemBase","AwsReportSummaryItem","awsReportSummaryItems_styles_styles","AwsReportSummaryItems","getComputedAwsReportItems","awsReportSummaryTrend_styles_styles","AwsReportSummaryTrend","OcpCloudReportSummary","ocpCloudReportSummaryAlt_styles_styles","OcpCloudReportSummaryAlt","ocpCloudReportSummaryDetails_styles_styles","OcpCloudReportSummaryDetails","markupCost","cloudReportType","markup_cost","ocpCloudReportSummaryItem_styles_styles","OcpCloudReportSummaryItemBase","OcpCloudReportSummaryItem","ocpCloudReportSummaryItems_styles_styles","OcpCloudReportSummaryItems","getComputedOcpCloudReportItems","ocpCloudReportSummaryTrend_styles_styles","OcpCloudReportSummaryTrend","OcpCloudReportSummaryUsage","_extends","target","source","prototype","hasOwnProperty","call","_possibleConstructorReturn","self","ReferenceError","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","Link_Link","_React$Component","Link","_temp","_this","instance","Constructor","TypeError","_classCallCheck","_len","args","Array","_key","apply","concat","handleClick","onClick","defaultPrevented","button","preventDefault","history","context","router","_this$props","replace","to","subClass","superClass","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","render","_props","innerRef","obj","keys","indexOf","_objectWithoutProperties","browser_default","location","esm_history","href","createHref","propTypes","prop_types_default","func","string","bool","oneOfType","object","isRequired","contextTypes","shape","es_Link","chartAltHeight","chartHeight","containerAltHeight","containerTrendHeight","tabItems","getIdKeyForTab","tab","mapStateToProps","common","widgetId","widget","awsCloudDashboard","selectWidget","queries","selectWidgetQueries","currentQuery","previousQuery","previous","tabsQuery","currentReport","awsReports","selectReport","currentReportFetchStatus","selectReportFetchStatus","previousReport","tabsReport","tabsReportFetchStatus","mapDispatchToProps","fetchReports","fetchWidgetReports","updateTab","changeWidgetTab","AwsCloudDashboardWidget","react_redux_es","activeTabKey","buildDetailsLink","currentTab","awsQuery","group_by","order_by","details","trend","currentData","previousData","getUnits","awsReportSummary","showUsageLegendLabel","titleKey","getDetails","isUsageFirst","getDetailsLabel","usageKey","getDetailsLink","isDetailsLink","handleInsightsNavClick","getDetailsLinkTitle","groupBy","getHorizontalLayout","getSubTitle","getTabs","getTitle","today","Date","month","get_month_default","format_default","startDate","start_of_month_default","getTab","Tab","eventKey","getTabTitle","reportItem","getTabItem","availableTabs","topItems","activeTab","isCostReport","Tabs","isFilled","activeKey","onSelect","handleTabClick","getVerticalLayout","insights","chrome","appNavClick","secondaryNav","tabIndex","isHorizontal","awsCloudDashboard_mapStateToProps","selectWidgets","widgets","selectCurrentWidgets","awsCloudDashboard_awsCloudDashboard","xl2","awsDashboardWidget_styles_chartStyles","awsDashboardWidget_styles_styles","awsDashboardWidget_getIdKeyForTab","awsDashboardWidget_mapStateToProps","awsDashboard","awsDashboardWidget_mapDispatchToProps","AwsDashboardWidget","awsDashboard_mapStateToProps","awsDashboard_awsDashboard","azureCloudDashboardWidget_styles_chartStyles","azureCloudDashboardWidget_styles_styles","azureCloudDashboardWidget_getIdKeyForTab","azureCloudDashboardWidget_mapStateToProps","azureCloudDashboard","azureReports","azureCloudDashboardWidget_mapDispatchToProps","AzureCloudDashboardWidget","azureQuery","azureReportSummary","azureCloudDashboard_mapStateToProps","azureCloudDashboard_azureCloudDashboard","azureDashboardWidget_styles_chartStyles","azureDashboardWidget_styles_styles","azureDashboardWidget_getIdKeyForTab","azureDashboardWidget_mapStateToProps","azureDashboard","azureDashboardWidget_mapDispatchToProps","AzureDashboardWidget","azureDashboard_mapStateToProps","azureDashboard_azureDashboard","ocpCloudDashboardWidget_styles_chartStyles","containerUsageHeight","ocpCloudDashboardWidget_styles_styles","ocpCloudDashboardWidget_getIdKeyForTab","ocpCloudDashboardWidget_mapStateToProps","ocpCloudDashboard","ocpCloudReports","ocpCloudDashboardWidget_mapDispatchToProps","OcpCloudDashboardWidget","ocpCloudQuery","ocpCloudReportSummary","requestKey","ocpCloudDashboard_mapStateToProps","ocpCloudDashboard_ocpCloudDashboard","ocpDashboardWidget_styles_chartStyles","ocpDashboardWidget_styles_styles","ocpDashboardWidget_getIdKeyForTab","ocpDashboardWidget_mapStateToProps","ocpDashboard","ocpReports","ocpDashboardWidget_mapDispatchToProps","OcpDashboardWidget","ocpQuery","currentInfrastructureData","previousInfrastructureData","ocpReportSummary","ocpDashboard_mapStateToProps","ocpDashboard_ocpDashboard","ocpSupplementaryDashboardWidget_styles_chartStyles","ocpSupplementaryDashboardWidget_styles_styles","ocpSupplementaryDashboardWidget_getIdKeyForTab","ocpSupplementaryDashboardWidget_mapStateToProps","ocpSupplementaryDashboard","ocpSupplementaryDashboardWidget_mapDispatchToProps","OcpSupplementaryDashboardWidget","ocpSupplementaryDashboard_mapStateToProps","ocpSupplementaryDashboard_ocpSupplementaryDashboard","ocpUsageDashboardWidget_styles_chartStyles","ocpUsageDashboardWidget_styles_styles","ocpUsageDashboardWidget_getIdKeyForTab","ocpUsageDashboardWidget_mapStateToProps","ocpUsageDashboard","ocpUsageDashboardWidget_mapDispatchToProps","OcpUsageDashboardWidget","ocpUsageDashboard_mapStateToProps","ocpUsageDashboard_ocpUsageDashboard","overview_styles_styles","info","marginLeft","verticalAlign","infoIcon","infoTitle","fontWeight","perspective","headerOverride","index_esm","perspective_styles_styles","perspectiveSelector","perspectiveLabel","Perspective","defaultState","isPerspectiveOpen","getDropDownItems","options","option","DropdownItem","component","getCurrentLabel","currentItem","onItemClicked","handleSelect","handleToggle","dropdownItems","Dropdown","toggle","DropdownToggle","onToggle","isOpen","overview_getIdKeyForTab","ocpOptions","infrastructureOptions","infrastructureAwsOptions","infrastructureAzureOptions","infrastructureOcpOptions","overview_mapStateToProps","awsProvidersQueryString","providersQuery","providers","awsProviders","selectProviders","awsProvidersError","selectProvidersError","awsProvidersFetchStatus","selectProvidersFetchStatus","azureProvidersQueryString","azureProviders","azureProvidersError","azureProvidersFetchStatus","ocpProvidersQueryString","ocpProviders","ocpProvidersError","ocpProvidersFetchStatus","overview","openProvidersModal","onboarding","openModal","currentInfrastructurePerspective","currentOcpPerspective","showPopover","getAvailableTabs","isAwsAvailable","isAzureAvailable","isOcpAvailable","isOcpCloudAvailable","contentRef","getCurrentTab","getPerspective","handlePerspectiveClick","tabContentId","tabContentRef","getTabContent","val","TabContent","handlePopoverClick","show","error","isLoading","noAwsProviders","noAzureProviders","noOcpProviders","noProviders","showTabs","sizes","Popover","aria-label","bodyContent","info_circle_icon","page-type","errorState","noProvidersState","loadingState"],"mappings":"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","file":"13c08f6f45dd531636df.bundle.js","sourcesContent":["import { StyleSheet } from '@patternfly/react-styles';\nimport { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200, global_FontFamily_sans_serif, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    itemsPerRow: 2,\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 380,\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        global_disabled_color_200.value,\n        chart_color_green_100.value,\n        global_disabled_color_200.value,\n        chart_color_green_200.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_200.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartVoronoiContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange, getMaxValue, getTooltipContent, getTooltipLabel, getUsageRangeString, } from 'components/charts/commonChart/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles, styles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n            const usageKey = 'chart.usage_legend_label';\n            const requestKey = 'chart.requests_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                series: [\n                    {\n                        childName: 'previousUsage',\n                        data: previousUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.previousUsageData,\n                    },\n                    {\n                        childName: 'currentUsage',\n                        data: currentUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.currentUsageData,\n                    },\n                    {\n                        childName: 'previousRequest',\n                        data: previousRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                            symbol: {\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.previousRequestData,\n                    },\n                    {\n                        childName: 'currentRequest',\n                        data: currentRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                            symbol: {\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.currentRequestData,\n                    },\n                ],\n            });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > 300\n                    ? chartStyles.itemsPerRow\n                    : 1;\n            return (React.createElement(ChartLegend, { colorScale: chartStyles.legendColorScale, data: this.getLegendData(), height: 25, gutter: 10, itemsPerRow: itemsPerRow, name: \"legend\", style: chartStyles.legend }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const value = getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n            if (datum.childName === 'currentRequest' ||\n                datum.childName === 'previousRequest') {\n                return i18next.t('chart.requests_tooltip', { value });\n            }\n            else if (datum.childName === 'currentUsage' ||\n                datum.childName === 'previousUsage') {\n                return i18next.t('chart.usage_tooltip', { value });\n            }\n            return value;\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length === (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign({}, s.legendItem, getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentRequest = currentRequestData\n            ? getMaxValue(currentRequestData)\n            : 0;\n        const maxCurrentUsage = currentUsageData\n            ? getMaxValue(currentUsageData)\n            : 0;\n        const maxPreviousRequest = previousRequestData\n            ? getMaxValue(previousRequestData)\n            : 0;\n        const maxPreviousUsage = previousUsageData\n            ? getMaxValue(previousUsageData)\n            : 0;\n        const maxValue = Math.max(maxCurrentRequest, maxCurrentUsage, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const currentRequestDate = currentRequestData\n            ? getDate(getDateRange(currentRequestData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentUsageData\n            ? getDate(getDateRange(currentUsageData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousRequestData\n            ? getDate(getDateRange(previousRequestData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousUsageData\n            ? getDate(getDateRange(previousUsageData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 ||\n            currentUsageDate > 0 ||\n            previousRequestDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding, title, } = this.props;\n        const { series, width } = this.state;\n        const isDataAvailable = this.isDataAvailable();\n        const container = (React.createElement(ChartVoronoiContainer, { allowTooltip: !isDataAvailable, constrainToVisibleArea: true, labels: !isDataAvailable ? this.getTooltipLabel : undefined, voronoiDimension: \"x\" }));\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 75\n            : containerHeight;\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef, style: { height: adjustedContainerHeight } },\n            React.createElement(\"div\", null, title),\n            React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                series &&\n                    series.map((s, index) => {\n                        return this.getChart(s, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))));\n    }\n}\nexport { UsageChart };\n","export { UsageChart } from './usageChart';\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpReportSummary.styles';\nconst OcpReportSummaryBase = ({ children, detailsLink, title, subTitle, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: SkeletonSize.xs }),\n        React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n        React.createElement(Skeleton, { size: SkeletonSize.sm }),\n        React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst OcpReportSummary = translate()(OcpReportSummaryBase);\nexport { OcpReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '175px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '440px',\n        marginRight: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpReportSummaryAlt.styles';\nconst OcpReportSummaryAltBase = ({ children, detailsLink, status, subTitle, t, tabs, title, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.cost) },\n                React.createElement(CardHeader, null,\n                    React.createElement(Title, { size: \"lg\" }, title),\n                    Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: SkeletonSize.xs }),\n                    React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.chartSkeleton) }),\n                    React.createElement(Skeleton, { size: SkeletonSize.sm }),\n                    React.createElement(Skeleton, { size: SkeletonSize.xs, className: css(styles.legendSkeleton) }))) : (children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst OcpReportSummaryAlt = translate()(OcpReportSummaryAltBase);\nexport { OcpReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    valueContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        width: '50%',\n        wordWrap: 'break-word',\n    },\n});\n","import { Tooltip } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey, } from 'utils/formatValue';\nimport { styles } from './ocpReportSummaryDetails.styles';\nconst OcpReportSummaryDetailsBase = ({ costLabel, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, requestFormatOptions, requestLabel, showUnits = false, showUsageFirst = false, t, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let derivedCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    if (report && report.meta && report.meta.total) {\n        cost = formatValue(report.meta.total.cost ? report.meta.total.cost.value : 0, report.meta.total.cost ? report.meta.total.cost.units : 'USD', formatOptions);\n        derivedCost = formatValue(report.meta.total.derived_cost ? report.meta.total.derived_cost.value : 0, report.meta.total.derived_cost\n            ? report.meta.total.derived_cost.units\n            : 'USD', formatOptions);\n        infrastructureCost = formatValue(report.meta.total.infrastructure_cost\n            ? report.meta.total.infrastructure_cost.value\n            : 0, report.meta.total.infrastructure_cost\n            ? report.meta.total.infrastructure_cost.units\n            : 'USD', formatOptions);\n        if (reportType !== \"cost\" /* cost */) {\n            usage = formatValue(report.meta.total.usage ? report.meta.total.usage.value : 0, report.meta.total.usage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n            request = formatValue(report.meta.total.request ? report.meta.total.request.value : 0, report.meta.total.request ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = () => (React.createElement(\"div\", { className: css(styles.valueContainer) },\n        React.createElement(Tooltip, { content: t('ocp_dashboard.total_cost_tooltip', {\n                derivedCost,\n                infrastructureCost,\n            }), enableFlip: true },\n            React.createElement(\"div\", { className: css(styles.value) }, cost)),\n        React.createElement(\"div\", { className: css(styles.text) },\n            React.createElement(\"div\", null, costLabel))));\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = report && report.meta && report.meta.total && report.meta.total.request\n            ? report.meta.total.request.units\n            : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: css(styles.valueContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                request,\n                Boolean(showUnits &&\n                    report &&\n                    report.meta &&\n                    report.meta.total.request &&\n                    report.meta.total.request.value >= 0) && React.createElement(\"span\", { className: css(styles.text) }, unitsLabel)),\n            React.createElement(\"div\", { className: css(styles.text) },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = report && report.meta && report.meta.total && report.meta.total.usage\n            ? report.meta.total.usage.units\n            : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: css(styles.valueContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                usage,\n                Boolean(showUnits &&\n                    report &&\n                    report.meta &&\n                    report.meta.total.usage &&\n                    report.meta.total.usage.value >= 0) && React.createElement(\"span\", { className: css(styles.text) }, unitsLabel)),\n            React.createElement(\"div\", { className: css(styles.text) },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (reportType === \"cost\" /* cost */) {\n        return React.createElement(React.Fragment, null, getCostLayout());\n    }\n    else {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n};\nconst OcpReportSummaryDetails = translate()(OcpReportSummaryDetailsBase);\nexport { OcpReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './ocpReportSummaryItem.styles';\nconst OcpReportSummaryItemBase = ({ formatOptions, formatValue, label, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nOcpReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst OcpReportSummaryItem = translate()(OcpReportSummaryItemBase);\nexport { OcpReportSummaryItem };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedOcpReportItems, } from 'utils/computedReport/getComputedOcpReportItems';\nimport { styles } from './ocpReportSummaryItems.styles';\nclass OcpReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedOcpReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: SkeletonSize.md }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst OcpReportSummaryItems = translate()(OcpReportSummaryItemsBase);\nexport { OcpReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200, global_FontFamily_sans_serif, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    currentCostData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    currentInfrastructureCostData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    itemsPerRow: 2,\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 200,\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        global_disabled_color_200.value,\n        chart_color_green_100.value,\n        global_disabled_color_200.value,\n        chart_color_green_200.value,\n    ],\n    previousCostData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    previousInfrastructureCostData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_200.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartVoronoiContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent, getTooltipLabel, } from 'components/charts/commonChart/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles, styles } from './costChart.styles';\nclass CostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                series: [\n                    {\n                        childName: 'previousCost',\n                        data: previousCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.previousCostData,\n                    },\n                    {\n                        childName: 'currentCost',\n                        data: currentCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentCostData, costKey, true, false),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.currentCostData,\n                    },\n                    {\n                        childName: 'previousInfrastructureCost',\n                        data: previousInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                            symbol: {\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.previousInfrastructureCostData,\n                    },\n                    {\n                        childName: 'currentInfrastructureCost',\n                        data: currentInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                            symbol: {\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.currentInfrastructureCostData,\n                    },\n                ],\n            });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > 400\n                    ? chartStyles.itemsPerRow\n                    : 1;\n            return (React.createElement(ChartLegend, { colorScale: chartStyles.legendColorScale, data: this.getLegendData(), height: 25, gutter: 10, itemsPerRow: itemsPerRow, name: \"legend\", responsive: false, style: chartStyles.legend }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const value = getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n            if (datum.childName === 'currentCost' ||\n                datum.childName === 'previousCost') {\n                return i18next.t('chart.cost_tooltip', { value });\n            }\n            else if (datum.childName === 'currentInfrastructureCost' ||\n                datum.childName === 'previousInfrastructureCost') {\n                return i18next.t('chart.cost_infrastructure_tooltip', { value });\n            }\n            return value;\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length === (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign({}, s.legendItem, getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !==\n            this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.previousInfrastructureCostData !==\n                this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentInfrastructure = currentInfrastructureCostData\n            ? getMaxValue(currentInfrastructureCostData)\n            : 0;\n        const maxCurrentUsage = currentCostData ? getMaxValue(currentCostData) : 0;\n        const maxPreviousInfrastructure = previousInfrastructureCostData\n            ? getMaxValue(previousInfrastructureCostData)\n            : 0;\n        const maxPreviousUsage = previousCostData\n            ? getMaxValue(previousCostData)\n            : 0;\n        const maxValue = Math.max(maxCurrentInfrastructure, maxCurrentUsage, maxPreviousInfrastructure, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentCostData\n            ? getDate(getDateRange(currentCostData, true, true)[1])\n            : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData\n            ? getDate(getDateRange(previousCostData, true, true)[1])\n            : 0;\n        return currentInfrastructureDate > 0 ||\n            currentUsageDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentUsageDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding, title, } = this.props;\n        const { series, width } = this.state;\n        const isDataAvailable = this.isDataAvailable();\n        const container = (React.createElement(ChartVoronoiContainer, { allowTooltip: !isDataAvailable, constrainToVisibleArea: true, labels: !isDataAvailable ? this.getTooltipLabel : undefined, voronoiDimension: \"x\" }));\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 75\n            : containerHeight;\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef, style: { height: adjustedContainerHeight } },\n            React.createElement(\"div\", null, title),\n            React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                series &&\n                    series.map((s, index) => {\n                        return this.getChart(s, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))));\n    }\n}\nexport { CostChart };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { CostChart } from 'components/charts/costChart';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryTrend.styles';\nconst OcpReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(CostChart, Object.assign({}, props))));\nexport { OcpReportSummaryTrend };\n","import { css } from '@patternfly/react-styles';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryTrend.styles';\nconst OcpReportSummaryUsage = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { OcpReportSummaryUsage };\n","export { OcpReportSummary } from './ocpReportSummary';\nexport { OcpReportSummaryAlt } from './ocpReportSummaryAlt';\nexport { OcpReportSummaryDetails } from './ocpReportSummaryDetails';\nexport { OcpReportSummaryItem } from './ocpReportSummaryItem';\nexport { OcpReportSummaryItems } from './ocpReportSummaryItems';\nexport { OcpReportSummaryTrend } from './ocpReportSummaryTrend';\nexport { OcpReportSummaryUsage } from './ocpReportSummaryUsage';\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './azureReportSummary.styles';\nconst AzureReportSummaryBase = ({ children, detailsLink, title, subTitle, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: SkeletonSize.xs }),\n        React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n        React.createElement(Skeleton, { size: SkeletonSize.sm }),\n        React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst AzureReportSummary = translate()(AzureReportSummaryBase);\nexport { AzureReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '175px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '470px',\n        marginRight: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './azureReportSummaryAlt.styles';\nconst AzureReportSummaryAltBase = ({ children, detailsLink, status, subTitle, t, tabs, title, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.cost) },\n                React.createElement(CardHeader, null,\n                    React.createElement(Title, { size: \"lg\" }, title),\n                    Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: SkeletonSize.xs }),\n                    React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n                    React.createElement(Skeleton, { size: SkeletonSize.sm }),\n                    React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst AzureReportSummaryAlt = translate()(AzureReportSummaryAltBase);\nexport { AzureReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    valueContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        width: '50%',\n        wordWrap: 'break-word',\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './azureReportSummaryDetails.styles';\nconst AzureReportSummaryDetailsBase = ({ costLabel, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, showUnits = false, showUsageFirst = false, t, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    if (report && report.meta && report.meta.total) {\n        cost = formatValue(report.meta.total.cost ? report.meta.total.cost.value : 0, report.meta.total.cost ? report.meta.total.cost.units : 'USD', formatOptions);\n        if (report.meta.total.usage && report.meta.total.usage.value) {\n            usage = formatValue(report.meta.total.usage ? report.meta.total.usage.value : 0, report.meta.total.usage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            // Work around for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatValue(report.meta.total.usage ? report.meta.total.usage : 0, report.meta.total.count ? report.meta.total.count.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = () => (React.createElement(\"div\", { className: css(styles.valueContainer) },\n        React.createElement(\"div\", { className: css(styles.value) }, cost),\n        React.createElement(\"div\", { className: css(styles.text) },\n            React.createElement(\"div\", null, costLabel))));\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = report && report.meta && report.meta.total && report.meta.total.usage\n            ? report.meta.total.usage.units\n            : '';\n        // added as a work-around for azure #1079\n        const _units = unitLookupKey(units ? units : usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: css(styles.valueContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                usage,\n                Boolean(showUnits &&\n                    (units ||\n                        (report &&\n                            report.meta &&\n                            report.meta.total.usage &&\n                            report.meta.total.usage.value >= 0))) && React.createElement(\"span\", { className: css(styles.text) }, unitsLabel)),\n            React.createElement(\"div\", { className: css(styles.text) },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (reportType === \"cost\" /* cost */) {\n        return React.createElement(React.Fragment, null, getCostLayout());\n    }\n    else {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(),\n            getUsageLayout()));\n    }\n};\nconst AzureReportSummaryDetails = translate()(AzureReportSummaryDetailsBase);\nexport { AzureReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './azureReportSummaryItem.styles';\nconst AzureReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nAzureReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst AzureReportSummaryItem = translate()(AzureReportSummaryItemBase);\nexport { AzureReportSummaryItem };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedAzureReportItems, } from 'utils/computedReport/getComputedAzureReportItems';\nimport { styles } from './azureReportSummaryItems.styles';\nclass AzureReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedAzureReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: SkeletonSize.md }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst AzureReportSummaryItems = translate()(AzureReportSummaryItemsBase);\nexport { AzureReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './azureReportSummaryTrend.styles';\nconst AzureReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { AzureReportSummaryTrend };\n","export { AzureReportSummary } from './azureReportSummary';\nexport { AzureReportSummaryAlt } from './azureReportSummaryAlt';\nexport { AzureReportSummaryDetails } from './azureReportSummaryDetails';\nexport { AzureReportSummaryItem } from './azureReportSummaryItem';\nexport { AzureReportSummaryItems } from './azureReportSummaryItems';\nexport { AzureReportSummaryTrend } from './azureReportSummaryTrend';\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './awsReportSummary.styles';\nconst AwsReportSummaryBase = ({ children, detailsLink, title, subTitle, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: SkeletonSize.xs }),\n        React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n        React.createElement(Skeleton, { size: SkeletonSize.sm }),\n        React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst AwsReportSummary = translate()(AwsReportSummaryBase);\nexport { AwsReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '175px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '470px',\n        marginRight: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './awsReportSummaryAlt.styles';\nconst AwsReportSummaryAltBase = ({ children, detailsLink, status, subTitle, t, tabs, title, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.cost) },\n                React.createElement(CardHeader, null,\n                    React.createElement(Title, { size: \"lg\" }, title),\n                    Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: SkeletonSize.xs }),\n                    React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n                    React.createElement(Skeleton, { size: SkeletonSize.sm }),\n                    React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst AwsReportSummaryAlt = translate()(AwsReportSummaryAltBase);\nexport { AwsReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    valueContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        width: '50%',\n        wordWrap: 'break-word',\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './awsReportSummaryDetails.styles';\nconst AwsReportSummaryDetailsBase = ({ costLabel, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, showUnits = false, showUsageFirst = false, t, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    if (report && report.meta && report.meta.total) {\n        cost = formatValue(report.meta.total.cost ? report.meta.total.cost.value : 0, report.meta.total.cost ? report.meta.total.cost.units : 'USD', formatOptions);\n        usage = formatValue(report.meta.total.usage ? report.meta.total.usage.value : 0, report.meta.total.usage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n    }\n    const getCostLayout = () => (React.createElement(\"div\", { className: css(styles.valueContainer) },\n        React.createElement(\"div\", { className: css(styles.value) }, cost),\n        React.createElement(\"div\", { className: css(styles.text) },\n            React.createElement(\"div\", null, costLabel))));\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = report && report.meta && report.meta.total && report.meta.total.usage\n            ? report.meta.total.usage.units\n            : '';\n        const units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${units}`);\n        return (React.createElement(\"div\", { className: css(styles.valueContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                usage,\n                Boolean(showUnits &&\n                    report &&\n                    report.meta &&\n                    report.meta.total.usage &&\n                    report.meta.total.usage.value >= 0) && React.createElement(\"span\", { className: css(styles.text) }, unitsLabel)),\n            React.createElement(\"div\", { className: css(styles.text) },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (reportType === \"cost\" /* cost */) {\n        return React.createElement(React.Fragment, null, getCostLayout());\n    }\n    else {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(),\n            getUsageLayout()));\n    }\n};\nconst AwsReportSummaryDetails = translate()(AwsReportSummaryDetailsBase);\nexport { AwsReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './awsReportSummaryItem.styles';\nconst AwsReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nAwsReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst AwsReportSummaryItem = translate()(AwsReportSummaryItemBase);\nexport { AwsReportSummaryItem };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedAwsReportItems, } from 'utils/computedReport/getComputedAwsReportItems';\nimport { styles } from './awsReportSummaryItems.styles';\nclass AwsReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedAwsReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: SkeletonSize.md }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst AwsReportSummaryItems = translate()(AwsReportSummaryItemsBase);\nexport { AwsReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './awsReportSummaryTrend.styles';\nconst AwsReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { AwsReportSummaryTrend };\n","export { AwsReportSummary } from './awsReportSummary';\nexport { AwsReportSummaryAlt } from './awsReportSummaryAlt';\nexport { AwsReportSummaryDetails } from './awsReportSummaryDetails';\nexport { AwsReportSummaryItem } from './awsReportSummaryItem';\nexport { AwsReportSummaryItems } from './awsReportSummaryItems';\nexport { AwsReportSummaryTrend } from './awsReportSummaryTrend';\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpCloudReportSummary.styles';\nconst OcpCloudReportSummaryBase = ({ children, detailsLink, title, subTitle, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: SkeletonSize.xs }),\n        React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n        React.createElement(Skeleton, { size: SkeletonSize.sm }),\n        React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst OcpCloudReportSummary = translate()(OcpCloudReportSummaryBase);\nexport { OcpCloudReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '175px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '470px',\n        marginRight: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpCloudReportSummaryAlt.styles';\nconst OcpCloudReportSummaryAltBase = ({ children, detailsLink, status, subTitle, t, tabs, title }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.cost) },\n                React.createElement(CardHeader, null,\n                    React.createElement(Title, { size: \"lg\" }, title),\n                    Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: SkeletonSize.xs }),\n                    React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n                    React.createElement(Skeleton, { size: SkeletonSize.sm }),\n                    React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst OcpCloudReportSummaryAlt = translate()(OcpCloudReportSummaryAltBase);\nexport { OcpCloudReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    valueContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        width: '50%',\n        wordWrap: 'break-word',\n    },\n});\n","import { Tooltip } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './ocpCloudReportSummaryDetails.styles';\nconst OcpCloudReportSummaryDetailsBase = ({ costLabel, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, requestFormatOptions, requestLabel, showUnits = false, showUsageFirst = false, t, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let markupCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const cloudReportType = reportType === \"database\" /* database */ ||\n        reportType === \"instance_type\" /* instanceType */ ||\n        reportType === \"network\" /* network */ ||\n        reportType === \"storage\" /* storage */;\n    if (report && report.meta && report.meta.total) {\n        cost = formatValue(report.meta.total.cost ? report.meta.total.cost.value : 0, report.meta.total.cost ? report.meta.total.cost.units : 'USD', formatOptions);\n        infrastructureCost = formatValue(report.meta.total.infrastructure_cost\n            ? report.meta.total.infrastructure_cost.value\n            : 0, report.meta.total.infrastructure_cost\n            ? report.meta.total.infrastructure_cost.units\n            : 'USD', formatOptions);\n        markupCost = formatValue(report.meta.total.markup_cost ? report.meta.total.markup_cost.value : 0, report.meta.total.markup_cost\n            ? report.meta.total.markup_cost.units\n            : 'USD', formatOptions);\n        if (cloudReportType) {\n            usage = formatValue(report.meta.total.usage ? report.meta.total.usage.value : 0, report.meta.total.usage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            usage = formatValue(report.meta.total.usage ? report.meta.total.usage.value : 0, report.meta.total.usage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n            request = formatValue(report.meta.total.request ? report.meta.total.request.value : 0, report.meta.total.request ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = () => (React.createElement(\"div\", { className: css(styles.valueContainer) },\n        React.createElement(Tooltip, { content: t('ocp_cloud_dashboard.total_cost_tooltip', {\n                infrastructureCost,\n                markupCost,\n            }), enableFlip: true },\n            React.createElement(\"div\", { className: css(styles.value) }, cost)),\n        React.createElement(\"div\", { className: css(styles.text) },\n            React.createElement(\"div\", null, costLabel))));\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = report && report.meta && report.meta.total && report.meta.total.request\n            ? report.meta.total.request.units\n            : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: css(styles.valueContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                request,\n                Boolean(showUnits &&\n                    report &&\n                    report.meta &&\n                    report.meta.total.request &&\n                    report.meta.total.request.value >= 0) && React.createElement(\"span\", { className: css(styles.text) }, unitsLabel)),\n            React.createElement(\"div\", { className: css(styles.text) },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = report && report.meta && report.meta.total && report.meta.total.usage\n            ? report.meta.total.usage.units\n            : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: css(styles.valueContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                usage,\n                Boolean(showUnits &&\n                    report &&\n                    report.meta &&\n                    report.meta.total.usage &&\n                    report.meta.total.usage.value >= 0) && React.createElement(\"span\", { className: css(styles.text) }, unitsLabel)),\n            React.createElement(\"div\", { className: css(styles.text) },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (reportType === \"cost\" /* cost */) {\n        return React.createElement(React.Fragment, null, getCostLayout());\n    }\n    else if (cloudReportType) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(),\n            getUsageLayout()));\n    }\n    else {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n};\nconst OcpCloudReportSummaryDetails = translate()(OcpCloudReportSummaryDetailsBase);\nexport { OcpCloudReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './ocpCloudReportSummaryItem.styles';\nconst OcpCloudReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nOcpCloudReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst OcpCloudReportSummaryItem = translate()(OcpCloudReportSummaryItemBase);\nexport { OcpCloudReportSummaryItem };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedOcpCloudReportItems, } from 'utils/computedReport/getComputedOcpCloudReportItems';\nimport { styles } from './ocpCloudReportSummaryItems.styles';\nclass OcpCloudReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedOcpCloudReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: SkeletonSize.md }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst OcpCloudReportSummaryItems = translate()(OcpCloudReportSummaryItemsBase);\nexport { OcpCloudReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './ocpCloudReportSummaryTrend.styles';\nconst OcpCloudReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { OcpCloudReportSummaryTrend };\n","import { css } from '@patternfly/react-styles';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nimport { styles } from './ocpCloudReportSummaryTrend.styles';\nconst OcpCloudReportSummaryUsage = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { OcpCloudReportSummaryUsage };\n","export { OcpCloudReportSummary } from './ocpCloudReportSummary';\nexport { OcpCloudReportSummaryAlt } from './ocpCloudReportSummaryAlt';\nexport { OcpCloudReportSummaryDetails } from './ocpCloudReportSummaryDetails';\nexport { OcpCloudReportSummaryItem } from './ocpCloudReportSummaryItem';\nexport { OcpCloudReportSummaryItems } from './ocpCloudReportSummaryItems';\nexport { OcpCloudReportSummaryTrend } from './ocpCloudReportSummaryTrend';\nexport { OcpCloudReportSummaryUsage } from './ocpCloudReportSummaryUsage';\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"invariant\";\nimport { createLocation } from \"history\";\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nvar Link = function (_React$Component) {\n  _inherits(Link, _React$Component);\n\n  function Link() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Link);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {\n      if (_this.props.onClick) _this.props.onClick(event);\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && // ignore everything but left clicks\n      !_this.props.target && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n\n          var history = _this.context.router.history;\n          var _this$props = _this.props,\n              replace = _this$props.replace,\n              to = _this$props.to;\n\n\n          if (replace) {\n            history.replace(to);\n          } else {\n            history.push(to);\n          }\n        }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Link.prototype.render = function render() {\n    var _props = this.props,\n        replace = _props.replace,\n        to = _props.to,\n        innerRef = _props.innerRef,\n        props = _objectWithoutProperties(_props, [\"replace\", \"to\", \"innerRef\"]); // eslint-disable-line no-unused-vars\n\n    invariant(this.context.router, \"You should not use <Link> outside a <Router>\");\n\n    invariant(to !== undefined, 'You must specify the \"to\" property');\n\n    var history = this.context.router.history;\n\n    var location = typeof to === \"string\" ? createLocation(to, null, null, history.location) : to;\n\n    var href = history.createHref(location);\n    return React.createElement(\"a\", _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));\n  };\n\n  return Link;\n}(React.Component);\n\nLink.propTypes = {\n  onClick: PropTypes.func,\n  target: PropTypes.string,\n  replace: PropTypes.bool,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  innerRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n};\nLink.defaultProps = {\n  replace: false\n};\nLink.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired,\n      createHref: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired\n};\n\n\nexport default Link;","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_2xl, global_spacer_xl } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartAltHeight: 180,\n    chartHeight: 80,\n    containerAltHeight: 200,\n    containerTrendHeight: 150,\n};\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery } from 'api/awsQuery';\nimport { transformAwsReport } from 'components/charts/commonChart/chartUtils';\nimport { AwsReportSummary, AwsReportSummaryAlt, AwsReportSummaryDetails, AwsReportSummaryItem, AwsReportSummaryItems, AwsReportSummaryTrend, } from 'components/reports/awsReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { awsCloudDashboardActions, awsCloudDashboardSelectors, } from 'store/awsCloudDashboard';\nimport { awsReportsSelectors } from 'store/awsReports';\nimport { createMapStateToProps } from 'store/common';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './awsCloudDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nclass AwsCloudDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const currentTab = getIdKeyForTab(tab);\n            return `/aws?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, details, previousReport, t, trend } = this.props;\n            const currentData = transformAwsReport(currentReport, trend.type);\n            const previousData = transformAwsReport(previousReport, trend.type);\n            const units = this.getUnits();\n            return (React.createElement(AwsReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, showUsageLegendLabel: details.showUsageLegendLabel, title: t(trend.titleKey, {\n                    units: t(`units.${units}`),\n                }) }));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, isUsageFirst, reportType } = this.props;\n            const units = this.getUnits();\n            return (React.createElement(AwsReportSummaryDetails, { costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, showUnits: details.showUnits, showUsageFirst: isUsageFirst, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(AwsReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerAltHeight, chartStyles.chartAltHeight, true)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('aws_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabItems) },\n                    React.createElement(AwsReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const isCostReport = reportType === \"cost\" /* cost */ ||\n                reportType === \"database\" /* database */ ||\n                reportType === \"network\" /* network */;\n            if (activeTab === currentTab) {\n                return (React.createElement(AwsReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: isCostReport\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: reportItem.cost }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, reportType } = this.props;\n            let units = '';\n            if (currentReport && currentReport.meta && currentReport.meta.total) {\n                if (reportType === \"cost\" /* cost */ ||\n                    reportType === \"database\" /* database */ ||\n                    reportType === \"network\" /* network */) {\n                    units = currentReport.meta.total.cost\n                        ? unitLookupKey(currentReport.meta.total.cost.units)\n                        : '';\n                }\n                else {\n                    units = currentReport.meta.total.usage\n                        ? unitLookupKey(currentReport.meta.total.usage.units)\n                        : '';\n                }\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus } = this.props;\n            return (React.createElement(AwsReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight),\n                Boolean(availableTabs) && (React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs()))));\n        };\n        this.handleInsightsNavClick = () => {\n            insights.chrome.appNavClick({ id: 'aws', secondaryNav: true });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: awsReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.tabs), tabsReportFetchStatus: awsReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: awsCloudDashboardActions.fetchWidgetReports,\n    updateTab: awsCloudDashboardActions.changeWidgetTab,\n};\nconst AwsCloudDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(AwsCloudDashboardWidgetBase));\nexport { AwsCloudDashboardWidget, AwsCloudDashboardWidgetBase, };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { awsCloudDashboardSelectors } from 'store/awsCloudDashboard';\nimport { createMapStateToProps } from 'store/common';\nimport { AwsCloudDashboardWidget } from './awsCloudDashboardWidget';\nconst AwsCloudDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(AwsCloudDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(AwsCloudDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: awsCloudDashboardSelectors.selectWidgets(state),\n        widgets: awsCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsCloudDashboard = translate()(connect(mapStateToProps, {})(AwsCloudDashboardBase));\nexport default AwsCloudDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_2xl, global_spacer_xl } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartAltHeight: 180,\n    chartHeight: 80,\n    containerAltHeight: 200,\n    containerTrendHeight: 150,\n};\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery } from 'api/awsQuery';\nimport { transformAwsReport } from 'components/charts/commonChart/chartUtils';\nimport { AwsReportSummary, AwsReportSummaryAlt, AwsReportSummaryDetails, AwsReportSummaryItem, AwsReportSummaryItems, AwsReportSummaryTrend, } from 'components/reports/awsReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { awsDashboardActions, awsDashboardSelectors, } from 'store/awsDashboard';\nimport { awsReportsSelectors } from 'store/awsReports';\nimport { createMapStateToProps } from 'store/common';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './awsDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nclass AwsDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const currentTab = getIdKeyForTab(tab);\n            return `/aws?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, details, previousReport, t, trend } = this.props;\n            const currentData = transformAwsReport(currentReport, trend.type);\n            const previousData = transformAwsReport(previousReport, trend.type);\n            const units = this.getUnits();\n            return (React.createElement(AwsReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, showUsageLegendLabel: details.showUsageLegendLabel, title: t(trend.titleKey, {\n                    units: t(`units.${units}`),\n                }) }));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, isUsageFirst, reportType } = this.props;\n            const units = this.getUnits();\n            return (React.createElement(AwsReportSummaryDetails, { costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, showUnits: details.showUnits, showUsageFirst: isUsageFirst, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(AwsReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerAltHeight, chartStyles.chartAltHeight, true)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('aws_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabItems) },\n                    React.createElement(AwsReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const isCostReport = reportType === \"cost\" /* cost */ ||\n                reportType === \"database\" /* database */ ||\n                reportType === \"network\" /* network */;\n            if (activeTab === currentTab) {\n                return (React.createElement(AwsReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: isCostReport\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: reportItem.cost }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, reportType } = this.props;\n            let units = '';\n            if (currentReport && currentReport.meta && currentReport.meta.total) {\n                if (reportType === \"cost\" /* cost */ ||\n                    reportType === \"database\" /* database */ ||\n                    reportType === \"network\" /* network */) {\n                    units = currentReport.meta.total.cost\n                        ? unitLookupKey(currentReport.meta.total.cost.units)\n                        : '';\n                }\n                else {\n                    units = currentReport.meta.total.usage\n                        ? unitLookupKey(currentReport.meta.total.usage.units)\n                        : '';\n                }\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus } = this.props;\n            return (React.createElement(AwsReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight),\n                Boolean(availableTabs) && (React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs()))));\n        };\n        this.handleInsightsNavClick = () => {\n            insights.chrome.appNavClick({ id: 'aws', secondaryNav: true });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: awsReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.tabs), tabsReportFetchStatus: awsReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(AwsDashboardWidgetBase));\nexport { AwsDashboardWidget, AwsDashboardWidgetBase };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { awsDashboardSelectors } from 'store/awsDashboard';\nimport { createMapStateToProps } from 'store/common';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\nconst AwsDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(AwsDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(AwsDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: awsDashboardSelectors.selectWidgets(state),\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = translate()(connect(mapStateToProps, {})(AwsDashboardBase));\nexport default AwsDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_2xl, global_spacer_xl } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartAltHeight: 180,\n    chartHeight: 80,\n    containerAltHeight: 200,\n    containerTrendHeight: 150,\n};\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery } from 'api/azureQuery';\nimport { transformAzureReport } from 'components/charts/commonChart/chartUtils';\nimport { AzureReportSummary, AzureReportSummaryAlt, AzureReportSummaryDetails, AzureReportSummaryItem, AzureReportSummaryItems, AzureReportSummaryTrend, } from 'components/reports/azureReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { azureCloudDashboardActions, azureCloudDashboardSelectors, } from 'store/azureCloudDashboard';\nimport { azureReportsSelectors } from 'store/azureReports';\nimport { createMapStateToProps } from 'store/common';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './azureCloudDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nclass AzureCloudDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const currentTab = getIdKeyForTab(tab);\n            return `/azure?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, details, previousReport, t, trend } = this.props;\n            const currentData = transformAzureReport(currentReport, trend.type);\n            const previousData = transformAzureReport(previousReport, trend.type);\n            const units = this.getUnits();\n            return (React.createElement(AzureReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, showUsageLegendLabel: details.showUsageLegendLabel, title: t(trend.titleKey, {\n                    units: t(`units.${units}`),\n                }), units: units }));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, isUsageFirst, reportType } = this.props;\n            const units = this.getUnits();\n            return (React.createElement(AzureReportSummaryDetails, { costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, showUnits: details.showUnits, showUsageFirst: isUsageFirst, usageFormatOptions: details.usageFormatOptions, units: units, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(AzureReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerAltHeight, chartStyles.chartAltHeight, true)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('azure_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabItems) },\n                    React.createElement(AzureReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, details, reportType, tabsReport, topItems, } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const isCostReport = reportType === \"cost\" /* cost */ ||\n                reportType === \"database\" /* database */ ||\n                reportType === \"network\" /* network */;\n            if (activeTab === currentTab) {\n                return (React.createElement(AzureReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: isCostReport\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value\n                            ? tabsReport.meta.total.usage.value\n                            : tabsReport.meta.total.usage, units: details.units ? details.units : reportItem.units, value: reportItem.cost }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, details, reportType } = this.props;\n            if (details.units) {\n                return details.units;\n            }\n            let units = '';\n            if (currentReport && currentReport.meta && currentReport.meta.total) {\n                if (reportType === \"cost\" /* cost */ ||\n                    reportType === \"database\" /* database */ ||\n                    reportType === \"network\" /* network */) {\n                    units = currentReport.meta.total.cost\n                        ? unitLookupKey(currentReport.meta.total.cost.units)\n                        : '';\n                }\n                else {\n                    units = currentReport.meta.total.usage\n                        ? unitLookupKey(currentReport.meta.total.usage.units)\n                        : '';\n                }\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus } = this.props;\n            return (React.createElement(AzureReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight),\n                Boolean(availableTabs) && (React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs()))));\n        };\n        this.handleInsightsNavClick = () => {\n            insights.chrome.appNavClick({ id: 'azure', secondaryNav: true });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: azureReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: azureReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: azureReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: azureReportsSelectors.selectReport(state, widget.reportType, queries.tabs), tabsReportFetchStatus: azureReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: azureCloudDashboardActions.fetchWidgetReports,\n    updateTab: azureCloudDashboardActions.changeWidgetTab,\n};\nconst AzureCloudDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(AzureCloudDashboardWidgetBase));\nexport { AzureCloudDashboardWidget, AzureCloudDashboardWidgetBase, };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { azureCloudDashboardSelectors } from 'store/azureCloudDashboard';\nimport { createMapStateToProps } from 'store/common';\nimport { AzureCloudDashboardWidget } from './azureCloudDashboardWidget';\nconst AzureCloudDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(AzureCloudDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(AzureCloudDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: azureCloudDashboardSelectors.selectWidgets(state),\n        widgets: azureCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureCloudDashboard = translate()(connect(mapStateToProps, {})(AzureCloudDashboardBase));\nexport default AzureCloudDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_2xl, global_spacer_xl } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartAltHeight: 180,\n    chartHeight: 80,\n    containerAltHeight: 200,\n    containerTrendHeight: 150,\n};\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery } from 'api/azureQuery';\nimport { transformAzureReport } from 'components/charts/commonChart/chartUtils';\nimport { AzureReportSummary, AzureReportSummaryAlt, AzureReportSummaryDetails, AzureReportSummaryItem, AzureReportSummaryItems, AzureReportSummaryTrend, } from 'components/reports/azureReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { azureDashboardActions, azureDashboardSelectors, } from 'store/azureDashboard';\nimport { azureReportsSelectors } from 'store/azureReports';\nimport { createMapStateToProps } from 'store/common';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './azureDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nclass AzureDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const currentTab = getIdKeyForTab(tab);\n            return `/azure?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, details, previousReport, t, trend } = this.props;\n            const currentData = transformAzureReport(currentReport, trend.type);\n            const previousData = transformAzureReport(previousReport, trend.type);\n            const units = this.getUnits();\n            return (React.createElement(AzureReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, showUsageLegendLabel: details.showUsageLegendLabel, title: t(trend.titleKey, {\n                    units: t(`units.${units}`),\n                }), units: units }));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, isUsageFirst, reportType } = this.props;\n            const units = this.getUnits();\n            return (React.createElement(AzureReportSummaryDetails, { costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, showUnits: details.showUnits, showUsageFirst: isUsageFirst, usageFormatOptions: details.usageFormatOptions, units: units, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(AzureReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerAltHeight, chartStyles.chartAltHeight, true)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('azure_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabItems) },\n                    React.createElement(AzureReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, details, reportType, tabsReport, topItems, } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const isCostReport = reportType === \"cost\" /* cost */ ||\n                reportType === \"database\" /* database */ ||\n                reportType === \"network\" /* network */;\n            if (activeTab === currentTab) {\n                return (React.createElement(AzureReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: isCostReport\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value\n                            ? tabsReport.meta.total.usage.value\n                            : tabsReport.meta.total.usage, units: details.units ? details.units : reportItem.units, value: reportItem.cost }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, details, reportType } = this.props;\n            if (details.units) {\n                return details.units;\n            }\n            let units = '';\n            if (currentReport && currentReport.meta && currentReport.meta.total) {\n                if (reportType === \"cost\" /* cost */ ||\n                    reportType === \"database\" /* database */ ||\n                    reportType === \"network\" /* network */) {\n                    units = currentReport.meta.total.cost\n                        ? unitLookupKey(currentReport.meta.total.cost.units)\n                        : '';\n                }\n                else {\n                    units = currentReport.meta.total.usage\n                        ? unitLookupKey(currentReport.meta.total.usage.units)\n                        : '';\n                }\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus } = this.props;\n            return (React.createElement(AzureReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight),\n                Boolean(availableTabs) && (React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs()))));\n        };\n        this.handleInsightsNavClick = () => {\n            insights.chrome.appNavClick({ id: 'azure', secondaryNav: true });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: azureReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: azureReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: azureReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: azureReportsSelectors.selectReport(state, widget.reportType, queries.tabs), tabsReportFetchStatus: azureReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: azureDashboardActions.fetchWidgetReports,\n    updateTab: azureDashboardActions.changeWidgetTab,\n};\nconst AzureDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(AzureDashboardWidgetBase));\nexport { AzureDashboardWidget, AzureDashboardWidgetBase, };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { azureDashboardSelectors } from 'store/azureDashboard';\nimport { createMapStateToProps } from 'store/common';\nimport { AzureDashboardWidget } from './azureDashboardWidget';\nconst AzureDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(AzureDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(AzureDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: azureDashboardSelectors.selectWidgets(state),\n        widgets: azureDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureDashboard = translate()(connect(mapStateToProps, {})(AzureDashboardBase));\nexport default AzureDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_2xl, global_spacer_xl } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartAltHeight: 180,\n    chartHeight: 80,\n    containerAltHeight: 200,\n    containerTrendHeight: 150,\n    containerUsageHeight: 180,\n};\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery } from 'api/ocpCloudQuery';\nimport { transformOcpCloudReport } from 'components/charts/commonChart/chartUtils';\nimport { OcpCloudReportSummary, OcpCloudReportSummaryAlt, OcpCloudReportSummaryDetails, OcpCloudReportSummaryItem, OcpCloudReportSummaryItems, OcpCloudReportSummaryTrend, OcpCloudReportSummaryUsage, } from 'components/reports/ocpCloudReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardActions, ocpCloudDashboardSelectors, } from 'store/ocpCloudDashboard';\nimport { ocpCloudReportsSelectors } from 'store/ocpCloudReports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './ocpCloudDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nclass OcpCloudDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const currentTab = getIdKeyForTab(tab);\n            return `/ocp-cloud?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, details, previousReport, reportType, t, trend, } = this.props;\n            const costReportType = reportType === \"cost\" /* cost */ ||\n                reportType === \"database\" /* database */ ||\n                reportType === \"network\" /* network */;\n            const reportItem = costReportType ? 'cost' : 'usage';\n            const currentUsageData = transformOcpCloudReport(currentReport, trend.type, 'date', reportItem);\n            const previousUsageData = transformOcpCloudReport(previousReport, trend.type, 'date', reportItem);\n            const currentRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpCloudReport(currentReport, trend.type, 'date', 'request')\n                : undefined;\n            const previousRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpCloudReport(previousReport, trend.type, 'date', 'request')\n                : undefined;\n            const units = this.getUnits();\n            return (React.createElement(React.Fragment, null, Boolean(reportType === \"cost\" /* cost */ ||\n                reportType === \"database\" /* database */ ||\n                reportType === \"instance_type\" /* instanceType */ ||\n                reportType === \"network\" /* network */ ||\n                reportType === \"storage\" /* storage */) ? (React.createElement(OcpCloudReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousUsageData, showUsageLegendLabel: details.showUsageLegendLabel, title: t(trend.titleKey, {\n                    units: t(`units.${units}`),\n                }) })) : (React.createElement(OcpCloudReportSummaryUsage, { containerHeight: chartStyles.containerUsageHeight, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: t(trend.titleKey, {\n                    units: t(`units.${units}`),\n                }) }))));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, isUsageFirst, reportType } = this.props;\n            const units = this.getUnits();\n            return (React.createElement(OcpCloudReportSummaryDetails, { costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, requestFormatOptions: details.requestFormatOptions, requestLabel: this.getDetailsLabel(details.requestKey, units), showUnits: details.showUnits, showUsageFirst: isUsageFirst, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpCloudReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerAltHeight, chartStyles.chartAltHeight, true)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('ocp_cloud_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabItems) },\n                    React.createElement(OcpCloudReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const isCostReport = reportType === \"cost\" /* cost */ ||\n                reportType === \"database\" /* database */ ||\n                reportType === \"network\" /* network */;\n            if (activeTab === currentTab) {\n                return (React.createElement(OcpCloudReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: isCostReport\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: isCostReport ? reportItem.cost : reportItem.usage }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            if (availableTabs) {\n                return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, reportType } = this.props;\n            let units = '';\n            if (currentReport && currentReport.meta && currentReport.meta.total) {\n                if (reportType === \"cost\" /* cost */ ||\n                    reportType === \"database\" /* database */ ||\n                    reportType === \"network\" /* network */) {\n                    units = currentReport.meta.total.cost\n                        ? unitLookupKey(currentReport.meta.total.cost.units)\n                        : '';\n                }\n                else {\n                    units = currentReport.meta.total.usage\n                        ? unitLookupKey(currentReport.meta.total.usage.units)\n                        : '';\n                }\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpCloudReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight),\n                Boolean(availableTabs) && (React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs()))));\n        };\n        this.handleInsightsNavClick = () => {\n            insights.chrome.appNavClick({ id: 'ocp-cloud', secondaryNav: true });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: ocpCloudReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: ocpCloudReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: ocpCloudReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: ocpCloudReportsSelectors.selectReport(state, widget.reportType, queries.tabs), tabsReportFetchStatus: ocpCloudReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpCloudDashboardActions.fetchWidgetReports,\n    updateTab: ocpCloudDashboardActions.changeWidgetTab,\n};\nconst OcpCloudDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(OcpCloudDashboardWidgetBase));\nexport { OcpCloudDashboardWidget, OcpCloudDashboardWidgetBase, };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardSelectors } from 'store/ocpCloudDashboard';\nimport { OcpCloudDashboardWidget } from './ocpCloudDashboardWidget';\nconst OcpCloudDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(OcpCloudDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(OcpCloudDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: ocpCloudDashboardSelectors.selectWidgets(state),\n        widgets: ocpCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpCloudDashboard = translate()(connect(mapStateToProps, {})(OcpCloudDashboardBase));\nexport default OcpCloudDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_2xl, global_spacer_xl } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartAltHeight: 180,\n    chartHeight: 80,\n    containerAltHeight: 275,\n    containerTrendHeight: 150,\n    containerUsageHeight: 180,\n};\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery } from 'api/ocpQuery';\nimport { transformOcpReport } from 'components/charts/commonChart/chartUtils';\nimport { OcpReportSummary, OcpReportSummaryAlt, OcpReportSummaryDetails, OcpReportSummaryItem, OcpReportSummaryItems, OcpReportSummaryTrend, OcpReportSummaryUsage, } from 'components/reports/ocpReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors, } from 'store/ocpDashboard';\nimport { ocpReportsSelectors } from 'store/ocpReports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './ocpDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nclass OcpDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const currentTab = getIdKeyForTab(tab);\n            return `/ocp?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, reportType, t, trend } = this.props;\n            const reportItem = reportType === \"cost\" /* cost */ ? 'cost' : 'usage';\n            const currentUsageData = transformOcpReport(currentReport, trend.type, 'date', reportItem);\n            const previousUsageData = transformOcpReport(previousReport, trend.type, 'date', reportItem);\n            const currentRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpReport(currentReport, trend.type, 'date', 'request')\n                : undefined;\n            const previousRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpReport(previousReport, trend.type, 'date', 'request')\n                : undefined;\n            const currentInfrastructureData = reportType === \"cost\" /* cost */\n                ? transformOcpReport(currentReport, trend.type, 'date', 'infrastructureCost')\n                : undefined;\n            const previousInfrastructureData = reportType === \"cost\" /* cost */\n                ? transformOcpReport(previousReport, trend.type, 'date', 'infrastructureCost')\n                : undefined;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            return (React.createElement(React.Fragment, null, Boolean(reportType === \"cost\" /* cost */) ? (React.createElement(OcpReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentCostData: currentUsageData, currentInfrastructureCostData: currentInfrastructureData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousCostData: previousUsageData, previousInfrastructureCostData: previousInfrastructureData, title: title })) : (React.createElement(OcpReportSummaryUsage, { containerHeight: chartStyles.containerUsageHeight, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: title }))));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, isUsageFirst, reportType } = this.props;\n            const units = this.getUnits();\n            return (React.createElement(OcpReportSummaryDetails, { costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, requestFormatOptions: details.requestFormatOptions, requestLabel: this.getDetailsLabel(details.requestKey, units), showUnits: details.showUnits, showUsageFirst: isUsageFirst, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerAltHeight, chartStyles.chartAltHeight, true)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('ocp_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabItems) },\n                    React.createElement(OcpReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            if (activeTab === currentTab) {\n                return (React.createElement(OcpReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: reportType === \"cost\" /* cost */\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: reportType === \"cost\" /* cost */\n                        ? reportItem.cost\n                        : reportItem.usage }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, reportType } = this.props;\n            let units = '';\n            if (currentReport && currentReport.meta && currentReport.meta.total) {\n                if (reportType === \"cost\" /* cost */) {\n                    units = currentReport.meta.total.cost\n                        ? unitLookupKey(currentReport.meta.total.cost.units)\n                        : '';\n                }\n                else {\n                    units = currentReport.meta.total.usage\n                        ? unitLookupKey(currentReport.meta.total.usage.units)\n                        : '';\n                }\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight),\n                Boolean(availableTabs) && (React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs()))));\n        };\n        this.handleInsightsNavClick = () => {\n            insights.chrome.appNavClick({ id: 'ocp', secondaryNav: true });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id } = this.props;\n            const tab = availableTabs[tabIndex];\n            this.props.updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, widgetId } = this.props;\n        if (availableTabs) {\n            this.props.updateTab(id, availableTabs[0]);\n        }\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: ocpReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.tabs), tabsReportFetchStatus: ocpReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(OcpDashboardWidgetBase));\nexport { OcpDashboardWidget, OcpDashboardWidgetBase };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/ocpDashboard';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\nconst OcpDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(OcpDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(OcpDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: ocpDashboardSelectors.selectWidgets(state),\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = translate()(connect(mapStateToProps, {})(OcpDashboardBase));\nexport default OcpDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_2xl, global_spacer_xl } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartAltHeight: 180,\n    chartHeight: 80,\n    containerAltHeight: 275,\n    containerTrendHeight: 150,\n    containerUsageHeight: 180,\n};\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery } from 'api/ocpQuery';\nimport { transformOcpReport } from 'components/charts/commonChart/chartUtils';\nimport { OcpReportSummary, OcpReportSummaryAlt, OcpReportSummaryDetails, OcpReportSummaryItem, OcpReportSummaryItems, OcpReportSummaryTrend, OcpReportSummaryUsage, } from 'components/reports/ocpReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpReportsSelectors } from 'store/ocpReports';\nimport { ocpSupplementaryDashboardActions, ocpSupplementaryDashboardSelectors, } from 'store/ocpSupplementaryDashboard';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './ocpSupplementaryDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nclass OcpSupplementaryDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const currentTab = getIdKeyForTab(tab);\n            return `/ocp?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, reportType, t, trend } = this.props;\n            const reportItem = reportType === \"cost\" /* cost */ ? 'cost' : 'usage';\n            const currentUsageData = transformOcpReport(currentReport, trend.type, 'date', reportItem);\n            const previousUsageData = transformOcpReport(previousReport, trend.type, 'date', reportItem);\n            const currentRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpReport(currentReport, trend.type, 'date', 'request')\n                : undefined;\n            const previousRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpReport(previousReport, trend.type, 'date', 'request')\n                : undefined;\n            const currentInfrastructureData = reportType === \"cost\" /* cost */\n                ? transformOcpReport(currentReport, trend.type, 'date', 'infrastructureCost')\n                : undefined;\n            const previousInfrastructureData = reportType === \"cost\" /* cost */\n                ? transformOcpReport(previousReport, trend.type, 'date', 'infrastructureCost')\n                : undefined;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            return (React.createElement(React.Fragment, null, Boolean(reportType === \"cost\" /* cost */) ? (React.createElement(OcpReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentCostData: currentUsageData, currentInfrastructureCostData: currentInfrastructureData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousCostData: previousUsageData, previousInfrastructureCostData: previousInfrastructureData, title: title })) : (React.createElement(OcpReportSummaryUsage, { containerHeight: chartStyles.containerUsageHeight, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: title }))));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, isUsageFirst, reportType } = this.props;\n            const units = this.getUnits();\n            return (React.createElement(OcpReportSummaryDetails, { costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, requestFormatOptions: details.requestFormatOptions, requestLabel: this.getDetailsLabel(details.requestKey, units), showUnits: details.showUnits, showUsageFirst: isUsageFirst, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerAltHeight, chartStyles.chartAltHeight, true)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('ocp_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabItems) },\n                    React.createElement(OcpReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            if (activeTab === currentTab) {\n                return (React.createElement(OcpReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: reportType === \"cost\" /* cost */\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: reportType === \"cost\" /* cost */\n                        ? reportItem.cost\n                        : reportItem.usage }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, reportType } = this.props;\n            let units = '';\n            if (currentReport && currentReport.meta && currentReport.meta.total) {\n                if (reportType === \"cost\" /* cost */) {\n                    units = currentReport.meta.total.cost\n                        ? unitLookupKey(currentReport.meta.total.cost.units)\n                        : '';\n                }\n                else {\n                    units = currentReport.meta.total.usage\n                        ? unitLookupKey(currentReport.meta.total.usage.units)\n                        : '';\n                }\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight),\n                Boolean(availableTabs) && (React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs()))));\n        };\n        this.handleInsightsNavClick = () => {\n            insights.chrome.appNavClick({ id: 'ocp', secondaryNav: true });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id } = this.props;\n            const tab = availableTabs[tabIndex];\n            this.props.updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, widgetId } = this.props;\n        if (availableTabs) {\n            this.props.updateTab(id, availableTabs[0]);\n        }\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpSupplementaryDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpSupplementaryDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: ocpReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.tabs), tabsReportFetchStatus: ocpReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpSupplementaryDashboardActions.fetchWidgetReports,\n    updateTab: ocpSupplementaryDashboardActions.changeWidgetTab,\n};\nconst OcpSupplementaryDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(OcpSupplementaryDashboardWidgetBase));\nexport { OcpSupplementaryDashboardWidget, OcpSupplementaryDashboardWidgetBase, };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpSupplementaryDashboardSelectors } from 'store/ocpSupplementaryDashboard';\nimport { OcpSupplementaryDashboardWidget } from './ocpSupplementaryDashboardWidget';\nconst OcpSupplementaryDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(OcpSupplementaryDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(OcpSupplementaryDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: ocpSupplementaryDashboardSelectors.selectWidgets(state),\n        widgets: ocpSupplementaryDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpSupplementaryDashboard = translate()(connect(mapStateToProps, {})(OcpSupplementaryDashboardBase));\nexport default OcpSupplementaryDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_2xl, global_spacer_xl } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartAltHeight: 180,\n    chartHeight: 80,\n    containerAltHeight: 275,\n    containerTrendHeight: 150,\n    containerUsageHeight: 180,\n};\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery } from 'api/ocpQuery';\nimport { transformOcpReport } from 'components/charts/commonChart/chartUtils';\nimport { OcpReportSummary, OcpReportSummaryAlt, OcpReportSummaryDetails, OcpReportSummaryItem, OcpReportSummaryItems, OcpReportSummaryTrend, OcpReportSummaryUsage, } from 'components/reports/ocpReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpReportsSelectors } from 'store/ocpReports';\nimport { ocpUsageDashboardActions, ocpUsageDashboardSelectors, } from 'store/ocpUsageDashboard';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './ocpUsageDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nclass OcpUsageDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const currentTab = getIdKeyForTab(tab);\n            return `/ocp?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, reportType, t, trend } = this.props;\n            const reportItem = reportType === \"cost\" /* cost */ ? 'cost' : 'usage';\n            const currentUsageData = transformOcpReport(currentReport, trend.type, 'date', reportItem);\n            const previousUsageData = transformOcpReport(previousReport, trend.type, 'date', reportItem);\n            const currentRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpReport(currentReport, trend.type, 'date', 'request')\n                : undefined;\n            const previousRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpReport(previousReport, trend.type, 'date', 'request')\n                : undefined;\n            const currentInfrastructureData = reportType === \"cost\" /* cost */\n                ? transformOcpReport(currentReport, trend.type, 'date', 'infrastructureCost')\n                : undefined;\n            const previousInfrastructureData = reportType === \"cost\" /* cost */\n                ? transformOcpReport(previousReport, trend.type, 'date', 'infrastructureCost')\n                : undefined;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            return (React.createElement(React.Fragment, null, Boolean(reportType === \"cost\" /* cost */) ? (React.createElement(OcpReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentCostData: currentUsageData, currentInfrastructureCostData: currentInfrastructureData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousCostData: previousUsageData, previousInfrastructureCostData: previousInfrastructureData, title: title })) : (React.createElement(OcpReportSummaryUsage, { containerHeight: chartStyles.containerUsageHeight, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: title }))));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, isUsageFirst, reportType } = this.props;\n            const units = this.getUnits();\n            return (React.createElement(OcpReportSummaryDetails, { costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, requestFormatOptions: details.requestFormatOptions, requestLabel: this.getDetailsLabel(details.requestKey, units), showUnits: details.showUnits, showUsageFirst: isUsageFirst, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerAltHeight, chartStyles.chartAltHeight, true)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('ocp_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabItems) },\n                    React.createElement(OcpReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            if (activeTab === currentTab) {\n                return (React.createElement(OcpReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: reportType === \"cost\" /* cost */\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: reportType === \"cost\" /* cost */\n                        ? reportItem.cost\n                        : reportItem.usage }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, reportType } = this.props;\n            let units = '';\n            if (currentReport && currentReport.meta && currentReport.meta.total) {\n                if (reportType === \"cost\" /* cost */) {\n                    units = currentReport.meta.total.cost\n                        ? unitLookupKey(currentReport.meta.total.cost.units)\n                        : '';\n                }\n                else {\n                    units = currentReport.meta.total.usage\n                        ? unitLookupKey(currentReport.meta.total.usage.units)\n                        : '';\n                }\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight),\n                Boolean(availableTabs) && (React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs()))));\n        };\n        this.handleInsightsNavClick = () => {\n            insights.chrome.appNavClick({ id: 'ocp', secondaryNav: true });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id } = this.props;\n            const tab = availableTabs[tabIndex];\n            this.props.updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, widgetId } = this.props;\n        if (availableTabs) {\n            this.props.updateTab(id, availableTabs[0]);\n        }\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpUsageDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpUsageDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: ocpReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.tabs), tabsReportFetchStatus: ocpReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpUsageDashboardActions.fetchWidgetReports,\n    updateTab: ocpUsageDashboardActions.changeWidgetTab,\n};\nconst OcpUsageDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(OcpUsageDashboardWidgetBase));\nexport { OcpUsageDashboardWidget, OcpUsageDashboardWidgetBase, };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpUsageDashboardSelectors } from 'store/ocpUsageDashboard';\nimport { OcpUsageDashboardWidget } from './ocpUsageDashboardWidget';\nconst OcpUsageDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(OcpUsageDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(OcpUsageDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: ocpUsageDashboardSelectors.selectWidgets(state),\n        widgets: ocpUsageDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpUsageDashboard = translate()(connect(mapStateToProps, {})(OcpUsageDashboardBase));\nexport default OcpUsageDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_FontSize_md, global_spacer_lg, global_spacer_sm, } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const styles = StyleSheet.create({\n    info: {\n        marginLeft: global_spacer_sm.value,\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    perspective: {\n        marginBottom: global_spacer_lg.value,\n        marginTop: global_spacer_lg.value,\n    },\n    tabs: {\n        marginTop: global_spacer_lg.value,\n    },\n});\nexport const headerOverride = css `\n  &.pf-c-page__main-section {\n    --pf-c-page__main-section--PaddingBottom: 0;\n  }\n`;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    perspectiveSelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    perspectiveLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n});\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './perspective.styles';\nclass PerspectiveBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isPerspectiveOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        // constructor(stateProps, dispatchProps) {\n        //   super(stateProps, dispatchProps);\n        //   this.handleClick = this.handleClick.bind(this);\n        //   this.handleSelect = this.handleSelect.bind(this);\n        //   this.handleToggle = this.handleToggle.bind(this);\n        // }\n        this.getDropDownItems = () => {\n            const { options, t } = this.props;\n            return options.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleClick(option.value) }, t(option.label))));\n        };\n        this.getCurrentLabel = () => {\n            const { currentItem, options, t } = this.props;\n            let label = '';\n            for (const option of options) {\n                if (currentItem === option.value) {\n                    label = t(option.label);\n                    break;\n                }\n            }\n            return label;\n        };\n        this.handleClick = value => {\n            const { onItemClicked } = this.props;\n            if (onItemClicked) {\n                onItemClicked(value);\n            }\n        };\n        this.handleSelect = event => {\n            this.setState({\n                isPerspectiveOpen: !this.state.isPerspectiveOpen,\n            });\n        };\n        this.handleToggle = isPerspectiveOpen => {\n            this.setState({\n                isPerspectiveOpen,\n            });\n        };\n    }\n    render() {\n        const { t } = this.props;\n        const { isPerspectiveOpen } = this.state;\n        const dropdownItems = this.getDropDownItems();\n        return (React.createElement(\"div\", { className: css(styles.perspectiveSelector) },\n            React.createElement(\"label\", { className: css(styles.perspectiveLabel) }, t('overview.perspective.label')),\n            React.createElement(Dropdown, { onSelect: this.handleSelect, toggle: React.createElement(DropdownToggle, { onToggle: this.handleToggle }, this.getCurrentLabel()), isOpen: isPerspectiveOpen, dropdownItems: dropdownItems })));\n    }\n}\nconst Perspective = translate()(PerspectiveBase);\nexport { Perspective };\n","import { Popover, Tab, TabContent, Tabs, Title, TitleSize, } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport { getProvidersQuery } from 'api/providersQuery';\nimport { ErrorState } from 'components/state/errorState/errorState';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport { NoProvidersState } from 'components/state/noProvidersState/noProvidersState';\nimport AwsCloudDashboard from 'pages/dashboard/awsCloudDashboard/awsCloudDashboard';\nimport AwsDashboard from 'pages/dashboard/awsDashboard/awsDashboard';\nimport AzureCloudDashboard from 'pages/dashboard/azureCloudDashboard/azureCloudDashboard';\nimport AzureDashboard from 'pages/dashboard/azureDashboard/azureDashboard';\nimport OcpCloudDashboard from 'pages/dashboard/ocpCloudDashboard/ocpCloudDashboard';\nimport OcpDashboard from 'pages/dashboard/ocpDashboard/ocpDashboard';\nimport OcpSupplementaryDashboard from 'pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboard';\nimport OcpUsageDashboard from 'pages/dashboard/ocpUsageDashboard/ocpUsageDashboard';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions } from 'store/onboarding';\nimport { awsProvidersQuery, azureProvidersQuery, ocpProvidersQuery, providersSelectors, } from 'store/providers';\nimport { headerOverride, styles } from './overview.styles';\nimport { Perspective } from './perspective';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"infrastructure\" /* infrastructure */:\n            return 'infrastructure';\n        case \"ocp\" /* ocp */:\n            return 'ocp';\n    }\n};\n// Ocp options\nconst ocpOptions = [\n    { label: 'overview.perspective.all', value: 'all' },\n    { label: 'overview.perspective.supplementary', value: 'supplementary' },\n];\n// Infrastructure options\nconst infrastructureOptions = [\n    { label: 'overview.perspective.all_filtered', value: 'all_filtered' },\n];\n// Infrastructure AWS options\nconst infrastructureAwsOptions = [\n    { label: 'overview.perspective.aws', value: 'aws' },\n    { label: 'overview.perspective.aws_filtered', value: 'aws_filtered' },\n];\n// Infrastructure Azure options\nconst infrastructureAzureOptions = [\n    { label: 'overview.perspective.azure', value: 'azure' },\n    { label: 'overview.perspective.azure_filtered', value: 'azure_filtered' },\n];\n// Infrastructure Ocp options\nconst infrastructureOcpOptions = [\n    { label: 'overview.perspective.openshift_usage', value: 'openshift_usage' },\n];\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n            currentInfrastructurePerspective: infrastructureOptions[0].value,\n            currentOcpPerspective: ocpOptions[0].value,\n            showPopover: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const { awsProviders, azureProviders, ocpProviders } = this.props;\n            const availableTabs = [];\n            const isAwsAvailable = awsProviders && awsProviders.meta && awsProviders.meta.count;\n            const isAzureAvailable = azureProviders && azureProviders.meta && azureProviders.meta.count;\n            const isOcpAvailable = ocpProviders && ocpProviders.meta && ocpProviders.meta.count;\n            const isOcpCloudAvailable = isOcpAvailable && isAwsAvailable;\n            if (isOcpAvailable) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"ocp\" /* ocp */,\n                });\n            }\n            if (isAwsAvailable || isAzureAvailable || isOcpCloudAvailable) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"infrastructure\" /* infrastructure */,\n                });\n            }\n            return availableTabs;\n        };\n        this.getCurrentTab = () => {\n            const { activeTabKey } = this.state;\n            return activeTabKey === 0 ? \"ocp\" /* ocp */ : \"infrastructure\" /* infrastructure */;\n        };\n        this.getPerspective = () => {\n            const { awsProviders, azureProviders, ocpProviders } = this.props;\n            const { currentInfrastructurePerspective, currentOcpPerspective, } = this.state;\n            let currentItem = currentOcpPerspective;\n            let options = [...ocpOptions];\n            // Dynamically show options if providers are available\n            if (this.getCurrentTab() === \"infrastructure\" /* infrastructure */) {\n                const isAwsAvailable = awsProviders && awsProviders.meta && awsProviders.meta.count;\n                const isAzureAvailable = azureProviders && azureProviders.meta && azureProviders.meta.count;\n                const isOcpAvailable = ocpProviders && ocpProviders.meta && ocpProviders.meta.count;\n                currentItem = currentInfrastructurePerspective;\n                options = [\n                    ...infrastructureOptions,\n                    ...(isAwsAvailable && infrastructureAwsOptions),\n                    ...(isAzureAvailable && infrastructureAzureOptions),\n                    ...(isOcpAvailable && infrastructureOcpOptions),\n                ];\n            }\n            return (React.createElement(Perspective, { currentItem: currentItem, onItemClicked: this.handlePerspectiveClick, options: options }));\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: this.getTabTitle(tab) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { activeTabKey, currentInfrastructurePerspective, currentOcpPerspective, } = this.state;\n            if (activeTabKey !== index) {\n                return null;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"infrastructure\" /* infrastructure */) {\n                if (currentInfrastructurePerspective ===\n                    \"all_filtered\" /* allFiltered */) {\n                    return React.createElement(OcpCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"aws\" /* aws */) {\n                    return React.createElement(AwsDashboard, null);\n                }\n                else if (currentInfrastructurePerspective ===\n                    \"aws_filtered\" /* awsFiltered */) {\n                    return React.createElement(AwsCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"azure\" /* azure */) {\n                    return React.createElement(AzureDashboard, null);\n                }\n                else if (currentInfrastructurePerspective ===\n                    \"azure_filtered\" /* azureFiltered */) {\n                    return React.createElement(AzureCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective ===\n                    \"openshift_usage\" /* openshiftUsage */) {\n                    return React.createElement(OcpUsageDashboard, null);\n                }\n                else {\n                    return React.createElement(OcpCloudDashboard, null); // default\n                }\n            }\n            else if (currentTab === \"ocp\" /* ocp */) {\n                if (currentOcpPerspective === \"all\" /* all */) {\n                    return React.createElement(OcpDashboard, null);\n                }\n                else if (currentOcpPerspective === \"supplementary\" /* supplementary */) {\n                    return React.createElement(OcpSupplementaryDashboard, null);\n                }\n                else {\n                    return React.createElement(OcpDashboard, null); // default\n                }\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"infrastructure\" /* infrastructure */) {\n                return t('overview.infrastructure');\n            }\n            else if (tab === \"ocp\" /* ocp */) {\n                return t('overview.ocp');\n            }\n        };\n        this.handlePerspectiveClick = (value) => {\n            const currentTab = this.getCurrentTab();\n            this.setState(Object.assign({}, (currentTab === \"infrastructure\" /* infrastructure */ && {\n                currentInfrastructurePerspective: value,\n            }), (currentTab === \"ocp\" /* ocp */ && { currentOcpPerspective: value })));\n        };\n        this.handlePopoverClick = () => {\n            this.setState({\n                show: !this.state.showPopover,\n            });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    render() {\n        const { awsProviders, awsProvidersError, awsProvidersFetchStatus, azureProviders, azureProvidersError, azureProvidersFetchStatus, ocpProviders, ocpProvidersError, ocpProvidersFetchStatus, t, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        const error = awsProvidersError || azureProvidersError || ocpProvidersError;\n        const isLoading = awsProvidersFetchStatus === 1 /* inProgress */ ||\n            azureProvidersFetchStatus === 1 /* inProgress */ ||\n            ocpProvidersFetchStatus === 1 /* inProgress */;\n        const noAwsProviders = awsProviders !== undefined &&\n            awsProviders.meta !== undefined &&\n            awsProviders.meta.count === 0 &&\n            awsProvidersFetchStatus === 2 /* complete */;\n        const noAzureProviders = azureProviders !== undefined &&\n            azureProviders.meta !== undefined &&\n            azureProviders.meta.count === 0 &&\n            azureProvidersFetchStatus === 2 /* complete */;\n        const noOcpProviders = ocpProviders !== undefined &&\n            ocpProviders.meta !== undefined &&\n            ocpProviders.meta.count === 0 &&\n            ocpProvidersFetchStatus === 2 /* complete */;\n        const noProviders = noAwsProviders && noAzureProviders && noOcpProviders;\n        const showTabs = !(error || noProviders || isLoading);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"section\", { className: `pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light ${showTabs ? headerOverride : ''}` },\n                React.createElement(\"header\", { className: \"pf-u-display-flex pf-u-justify-content-space-between pf-u-align-items-center\" },\n                    React.createElement(Title, { size: TitleSize['2xl'] },\n                        t('overview.title'),\n                        Boolean(showTabs) && (React.createElement(\"span\", { className: css(styles.infoIcon) },\n                            React.createElement(Popover, { \"aria-label\": \"t('ocp_details.derived_aria_label')\", enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                    React.createElement(\"p\", { className: css(styles.infoTitle) }, t('overview.ocp_cloud')),\n                                    React.createElement(\"p\", null, t('overview.ocp_cloud_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { className: css(styles.infoTitle) }, t('overview.ocp')),\n                                    React.createElement(\"p\", null, t('overview.ocp_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { className: css(styles.infoTitle) }, t('overview.aws')),\n                                    React.createElement(\"p\", null, t('overview.aws_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { className: css(styles.infoTitle) }, t('overview.azure')),\n                                    React.createElement(\"p\", null, t('overview.azure_desc'))) },\n                                React.createElement(InfoCircleIcon, { className: css(styles.info), onClick: this.handlePopoverClick })))))),\n                Boolean(showTabs) && (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs(availableTabs)),\n                    React.createElement(\"div\", { className: css(styles.perspective) }, this.getPerspective())))),\n            React.createElement(\"section\", { className: \"pf-l-page__main-section pf-c-page__main-section\", \"page-type\": \"cost-management-overview\" }, Boolean(error) ? (React.createElement(ErrorState, { error: error })) : Boolean(noProviders) ? (React.createElement(NoProvidersState, null)) : Boolean(isLoading) ? (React.createElement(LoadingState, null)) : (this.getTabContent(availableTabs)))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    const awsProvidersQueryString = getProvidersQuery(awsProvidersQuery);\n    const awsProviders = providersSelectors.selectProviders(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersError = providersSelectors.selectProvidersError(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const azureProvidersQueryString = getProvidersQuery(azureProvidersQuery);\n    const azureProviders = providersSelectors.selectProviders(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const azureProvidersError = providersSelectors.selectProvidersError(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const azureProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const ocpProvidersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const ocpProviders = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersError = providersSelectors.selectProvidersError(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    return {\n        awsProviders,\n        awsProvidersError,\n        awsProvidersFetchStatus,\n        awsProvidersQueryString,\n        azureProviders,\n        azureProvidersError,\n        azureProvidersFetchStatus,\n        azureProvidersQueryString,\n        ocpProviders,\n        ocpProvidersError,\n        ocpProvidersFetchStatus,\n        ocpProvidersQueryString,\n    };\n});\nconst Overview = translate()(connect(mapStateToProps, {\n    openProvidersModal: onboardingActions.openModal,\n})(OverviewBase));\nexport default Overview;\n","import Overview from './overview';\nexport default Overview;\n"],"sourceRoot":""}