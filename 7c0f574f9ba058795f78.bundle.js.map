{"version":3,"sources":["webpack:///./src/pages/onboardingModal/index.ts","webpack:///./src/testIds.ts","webpack:///./src/pages/onboardingModal/final/item.tsx","webpack:///./src/pages/onboardingModal/final/loader.tsx","webpack:///./src/pages/onboardingModal/final/index.tsx","webpack:///./src/utils/validators.ts","webpack:///./src/pages/onboardingModal/awsConfigure/form.tsx","webpack:///./src/pages/onboardingModal/awsConfigure/instructions.tsx","webpack:///./src/pages/onboardingModal/awsConfigure/awsConfigure.tsx","webpack:///./src/pages/onboardingModal/awsConfigure/index.ts","webpack:///./src/components/copyClipboard/copyFunc.ts","webpack:///./src/components/copyClipboard/copyClipboard.tsx","webpack:///./src/pages/onboardingModal/configure/instructions.tsx","webpack:///./src/pages/onboardingModal/configure/index.ts","webpack:///./src/pages/onboardingModal/enableAccountAccess/form.tsx","webpack:///./src/pages/onboardingModal/enableAccountAccess/instructions.tsx","webpack:///./src/pages/onboardingModal/enableAccountAccess/enableAccountAccess.tsx","webpack:///./src/pages/onboardingModal/enableAccountAccess/index.ts","webpack:///./src/pages/onboardingModal/iamPolicy/instructions.tsx","webpack:///./src/pages/onboardingModal/iamPolicy/index.ts","webpack:///./src/pages/onboardingModal/iamRole/instructions.tsx","webpack:///./src/pages/onboardingModal/iamRole/index.ts","webpack:///./src/pages/onboardingModal/obtainLogin/instructions.tsx","webpack:///./src/pages/onboardingModal/obtainLogin/index.ts","webpack:///./src/pages/onboardingModal/sourceKind/checkList.tsx","webpack:///./src/pages/onboardingModal/sourceKind/form.tsx","webpack:///./src/pages/onboardingModal/sourceKind/instructions.tsx","webpack:///./src/pages/onboardingModal/sourceKind/sourceKind.tsx","webpack:///./src/pages/onboardingModal/sourceKind/index.tsx","webpack:///./src/pages/onboardingModal/usageCollector/form.tsx","webpack:///./src/pages/onboardingModal/usageCollector/instructions.tsx","webpack:///./src/pages/onboardingModal/usageCollector/usageCollector.tsx","webpack:///./src/pages/onboardingModal/usageCollector/index.ts","webpack:///./src/pages/onboardingModal/wizard/index.ts","webpack:///./src/pages/onboardingModal/wizard/wizard.tsx"],"names":["__webpack_exports__","Object","react_hot_loader__WEBPACK_IMPORTED_MODULE_0__","module","_wizard__WEBPACK_IMPORTED_MODULE_1__","getTestProps","id","data-testid","testIds","details","historical_data_btn","tag_lnk","show_more_btn","view_all_btn","export","cancel_btn","submit_btn","login","alert","form","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","check_box_3","check_box_4","check_box_5","check_box_all","s3_input","clusterid_input","arn_input","providers","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","view_all_link","sidebar","nav","link","backdrop","item","title","value","react_default","a","createElement","style","paddingBottom","Title","size","sizes","md","lg","loader","Component","[object Object]","props","super","apiStatus","status","apiErrors","error","this","errorMessage","response","data","Error","undefined","errors","map","er","detail","join","message","t","name","type","clusterId","arn","parseError","Fragment","Alert","variant","xl","onboardingModal_final","react_redux_es","common","state","selectOnboardingName","selectOnboardingType","selectOnboardingClusterID","selectOnboardingArn","s3BucketName","selectOnboardingS3BucketName","selectApiErrors","selectApiStatus","es","sourceTypeValidator","sourceNameValidator","RegExp","test","ocpClusterIdValidator","awsS3BucketNameValidator","arnValidator","length","indexOf","awsConfigure_form","isValid","onChange","Form","FormGroup","fieldId","label","helperText","helperTextInvalid","TextInput","assign","instructions","List","ListItem","awsConfigure","updateS3BucketName","s3BucketNameValid","_name","event","currentTarget","onboardingModal_awsConfigure","selectOnboardingValidation","copyFunc","text","clipboard","parentElement","el","document","appendChild","select","execCommand","removeChild","CopyClipboardStateless","isCopied","aria-label","ariaLabel","onCopy","isToggle","isExpanded","onExpand","position","Button","width","onClick","chevron_down_icon","chevron_right_icon","left","isReadOnly","right","ok_icon","paste_icon","className","copyClipboard_CopyClipboard","wasClicked","expanded","setState","timer","setTimeout","clearTimeout","configure_instructions","configure","enableAccountAccess_form","enableAccountAccess_instructions","enableAccountAccess","updateArn","arnValid","onboardingModal_enableAccountAccess","iamPolicy_instructions","iampolicy","href","target","i18nKey","iamPolicy","iamRole_instructions","iamRole","obtainLogin_instructions","obtainLogin","actionItems","testProps","operator","insights","ansible","epel","oc","SourceKindCheckList","checkedItems","updateCheckItem","checkAll","actionItem","Checkbox","key","isChecked","keys","every","k","defaultProps","checkList","sourceKind_form","updateName","nameValid","updateType","typeValid","FormSelect","FormSelectOption","sourceKind_instructions","sourceKind","checked","updateCheck","Boolean","onboardingModal_sourceKind","selectOnboardingSourceKindChecked","updateSourceKindCheckList","checkSourceKindCheckList","usageCollector_form","usageCollector_instructions","korekuta","usageCollector","updateClusterId","clusterIdValid","onboardingModal_usageCollector","updateClusterID","isModalOpen","selectOnboardingModal","isInvalid","selectOnboardingIsInvalid","dirtyMap","selectOnboardingDirty","sourceKindChecked","bucket","cancelOnboarding","updateSources","sourceSettings","fetchSources","addSource","steps","stepMap","isDirty","dirtyStepMap","src","index","setIndex","actions","isDisabled","provider_resource_name","billing_source_obj","billing_source","authentication","Modal","height","isLarge","isOpen","onClose"],"mappings":"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","file":"7c0f574f9ba058795f78.bundle.js","sourcesContent":["import { hot } from 'react-hot-loader';\nimport Wizard from './wizard';\nexport default hot(module)(Wizard);\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        historical_data_btn: 'historical-data-btn',\n        tag_lnk: 'tag-lnk',\n        show_more_btn: 'show-more-btn',\n        view_all_btn: 'view-all-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        check_box_3: 'check-box-3',\n        check_box_4: 'check-box-4',\n        check_box_5: 'check-box-5',\n        check_box_all: 'check-box-all',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n        view_all_link: 'view-all-lnk',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import { Title, TitleSize } from '@patternfly/react-core';\nimport React from 'react';\nconst Item = ({ title, value }) => (React.createElement(\"div\", { style: { paddingBottom: '12px' } },\n    React.createElement(Title, { size: TitleSize.md }, title),\n    React.createElement(Title, { size: TitleSize.lg }, value)));\nexport default Item;\n","import { Alert, Title, TitleSize } from '@patternfly/react-core';\nimport React from 'react';\nimport Item from './item';\nclass Loader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    parseError() {\n        const { apiStatus: status, apiErrors: error } = this.props;\n        if (status === 1 /* inProgress */) {\n            return null;\n        }\n        if (error === null) {\n            return null;\n        }\n        let errorMessage = 'Something went wrong';\n        if (error.response && error.response.data) {\n            errorMessage = error.response.data.Error;\n            if (!errorMessage && error.response.data.errors !== undefined) {\n                errorMessage = error.response.data.errors\n                    .map(er => er.detail)\n                    .join(', ');\n            }\n        }\n        else if (error.message) {\n            errorMessage = error.message;\n        }\n        return errorMessage;\n    }\n    render() {\n        const { t, name, type, clusterId, arn } = this.props;\n        const errors = this.parseError();\n        return (React.createElement(React.Fragment, null,\n            errors !== null && (React.createElement(\"div\", { style: { paddingBottom: '30px' } },\n                React.createElement(Alert, { variant: \"danger\", title: `${errors}. Please click \"Back\" to revise.` }))),\n            React.createElement(Title, { size: TitleSize.xl }, t('onboarding.final.title')),\n            React.createElement(\"p\", null, t('onboarding.final.desc')),\n            React.createElement(\"br\", null),\n            React.createElement(Item, { value: name, title: t('onboarding.final.name') }),\n            React.createElement(Item, { value: t(`onboarding.final.type.${type}`), title: t('onboarding.final.type.title') }),\n            type === 'AWS' && (React.createElement(Item, { value: arn, title: t('onboarding.final.arn') })),\n            type === 'OCP' && (React.createElement(Item, { value: clusterId, title: t('onboarding.final.cluster') }))));\n    }\n}\nexport default Loader;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingSelectors } from 'store/onboarding';\nimport Loader from './loader';\nimport './loader.css';\nexport default connect(createMapStateToProps(state => ({\n    name: onboardingSelectors.selectOnboardingName(state),\n    type: onboardingSelectors.selectOnboardingType(state),\n    clusterId: onboardingSelectors.selectOnboardingClusterID(state),\n    arn: onboardingSelectors.selectOnboardingArn(state),\n    s3BucketName: onboardingSelectors.selectOnboardingS3BucketName(state),\n    apiErrors: onboardingSelectors.selectApiErrors(state),\n    apiStatus: onboardingSelectors.selectApiStatus(state),\n})), {})(translate()(Loader));\n","export const sourceTypeValidator = (value) => value !== '';\nexport const sourceNameValidator = (value) => new RegExp('^.').test(value);\nexport const ocpClusterIdValidator = (value) => new RegExp('^.').test(value);\nexport const awsS3BucketNameValidator = (value) => new RegExp('^[A-Za-z0-9]+[A-Za-z0-9_-]*$').test(value);\nexport const arnValidator = (value) => {\n    const arnPrefix = 'arn:aws:';\n    if (value.length < arnPrefix.length) {\n        return false;\n    }\n    if (value.length === arnPrefix.length) {\n        return value === arnPrefix;\n    }\n    return value.indexOf(arnPrefix) === 0;\n};\n","import { Form, FormGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\nimport { getTestProps, testIds } from 'testIds';\nconst S3BucketForm = ({ t, isValid, value, onChange }) => {\n    return (React.createElement(Form, null,\n        React.createElement(FormGroup, { isValid: isValid, fieldId: \"s3_bucket_name\", label: t('onboarding.aws_configure.s3_bucket_name_label'), helperText: t('onboarding.aws_configure.s3_bucket_name_helper_text'), helperTextInvalid: t('onboarding.aws_configure.s3_bucket_name_helper_text_invalid') },\n            React.createElement(TextInput, Object.assign({}, getTestProps(testIds.onboarding.s3_input), { isValid: isValid, id: \"s3_bucket_name\", value: value, onChange: onChange })))));\n};\nexport default S3BucketForm;\n","import { List, ListItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nconst AwsConfigureInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.aws_configure.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.aws_configure.intro')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null, t('onboarding.aws_configure.s3_bucket_account')),\n            React.createElement(ListItem, null,\n                t('onboarding.aws_configure.cost_report'),\n                React.createElement(List, null,\n                    React.createElement(ListItem, null, t('onboarding.aws_configure.report_name')),\n                    React.createElement(ListItem, null, t('onboarding.aws_configure.time_unit')),\n                    React.createElement(ListItem, null, t('onboarding.aws_configure.include')),\n                    React.createElement(ListItem, null, t('onboarding.aws_configure.support')),\n                    React.createElement(ListItem, null, t('onboarding.aws_configure.prefix')))),\n            React.createElement(ListItem, null, t('onboarding.aws_configure.enter_s3_bucket')))));\n};\nexport default AwsConfigureInstructions;\n","import React from 'react';\nimport { awsS3BucketNameValidator } from 'utils/validators';\nimport S3BucketForm from './form';\nimport AwsConfigureInstructions from './instructions';\nconst AwsConfigure = ({ t, s3BucketName, updateS3BucketName, s3BucketNameValid, }) => {\n    const onChange = (_name, event) => {\n        updateS3BucketName(event.currentTarget.value, awsS3BucketNameValidator);\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(AwsConfigureInstructions, { t: t }),\n        React.createElement(\"br\", null),\n        React.createElement(\"br\", null),\n        React.createElement(S3BucketForm, { t: t, onChange: onChange, isValid: s3BucketNameValid, value: s3BucketName })));\n};\nexport default AwsConfigure;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport AwsConfigure from './awsConfigure';\nexport default connect(createMapStateToProps(state => ({\n    s3BucketName: onboardingSelectors.selectOnboardingS3BucketName(state),\n    s3BucketNameValid: onboardingSelectors.selectOnboardingValidation(state)\n        .s3BucketNameValid,\n})), {\n    updateS3BucketName: onboardingActions.updateS3BucketName,\n})(translate()(AwsConfigure));\n","const copy = (event, text) => {\n    const clipboard = event.currentTarget.parentElement;\n    const el = document.createElement('input');\n    el.value = text;\n    clipboard.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    clipboard.removeChild(el);\n};\nexport default copy;\n","import { Button, TextInput } from '@patternfly/react-core';\nimport { ChevronDownIcon, ChevronRightIcon, OkIcon, PasteIcon, } from '@patternfly/react-icons';\nimport React from 'react';\nimport copyfnc from './copyFunc';\nexport const CopyClipboardStateless = ({ text, isCopied, 'aria-label': ariaLabel, onCopy, isToggle, isExpanded, onExpand, }) => (React.createElement(\"div\", { style: { position: 'relative' } },\n    isToggle && (React.createElement(Button, { style: { width: 48 }, onClick: onExpand }, isExpanded ? React.createElement(ChevronDownIcon, null) : React.createElement(ChevronRightIcon, null))),\n    React.createElement(TextInput, { style: isToggle ? { position: 'absolute', left: '48px' } : null, onChange: () => null, isReadOnly: true, value: text, \"aria-label\": ariaLabel }),\n    React.createElement(Button, { onClick: onCopy, variant: \"primary\", style: { position: 'absolute', right: '1px' } }, isCopied ? React.createElement(OkIcon, null) : React.createElement(PasteIcon, null)),\n    isToggle && isExpanded && React.createElement(\"div\", { className: \"pf-c-form-control\" }, text)));\nexport class CopyClipboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { wasClicked: false, expanded: false };\n    }\n    render() {\n        return (React.createElement(CopyClipboardStateless, { isToggle: this.props.isToggle, isExpanded: this.state.expanded, onExpand: () => {\n                this.setState({ expanded: !this.state.expanded });\n            }, text: this.props.text, isCopied: this.state.wasClicked, \"aria-label\": this.props['aria-label'], onCopy: (event) => {\n                copyfnc(event, this.props.text);\n                this.setState({ wasClicked: true }, () => {\n                    const timer = setTimeout(() => {\n                        this.setState({ wasClicked: false }, () => {\n                            clearTimeout(timer);\n                        });\n                    }, 2000);\n                });\n            } }));\n    }\n}\n","import { Title } from '@patternfly/react-core';\nimport CopyClipboard from 'components/copyClipboard';\nimport React from 'react';\nconst ConfigureInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.configure.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.configure.instructions_text')),\n        React.createElement(\"br\", null),\n        React.createElement(Title, { size: \"md\" }, t('onboarding.configure.edit_contrab_title')),\n        React.createElement(\"div\", null, t('onboarding.configure.edit_contrab')),\n        React.createElement(CopyClipboard, { text: \"contrab -u <username> -e\", \"aria-label\": \"command line to edit contrab\" }),\n        React.createElement(\"br\", null),\n        React.createElement(Title, { size: \"md\" }, t('onboarding.configure.create_entry_title')),\n        React.createElement(\"div\", null, t('onboarding.configure.create_entry')),\n        React.createElement(CopyClipboard, { text: \"*/45 * * * * /path/to/ocp_usage.sh --collect\", \"aria-label\": \"entry to run OCP Usage collector every 45 minutes\" }),\n        React.createElement(\"br\", null),\n        React.createElement(Title, { size: \"md\" }, t('onboarding.configure.note_title')),\n        React.createElement(\"div\", null, t('onboarding.configure.note')),\n        React.createElement(CopyClipboard, { text: \"ocpcollector ALL=(ALL) NOPASSWD: ALL\", \"aria-label\": \"set sudo authority to interact with Red Hat Insights Client\" }),\n        React.createElement(\"br\", null)));\n};\nexport default ConfigureInstructions;\n","import { translate } from 'react-i18next';\nimport ConfigureInstructions from './instructions';\nexport default translate()(ConfigureInstructions);\n","import { Form, FormGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\nimport { getTestProps, testIds } from 'testIds';\nconst ArnForm = ({ t, isValid, value, onChange }) => {\n    return (React.createElement(Form, null,\n        React.createElement(FormGroup, { isValid: isValid, fieldId: \"arn\", label: t('onboarding.enable_account_access.arn_label'), helperText: t('onboarding.enable_account_access.arn_helper_text'), helperTextInvalid: t('onboarding.enable_account_access.arn_helper_text_invalid') },\n            React.createElement(TextInput, Object.assign({}, getTestProps(testIds.onboarding.arn_input), { isValid: isValid, id: \"arn\", value: value, onChange: onChange })))));\n};\nexport default ArnForm;\n","import { List, ListItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nconst EnableAccountAccessInstructions = ({ t, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.enable_account_access.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.enable_account_access.intro')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null, t('onboarding.enable_account_access.select_role')),\n            React.createElement(ListItem, null, t('onboarding.enable_account_access.copy_arn')))));\n};\nexport default EnableAccountAccessInstructions;\n","import React from 'react';\nimport { arnValidator } from 'utils/validators';\nimport ArnForm from './form';\nimport EnableAccountAccessInstructions from './instructions';\nconst EnableAccountAccess = ({ t, arn, updateArn, arnValid, }) => {\n    const onChange = (_name, event) => {\n        updateArn(event.currentTarget.value, arnValidator);\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(EnableAccountAccessInstructions, { t: t }),\n        React.createElement(\"br\", null),\n        React.createElement(\"br\", null),\n        React.createElement(ArnForm, { t: t, onChange: onChange, isValid: arnValid, value: arn })));\n};\nexport default EnableAccountAccess;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport EnableAccountAccess from './enableAccountAccess';\nexport default connect(createMapStateToProps(state => ({\n    arn: onboardingSelectors.selectOnboardingArn(state),\n    arnValid: onboardingSelectors.selectOnboardingValidation(state).arnValid,\n})), {\n    updateArn: onboardingActions.updateArn,\n})(translate()(EnableAccountAccess));\n","import { List, ListItem, Title } from '@patternfly/react-core';\nimport CopyClipboard from 'components/copyClipboard';\nimport React from 'react';\nimport { Interpolate } from 'react-i18next';\nconst IamPolicyInstructions = ({ t, s3BucketName }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.iam_policy.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.iam_policy.intro')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null,\n                React.createElement(Interpolate, { iampolicy: React.createElement(\"a\", { href: \"https://docs.aws.amazon.com/IAM/latest/UserGuide/console.html\", target: \"_blank\" }, \"AWS Identity Access Management* (IAM) console\"), i18nKey: \"onboarding.iam_policy.sign_in\" })),\n            React.createElement(ListItem, null,\n                t('onboarding.iam_policy.new_policy'),\n                React.createElement(\"br\", null),\n                React.createElement(CopyClipboard, { isToggle: true, text: `{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Sid\": \"VisualEditor0\",\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"s3:Get*\",\n            \"s3:List*\"\n        ],\n        \"Resource\": [\n            \"arn:aws:s3:::${s3BucketName}\",\n            \"arn:aws:s3:::${s3BucketName}/*\"\n        ]\n    },\n    {\n        \"Sid\": \"VisualEditor1\",\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"s3:ListAllMyBuckets\",\n            \"iam:ListAccountAliases\",\n            \"cur:DescribeReportDefinitions\"\n        ],\n        \"Resource\": \"*\"\n    }]\n}`, \"aria-label\": \"command line to obtain the token\" })),\n            React.createElement(ListItem, null, t('onboarding.iam_policy.complete_process'))),\n        React.createElement(\"br\", null),\n        React.createElement(\"br\", null),\n        React.createElement(\"div\", null,\n            React.createElement(\"b\", null, t('onboarding.iam_policy.donot_close_browser')),\n            t('onboarding.iam_policy.note'))));\n};\nexport default IamPolicyInstructions;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingSelectors } from 'store/onboarding';\nimport IamPolicyInstructions from './instructions';\nexport default connect(createMapStateToProps(state => ({\n    s3BucketName: onboardingSelectors.selectOnboardingS3BucketName(state),\n})), {})(translate()(IamPolicyInstructions));\n","import { List, ListItem, Title } from '@patternfly/react-core';\nimport CopyClipboard from 'components/copyClipboard';\nimport React from 'react';\nconst IamRoleInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.iam_role.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.iam_role.intro')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null, t('onboarding.iam_role.create_new_role')),\n            React.createElement(ListItem, null,\n                t('onboarding.iam_role.paste_account_id'),\n                React.createElement(\"br\", null),\n                React.createElement(CopyClipboard, { text: \"589173575009\", \"aria-label\": \"account id to paste\" })),\n            React.createElement(ListItem, null, t('onboarding.iam_role.attach_permissions')),\n            React.createElement(ListItem, null, t('onboarding.iam_role.complete_process')))));\n};\nexport default IamRoleInstructions;\n","import { translate } from 'react-i18next';\nimport IamRole from './instructions';\nexport default translate()(IamRole);\n","import { List, ListItem, Title } from '@patternfly/react-core';\nimport CopyClipboard from 'components/copyClipboard';\nimport React from 'react';\nconst ObtainLoginInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.obtain_login.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.obtain_login.intro')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null, t('onboarding.obtain_login.obtain_token')),\n            React.createElement(ListItem, null,\n                t('onboarding.obtain_login.run_command'),\n                React.createElement(\"br\", null),\n                React.createElement(CopyClipboard, { text: \"oc serviceaccounts get-token metering-operator > ocp_usage_token\", \"aria-label\": \"command line to obtain the token\" })),\n            React.createElement(ListItem, null, t('onboarding.obtain_login.security')))));\n};\nexport default ObtainLoginInstructions;\n","import { translate } from 'react-i18next';\nimport ObtainLogin from './instructions';\nexport default translate()(ObtainLogin);\n","import { Checkbox } from '@patternfly/react-core';\nimport React from 'react';\nimport { Interpolate } from 'react-i18next';\nimport { getTestProps, testIds } from 'testIds';\nconst actionItems = [\n    {\n        id: 'check-ocp-version',\n        label: React.createElement(Interpolate, { i18nKey: \"onboarding.source_kind.checkbox_1\" }),\n        ariaLabel: 'OCP version 3.11 or newer',\n        testProps: getTestProps(testIds.onboarding.check_box_1),\n    },\n    {\n        id: 'check-operator-metering',\n        label: (React.createElement(Interpolate, { i18nKey: \"onboarding.source_kind.checkbox_2\", operator: React.createElement(\"a\", { target: \"_blank\", href: \"https://github.com/operator-framework/operator-metering/blob/master/Documentation/install-metering.md\" }, \"Operator Metering\") })),\n        ariaLabel: 'Install operator metering',\n        testProps: getTestProps(testIds.onboarding.check_box_2),\n    },\n    {\n        id: 'check-insights-client',\n        label: (React.createElement(Interpolate, { i18nKey: \"onboarding.source_kind.checkbox_3\", insights: React.createElement(\"a\", { target: \"_blank\", href: \"https://access.redhat.com/products/red-hat-insights/#getstarted\" }, \"Red Hat Insights Client\") })),\n        ariaLabel: 'Setup Red Hat Insights Client',\n        testProps: getTestProps(testIds.onboarding.check_box_3),\n    },\n    {\n        id: 'check-ansible-epel',\n        label: (React.createElement(Interpolate, { i18nKey: \"onboarding.source_kind.checkbox_4\", ansible: React.createElement(\"a\", { target: \"_blank\", href: \"https://docs.ansible.com/ansible/2.7/installation_guide/intro_installation.html\" }, \"Ansible\"), epel: React.createElement(\"a\", { target: \"_blank\", href: \"https://fedoraproject.org/wiki/EPEL#Quickstart\" }, \"EPEL repository\") })),\n        ariaLabel: 'Install Ansible and EPEL',\n        testProps: getTestProps(testIds.onboarding.check_box_4),\n    },\n    {\n        id: 'check-oc',\n        label: (React.createElement(Interpolate, { i18nKey: \"onboarding.source_kind.checkbox_5\", oc: React.createElement(\"a\", { target: \"_blank\", href: \"https://docs.openshift.com/container-platform/3.3/cli_reference/get_started_cli.html#cli-linux\" }, \"OCP command-line (oc)\") })),\n        ariaLabel: 'Install OCP command line',\n        testProps: getTestProps(testIds.onboarding.check_box_5),\n    },\n];\nconst SourceKindCheckList = ({ t, checkedItems, updateCheckItem, checkAll, }) => {\n    return (React.createElement(React.Fragment, null,\n        t('onboarding.source_kind.checklist_title'),\n        actionItems.map(actionItem => (React.createElement(Checkbox, Object.assign({}, actionItem.testProps, { key: `checkbox-key-${actionItem.id}`, isChecked: checkedItems[actionItem.id] || false, onChange: updateCheckItem, label: actionItem.label, \"aria-label\": actionItem.ariaLabel, id: actionItem.id })))),\n        React.createElement(Checkbox, Object.assign({}, getTestProps(testIds.onboarding.check_box_all), { key: 'checkbox-all-sourcekind', onChange: checkAll, isChecked: Object.keys(checkedItems).every(k => checkedItems[k]), label: t('onboarding.source_kind.checkbox_6'), \"aria-label\": t('onboarding.source_kind.check them all'), id: \"check-them-all\" }))));\n};\nSourceKindCheckList.defaultProps = {\n    updateCheckItem: () => null,\n    checkAll: () => null,\n};\nexport default SourceKindCheckList;\n","import { Form, FormGroup, FormSelect, FormSelectOption, TextInput, } from '@patternfly/react-core';\nimport React from 'react';\nimport { getTestProps, testIds } from 'testIds';\nconst SourceKindForm = ({ t, name, updateName, nameValid, type, updateType, typeValid, }) => {\n    return (React.createElement(Form, null,\n        React.createElement(FormGroup, { isValid: nameValid, helperTextInvalid: t('onboarding.name_helper_invalid_text'), helperText: t('onboarding.name_helper_text'), fieldId: \"source_name\", label: t('onboarding.name_label') },\n            React.createElement(TextInput, Object.assign({}, getTestProps(testIds.onboarding.name_input), { isValid: nameValid, id: \"source_name\", value: name, onChange: updateName }))),\n        React.createElement(FormGroup, { isValid: typeValid, fieldId: \"source_type\", label: t('onboarding.type_label') },\n            React.createElement(FormSelect, Object.assign({}, getTestProps(testIds.onboarding.type_selector), { isValid: typeValid, value: type, id: \"source_type\", onChange: updateType }),\n                React.createElement(FormSelectOption, Object.assign({}, getTestProps(testIds.onboarding.type_opt_non), { label: t('onboarding.select_type_label'), value: \"\" })),\n                React.createElement(FormSelectOption, Object.assign({}, getTestProps(testIds.onboarding.type_opt_aws), { label: \"Amazon Web Services (AWS)\", value: \"AWS\" })),\n                React.createElement(FormSelectOption, Object.assign({}, getTestProps(testIds.onboarding.type_opt_ocp), { label: \"Red Hat OpenShift (RH OCP)\", value: \"OCP\" }))))));\n};\nexport default SourceKindForm;\n","import { Title } from '@patternfly/react-core';\nimport React from 'react';\nconst SourceKindInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.source_kind.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.source_kind.instructions_text')),\n        React.createElement(\"br\", null)));\n};\nexport default SourceKindInstructions;\n","import React from 'react';\nimport { sourceNameValidator, sourceTypeValidator } from 'utils/validators';\nimport SourceKindCheckList from './checkList';\nimport SourceKindForm from './form';\nimport SourceKindInstructions from './instructions';\nconst SourceKind = ({ t, name, updateName, nameValid, type, updateType, typeValid, checked, updateCheck, checkAll, }) => {\n    const updateNameText = (_name, event) => {\n        updateName(event.currentTarget.value, sourceNameValidator);\n    };\n    const updateTypeOption = (event) => {\n        updateType(event, sourceTypeValidator);\n    };\n    const updateCheckItem = (value, event) => {\n        updateCheck({ item: event.currentTarget.id, value });\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(SourceKindInstructions, { t: t }),\n        React.createElement(SourceKindForm, { updateName: updateNameText, updateType: updateTypeOption, name: name, nameValid: nameValid, type: type, typeValid: typeValid, t: t }),\n        React.createElement(\"br\", null),\n        Boolean(type === 'OCP') && (React.createElement(SourceKindCheckList, { t: t, checkedItems: checked, updateCheckItem: updateCheckItem, checkAll: () => {\n                checkAll();\n            } }))));\n};\nexport default SourceKind;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport SourceKind from './sourceKind';\nexport default connect(createMapStateToProps(state => (Object.assign({ name: onboardingSelectors.selectOnboardingName(state), type: onboardingSelectors.selectOnboardingType(state), checked: onboardingSelectors.selectOnboardingSourceKindChecked(state) }, onboardingSelectors.selectOnboardingValidation(state)))), {\n    updateName: onboardingActions.updateName,\n    updateType: onboardingActions.updateType,\n    updateCheck: onboardingActions.updateSourceKindCheckList,\n    checkAll: onboardingActions.checkSourceKindCheckList,\n})(translate()(SourceKind));\n","import { Form, FormGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\nimport { getTestProps, testIds } from 'testIds';\nconst ClusterForm = ({ t, isValid, value, onChange }) => {\n    return (React.createElement(Form, null,\n        React.createElement(FormGroup, { isValid: isValid, fieldId: \"cluster_id\", label: t('onboarding.korekuta.cluster_id_label') },\n            React.createElement(TextInput, Object.assign({}, getTestProps(testIds.onboarding.clusterid_input), { isValid: isValid, id: \"cluster_id\", value: value, onChange: onChange })))));\n};\nexport default ClusterForm;\n","import { List, ListItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { Interpolate } from 'react-i18next';\nconst UsageCollectorInstructions = ({ t, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.korekuta.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.korekuta.instructions_text')),\n        React.createElement(\"br\", null),\n        t('onboarding.korekuta.checklist_title'),\n        React.createElement(\"br\", null),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null,\n                React.createElement(React.Fragment, null,\n                    React.createElement(Interpolate, { i18nKey: \"onboarding.korekuta.download_and_install\", korekuta: React.createElement(\"a\", { href: \"https://koku.readthedocs.io/en/latest/providers.html#download-and-configure-ocp-usage-collector-korekuta\", target: \"_blank\" }, \"OCP Usage Collector\") }),\n                    React.createElement(\"br\", null),\n                    t('onboarding.korekuta.checklist_title'),\n                    React.createElement(\"br\", null),\n                    React.createElement(List, null,\n                        React.createElement(ListItem, null, t('onboarding.korekuta.checkbox_1')),\n                        React.createElement(ListItem, null, t('onboarding.korekuta.checkbox_2')),\n                        React.createElement(ListItem, null, t('onboarding.korekuta.checkbox_3')),\n                        React.createElement(ListItem, null, t('onboarding.korekuta.checkbox_4'))),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"div\", null, t('onboarding.korekuta.for_example')),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"div\", null, \"# ./ocp_usage.sh --setup -e OCP_API=\\\"https://api.openshift-prod.mycompany.com\\\" -e OCP_METERING_NAMESPACE=\\\"metering\\\" -e OCP_TOKEN_PATH=\\\"/path/to/ocp_usage_token\\\"\"),\n                    React.createElement(\"br\", null))),\n            React.createElement(ListItem, null, t('onboarding.korekuta.post_installation')))));\n};\nexport default UsageCollectorInstructions;\n","import React from 'react';\nimport { ocpClusterIdValidator } from 'utils/validators';\nimport ClusterIdForm from './form';\nimport Instructions from './instructions';\nconst UsageCollector = ({ t, clusterId, updateClusterId, clusterIdValid, }) => {\n    const onChange = (_name, event) => {\n        updateClusterId(event.currentTarget.value, ocpClusterIdValidator);\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Instructions, { t: t }),\n        React.createElement(\"br\", null),\n        React.createElement(\"br\", null),\n        React.createElement(ClusterIdForm, { t: t, onChange: onChange, isValid: clusterIdValid, value: clusterId })));\n};\nexport default UsageCollector;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport UsageCollector from './usageCollector';\nexport default connect(createMapStateToProps(state => ({\n    clusterId: onboardingSelectors.selectOnboardingClusterID(state),\n    clusterIdValid: onboardingSelectors.selectOnboardingValidation(state)\n        .clusterIdValid,\n})), {\n    updateClusterId: onboardingActions.updateClusterID,\n})(translate()(UsageCollector));\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport { sourcesActions } from 'store/sourceSettings';\nimport { WizardBase } from './wizard';\nexport default connect(createMapStateToProps(state => ({\n    isModalOpen: onboardingSelectors.selectOnboardingModal(state),\n    isInvalid: onboardingSelectors.selectOnboardingIsInvalid(state),\n    dirtyMap: onboardingSelectors.selectOnboardingDirty(state),\n    sourceKindChecked: onboardingSelectors.selectOnboardingSourceKindChecked(state),\n    type: onboardingSelectors.selectOnboardingType(state),\n    name: onboardingSelectors.selectOnboardingName(state),\n    bucket: onboardingSelectors.selectOnboardingS3BucketName(state),\n    clusterId: onboardingSelectors.selectOnboardingClusterID(state),\n    arn: onboardingSelectors.selectOnboardingArn(state),\n    status: onboardingSelectors.selectApiStatus(state),\n    errors: onboardingSelectors.selectApiErrors(state),\n})), {\n    cancelOnboarding: onboardingActions.cancelOnboarding,\n    updateSources: sourcesActions.fetchSources,\n    addSource: onboardingActions.addSource,\n})(translate()(WizardBase));\n","import { Button, Modal } from '@patternfly/react-core';\nimport Final from 'pages/onboardingModal//final';\nimport AwsConfigure from 'pages/onboardingModal/awsConfigure';\nimport Configure from 'pages/onboardingModal/configure';\nimport EnableAccountAccess from 'pages/onboardingModal/enableAccountAccess';\nimport IamPolicy from 'pages/onboardingModal/iamPolicy';\nimport IamRole from 'pages/onboardingModal/iamRole';\nimport ObtainLogin from 'pages/onboardingModal/obtainLogin';\nimport SourceKind from 'pages/onboardingModal/sourceKind';\nimport UsageCollector from 'pages/onboardingModal/usageCollector';\nimport React from 'react';\nimport Merlin from 'react-merlin';\nimport { getTestProps, testIds } from 'testIds';\nconst stepMap = type => {\n    switch (type) {\n        case 'AWS':\n            return [\n                React.createElement(SourceKind, { key: \"source_kind\" }),\n                React.createElement(AwsConfigure, { key: \"aws_configure\" }),\n                React.createElement(IamPolicy, { key: \"aws_iam_policy\" }),\n                React.createElement(IamRole, { key: \"aws_iam_role\" }),\n                React.createElement(EnableAccountAccess, { key: \"enable_account_access\" }),\n                React.createElement(Final, { key: \"aws_final\" }),\n            ];\n        case 'OCP':\n            return [\n                React.createElement(SourceKind, { key: \"source_kind\" }),\n                React.createElement(ObtainLogin, { key: \"obtain_login\" }),\n                React.createElement(UsageCollector, { key: \"usage_collector\" }),\n                React.createElement(Configure, { key: \"configure\" }),\n                React.createElement(Final, { key: \"final\" }),\n            ];\n        default:\n            return [React.createElement(SourceKind, { key: \"source_kind\" })];\n    }\n};\nconst dirtyStepMap = (dirtyMap, sourceKindChecked) => type => {\n    switch (type) {\n        case 'AWS':\n            return [\n                dirtyMap.name && dirtyMap.type,\n                dirtyMap.s3BucketName,\n                true,\n                true,\n                dirtyMap.arn,\n                true,\n            ];\n        case 'OCP':\n            return [\n                dirtyMap.name &&\n                    dirtyMap.type &&\n                    Object.keys(sourceKindChecked).every(k => sourceKindChecked[k]),\n                true,\n                dirtyMap.clusterId,\n                true,\n                true,\n            ];\n        default:\n            return [];\n    }\n};\nexport const WizardBase = ({ t, cancelOnboarding, updateSources, isModalOpen, isInvalid, dirtyMap, sourceKindChecked, status, type, bucket, name, arn, clusterId, addSource, }) => {\n    const steps = stepMap(type);\n    const isDirty = dirtyStepMap(dirtyMap, sourceKindChecked)(type);\n    return (React.createElement(Merlin, null, ({ index, setIndex }) => {\n        const actions = [\n            (type === '' || index < steps.length) && (React.createElement(Button, Object.assign({}, getTestProps(testIds.onboarding.btn_cancel), { key: \"wizard_cancel\", variant: \"secondary\", id: \"wizard_cancel_button\", isDisabled: status === 1 /* inProgress */, onClick: () => {\n                    setIndex(0);\n                    cancelOnboarding();\n                } }), \"Cancel\")),\n            index > 0 && (React.createElement(Button, Object.assign({}, getTestProps(testIds.onboarding.btn_back), { key: \"wizard_back\", variant: \"secondary\", id: \"wizard_back_button\", isDisabled: status === 1 /* inProgress */, onClick: () => setIndex(index - 1) }), \"Back\")),\n            type === '' && (React.createElement(Button, { isDisabled: true, key: \"wizard_init_continue\", variant: \"primary\", id: \"wizard_init_button\" }, \"Next\")),\n            type !== '' && index < steps.length - 1 && (React.createElement(Button, Object.assign({}, getTestProps(testIds.onboarding.btn_continue), { isDisabled: !isDirty[index] || isInvalid, key: \"wizard_continue\", variant: \"primary\", id: \"wizard_continue_button\", onClick: () => {\n                    setIndex(index + 1);\n                } }), \"Next\")),\n            type !== '' && index === steps.length - 1 && (React.createElement(Button, Object.assign({}, getTestProps(testIds.onboarding.btn_continue), { isDisabled: status === 1 /* inProgress */, key: \"wizard_finish\", variant: \"primary\", id: \"wizard_finish_button\", onClick: () => {\n                    const provider_resource_name = type === 'OCP' ? clusterId : arn;\n                    const billing_source_obj = type === 'AWS' ? { billing_source: { bucket } } : null;\n                    addSource(Object.assign({ type,\n                        name, authentication: {\n                            provider_resource_name,\n                        } }, billing_source_obj), () => setIndex(0));\n                } }), \"Add source\")),\n        ];\n        return (React.createElement(Modal, { style: {\n                height: '700px',\n                width: '800px',\n            }, isLarge: true, title: t('onboarding.wizard.title'), isOpen: isModalOpen, actions: actions, onClose: () => {\n                setIndex(0);\n                cancelOnboarding();\n            } }, steps[index]));\n    }));\n};\n"],"sourceRoot":""}