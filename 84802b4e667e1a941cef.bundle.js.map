{"version":3,"sources":["webpack://koku-ui/./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeader.js","webpack://koku-ui/./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack://koku-ui/./node_modules/@redhat-cloud-services/frontend-components/esm/Skeleton/Skeleton.js","webpack://koku-ui/./src/api/queries/providersQuery.ts","webpack://koku-ui/./src/components/charts/chartTheme/theme-koku.ts","webpack://koku-ui/./src/components/charts/chartTheme/index.ts","webpack://koku-ui/./src/components/charts/chartTheme/theme-utils.ts","webpack://koku-ui/./src/utils/computedForecast/getComputedForecastItems.ts","webpack://koku-ui/./src/components/charts/common/chartDatumUtils.ts","webpack://koku-ui/./src/components/charts/common/chartUtils.ts","webpack://koku-ui/./src/components/state/loadingState/loadingState.tsx","webpack://koku-ui/./src/pages/state/loading/loading.tsx","webpack://koku-ui/./src/pages/state/loading/index.ts","webpack://koku-ui/./src/pages/state/noData/noDataState.tsx","webpack://koku-ui/./src/pages/state/noData/noData.tsx","webpack://koku-ui/./src/components/icons/costIcon/costIcon.tsx","webpack://koku-ui/./src/components/icons/costIcon/index.ts","webpack://koku-ui/./src/pages/state/noProviders/noProvidersState.styles.ts","webpack://koku-ui/./src/pages/state/noProviders/noProvidersState.tsx","webpack://koku-ui/./src/pages/state/noProviders/index.ts","webpack://koku-ui/./src/pages/state/noProviders/noProviders.tsx","webpack://koku-ui/./src/pages/views/utils/providers.ts","webpack://koku-ui/./src/utils/computedReport/getComputedReportItems.ts","webpack://koku-ui/./src/utils/computedReport/getItemLabel.ts","webpack://koku-ui/./src/utils/formatValue.ts","webpack://koku-ui/./src/utils/noop.ts","webpack://koku-ui/./src/utils/pathname.ts","webpack://koku-ui/./src/utils/sort.ts"],"names":["PageHeader","_ref","className","children","props","pageHeaderClasses","theme","arguments","length","undefined","themeClasses","concat","propTypes","PageHeaderTitle","title","pageHeaderTitleClasses","headingLevel","size","SkeletonSize","xs","sm","md","lg","Skeleton","isDark","skeletonClasses","Object","values","defaultProps","getProvidersQuery","query","stringify","encode","indices","LAYOUT_PROPS","padding","area","assign","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","getCustomTheme","ChartThemeColor","ChartThemeVariant","getComputedForecastItems","forecast","sortDirection","sortKey","sort","itemMap","Map","visitDataPoint","dataPoint","forEach","val","date","item","get","set","cost","getCostData","infrastructure","supplementary","key","Array","data","from","getUnsortedComputedForecastItems","direction","confidence_max","value","units","confidence_min","pvalues","Number","rsquared","total","transformForecast","type","forecastItem","forecastItemValue","computedItems","chartDatums","map","i","createForecastDatum","reduce","acc","d","prevValue","y","padChartDatums","transformForecastCone","createForecastConeDatum","prevMaxValue","prevMinValue","y0","transformReport","report","idKey","reportItem","reportItemValue","items","getComputedReportItems","createReportDatum","computedItem","xVal","getDate","Date","yVal","isFloat","parseFloat","toFixed","isInt","x","maxValue","minValue","y0Val","id","label","datums","result","firstDate","lastDate","padDate","startOfMonth","setDate","format","push","endOfMonth","prevChartDatum","chartDatum","find","fillChartDatums","getDateRange","firstOfMonth","lastOfMonth","offset","start","end","today","setMonth","getMonth","firstDay","lastDay","getDatumDateRange","getMaxValue","max","datum","getMaxMinValues","min","maxY","Math","minY","getTooltipContent","formatValue","unit","options","lookup","getCostRangeString","count","endDate","month","startDate","year","getYear","getUsageRangeString","n","getChartNames","series","serie","childName","getDomain","hiddenSeries","domain","s","index","isSeriesHidden","threshold","ceil","_min","floor","getLegendData","legendItem","name","getInteractiveLegendItemStyles","has","filter","indexOf","getTooltipLabel","formatDatumValue","formatDatumOptions","formatter","dy","dy0","value0","value1","initHiddenSeries","Set","delete","add","_index","isDataAvailable","unavailable","isDataHidden","keys","next","done","dataChildName","serieChildName","LoadingState","withTranslation","t","subTitle","EmptyState","variant","EmptyStateVariant","Spinner","Title","EmptyStateBody","withRouter","Main","NoDataStateBase","showReload","this","EmptyStateIcon","icon","Button","onClick","window","location","reload","NoDataState","src","alt","styles","iconSpacer","marginLeft","viewSources","marginTop","global_spacer_lg","NoProvidersStateBase","super","getDocLink","textKey","urlKey","href","rel","target","style","getRouteToSources","providerType","docUrlKey","descKey","titleKey","component","NoProvidersState","hasCurrentMonthData","providers","provider","current_month_data","hasData","has_data","hasPreviousMonthData","previous_month_data","daily","getUnsortedComputedReportItems","markup","raw","usage","getUsageData","capacity","limit","request","orgUnitId","mapId","cluster","cluster_alias","clusters","delta_percent","delta_value","source_uuid","itemLabelKey","String","meta","group_by","tagPrefixKey","hasOwnProperty","getItemLabel","alias","account_alias","dateMap","unitLookupKey","toLowerCase","fValue","formatCurrency","formatUsageGb","formatUsageHrs","unknownTypeFormatter","_unit","fractionDigits","toLocaleString","minimumFractionDigits","maximumFractionDigits","currency","formatCurrencyAbbreviation","abbreviationFormats","symbol","f","parts","match","noop","getReleasePath","pathName","pathname","split","shift","release","getValueForItem","array","a","b","aVal","bVal"],"mappings":"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","file":"84802b4e667e1a941cef.bundle.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ThemeContext from '../Dark/configContext';\nimport \"../../PageHeader/./page-header.css\";\n/**\n * This is a page header that mimics the patternfly layout for a header section\n */\n\nvar PageHeader = function PageHeader(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"className\", \"children\"]);\n\n  var pageHeaderClasses = classNames(className, 'pf-l-page-header', 'pf-c-page-header', 'pf-l-page__main-section', 'pf-c-page__main-section');\n  return /*#__PURE__*/React.createElement(ThemeContext.Consumer, null, function () {\n    var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';\n    var themeClasses = classNames(_defineProperty({}, \"pf-m-\".concat(theme, \"-200\"), theme === 'dark'), _defineProperty({}, \"pf-m-light\", theme === 'light'));\n    return /*#__PURE__*/React.createElement(\"section\", _extends({}, props, {\n      className: \"\".concat(pageHeaderClasses, \" \").concat(themeClasses),\n      \"widget-type\": \"InsightsPageHeader\"\n    }), children);\n  });\n};\n\nexport default PageHeader;\nPageHeader.propTypes = {\n  children: propTypes.any.isRequired,\n  className: propTypes.string\n};","import React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Title } from \"@patternfly/react-core/dist/esm/components/Title/Title.js\";\n/**\n * This is the title section of the pageHeader\n */\n\nvar PageHeaderTitle = function PageHeaderTitle(_ref) {\n  var className = _ref.className,\n      title = _ref.title;\n  var pageHeaderTitleClasses = classNames(className);\n  return /*#__PURE__*/React.createElement(Title, {\n    headingLevel: \"h1\",\n    size: \"2xl\",\n    className: pageHeaderTitleClasses,\n    \"widget-type\": \"InsightsPageHeaderTitle\"\n  }, \" \", title, \" \");\n};\n\nexport default PageHeaderTitle;\nPageHeaderTitle.propTypes = {\n  title: propTypes.node.isRequired,\n  className: propTypes.string\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nexport var SkeletonSize = {\n  xs: 'xs',\n  sm: 'sm',\n  md: 'md',\n  lg: 'lg'\n};\nimport \"../../Skeleton/./skeleton.css\";\n\nvar Skeleton = function Skeleton(_ref) {\n  var size = _ref.size,\n      isDark = _ref.isDark,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"size\", \"isDark\", \"className\"]);\n\n  var skeletonClasses = classNames('ins-c-skeleton', \"ins-c-skeleton__\".concat(size), _defineProperty({}, \"ins-m-dark\", isDark), className);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: skeletonClasses\n  }, props), \"\\xA0\");\n};\n\nexport default Skeleton;\nSkeleton.propTypes = {\n  className: propTypes.string,\n  size: propTypes.oneOf(Object.values(SkeletonSize)),\n  isDark: propTypes.bool\n};\nSkeleton.defaultProps = {\n  size: SkeletonSize.md,\n  isDark: false\n};","import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, ChartThemeVariant, getCustomTheme } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, ChartThemeVariant.default, ChartTheme);\nexport default getTheme;\n","import { sort } from 'utils/sort';\nexport function getComputedForecastItems({ forecast, sortDirection = 0 /* asc */, sortKey = 'date', }) {\n    return sort(getUnsortedComputedForecastItems({\n        forecast,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nfunction getCostData(val, key, item) {\n    return {\n        confidence_max: {\n            value: item\n                ? item[key].confidence_max.value\n                : 0 + val[key] && val[key].confidence_max\n                    ? val[key].confidence_max.value\n                    : 0,\n            units: val[key] && val[key].confidence_max ? val[key].confidence_max.units : 'USD',\n        },\n        confidence_min: {\n            value: item\n                ? item[key].confidence_min.value\n                : 0 + val[key] && val[key].confidence_min\n                    ? val[key].confidence_min.value\n                    : 0,\n            units: val[key] && val[key].confidence_min ? val[key].confidence_min.units : 'USD',\n        },\n        pvalues: {\n            value: val[key] && val[key].pvalues ? Number(val[key].pvalues.value) : 0,\n            units: val[key] && val[key].pvalues ? val[key].pvalues.units : null,\n        },\n        rsquared: {\n            value: val[key] && val[key].rsquared ? Number(val[key].rsquared.value) : 0,\n            units: val[key] && val[key].rsquared ? val[key].rsquared.units : null,\n        },\n        total: {\n            value: item ? item[key].total.value : 0 + val[key] && val[key].total ? val[key].total.value : 0,\n            units: val[key] && val[key].total ? val[key].total.units : 'USD',\n        },\n    };\n}\nexport function getUnsortedComputedForecastItems({ forecast, }) {\n    if (!forecast) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            dataPoint.values.forEach((val) => {\n                const date = val.date;\n                const item = itemMap.get(date);\n                if (item) {\n                    // This code block is typically entered with filter[resolution]=monthly\n                    itemMap.set(date, Object.assign(Object.assign({}, item), { date, cost: getCostData(val, 'cost', item), infrastructure: getCostData(val, 'infrastructure', item), supplementary: getCostData(val, 'supplementary', item) }));\n                }\n                else {\n                    // This code block is typically entered with filter[resolution]=daily\n                    itemMap.set(date, {\n                        date,\n                        cost: getCostData(val, 'cost'),\n                        infrastructure: getCostData(val, 'infrastructure'),\n                        supplementary: getCostData(val, 'supplementary'),\n                    });\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (forecast && forecast.data) {\n        forecast.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import { endOfMonth, format, getDate, getYear, startOfMonth } from 'date-fns';\nimport i18next from 'i18next';\nimport { getComputedForecastItems } from 'utils/computedForecast/getComputedForecastItems';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { unitLookupKey } from 'utils/formatValue';\nexport function transformForecast(forecast, type = 1 /* daily */, forecastItem = 'cost', forecastItemValue = 'total') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => createForecastDatum(i[forecastItem][forecastItemValue].value, i));\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            return [...acc, createForecastDatum(prevValue + d[forecastItem][forecastItemValue].value, d)];\n        }, []);\n    }\n    return padChartDatums(chartDatums, type);\n}\nexport function transformForecastCone(forecast, type = 1 /* daily */, forecastItem = 'cost', forecastItemValue = 'total') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => createForecastConeDatum(i[forecastItem].confidence_max.value, i[forecastItem].confidence_min.value, i));\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevMaxValue = acc.length ? acc[acc.length - 1].y : d[forecastItem][forecastItemValue].value;\n            const prevMinValue = acc.length ? acc[acc.length - 1].y0 : d[forecastItem][forecastItemValue].value;\n            return [\n                ...acc,\n                createForecastConeDatum(prevMaxValue + d[forecastItem].confidence_max.value, prevMinValue + d[forecastItem].confidence_min.value, d),\n            ];\n        }, []);\n    }\n    return padChartDatums(chartDatums, type);\n}\nexport function transformReport(report, type = 1 /* daily */, idKey = 'date', reportItem = 'cost', reportItemValue = 'total' // useful for infrastructure.usage values\n) {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        idKey,\n        report,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedReportItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => {\n            const val = i[reportItem][reportItemValue] ? i[reportItem][reportItemValue].value : i[reportItem].value;\n            return createReportDatum(val, i, idKey, reportItem, reportItemValue);\n        });\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            const val = d[reportItem][reportItemValue] ? d[reportItem][reportItemValue].value : d[reportItem].value;\n            return [...acc, createReportDatum(prevValue + val, d, idKey, reportItem, reportItemValue)];\n        }, []);\n    }\n    return idKey === 'date' ? padChartDatums(chartDatums, type) : chartDatums;\n}\nexport function createForecastDatum(value, computedItem, forecastItem = 'cost', forecastItemValue = 'total') {\n    const xVal = getDate(new Date(computedItem.date + 'T00:00:00'));\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.date,\n        units: computedItem[forecastItem] && computedItem[forecastItem][forecastItemValue]\n            ? computedItem[forecastItem][forecastItemValue].units\n            : undefined,\n    };\n}\nexport function createForecastConeDatum(maxValue, minValue, computedItem, forecastItem = 'cost', forecastItemValue = 'total') {\n    const xVal = getDate(new Date(computedItem.date + 'T00:00:00'));\n    const yVal = isFloat(maxValue) ? parseFloat(maxValue.toFixed(2)) : isInt(maxValue) ? maxValue : 0;\n    const y0Val = isFloat(minValue) ? parseFloat(minValue.toFixed(2)) : isInt(minValue) ? minValue : 0;\n    return {\n        x: xVal,\n        y: maxValue === null ? null : yVal,\n        y0: minValue === null ? null : y0Val,\n        key: computedItem.date,\n        units: computedItem[forecastItem] && computedItem[forecastItem][forecastItemValue]\n            ? computedItem[forecastItem][forecastItemValue].units\n            : undefined,\n    };\n}\nexport function createReportDatum(value, computedItem, idKey = 'date', reportItem = 'cost', reportItemValue = 'total' // useful for infrastructure.usage values\n) {\n    const xVal = idKey === 'date' ? getDate(new Date(computedItem.id + 'T00:00:00')) : computedItem.label;\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.id,\n        units: computedItem[reportItem]\n            ? computedItem[reportItem][reportItemValue]\n                ? computedItem[reportItem][reportItemValue].units // cost, infrastructure, supplementary\n                : computedItem[reportItem].units // capacity, limit, request, usage\n            : undefined,\n    };\n}\n// Fill in missing data with previous value to represent cumulative daily cost\nexport function fillChartDatums(datums, type = 1 /* daily */) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    const padDate = startOfMonth(firstDate);\n    let prevChartDatum;\n    for (let i = padDate.getDate(); i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = format(padDate, 'yyyy-MM-dd');\n        const chartDatum = datums.find(val => val.key === id);\n        if (chartDatum) {\n            result.push(chartDatum);\n        }\n        else if (prevChartDatum) {\n            result.push(Object.assign(Object.assign({}, prevChartDatum), { key: id, x: getDate(new Date(id + 'T00:00:00')) }));\n        }\n        if (chartDatum) {\n            // Note: We want to identify missing data, but charts won't extrapolate (connect data points) if we return null here\n            // for missing daily values. For example, if there is only data for the first and last day of the month, charts would\n            // typically draw a line between two points by default. However, showing \"no data\" is more obvious there was a problem.\n            if (type === 1 /* daily */) {\n                prevChartDatum = {\n                    key: id,\n                    x: getDate(new Date(id + 'T00:00:00')),\n                    y: null,\n                };\n            }\n            else {\n                prevChartDatum = chartDatum;\n            }\n        }\n    }\n    return result;\n}\n// This pads chart datums with null datum objects, representing missing data at the beginning and end of the\n// data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n// message in the tooltip, which helps distinguish between zero values and when there is no data available.\nexport function padChartDatums(datums, type = 1 /* daily */) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    // Pad start for missing data\n    let padDate = startOfMonth(firstDate);\n    for (let i = padDate.getDate(); i < firstDate.getDate(); i++) {\n        padDate.setDate(i);\n        const id = format(padDate, 'yyyy-MM-dd');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    // Fill middle with existing data\n    result.push(...datums);\n    // Pad end for missing data\n    padDate = new Date(lastDate);\n    for (let i = padDate.getDate() + 1; i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = format(padDate, 'yyyy-MM-dd');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    return fillChartDatums(result, type);\n}\nexport function getDatumDateRange(datums, offset = 0) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        // If datums is empty, obtain the month based on offset (e.g., to show previous month in chart legends)\n        if (offset) {\n            today.setMonth(today.getMonth() - offset);\n        }\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    // Find the first populated (non-null) day\n    let firstDay = 0;\n    for (let i = firstDay; i < datums.length; i++) {\n        if (datums[i].y && datums[i].y !== null) {\n            firstDay = i;\n            break;\n        }\n    }\n    // Find the last populated (non-null) day\n    let lastDay = datums.length - 1;\n    for (let i = lastDay; i >= 0; i--) {\n        if (datums[i].y && datums[i].y !== null) {\n            lastDay = i;\n            break;\n        }\n    }\n    const start = new Date(datums[firstDay].key + 'T00:00:00');\n    const end = new Date(datums[lastDay].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDatumDateRange(datums, offset);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    const count = getDate(end);\n    const endDate = format(end, 'dd');\n    const month = Number(format(start, 'M')) - 1;\n    const month_abbr = Number(format(start, 'MMM')) - 1;\n    const startDate = format(start, 'dd');\n    const year = getYear(end);\n    if (i18next && i18next.t) {\n        return i18next.t(`chart.date_range`, {\n            count,\n            endDate,\n            month,\n            startDate,\n            year,\n        });\n    }\n    // Federated modules may not have access to the i18next package\n    if (count > 1) {\n        return `${startDate}-${endDate} ${month_abbr} ${year}`;\n    }\n    return `${startDate} ${month_abbr} ${year}`;\n}\nexport function getMonthRangeString(datums, key = 'chart.month_legend_label', offset = 0) {\n    const [start, end] = getDateRange(datums, true, false, offset);\n    const startMonth = Number(format(start, 'MMM')) - 1;\n    const endMonth = Number(format(end, 'M')) - 1;\n    if (i18next && i18next.t) {\n        return [\n            i18next.t(key, {\n                month: startMonth,\n            }),\n            i18next.t(key, {\n                month: endMonth,\n            }),\n        ];\n    }\n    // Federated modules may not have access to the i18next package\n    return [`${startMonth}`, `${endMonth}`];\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getMaxMinValues(datums) {\n    let max = -1;\n    let min = -1;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            const maxY = datum.y0 !== undefined ? Math.max(datum.y, datum.y0) : datum.y;\n            const minY = datum.y0 !== undefined ? Math.min(datum.y, datum.y0) : datum.y;\n            if (maxY > max) {\n                max = maxY;\n            }\n            if ((min === -1 || minY < min) && minY !== null) {\n                min = minY;\n            }\n        });\n    }\n    return { max, min };\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'core-hours':\n            case 'hour':\n            case 'hrs':\n            case 'gb':\n            case 'gb-hours':\n            case 'gb-mo':\n            case 'gibibyte month':\n            case 'vm-hours':\n                return i18next.t(`unit_tooltips.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date', units) {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(new Date(datum.key), 'dd MMM yyyy');\n        return `${date} ${formatValue(datum.y, units ? units : datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nexport function getCostRangeString(datums, key = 'chart.cost_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    if (!(datums && datums.length)) {\n        return i18next.t(`${key}_no_data`);\n    }\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(key, {\n        count: getDate(end),\n        endDate: format(end, 'd'),\n        month: Number(format(start, 'M')) - 1,\n        startDate: format(start, 'd'),\n        year: getYear(end),\n    });\n}\nexport function getUsageRangeString(datums, key = 'chart.usage_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    return getCostRangeString(datums, key, firstOfMonth, lastOfMonth, offset);\n}\n// Returns true if non negative integer\nexport function isInt(n) {\n    const result = Number(n) === n && n % 1 === 0;\n    return result && n >= 0;\n}\n// Returns true if non negative float\nexport function isFloat(n) {\n    const result = Number(n) === n && n % 1 !== 0;\n    return result && n >= 0;\n}\n","import { getInteractiveLegendItemStyles } from '@patternfly/react-charts';\nimport i18next from 'i18next';\nimport { getMaxMinValues, getTooltipContent } from './chartDatumUtils';\n// Returns groups of chart names associated with each data series\nexport const getChartNames = (series) => {\n    const result = [];\n    if (series) {\n        series.map(serie => {\n            // Each group of chart names are hidden / shown together\n            result.push(serie.childName);\n        });\n    }\n    return result;\n};\nexport const getDomain = (series, hiddenSeries) => {\n    const domain = { x: [1, 31] };\n    let maxValue = -1;\n    let minValue = -1;\n    if (series) {\n        series.forEach((s, index) => {\n            if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                const { max, min } = getMaxMinValues(s.data);\n                maxValue = Math.max(maxValue, max);\n                if (minValue === -1) {\n                    minValue = min;\n                }\n                else {\n                    minValue = Math.min(minValue, min);\n                }\n            }\n        });\n    }\n    const threshold = maxValue * 0.1;\n    const max = maxValue > 0 ? Math.ceil(maxValue + threshold) : 0;\n    const _min = minValue > 0 ? Math.max(0, Math.floor(minValue - threshold)) : 0;\n    const min = _min > 0 ? _min : 0;\n    if (max > 0) {\n        domain.y = [min, max];\n    }\n    return domain;\n};\n// Returns legend data styled per hiddenSeries\nexport const getLegendData = (series, hiddenSeries, tooltip = false) => {\n    if (!series) {\n        return undefined;\n    }\n    const result = series.map((s, index) => {\n        const data = Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n        return data;\n    });\n    return tooltip ? result : result.filter(d => d.childName.indexOf('Cone') === -1);\n};\n// Note: Forecast is expected to use both datum.y and datum.y0\nexport const getTooltipLabel = (datum, formatDatumValue, formatDatumOptions) => {\n    const formatter = getTooltipContent(formatDatumValue);\n    const dy = datum.y !== undefined && datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : undefined;\n    const dy0 = datum.y0 !== undefined && datum.y0 !== null ? formatter(datum.y0, datum.units, formatDatumOptions) : undefined;\n    if (dy !== undefined && dy0 !== undefined) {\n        return i18next.t('chart.cost_forecast_cone_tooltip', { value0: dy0, value1: dy });\n    }\n    return dy !== undefined ? dy : i18next.t('chart.no_data');\n};\nexport const initHiddenSeries = (series, hiddenSeries, index) => {\n    const result = new Set(hiddenSeries);\n    if (!result.delete(index)) {\n        result.add(index);\n    }\n    // Toggle forecast confidence\n    const childName = series[index].childName;\n    if (childName.indexOf('forecast') !== -1) {\n        let _index;\n        for (let i = 0; i < series.length; i++) {\n            if (series[i].childName === `${childName}Cone`) {\n                _index = i;\n                break;\n            }\n        }\n        if (index !== undefined && !result.delete(_index)) {\n            result.add(_index);\n        }\n    }\n    return result;\n};\n// Returns true if at least one data series is available\nexport const isDataAvailable = (series, hiddenSeries) => {\n    const unavailable = []; // API data may not be available (e.g., on 1st of month)\n    if (series) {\n        series.forEach((s, index) => {\n            if (isSeriesHidden(hiddenSeries, index) || (s.data && s.data.length === 0)) {\n                unavailable.push(index);\n            }\n        });\n    }\n    return unavailable.length !== (series ? series.length : 0);\n};\n// Returns true if data series is hidden\nexport const isDataHidden = (series, hiddenSeries, data) => {\n    if (data && data.length) {\n        for (let keys = hiddenSeries.keys(), key; !(key = keys.next()).done;) {\n            let dataChildName;\n            let serieChildName;\n            for (const item of data) {\n                if (item.childName) {\n                    dataChildName = item.childName;\n                    break;\n                }\n            }\n            for (const item of series[key.value].data) {\n                if (item.childName) {\n                    serieChildName = item.childName;\n                    break;\n                }\n            }\n            if (serieChildName && dataChildName && serieChildName === dataChildName) {\n                return true;\n            }\n        }\n    }\n    return false;\n};\n// Returns true if data series is hidden\nexport const isSeriesHidden = (hiddenSeries, index) => {\n    return hiddenSeries.has(index);\n};\n","import { EmptyState, EmptyStateBody, EmptyStateVariant, Spinner, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst LoadingStateBase = ({ t }) => {\n    const title = t('loading_state.sources_title');\n    const subTitle = t('loading_state.sources_desc');\n    return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n        React.createElement(Spinner, { size: \"lg\" }),\n        React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, title),\n        React.createElement(EmptyStateBody, null, subTitle)));\n};\nconst LoadingState = withTranslation()(LoadingStateBase);\nexport { LoadingState };\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nconst Loading = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(LoadingState, null))));\n};\nexport default withRouter(Loading);\n","import Loading from './loading';\nexport default Loading;\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { FileInvoiceDollarIcon } from '@patternfly/react-icons/dist/js/icons/file-invoice-dollar-icon';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { withRouter } from 'react-router-dom';\nclass NoDataStateBase extends React.Component {\n    render() {\n        const { showReload = true, t } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: FileInvoiceDollarIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, t('no_data_state.title')),\n            React.createElement(EmptyStateBody, null, t('no_data_state.desc')),\n            showReload && (React.createElement(Button, { variant: \"primary\", onClick: () => window.location.reload() }, t('no_data_state.refresh')))));\n    }\n}\nconst NoDataState = withRouter(withTranslation()(NoDataStateBase));\nexport { NoDataState };\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { NoDataState } from './noDataState';\nconst NoData = ({ showReload, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(NoDataState, { showReload: showReload }))));\n};\nexport default withRouter(NoData);\n","import './costIcon.scss';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst icon = require('./Cost-icon.svg');\nconst CostIcon = ({ className, t }) => {\n    return React.createElement(\"img\", { className: `cost-icon ${className}`, src: icon, alt: t('cost_management'), \"aria-hidden\": \"true\" });\n};\nexport default withTranslation()(CostIcon);\n","import CostIcon from './costIcon';\nexport default CostIcon;\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    iconSpacer: {\n        marginLeft: global_spacer_xs.value,\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\nimport CostIcon from 'components/icons/costIcon';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { withRouter } from 'react-router-dom';\nimport { getReleasePath } from 'utils/pathname';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDocLink = (textKey, urlKey) => {\n            const { t } = this.props;\n            return (React.createElement(\"a\", { href: t(urlKey), rel: \"noreferrer\", target: \"_blank\" },\n                t(textKey),\n                React.createElement(\"span\", { style: styles.iconSpacer },\n                    React.createElement(ExternalLinkAltIcon, null))));\n        };\n        this.getRouteToSources = () => {\n            const release = getReleasePath();\n            return `${release}/settings/sources`;\n        };\n    }\n    render() {\n        const { providerType, t } = this.props;\n        let descKey = 'no_providers_state.overview_desc';\n        let titleKey = 'no_providers_state.overview_title';\n        let docUrlKey;\n        let icon;\n        let textKey;\n        switch (providerType) {\n            case \"aws\" /* aws */:\n                descKey = 'no_providers_state.aws_desc';\n                titleKey = 'no_providers_state.aws_title';\n                break;\n            case \"azure\" /* azure */:\n                descKey = 'no_providers_state.azure_desc';\n                titleKey = 'no_providers_state.azure_title';\n                break;\n            case \"gcp\" /* gcp */:\n                descKey = 'no_providers_state.gcp_desc';\n                titleKey = 'no_providers_state.gcp_title';\n                break;\n            case \"gcp\" /* ibm */:\n                descKey = 'no_providers_state.ibm_desc';\n                titleKey = 'no_providers_state.ibm_title';\n                break;\n            case \"ocp\" /* ocp */:\n                descKey = 'no_providers_state.ocp_desc';\n                docUrlKey = 'docs.add_ocp_sources';\n                textKey = 'no_providers_state.ocp_add_sources';\n                titleKey = 'no_providers_state.ocp_title';\n                break;\n            default:\n                icon = CostIcon;\n        }\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: icon ? icon : PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, t(titleKey)),\n            React.createElement(EmptyStateBody, null, t(descKey)),\n            docUrlKey && textKey ? (React.createElement(\"div\", { style: styles.viewSources }, this.getDocLink(textKey, docUrlKey))) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: this.getRouteToSources() }, t('no_providers_state.get_started')))));\n    }\n}\nconst NoProvidersState = withRouter(withTranslation()(NoProvidersStateBase));\nexport { NoProvidersState };\n","import NoProviders from './noProviders';\nexport default NoProviders;\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = ({ providerType, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(NoProvidersState, { providerType: providerType }))));\n};\nexport default withRouter(NoProviders);\n","// Ensure at least one source provider has data available for the current month\nexport const hasCurrentMonthData = (providers) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            if (provider.current_month_data) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one source provider has data available\nexport const hasData = (providers) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            if (provider.has_data) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one source provider has data available for the previous month\nexport const hasPreviousMonthData = (providers) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            if (provider.previous_month_data) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n","import { sort } from 'utils/sort';\nimport { getItemLabel } from './getItemLabel';\nexport function getComputedReportItems({ daily, idKey, report, sortDirection = 0 /* asc */, sortKey = 'date', }) {\n    return sort(getUnsortedComputedReportItems({\n        daily,\n        idKey,\n        report,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nfunction getCostData(val, key, item) {\n    return {\n        markup: {\n            value: (item && item[key] && item[key].markup ? item[key].markup.value : 0) +\n                (val[key] && val[key].markup ? val[key].markup.value : 0),\n            units: val && val[key] && val[key].markup ? val[key].markup.units : 'USD',\n        },\n        raw: {\n            value: (item && item[key] && item[key].raw ? item[key].raw.value : 0) +\n                (val[key] && val[key].raw ? val[key].raw.value : 0),\n            units: val && val[key] && val[key].raw ? val[key].raw.units : 'USD',\n        },\n        total: {\n            value: (item && item[key] && item[key].total ? item[key].total.value : 0) +\n                (val[key] && val[key].total ? Number(val[key].total.value) : 0),\n            units: val && val[key] && val[key].total ? val[key].total.units : null,\n        },\n        usage: {\n            value: (item && item[key] && item[key].usage ? item[key].usage.value : 0) +\n                (val[key] && val[key].usage ? Number(val[key].usage.value) : 0),\n            units: val && val[key] && val[key].usage ? val[key].usage.units : null,\n        },\n    };\n}\nfunction getUsageData(val, item) {\n    return {\n        capacity: {\n            value: (item && item.capacity ? item.capacity.value : 0) + (val.capacity ? val.capacity.value : 0),\n            units: val && val.capacity ? val.capacity.units : 'Core-Hours',\n        },\n        limit: {\n            value: (item && item.limit ? item.limit.value : 0) + (val.limit ? val.limit.value : 0),\n            units: val && val.limit ? val.limit.units : 'Core-Hours',\n        },\n        request: {\n            value: (item && item.request ? item.request.value : 0) + (val.request ? val.request.value : 0),\n            units: val && val.request ? val.request.units : 'Core-Hours',\n        },\n        usage: {\n            value: (item && item.usage ? item.usage.value : 0) + (val.usage ? val.usage.value : 0),\n            units: val && val.usage ? val.usage.units : 'Core-Hours',\n        },\n    };\n}\n// Details pages typically use this function with filter[resolution]=monthly\nexport function getUnsortedComputedReportItems({ daily = false, report, idKey, }) {\n    if (!report) {\n        return [];\n    }\n    // Map<string | number, ComputedReportItem | Map<string | number, ComputedReportItem>\n    const itemMap = new Map();\n    let orgUnitId; // Org unit ID\n    let type; // Org unit type\n    const visitDataPoint = (dataPoint) => {\n        // Org units workaround when filtering with group_by service or region\n        if (idKey === 'org_entities') {\n            if (!orgUnitId) {\n                orgUnitId = dataPoint.id;\n            }\n            if (!type) {\n                type = dataPoint.type;\n            }\n        }\n        if (dataPoint && dataPoint.values) {\n            dataPoint.values.forEach((val) => {\n                let id = idKey === 'org_entities' ? orgUnitId : val[idKey];\n                if (!id) {\n                    id = val.date; // Note: There is no longer val.id, except with org units\n                }\n                // Ensure unique map IDs -- https://github.com/project-koku/koku-ui/issues/706\n                const idSuffix = idKey !== 'date' && idKey !== 'cluster' && val.cluster ? `-${val.cluster}` : '';\n                const mapId = `${id}${idSuffix}`;\n                // 'clusters' will contain either the cluster alias or default cluster ID\n                const cluster_alias = val.clusters && val.clusters.length > 0 ? val.clusters[0] : undefined;\n                const cluster = cluster_alias || val.cluster;\n                const clusters = val.clusters ? val.clusters : [];\n                const date = val.date;\n                const delta_percent = val.delta_percent ? val.delta_percent : 0;\n                const delta_value = val.delta_value ? val.delta_value : 0;\n                const source_uuid = val.source_uuid ? val.source_uuid : [];\n                let label;\n                const itemLabelKey = getItemLabel({ report, idKey, value: val });\n                if (itemLabelKey === 'org_entities' && (val.alias || val.account_alias)) {\n                    label = val.alias || val.account_alias;\n                }\n                else if (itemLabelKey === 'account' && val.account_alias) {\n                    label = val.account_alias;\n                }\n                else if (itemLabelKey === 'cluster' && cluster_alias) {\n                    label = cluster_alias;\n                }\n                else if (val[itemLabelKey] instanceof Object) {\n                    label = val[itemLabelKey].value;\n                }\n                else {\n                    label = val[itemLabelKey];\n                }\n                if (label === undefined) {\n                    label = val.alias ? val.alias : val[idKey];\n                }\n                if (daily) {\n                    const data = Object.assign(Object.assign({}, getUsageData(val)), { // capacity, limit, request, & usage\n                        cluster,\n                        clusters, cost: getCostData(val, 'cost'), date,\n                        delta_percent,\n                        delta_value,\n                        id, infrastructure: getCostData(val, 'infrastructure'), label,\n                        source_uuid, supplementary: getCostData(val, 'supplementary'), type });\n                    const item = itemMap.get(mapId);\n                    if (item) {\n                        item.set(date, data);\n                    }\n                    else {\n                        const dateMap = new Map();\n                        dateMap.set(date, data);\n                        itemMap.set(mapId, dateMap);\n                    }\n                }\n                else {\n                    const item = itemMap.get(mapId);\n                    if (item) {\n                        // When applying multiple group_by params, costs may be split between regions. We need to sum those costs\n                        // See https://issues.redhat.com/browse/COST-1131\n                        itemMap.set(mapId, Object.assign(Object.assign(Object.assign({}, item), getUsageData(val, item)), { // capacity, limit, request, & usage\n                            cluster,\n                            clusters,\n                            date,\n                            delta_percent,\n                            delta_value, cost: getCostData(val, 'cost', item), id, infrastructure: getCostData(val, 'infrastructure', item), label,\n                            source_uuid, supplementary: getCostData(val, 'supplementary', item), type }));\n                    }\n                    else {\n                        itemMap.set(mapId, Object.assign(Object.assign({}, getUsageData(val)), { // capacity, limit, request, & usage\n                            cluster,\n                            clusters, cost: getCostData(val, 'cost'), date,\n                            delta_percent,\n                            delta_value,\n                            id, infrastructure: getCostData(val, 'infrastructure'), label,\n                            source_uuid, supplementary: getCostData(val, 'supplementary'), type }));\n                    }\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import { tagPrefix } from 'api/queries/query';\nexport function getItemLabel({ idKey, report, value }) {\n    let itemLabelKey = String(idKey);\n    if (report.meta && report.meta.group_by) {\n        const group_by = report.meta.group_by;\n        for (const key of Object.keys(group_by)) {\n            if (key.indexOf(tagPrefix)) {\n                const tagPrefixKey = tagPrefix + idKey;\n                if (value.hasOwnProperty(tagPrefixKey)) {\n                    itemLabelKey = tagPrefixKey;\n                }\n            }\n        }\n    }\n    return itemLabelKey;\n}\n","import i18next from 'i18next';\nexport const unitLookupKey = unit => {\n    const lookup = unit ? unit.toLowerCase() : '';\n    switch (lookup) {\n        case 'usd':\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'gibibyte month':\n        case 'core-hours':\n        case 'hour':\n        case 'hrs':\n        case 'tag-mo':\n        case 'vm-hours':\n            return lookup;\n        default:\n            return '';\n    }\n};\nexport const formatValue = (value, unit, options = {}) => {\n    const lookup = unitLookupKey(unit);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'usd':\n            return formatCurrency(fValue, lookup, options);\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'gibibyte month':\n        case 'tag-mo':\n        case 'vm-hours':\n            return formatUsageGb(fValue, lookup, options);\n        case 'core-hours':\n        case 'hour':\n        case 'hrs':\n            return formatUsageHrs(fValue, lookup, options);\n        default:\n            return unknownTypeFormatter(fValue, lookup, options);\n    }\n};\nconst unknownTypeFormatter = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatCurrency = (value, unit, { fractionDigits = 2 } = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    return fValue.toLocaleString('en', {\n        style: 'currency',\n        currency: unit || 'USD',\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatCurrencyAbbreviation = (value, unit, { fractionDigits = 2 } = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    // Derived from https://stackoverflow.com/questions/37799955/how-can-i-format-big-numbers-with-tolocalestring\n    const abbreviationFormats = [\n        { val: 1e15, symbol: 'currency_abbreviations.quadrillion' },\n        { val: 1e12, symbol: 'currency_abbreviations.trillion' },\n        { val: 1e9, symbol: 'currency_abbreviations.billion' },\n        { val: 1e6, symbol: 'currency_abbreviations.million' },\n        { val: 1e3, symbol: 'currency_abbreviations.thousand' },\n    ];\n    // Find the proper format to use\n    let format;\n    if (abbreviationFormats != null) {\n        format = abbreviationFormats.find(f => fValue >= f.val);\n    }\n    // Apply format and insert symbol next to the numeric portion of the formatted string\n    if (format != null) {\n        const { val, symbol } = format;\n        const formatted = (fValue / val).toLocaleString('en', {\n            style: 'currency',\n            currency: unit || 'USD',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: fractionDigits,\n        });\n        const parts = formatted.match(/([\\D]*)([\\d.,]+)([\\D]*)/);\n        return `${parts[1]}${parts[2]}${i18next.t(symbol)}${parts[3]}`;\n    }\n    // If no format was found, format value without abbreviation\n    return fValue.toLocaleString('en', {\n        style: 'currency',\n        currency: unit || 'USD',\n        minimumFractionDigits: 0,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageGb = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageHrs = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\n","export const noop = () => { }; // tslint:disable-line no-empty\n","export const getReleasePath = () => {\n    const pathName = window.location.pathname.split('/');\n    pathName.shift();\n    let release = '';\n    if (pathName[0] === 'beta') {\n        release = `/beta`;\n    }\n    return release;\n};\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */ ? getValueForItem(a, options) : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */ ? getValueForItem(b, options) : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n"],"sourceRoot":""}